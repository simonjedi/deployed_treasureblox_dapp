{"ast":null,"code":"var fs = require('fs'),\n    findExec = require('find-exec'),\n    spawn = require('child_process').spawn,\n    players = ['mplayer', 'afplay', 'mpg123', 'mpg321', 'play', 'omxplayer', 'aplay', 'cmdmp3'];\n\nfunction Play(opts) {\n  opts = opts || {};\n  this.players = opts.players || players;\n  this.player = opts.player || findExec(this.players);\n  this.urlRegex = /^(https?|ftp):\\/\\/[^\\s\\/$.?#].[^\\s]*$/i; // Regex by @stephenhay from https://mathiasbynens.be/demo/url-regex\n\n  this.play = function (what, options, next) {\n    next = next || function () {};\n\n    next = typeof options === 'function' ? options : next;\n    options = typeof options === 'object' ? options : {};\n    options.stdio = 'ignore';\n    var isURL = this.player == 'mplayer' && this.urlRegex.test(what);\n    if (!what) return next(new Error(\"No audio file specified\"));\n\n    if (!this.player) {\n      return next(new Error(\"Couldn't find a suitable audio player\"));\n    }\n\n    var args = Array.isArray(options[this.player]) ? options[this.player].concat(what) : [what];\n    var process = spawn(this.player, args, options);\n\n    if (!process) {\n      next(new Error(\"Unable to spawn process with \" + this.player));\n      return null;\n    }\n\n    process.on('close', function (err) {\n      next(err && !err.killed ? err : null);\n    });\n    return process;\n  };\n\n  this.test = function (next) {\n    this.play('./assets/test.mp3', next);\n  };\n}\n\nmodule.exports = function (opts) {\n  return new Play(opts);\n};","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/TreasureHuntDAPP_React/treasure-blox/node_modules/play-sound/index.js"],"names":["fs","require","findExec","spawn","players","Play","opts","player","urlRegex","play","what","options","next","stdio","isURL","test","Error","args","Array","isArray","concat","process","on","err","killed","module","exports"],"mappings":"AAAA,IAAIA,EAAE,GAAiBC,OAAO,CAAC,IAAD,CAA9B;AAAA,IACIC,QAAQ,GAAWD,OAAO,CAAC,WAAD,CAD9B;AAAA,IAEIE,KAAK,GAAcF,OAAO,CAAC,eAAD,CAAP,CAAyBE,KAFhD;AAAA,IAGIC,OAAO,GAAY,CACC,SADD,EAEC,QAFD,EAGC,QAHD,EAIC,QAJD,EAKC,MALD,EAMC,WAND,EAOC,OAPD,EAQC,QARD,CAHvB;;AAcA,SAASC,IAAT,CAAcC,IAAd,EAAmB;AACjBA,EAAAA,IAAI,GAAiBA,IAAI,IAAkB,EAA3C;AAEA,OAAKF,OAAL,GAAqBE,IAAI,CAACF,OAAL,IAAsBA,OAA3C;AACA,OAAKG,MAAL,GAAqBD,IAAI,CAACC,MAAL,IAAsBL,QAAQ,CAAC,KAAKE,OAAN,CAAnD;AACA,OAAKI,QAAL,GAAqB,wCAArB,CALiB,CAMjB;;AAEA,OAAKC,IAAL,GAAY,UAASC,IAAT,EAAeC,OAAf,EAAwBC,IAAxB,EAA6B;AACvCA,IAAAA,IAAI,GAAIA,IAAI,IAAI,YAAU,CAAE,CAA5B;;AACAA,IAAAA,IAAI,GAAI,OAAOD,OAAP,KAAmB,UAAnB,GAAgCA,OAAhC,GAA0CC,IAAlD;AACAD,IAAAA,OAAO,GAAG,OAAOA,OAAP,KAAmB,QAAnB,GAA8BA,OAA9B,GAAwC,EAAlD;AACAA,IAAAA,OAAO,CAACE,KAAR,GAAgB,QAAhB;AAEA,QAAIC,KAAK,GAAG,KAAKP,MAAL,IAAe,SAAf,IAA4B,KAAKC,QAAL,CAAcO,IAAd,CAAmBL,IAAnB,CAAxC;AAEA,QAAI,CAACA,IAAL,EAAW,OAAOE,IAAI,CAAC,IAAII,KAAJ,CAAU,yBAAV,CAAD,CAAX;;AAEX,QAAI,CAAC,KAAKT,MAAV,EAAiB;AACf,aAAOK,IAAI,CAAC,IAAII,KAAJ,CAAU,uCAAV,CAAD,CAAX;AACD;;AAED,QAAIC,IAAI,GAAGC,KAAK,CAACC,OAAN,CAAcR,OAAO,CAAC,KAAKJ,MAAN,CAArB,IAAsCI,OAAO,CAAC,KAAKJ,MAAN,CAAP,CAAqBa,MAArB,CAA4BV,IAA5B,CAAtC,GAA0E,CAACA,IAAD,CAArF;AACA,QAAIW,OAAO,GAAGlB,KAAK,CAAC,KAAKI,MAAN,EAAcU,IAAd,EAAoBN,OAApB,CAAnB;;AACA,QAAI,CAACU,OAAL,EAAc;AACZT,MAAAA,IAAI,CAAC,IAAII,KAAJ,CAAU,kCAAkC,KAAKT,MAAjD,CAAD,CAAJ;AACA,aAAO,IAAP;AACD;;AACDc,IAAAA,OAAO,CAACC,EAAR,CAAW,OAAX,EAAmB,UAASC,GAAT,EAAa;AAAEX,MAAAA,IAAI,CAACW,GAAG,IAAI,CAACA,GAAG,CAACC,MAAZ,GAAqBD,GAArB,GAA2B,IAA5B,CAAJ;AAAuC,KAAzE;AACA,WAAOF,OAAP;AACD,GAtBD;;AAwBA,OAAKN,IAAL,GAAY,UAASH,IAAT,EAAe;AAAE,SAAKH,IAAL,CAAU,mBAAV,EAA+BG,IAA/B;AAAsC,GAAnE;AACD;;AAEDa,MAAM,CAACC,OAAP,GAAiB,UAASpB,IAAT,EAAc;AAC7B,SAAO,IAAID,IAAJ,CAASC,IAAT,CAAP;AACD,CAFD","sourcesContent":["var fs               = require('fs')\n  , findExec         = require('find-exec')\n  , spawn            = require('child_process').spawn\n  , players          = [\n                        'mplayer',\n                        'afplay',\n                        'mpg123',\n                        'mpg321',\n                        'play',\n                        'omxplayer',\n                        'aplay',\n                        'cmdmp3'\n                       ]\n\nfunction Play(opts){\n  opts               = opts               || {}\n\n  this.players       = opts.players       || players\n  this.player        = opts.player        || findExec(this.players)\n  this.urlRegex      = /^(https?|ftp):\\/\\/[^\\s\\/$.?#].[^\\s]*$/i\n  // Regex by @stephenhay from https://mathiasbynens.be/demo/url-regex\n\n  this.play = function(what, options, next){\n    next  = next || function(){}\n    next  = typeof options === 'function' ? options : next\n    options = typeof options === 'object' ? options : {}\n    options.stdio = 'ignore'\n\n    var isURL = this.player == 'mplayer' && this.urlRegex.test(what)\n\n    if (!what) return next(new Error(\"No audio file specified\"))\n\n    if (!this.player){\n      return next(new Error(\"Couldn't find a suitable audio player\"))\n    }\n\n    var args = Array.isArray(options[this.player]) ? options[this.player].concat(what) : [what]\n    var process = spawn(this.player, args, options)\n    if (!process) {\n      next(new Error(\"Unable to spawn process with \" + this.player))\n      return null\n    }\n    process.on('close',function(err){ next(err && !err.killed ? err : null) })\n    return process\n  }\n\n  this.test = function(next) { this.play('./assets/test.mp3', next) }\n}\n\nmodule.exports = function(opts){\n  return new Play(opts)\n}\n"]},"metadata":{},"sourceType":"script"}