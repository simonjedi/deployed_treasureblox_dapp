{"ast":null,"code":"'use strict';\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar aes_js_1 = __importDefault(require(\"aes-js\"));\n\nvar scrypt_js_1 = __importDefault(require(\"scrypt-js\"));\n\nvar uuid_1 = __importDefault(require(\"uuid\"));\n\nvar signing_key_1 = require(\"./signing-key\");\n\nvar HDNode = __importStar(require(\"./hdnode\"));\n\nvar address_1 = require(\"./address\");\n\nvar bytes_1 = require(\"./bytes\");\n\nvar pbkdf2_1 = require(\"./pbkdf2\");\n\nvar keccak256_1 = require(\"./keccak256\");\n\nvar utf8_1 = require(\"./utf8\");\n\nvar random_bytes_1 = require(\"./random-bytes\");\n\nfunction looseArrayify(hexString) {\n  if (typeof hexString === 'string' && hexString.substring(0, 2) !== '0x') {\n    hexString = '0x' + hexString;\n  }\n\n  return bytes_1.arrayify(hexString);\n}\n\nfunction zpad(value, length) {\n  value = String(value);\n\n  while (value.length < length) {\n    value = '0' + value;\n  }\n\n  return value;\n}\n\nfunction getPassword(password) {\n  if (typeof password === 'string') {\n    return utf8_1.toUtf8Bytes(password, utf8_1.UnicodeNormalizationForm.NFKC);\n  }\n\n  return bytes_1.arrayify(password);\n} // Search an Object and its children recursively, caselessly.\n\n\nfunction searchPath(object, path) {\n  var currentChild = object;\n  var comps = path.toLowerCase().split('/');\n\n  for (var i = 0; i < comps.length; i++) {\n    // Search for a child object with a case-insensitive matching key\n    var matchingChild = null;\n\n    for (var key in currentChild) {\n      if (key.toLowerCase() === comps[i]) {\n        matchingChild = currentChild[key];\n        break;\n      }\n    } // Didn't find one. :'(\n\n\n    if (matchingChild === null) {\n      return null;\n    } // Now check this child...\n\n\n    currentChild = matchingChild;\n  }\n\n  return currentChild;\n} // @TODO: Make a type for string or arrayish\n// See: https://github.com/ethereum/pyethsaletool\n\n\nfunction decryptCrowdsale(json, password) {\n  var data = JSON.parse(json);\n  password = getPassword(password); // Ethereum Address\n\n  var ethaddr = address_1.getAddress(searchPath(data, 'ethaddr')); // Encrypted Seed\n\n  var encseed = looseArrayify(searchPath(data, 'encseed'));\n\n  if (!encseed || encseed.length % 16 !== 0) {\n    throw new Error('invalid encseed');\n  }\n\n  var key = pbkdf2_1.pbkdf2(password, password, 2000, 32, 'sha256').slice(0, 16);\n  var iv = encseed.slice(0, 16);\n  var encryptedSeed = encseed.slice(16); // Decrypt the seed\n\n  var aesCbc = new aes_js_1.default.ModeOfOperation.cbc(key, iv);\n  var seed = bytes_1.arrayify(aesCbc.decrypt(encryptedSeed));\n  seed = aes_js_1.default.padding.pkcs7.strip(seed); // This wallet format is weird... Convert the binary encoded hex to a string.\n\n  var seedHex = '';\n\n  for (var i = 0; i < seed.length; i++) {\n    seedHex += String.fromCharCode(seed[i]);\n  }\n\n  var seedHexBytes = utf8_1.toUtf8Bytes(seedHex);\n  var signingKey = new signing_key_1.SigningKey(keccak256_1.keccak256(seedHexBytes));\n\n  if (signingKey.address !== ethaddr) {\n    throw new Error('corrupt crowdsale wallet');\n  }\n\n  return signingKey;\n}\n\nexports.decryptCrowdsale = decryptCrowdsale; //@TODO: string or arrayish\n\nfunction decrypt(json, password, progressCallback) {\n  var data = JSON.parse(json);\n  var passwordBytes = getPassword(password);\n\n  var decrypt = function (key, ciphertext) {\n    var cipher = searchPath(data, 'crypto/cipher');\n\n    if (cipher === 'aes-128-ctr') {\n      var iv = looseArrayify(searchPath(data, 'crypto/cipherparams/iv'));\n      var counter = new aes_js_1.default.Counter(iv);\n      var aesCtr = new aes_js_1.default.ModeOfOperation.ctr(key, counter);\n      return bytes_1.arrayify(aesCtr.decrypt(ciphertext));\n    }\n\n    return null;\n  };\n\n  var computeMAC = function (derivedHalf, ciphertext) {\n    return keccak256_1.keccak256(bytes_1.concat([derivedHalf, ciphertext]));\n  };\n\n  var getSigningKey = function (key, reject) {\n    var ciphertext = looseArrayify(searchPath(data, 'crypto/ciphertext'));\n    var computedMAC = bytes_1.hexlify(computeMAC(key.slice(16, 32), ciphertext)).substring(2);\n\n    if (computedMAC !== searchPath(data, 'crypto/mac').toLowerCase()) {\n      reject(new Error('invalid password'));\n      return null;\n    }\n\n    var privateKey = decrypt(key.slice(0, 16), ciphertext);\n    var mnemonicKey = key.slice(32, 64);\n\n    if (!privateKey) {\n      reject(new Error('unsupported cipher'));\n      return null;\n    }\n\n    var signingKey = new signing_key_1.SigningKey(privateKey);\n\n    if (signingKey.address !== address_1.getAddress(data.address)) {\n      reject(new Error('address mismatch'));\n      return null;\n    } // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n\n\n    if (searchPath(data, 'x-ethers/version') === '0.1') {\n      var mnemonicCiphertext = looseArrayify(searchPath(data, 'x-ethers/mnemonicCiphertext'));\n      var mnemonicIv = looseArrayify(searchPath(data, 'x-ethers/mnemonicCounter'));\n      var mnemonicCounter = new aes_js_1.default.Counter(mnemonicIv);\n      var mnemonicAesCtr = new aes_js_1.default.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n      var path = searchPath(data, 'x-ethers/path') || HDNode.defaultPath;\n      var entropy = bytes_1.arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n      var mnemonic = HDNode.entropyToMnemonic(entropy);\n      var node = HDNode.fromMnemonic(mnemonic).derivePath(path);\n\n      if (node.privateKey != bytes_1.hexlify(privateKey)) {\n        reject(new Error('mnemonic mismatch'));\n        return null;\n      }\n\n      signingKey = new signing_key_1.SigningKey(node);\n    }\n\n    return signingKey;\n  };\n\n  return new Promise(function (resolve, reject) {\n    var kdf = searchPath(data, 'crypto/kdf');\n\n    if (kdf && typeof kdf === 'string') {\n      if (kdf.toLowerCase() === 'scrypt') {\n        var salt = looseArrayify(searchPath(data, 'crypto/kdfparams/salt'));\n        var N = parseInt(searchPath(data, 'crypto/kdfparams/n'));\n        var r = parseInt(searchPath(data, 'crypto/kdfparams/r'));\n        var p = parseInt(searchPath(data, 'crypto/kdfparams/p'));\n\n        if (!N || !r || !p) {\n          reject(new Error('unsupported key-derivation function parameters'));\n          return;\n        } // Make sure N is a power of 2\n\n\n        if ((N & N - 1) !== 0) {\n          reject(new Error('unsupported key-derivation function parameter value for N'));\n          return;\n        }\n\n        var dkLen = parseInt(searchPath(data, 'crypto/kdfparams/dklen'));\n\n        if (dkLen !== 32) {\n          reject(new Error('unsupported key-derivation derived-key length'));\n          return;\n        }\n\n        if (progressCallback) {\n          progressCallback(0);\n        }\n\n        scrypt_js_1.default(passwordBytes, salt, N, r, p, 64, function (error, progress, key) {\n          if (error) {\n            error.progress = progress;\n            reject(error);\n          } else if (key) {\n            key = bytes_1.arrayify(key);\n            var signingKey = getSigningKey(key, reject);\n\n            if (!signingKey) {\n              return;\n            }\n\n            if (progressCallback) {\n              progressCallback(1);\n            }\n\n            resolve(signingKey);\n          } else if (progressCallback) {\n            return progressCallback(progress);\n          }\n        });\n      } else if (kdf.toLowerCase() === 'pbkdf2') {\n        var salt = looseArrayify(searchPath(data, 'crypto/kdfparams/salt'));\n        var prfFunc = null;\n        var prf = searchPath(data, 'crypto/kdfparams/prf');\n\n        if (prf === 'hmac-sha256') {\n          prfFunc = 'sha256';\n        } else if (prf === 'hmac-sha512') {\n          prfFunc = 'sha512';\n        } else {\n          reject(new Error('unsupported prf'));\n          return;\n        }\n\n        var c = parseInt(searchPath(data, 'crypto/kdfparams/c'));\n        var dkLen = parseInt(searchPath(data, 'crypto/kdfparams/dklen'));\n\n        if (dkLen !== 32) {\n          reject(new Error('unsupported key-derivation derived-key length'));\n          return;\n        }\n\n        var key = pbkdf2_1.pbkdf2(passwordBytes, salt, c, dkLen, prfFunc);\n        var signingKey = getSigningKey(key, reject);\n\n        if (!signingKey) {\n          return;\n        }\n\n        resolve(signingKey);\n      } else {\n        reject(new Error('unsupported key-derivation function'));\n      }\n    } else {\n      reject(new Error('unsupported key-derivation function'));\n    }\n  });\n}\n\nexports.decrypt = decrypt;\n\nfunction encrypt(privateKey, password, options, progressCallback) {\n  // the options are optional, so adjust the call as needed\n  if (typeof options === 'function' && !progressCallback) {\n    progressCallback = options;\n    options = {};\n  }\n\n  if (!options) {\n    options = {};\n  } // Check the private key\n\n\n  var privateKeyBytes = null;\n\n  if (signing_key_1.SigningKey.isSigningKey(privateKey)) {\n    privateKeyBytes = bytes_1.arrayify(privateKey.privateKey);\n  } else {\n    privateKeyBytes = bytes_1.arrayify(privateKey);\n  }\n\n  if (privateKeyBytes.length !== 32) {\n    throw new Error('invalid private key');\n  }\n\n  var passwordBytes = getPassword(password);\n  var entropy = null;\n\n  if (options.entropy) {\n    entropy = bytes_1.arrayify(options.entropy);\n  }\n\n  if (options.mnemonic) {\n    if (entropy) {\n      if (HDNode.entropyToMnemonic(entropy) !== options.mnemonic) {\n        throw new Error('entropy and mnemonic mismatch');\n      }\n    } else {\n      entropy = bytes_1.arrayify(HDNode.mnemonicToEntropy(options.mnemonic));\n    }\n  }\n\n  var path = options.path;\n\n  if (entropy && !path) {\n    path = HDNode.defaultPath;\n  }\n\n  var client = options.client;\n\n  if (!client) {\n    client = \"ethers.js\";\n  } // Check/generate the salt\n\n\n  var salt = null;\n\n  if (options.salt) {\n    salt = bytes_1.arrayify(options.salt);\n  } else {\n    salt = random_bytes_1.randomBytes(32);\n    ;\n  } // Override initialization vector\n\n\n  var iv = null;\n\n  if (options.iv) {\n    iv = bytes_1.arrayify(options.iv);\n\n    if (iv.length !== 16) {\n      throw new Error('invalid iv');\n    }\n  } else {\n    iv = random_bytes_1.randomBytes(16);\n  } // Override the uuid\n\n\n  var uuidRandom = null;\n\n  if (options.uuid) {\n    uuidRandom = bytes_1.arrayify(options.uuid);\n\n    if (uuidRandom.length !== 16) {\n      throw new Error('invalid uuid');\n    }\n  } else {\n    uuidRandom = random_bytes_1.randomBytes(16);\n  } // Override the scrypt password-based key derivation function parameters\n\n\n  var N = 1 << 17,\n      r = 8,\n      p = 1;\n\n  if (options.scrypt) {\n    if (options.scrypt.N) {\n      N = options.scrypt.N;\n    }\n\n    if (options.scrypt.r) {\n      r = options.scrypt.r;\n    }\n\n    if (options.scrypt.p) {\n      p = options.scrypt.p;\n    }\n  }\n\n  return new Promise(function (resolve, reject) {\n    if (progressCallback) {\n      progressCallback(0);\n    } // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n\n\n    scrypt_js_1.default(passwordBytes, salt, N, r, p, 64, function (error, progress, key) {\n      if (error) {\n        error.progress = progress;\n        reject(error);\n      } else if (key) {\n        key = bytes_1.arrayify(key); // This will be used to encrypt the wallet (as per Web3 secret storage)\n\n        var derivedKey = key.slice(0, 16);\n        var macPrefix = key.slice(16, 32); // This will be used to encrypt the mnemonic phrase (if any)\n\n        var mnemonicKey = key.slice(32, 64); // Get the address for this private key\n\n        var address = new signing_key_1.SigningKey(privateKeyBytes).address; // Encrypt the private key\n\n        var counter = new aes_js_1.default.Counter(iv);\n        var aesCtr = new aes_js_1.default.ModeOfOperation.ctr(derivedKey, counter);\n        var ciphertext = bytes_1.arrayify(aesCtr.encrypt(privateKeyBytes)); // Compute the message authentication code, used to check the password\n\n        var mac = keccak256_1.keccak256(bytes_1.concat([macPrefix, ciphertext])); // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n\n        var data = {\n          address: address.substring(2).toLowerCase(),\n          id: uuid_1.default.v4({\n            random: uuidRandom\n          }),\n          version: 3,\n          Crypto: {\n            cipher: 'aes-128-ctr',\n            cipherparams: {\n              iv: bytes_1.hexlify(iv).substring(2)\n            },\n            ciphertext: bytes_1.hexlify(ciphertext).substring(2),\n            kdf: 'scrypt',\n            kdfparams: {\n              salt: bytes_1.hexlify(salt).substring(2),\n              n: N,\n              dklen: 32,\n              p: p,\n              r: r\n            },\n            mac: mac.substring(2)\n          }\n        }; // If we have a mnemonic, encrypt it into the JSON wallet\n\n        if (entropy) {\n          var mnemonicIv = random_bytes_1.randomBytes(16);\n          var mnemonicCounter = new aes_js_1.default.Counter(mnemonicIv);\n          var mnemonicAesCtr = new aes_js_1.default.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n          var mnemonicCiphertext = bytes_1.arrayify(mnemonicAesCtr.encrypt(entropy));\n          var now = new Date();\n          var timestamp = now.getUTCFullYear() + '-' + zpad(now.getUTCMonth() + 1, 2) + '-' + zpad(now.getUTCDate(), 2) + 'T' + zpad(now.getUTCHours(), 2) + '-' + zpad(now.getUTCMinutes(), 2) + '-' + zpad(now.getUTCSeconds(), 2) + '.0Z';\n          data['x-ethers'] = {\n            client: client,\n            gethFilename: 'UTC--' + timestamp + '--' + data.address,\n            mnemonicCounter: bytes_1.hexlify(mnemonicIv).substring(2),\n            mnemonicCiphertext: bytes_1.hexlify(mnemonicCiphertext).substring(2),\n            path: path,\n            version: \"0.1\"\n          };\n        }\n\n        if (progressCallback) {\n          progressCallback(1);\n        }\n\n        resolve(JSON.stringify(data));\n      } else if (progressCallback) {\n        return progressCallback(progress);\n      }\n    });\n  });\n}\n\nexports.encrypt = encrypt;","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/node_modules/@meterio/ethers/utils/secret-storage.js"],"names":["__importDefault","mod","__esModule","__importStar","result","k","Object","hasOwnProperty","call","defineProperty","exports","value","aes_js_1","require","scrypt_js_1","uuid_1","signing_key_1","HDNode","address_1","bytes_1","pbkdf2_1","keccak256_1","utf8_1","random_bytes_1","looseArrayify","hexString","substring","arrayify","zpad","length","String","getPassword","password","toUtf8Bytes","UnicodeNormalizationForm","NFKC","searchPath","object","path","currentChild","comps","toLowerCase","split","i","matchingChild","key","decryptCrowdsale","json","data","JSON","parse","ethaddr","getAddress","encseed","Error","pbkdf2","slice","iv","encryptedSeed","aesCbc","default","ModeOfOperation","cbc","seed","decrypt","padding","pkcs7","strip","seedHex","fromCharCode","seedHexBytes","signingKey","SigningKey","keccak256","address","progressCallback","passwordBytes","ciphertext","cipher","counter","Counter","aesCtr","ctr","computeMAC","derivedHalf","concat","getSigningKey","reject","computedMAC","hexlify","privateKey","mnemonicKey","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","defaultPath","entropy","mnemonic","entropyToMnemonic","node","fromMnemonic","derivePath","Promise","resolve","kdf","salt","N","parseInt","r","p","dkLen","error","progress","prfFunc","prf","c","encrypt","options","privateKeyBytes","isSigningKey","mnemonicToEntropy","client","randomBytes","uuidRandom","uuid","scrypt","derivedKey","macPrefix","mac","id","v4","random","version","Crypto","cipherparams","kdfparams","n","dklen","now","Date","timestamp","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","stringify"],"mappings":"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","sourcesContent":["'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar aes_js_1 = __importDefault(require(\"aes-js\"));\nvar scrypt_js_1 = __importDefault(require(\"scrypt-js\"));\nvar uuid_1 = __importDefault(require(\"uuid\"));\nvar signing_key_1 = require(\"./signing-key\");\nvar HDNode = __importStar(require(\"./hdnode\"));\nvar address_1 = require(\"./address\");\nvar bytes_1 = require(\"./bytes\");\nvar pbkdf2_1 = require(\"./pbkdf2\");\nvar keccak256_1 = require(\"./keccak256\");\nvar utf8_1 = require(\"./utf8\");\nvar random_bytes_1 = require(\"./random-bytes\");\nfunction looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return bytes_1.arrayify(hexString);\n}\nfunction zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nfunction getPassword(password) {\n    if (typeof (password) === 'string') {\n        return utf8_1.toUtf8Bytes(password, utf8_1.UnicodeNormalizationForm.NFKC);\n    }\n    return bytes_1.arrayify(password);\n}\n// Search an Object and its children recursively, caselessly.\nfunction searchPath(object, path) {\n    var currentChild = object;\n    var comps = path.toLowerCase().split('/');\n    for (var i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        var matchingChild = null;\n        for (var key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n// @TODO: Make a type for string or arrayish\n// See: https://github.com/ethereum/pyethsaletool\nfunction decryptCrowdsale(json, password) {\n    var data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    var ethaddr = address_1.getAddress(searchPath(data, 'ethaddr'));\n    // Encrypted Seed\n    var encseed = looseArrayify(searchPath(data, 'encseed'));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        throw new Error('invalid encseed');\n    }\n    var key = pbkdf2_1.pbkdf2(password, password, 2000, 32, 'sha256').slice(0, 16);\n    var iv = encseed.slice(0, 16);\n    var encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    var aesCbc = new aes_js_1.default.ModeOfOperation.cbc(key, iv);\n    var seed = bytes_1.arrayify(aesCbc.decrypt(encryptedSeed));\n    seed = aes_js_1.default.padding.pkcs7.strip(seed);\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    var seedHex = '';\n    for (var i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    var seedHexBytes = utf8_1.toUtf8Bytes(seedHex);\n    var signingKey = new signing_key_1.SigningKey(keccak256_1.keccak256(seedHexBytes));\n    if (signingKey.address !== ethaddr) {\n        throw new Error('corrupt crowdsale wallet');\n    }\n    return signingKey;\n}\nexports.decryptCrowdsale = decryptCrowdsale;\n//@TODO: string or arrayish\nfunction decrypt(json, password, progressCallback) {\n    var data = JSON.parse(json);\n    var passwordBytes = getPassword(password);\n    var decrypt = function (key, ciphertext) {\n        var cipher = searchPath(data, 'crypto/cipher');\n        if (cipher === 'aes-128-ctr') {\n            var iv = looseArrayify(searchPath(data, 'crypto/cipherparams/iv'));\n            var counter = new aes_js_1.default.Counter(iv);\n            var aesCtr = new aes_js_1.default.ModeOfOperation.ctr(key, counter);\n            return bytes_1.arrayify(aesCtr.decrypt(ciphertext));\n        }\n        return null;\n    };\n    var computeMAC = function (derivedHalf, ciphertext) {\n        return keccak256_1.keccak256(bytes_1.concat([derivedHalf, ciphertext]));\n    };\n    var getSigningKey = function (key, reject) {\n        var ciphertext = looseArrayify(searchPath(data, 'crypto/ciphertext'));\n        var computedMAC = bytes_1.hexlify(computeMAC(key.slice(16, 32), ciphertext)).substring(2);\n        if (computedMAC !== searchPath(data, 'crypto/mac').toLowerCase()) {\n            reject(new Error('invalid password'));\n            return null;\n        }\n        var privateKey = decrypt(key.slice(0, 16), ciphertext);\n        var mnemonicKey = key.slice(32, 64);\n        if (!privateKey) {\n            reject(new Error('unsupported cipher'));\n            return null;\n        }\n        var signingKey = new signing_key_1.SigningKey(privateKey);\n        if (signingKey.address !== address_1.getAddress(data.address)) {\n            reject(new Error('address mismatch'));\n            return null;\n        }\n        // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n        if (searchPath(data, 'x-ethers/version') === '0.1') {\n            var mnemonicCiphertext = looseArrayify(searchPath(data, 'x-ethers/mnemonicCiphertext'));\n            var mnemonicIv = looseArrayify(searchPath(data, 'x-ethers/mnemonicCounter'));\n            var mnemonicCounter = new aes_js_1.default.Counter(mnemonicIv);\n            var mnemonicAesCtr = new aes_js_1.default.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            var path = searchPath(data, 'x-ethers/path') || HDNode.defaultPath;\n            var entropy = bytes_1.arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n            var mnemonic = HDNode.entropyToMnemonic(entropy);\n            var node = HDNode.fromMnemonic(mnemonic).derivePath(path);\n            if (node.privateKey != bytes_1.hexlify(privateKey)) {\n                reject(new Error('mnemonic mismatch'));\n                return null;\n            }\n            signingKey = new signing_key_1.SigningKey(node);\n        }\n        return signingKey;\n    };\n    return new Promise(function (resolve, reject) {\n        var kdf = searchPath(data, 'crypto/kdf');\n        if (kdf && typeof (kdf) === 'string') {\n            if (kdf.toLowerCase() === 'scrypt') {\n                var salt = looseArrayify(searchPath(data, 'crypto/kdfparams/salt'));\n                var N = parseInt(searchPath(data, 'crypto/kdfparams/n'));\n                var r = parseInt(searchPath(data, 'crypto/kdfparams/r'));\n                var p = parseInt(searchPath(data, 'crypto/kdfparams/p'));\n                if (!N || !r || !p) {\n                    reject(new Error('unsupported key-derivation function parameters'));\n                    return;\n                }\n                // Make sure N is a power of 2\n                if ((N & (N - 1)) !== 0) {\n                    reject(new Error('unsupported key-derivation function parameter value for N'));\n                    return;\n                }\n                var dkLen = parseInt(searchPath(data, 'crypto/kdfparams/dklen'));\n                if (dkLen !== 32) {\n                    reject(new Error('unsupported key-derivation derived-key length'));\n                    return;\n                }\n                if (progressCallback) {\n                    progressCallback(0);\n                }\n                scrypt_js_1.default(passwordBytes, salt, N, r, p, 64, function (error, progress, key) {\n                    if (error) {\n                        error.progress = progress;\n                        reject(error);\n                    }\n                    else if (key) {\n                        key = bytes_1.arrayify(key);\n                        var signingKey = getSigningKey(key, reject);\n                        if (!signingKey) {\n                            return;\n                        }\n                        if (progressCallback) {\n                            progressCallback(1);\n                        }\n                        resolve(signingKey);\n                    }\n                    else if (progressCallback) {\n                        return progressCallback(progress);\n                    }\n                });\n            }\n            else if (kdf.toLowerCase() === 'pbkdf2') {\n                var salt = looseArrayify(searchPath(data, 'crypto/kdfparams/salt'));\n                var prfFunc = null;\n                var prf = searchPath(data, 'crypto/kdfparams/prf');\n                if (prf === 'hmac-sha256') {\n                    prfFunc = 'sha256';\n                }\n                else if (prf === 'hmac-sha512') {\n                    prfFunc = 'sha512';\n                }\n                else {\n                    reject(new Error('unsupported prf'));\n                    return;\n                }\n                var c = parseInt(searchPath(data, 'crypto/kdfparams/c'));\n                var dkLen = parseInt(searchPath(data, 'crypto/kdfparams/dklen'));\n                if (dkLen !== 32) {\n                    reject(new Error('unsupported key-derivation derived-key length'));\n                    return;\n                }\n                var key = pbkdf2_1.pbkdf2(passwordBytes, salt, c, dkLen, prfFunc);\n                var signingKey = getSigningKey(key, reject);\n                if (!signingKey) {\n                    return;\n                }\n                resolve(signingKey);\n            }\n            else {\n                reject(new Error('unsupported key-derivation function'));\n            }\n        }\n        else {\n            reject(new Error('unsupported key-derivation function'));\n        }\n    });\n}\nexports.decrypt = decrypt;\nfunction encrypt(privateKey, password, options, progressCallback) {\n    // the options are optional, so adjust the call as needed\n    if (typeof (options) === 'function' && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    // Check the private key\n    var privateKeyBytes = null;\n    if (signing_key_1.SigningKey.isSigningKey(privateKey)) {\n        privateKeyBytes = bytes_1.arrayify(privateKey.privateKey);\n    }\n    else {\n        privateKeyBytes = bytes_1.arrayify(privateKey);\n    }\n    if (privateKeyBytes.length !== 32) {\n        throw new Error('invalid private key');\n    }\n    var passwordBytes = getPassword(password);\n    var entropy = null;\n    if (options.entropy) {\n        entropy = bytes_1.arrayify(options.entropy);\n    }\n    if (options.mnemonic) {\n        if (entropy) {\n            if (HDNode.entropyToMnemonic(entropy) !== options.mnemonic) {\n                throw new Error('entropy and mnemonic mismatch');\n            }\n        }\n        else {\n            entropy = bytes_1.arrayify(HDNode.mnemonicToEntropy(options.mnemonic));\n        }\n    }\n    var path = options.path;\n    if (entropy && !path) {\n        path = HDNode.defaultPath;\n    }\n    var client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    var salt = null;\n    if (options.salt) {\n        salt = bytes_1.arrayify(options.salt);\n    }\n    else {\n        salt = random_bytes_1.randomBytes(32);\n        ;\n    }\n    // Override initialization vector\n    var iv = null;\n    if (options.iv) {\n        iv = bytes_1.arrayify(options.iv);\n        if (iv.length !== 16) {\n            throw new Error('invalid iv');\n        }\n    }\n    else {\n        iv = random_bytes_1.randomBytes(16);\n    }\n    // Override the uuid\n    var uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = bytes_1.arrayify(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error('invalid uuid');\n        }\n    }\n    else {\n        uuidRandom = random_bytes_1.randomBytes(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    var N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    return new Promise(function (resolve, reject) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        // We take 64 bytes:\n        //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n        //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n        scrypt_js_1.default(passwordBytes, salt, N, r, p, 64, function (error, progress, key) {\n            if (error) {\n                error.progress = progress;\n                reject(error);\n            }\n            else if (key) {\n                key = bytes_1.arrayify(key);\n                // This will be used to encrypt the wallet (as per Web3 secret storage)\n                var derivedKey = key.slice(0, 16);\n                var macPrefix = key.slice(16, 32);\n                // This will be used to encrypt the mnemonic phrase (if any)\n                var mnemonicKey = key.slice(32, 64);\n                // Get the address for this private key\n                var address = (new signing_key_1.SigningKey(privateKeyBytes)).address;\n                // Encrypt the private key\n                var counter = new aes_js_1.default.Counter(iv);\n                var aesCtr = new aes_js_1.default.ModeOfOperation.ctr(derivedKey, counter);\n                var ciphertext = bytes_1.arrayify(aesCtr.encrypt(privateKeyBytes));\n                // Compute the message authentication code, used to check the password\n                var mac = keccak256_1.keccak256(bytes_1.concat([macPrefix, ciphertext]));\n                // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n                var data = {\n                    address: address.substring(2).toLowerCase(),\n                    id: uuid_1.default.v4({ random: uuidRandom }),\n                    version: 3,\n                    Crypto: {\n                        cipher: 'aes-128-ctr',\n                        cipherparams: {\n                            iv: bytes_1.hexlify(iv).substring(2),\n                        },\n                        ciphertext: bytes_1.hexlify(ciphertext).substring(2),\n                        kdf: 'scrypt',\n                        kdfparams: {\n                            salt: bytes_1.hexlify(salt).substring(2),\n                            n: N,\n                            dklen: 32,\n                            p: p,\n                            r: r\n                        },\n                        mac: mac.substring(2)\n                    }\n                };\n                // If we have a mnemonic, encrypt it into the JSON wallet\n                if (entropy) {\n                    var mnemonicIv = random_bytes_1.randomBytes(16);\n                    var mnemonicCounter = new aes_js_1.default.Counter(mnemonicIv);\n                    var mnemonicAesCtr = new aes_js_1.default.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n                    var mnemonicCiphertext = bytes_1.arrayify(mnemonicAesCtr.encrypt(entropy));\n                    var now = new Date();\n                    var timestamp = (now.getUTCFullYear() + '-' +\n                        zpad(now.getUTCMonth() + 1, 2) + '-' +\n                        zpad(now.getUTCDate(), 2) + 'T' +\n                        zpad(now.getUTCHours(), 2) + '-' +\n                        zpad(now.getUTCMinutes(), 2) + '-' +\n                        zpad(now.getUTCSeconds(), 2) + '.0Z');\n                    data['x-ethers'] = {\n                        client: client,\n                        gethFilename: ('UTC--' + timestamp + '--' + data.address),\n                        mnemonicCounter: bytes_1.hexlify(mnemonicIv).substring(2),\n                        mnemonicCiphertext: bytes_1.hexlify(mnemonicCiphertext).substring(2),\n                        path: path,\n                        version: \"0.1\"\n                    };\n                }\n                if (progressCallback) {\n                    progressCallback(1);\n                }\n                resolve(JSON.stringify(data));\n            }\n            else if (progressCallback) {\n                return progressCallback(progress);\n            }\n        });\n    });\n}\nexports.encrypt = encrypt;\n"]},"metadata":{},"sourceType":"script"}