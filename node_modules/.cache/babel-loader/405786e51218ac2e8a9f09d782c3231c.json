{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/treasure-blox/src/App.js\";\nimport { Button, Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport MyNav from './components/Structure/Nav';\nimport MyCards from './components/Structure/Cards';\nimport SingleCard from './components/Structure/SingleCard'; // import img1 from './Treasure-hunt.jpeg';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react';\nimport Web3 from \"web3\"; // next we'll create a new instance of web3.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst web3 = new Web3(); // Set the provider\n\nweb3.setProvider(new Web3.providers.WebsocketProvider('ws://localhost:8545'));\n\nconst abi = require('./TreasureBlox.abi.json');\n\nconst mepAddress = '0xd9145CCE52D386f254917e481eB44e9943F39138';\nconst contract = new web3.eth.Contract(abi, mepAddress);\nconst decimals = await contract.methods.decimals().call().then(console.log('Yes'));\nconst bal = await contract.methods.balanceOf(accounts[0]).call();\nconst owner = await contract.methods._owner().call();\nconst marketingWallet = await contract.methods.marketingWallet().call().then(console.log('marketing Wallet Complete'));\nconst games = await contract.methods.Games(1).call().then(console.log('games check complete')); // Update state with the result.\n\nsetState({\n  account: accounts[0],\n  decimals: decimals,\n  bal: bal,\n  owner: owner,\n  marketingWallet: marketingWallet,\n  games: games\n});\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background customFont\",\n      children: [/*#__PURE__*/_jsxDEV(MyNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SingleCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"The decimals value is: \", this.state.decimals]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"The balance value is: \", this.state.bal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"The owner value is: \", this.state.owner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"The marketingWallet value is: \", this.state.marketingWallet]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"The games values are: \", this.state.games[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MyCards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MyCards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/treasure-blox/src/App.js"],"names":["Button","Container","Nav","Navbar","NavDropdown","MyNav","MyCards","SingleCard","React","Component","Web3","web3","setProvider","providers","WebsocketProvider","abi","require","mepAddress","contract","eth","Contract","decimals","methods","call","then","console","log","bal","balanceOf","accounts","owner","_owner","marketingWallet","games","Games","setState","account","App","render","state"],"mappings":"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","sourcesContent":["import { Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport MyNav from './components/Structure/Nav';\nimport MyCards from './components/Structure/Cards';\nimport SingleCard from './components/Structure/SingleCard';\n\n// import img1 from './Treasure-hunt.jpeg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport React, { Component } from 'react'\n\nimport Web3 from \"web3\";\n\n// next we'll create a new instance of web3.\nconst web3 = new Web3();\n\n// Set the provider\nweb3.setProvider(new Web3.providers.WebsocketProvider('ws://localhost:8545')\n);\n\nconst abi = require('./TreasureBlox.abi.json');\nconst mepAddress = '0xd9145CCE52D386f254917e481eB44e9943F39138'\n\nconst contract = new web3.eth.Contract(abi,mepAddress);\n\n\nconst decimals = await contract.methods.decimals().call().then(console.log('Yes'));\n\nconst bal = await contract.methods.balanceOf(accounts[0]).call();\n\nconst owner = await contract.methods._owner().call();\n\nconst marketingWallet = await contract.methods.marketingWallet().call().then(console.log('marketing Wallet Complete'));\n\nconst games = await contract.methods.Games(1).call().then(console.log('games check complete'));\n\n\n\n// Update state with the result.\nsetState({\n  account: accounts[0],\n  decimals:decimals,\n  bal:bal,\n  owner:owner,\n  marketingWallet:marketingWallet,\n  games:games});\n\n\nclass App extends Component {\n\n\n  render() {\n\n\n    return (\n        <div className=\"background customFont\">\n\n          <MyNav />\n          <SingleCard/>\n          <div>The decimals value is: {this.state.decimals}</div>\n          <div>The balance value is: {this.state.bal}</div>\n          <div>The owner value is: {this.state.owner}</div>\n          <div>The marketingWallet value is: {this.state.marketingWallet}</div>\n          <div>The games values are: {this.state.games[0]}</div>\n\n\n\n\n\n          <MyCards/>\n          <MyCards/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}