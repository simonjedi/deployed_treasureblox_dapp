{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/treasure-blox/src/components/Structure/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Countdown from 'react-countdown';\nimport moment from 'moment';\nimport { CardColumns, CardGroup, Card, Button, Container, Nav, Navbar, NavDropdown, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = props => {\n  _s();\n\n  var moment = require('moment'); // require\n\n\n  function getDifferenceInDays(date1, date2) {\n    const diffInMs = Math.abs(date2 - date1);\n    return diffInMs / (1000 * 60 * 60 * 24);\n  }\n\n  function getDifferenceInHours(date1, date2) {\n    const diffInMs = Math.abs(date2 - date1);\n    return diffInMs / (1000 * 60 * 60);\n  }\n\n  function getDifferenceInMinutes(date1, date2) {\n    const diffInMs = Math.abs(date2 - date1);\n    return diffInMs / (1000 * 60);\n  }\n\n  function getDifferenceInSeconds(date1, date2) {\n    const diffInMs = Math.abs(date2 - date1);\n    return diffInMs / 1000;\n  }\n\n  const [count, setTime] = useState(20);\n  useEffect(() => {\n    const currentStartDate = Date();\n    var startDate = new Date(currentStartDate); // Hours part from the timestamp\n\n    var startDateHours = startDate.getHours(); // Minutes part from the timestamp\n\n    var startDateMinutes = startDate.getMinutes(); // Seconds part from the timestamp\n\n    var startDateSeconds = startDate.getSeconds(); // Do\n\n    var endDate = new Date(props.allGame1_deadline_time * 1000); // Hours part from the timestamp\n\n    var endDateHours = endDate.getHours(); // Minutes part from the timestamp\n\n    var endDateMinutes = endDate.getMinutes(); // Seconds part from the timestamp\n\n    var endDateSeconds = endDate.getSeconds();\n    console.log('///////');\n    console.log(getDifferenceInDays(endDate, startDate));\n    console.log(getDifferenceInHours(endDate, startDate));\n    console.log(getDifferenceInMinutes(endDate, startDate));\n    console.log(getDifferenceInSeconds(endDate, startDate));\n    var endDateHours = endDate.getHours(getDifferenceInHours(endDate, startDate));\n    var endDateMinutes = endDate.getMinutes(getDifferenceInMinutes(endDate, startDate));\n    var endDateSeconds = endDate.getSeconds(getDifferenceInSeconds(endDate, startDate)); // console.log(startDate);\n    //\n    // console.log(endDateHours);\n    // console.log(endDateMinutes);\n    // console.log(endDateSeconds);\n\n    const timer = window.setInterval(() => {\n      setTime(prevTime => prevTime - 1); // <-- Change this line!\n    }, 1000);\n    return () => {\n      window.clearInterval(timer);\n    };\n    console.log('test');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attemptPrize\",\n      children: [\"This time slot will expire in \", count, \" seconds!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"Z6wurFGNbBGj3xXOtjlQgkiUYHw=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/treasure-blox/src/components/Structure/Timer.js"],"names":["React","Component","useState","useEffect","ReactDOM","Countdown","moment","CardColumns","CardGroup","Card","Button","Container","Nav","Navbar","NavDropdown","Row","Col","Timer","props","require","getDifferenceInDays","date1","date2","diffInMs","Math","abs","getDifferenceInHours","getDifferenceInMinutes","getDifferenceInSeconds","count","setTime","currentStartDate","Date","startDate","startDateHours","getHours","startDateMinutes","getMinutes","startDateSeconds","getSeconds","endDate","allGame1_deadline_time","endDateHours","endDateMinutes","endDateSeconds","console","log","timer","window","setInterval","prevTime","clearInterval"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\nimport Countdown from 'react-countdown';\nimport moment from 'moment';\n\n\nimport { CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown,Row,Col } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Card.css';\n\nconst Timer = (props) => {\n  var moment = require('moment'); // require\n\n  function getDifferenceInDays(date1, date2) {\n    const diffInMs = Math.abs(date2 - date1);\n    return diffInMs / (1000 * 60 * 60 * 24);\n    }\n\n  function getDifferenceInHours(date1, date2) {\n    const diffInMs = Math.abs(date2 - date1);\n    return diffInMs / (1000 * 60 * 60);\n    }\n\n  function getDifferenceInMinutes(date1, date2) {\n    const diffInMs = Math.abs(date2 - date1);\n    return diffInMs / (1000 * 60);\n    }\n\n  function getDifferenceInSeconds(date1, date2) {\n    const diffInMs = Math.abs(date2 - date1);\n    return diffInMs / 1000;\n    }\n\n\n\n\n\n\n  const [count, setTime] = useState(20);\n\n\n  useEffect(() => {\n\n    const currentStartDate = Date();\n    var startDate = new Date(currentStartDate);\n    // Hours part from the timestamp\n    var startDateHours = startDate.getHours();\n    // Minutes part from the timestamp\n    var startDateMinutes = startDate.getMinutes();\n    // Seconds part from the timestamp\n    var startDateSeconds = startDate.getSeconds();\n\n    // Do\n    var endDate = new Date(props.allGame1_deadline_time * 1000);\n    // Hours part from the timestamp\n    var endDateHours = endDate.getHours();\n    // Minutes part from the timestamp\n    var endDateMinutes = endDate.getMinutes();\n    // Seconds part from the timestamp\n    var endDateSeconds = endDate.getSeconds();\n    console.log('///////');\n\n    console.log(getDifferenceInDays(endDate, startDate));\n    console.log(getDifferenceInHours(endDate, startDate));\n    console.log(getDifferenceInMinutes(endDate, startDate));\n    console.log(getDifferenceInSeconds(endDate, startDate));\n\n\n\n\n    var endDateHours = endDate.getHours(getDifferenceInHours(endDate, startDate));\n    var endDateMinutes = endDate.getMinutes(getDifferenceInMinutes(endDate, startDate));\n    var endDateSeconds = endDate.getSeconds(getDifferenceInSeconds(endDate, startDate));\n\n\n    // console.log(startDate);\n    //\n    // console.log(endDateHours);\n    // console.log(endDateMinutes);\n    // console.log(endDateSeconds);\n\n\n\n    const timer = window.setInterval(() => {\n\n\n      setTime(prevTime => prevTime - 1); // <-- Change this line!\n\n    }, 1000);\n    return () => {\n\n      window.clearInterval(timer);\n    };\n\n  console.log('test');\n\n  }, []);\n\n\n\n\n\n\n\n\n  return(\n\n    <div>\n\n      <div className=\"attemptPrize\">This time slot will expire in {count} seconds!</div>\n\n    </div>\n\n  );\n\n};\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}