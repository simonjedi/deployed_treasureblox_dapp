{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/components/Structure/Game1/LeaderBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Iframe from 'react-iframe';\nimport img1 from '../images/elons_lost_his_rocket.png';\nimport { Modal, CardColumns, CardGroup, Card, Button, View, Table, Container, Nav, Navbar, NavDropdown, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './User.css'; // import Leaderboard from 'react-native-leaderboard';\n\nimport User from './User';\nimport Tableheader from './Tableheader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeaderBoardCard = props => {\n  _s();\n\n  const commaNumber = require('comma-number');\n\n  const decimals = props.decimals;\n  const game1_prize = commaNumber(props.game1_prize, ',');\n  const game1_entry_cost = commaNumber(props.game1_entry_cost, ',');\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true); //\n  //\n  // console.log(props.game1LeaderBoardIndex,\"ITEMS\");\n  // console.log(props.game1LeaderBoardGameID,\"ITEMS\");\n  // console.log(props.game1LeaderBoardAddress,\"ITEMS\");\n  // console.log(props.game1LeaderBoardEntered,\"ITEMS\");\n  // console.log(props.game1LeaderBoardUsername,\"ITEMS\");\n  // console.log(props.game1LeaderBoardTries,\"ITEMS\");\n  // console.log(props.game1LeaderBoardStage,\"ITEMS\");\n\n\n  const columns = [{\n    dataField: 'Score',\n    text: 'Score',\n    sort: true\n  }]; // const userList = async () => {\n  //   return props.game1LeaderBoardIndex.map((users) => <User data={users} />)\n  // }\n\n  let zipped = props.game1LeaderBoardIndex.map((x, i) => [x, props.game1LeaderBoardUsername[i], props.game1LeaderBoardStage[i], props.game1LeaderBoardTries[i]]);\n  let rank = 0;\n  const userList = zipped.map((users, index) => {\n    rank++;\n    return (\n      /*#__PURE__*/\n      //mapping over the User component to display them in the <tbody>\n      //Key makes each User unique.\n      _jsxDEV(User, {\n        data: users,\n        rank: rank\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this)\n    );\n  });\n  const [sortConfig, setSortConfig] = React.useState(null);\n  zipped.sort((a, b) => {\n    if (a[sortConfig.key] < b[sortConfig.key]) {\n      return sortConfig.direction === 'ascending' ? -1 : 1;\n    }\n\n    if (a[sortConfig.key] > b[sortConfig.key]) {\n      return sortConfig.direction === 'ascending' ? 1 : -1;\n    }\n\n    return 0;\n  });\n\n  const requestSort = key => {\n    let direction = 'ascending';\n\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"customRoundedOne\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"descriptionTitle\",\n        children: \"Prize | XXXX | xxxx |XXXX | XXX |XXX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: \"customRoundedTable\",\n          hover: true,\n          variant: \"dark\",\n          children: [/*#__PURE__*/_jsxDEV(Tableheader, {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"idcol\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setSortConfig('username'),\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 11\n            }, this), \"// \", /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"sticky-column\",\n              onClick: () => setSortedField('Username'),\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"sticky-column\",\n              children: \"Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"sticky-column\",\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"sticky-column\",\n              children: \"Est Return BLOX\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: userList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LeaderBoardCard, \"NlqlIS1DJHL0Kqp4FsY9Zyz/iAM=\");\n\n_c = LeaderBoardCard;\nexport default LeaderBoardCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaderBoardCard\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/components/Structure/Game1/LeaderBoard.js"],"names":["React","useState","useEffect","Iframe","img1","Modal","CardColumns","CardGroup","Card","Button","View","Table","Container","Nav","Navbar","NavDropdown","Row","Col","User","Tableheader","LeaderBoardCard","props","commaNumber","require","decimals","game1_prize","game1_entry_cost","show","setShow","handleClose","handleShow","columns","dataField","text","sort","zipped","game1LeaderBoardIndex","map","x","i","game1LeaderBoardUsername","game1LeaderBoardStage","game1LeaderBoardTries","rank","userList","users","index","sortConfig","setSortConfig","a","b","key","direction","requestSort","setSortedField"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport Iframe from 'react-iframe'\n\nimport img1 from '../images/elons_lost_his_rocket.png';\n\n\nimport { Modal,CardColumns,CardGroup,Card,Button,View,Table,Container,Nav,Navbar,NavDropdown,Row,Col } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './User.css';\n\n// import Leaderboard from 'react-native-leaderboard';\nimport User from './User';\nimport Tableheader from './Tableheader';\n\nconst LeaderBoardCard = (props) => {\n  const commaNumber = require('comma-number')\n\n\n  const decimals = props.decimals;\n\n\n  const game1_prize = commaNumber(props.game1_prize,',');\n  const game1_entry_cost = commaNumber(props.game1_entry_cost,',');\n\n\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  //\n  //\n  // console.log(props.game1LeaderBoardIndex,\"ITEMS\");\n  // console.log(props.game1LeaderBoardGameID,\"ITEMS\");\n  // console.log(props.game1LeaderBoardAddress,\"ITEMS\");\n  // console.log(props.game1LeaderBoardEntered,\"ITEMS\");\n  // console.log(props.game1LeaderBoardUsername,\"ITEMS\");\n  // console.log(props.game1LeaderBoardTries,\"ITEMS\");\n  // console.log(props.game1LeaderBoardStage,\"ITEMS\");\n\n\n\n\n\n\n  const columns = [\n    {\n    dataField: 'Score',\n    text: 'Score',\n    sort: true,\n\n  }];\n\n\n\n\n    // const userList = async () => {\n    //   return props.game1LeaderBoardIndex.map((users) => <User data={users} />)\n    // }\n  let zipped = props.game1LeaderBoardIndex.map((x, i) => [x, props.game1LeaderBoardUsername[i],props.game1LeaderBoardStage[i],props.game1LeaderBoardTries[i]]);\n  let rank = 0;\n\n  const userList = zipped.map((users,index) => {\n          rank++;\n          return (\n              //mapping over the User component to display them in the <tbody>\n              //Key makes each User unique.\n              <User key={index} data={users} rank={rank}/>\n          )\n      });\n\n  const [sortConfig, setSortConfig] = React.useState(null);\n\n\n\n    zipped.sort((a, b) => {\n      if (a[sortConfig.key] < b[sortConfig.key]) {\n        return sortConfig.direction === 'ascending' ? -1 : 1;\n      }\n      if (a[sortConfig.key] > b[sortConfig.key]) {\n        return sortConfig.direction === 'ascending' ? 1 : -1;\n      }\n      return 0;\n    });\n\n    const requestSort = key => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  }\n\n  return(\n\n    <div>\n\n\n\n    <Card className=\"customRoundedOne\">\n    <Card.Header className=\"descriptionTitle\">Prize | XXXX | xxxx |XXXX | XXX |XXX</Card.Header>\n\n    <div className=\"container\">\n        <Table className=\"customRoundedTable\" hover variant=\"dark\" >\n          <Tableheader>\n          <th className=\"idcol\">#</th>\n          <button type=\"button\" onClick={() => setSortConfig('username')}>\n                        Username\n                      </button>\n            // <th className=\"sticky-column\" onClick={() => setSortedField('Username')}>Username</th>\n            <th className=\"sticky-column\">Level</th>\n            <th className=\"sticky-column\">Score</th>\n            <th className=\"sticky-column\">Est Return BLOX</th>\n          </Tableheader>\n          <tbody>\n          {userList}\n\n          </tbody>\n        </Table>\n        </div>\n\n</Card>\n\n\n        <br/>\n\n\n\n\n\n\n</div>\n  );\n\n\n};\n\nexport default LeaderBoardCard;\n"]},"metadata":{},"sourceType":"module"}