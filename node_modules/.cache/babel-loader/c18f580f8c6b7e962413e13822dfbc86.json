{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/treasure-blox/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport MyNav from './MyNav';\nimport MyCards from './components/Structure/Cards';\nimport SingleCard from './components/Structure/SingleCard'; // import img1 from './Treasure-hunt.jpeg';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component, useState, useEffect } from 'react';\nimport getWeb3 from \"./getWeb3\"; // import Connection from \"./Connection\";\n\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [web3, setWeb3] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [contract, setContract] = useState(undefined);\n  useEffect(() => {\n    const init = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n\n      const abi = require('./TreasureBlox.abi.json'); // Set the provider\n      // web3.setProvider(new web3.providers.WebsocketProvider('ws://localhost:8545'));\n      // this.web3.setProvider(new this.web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/'));\n\n\n      const contract = new web3.eth.Contract(abi, \"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0xc4c51a5cac72b26d6467130490f72950610f40ed\");\n      setWeb3(web3);\n      setAccounts(accounts[0]);\n      setContract(contract);\n    };\n\n    init();\n  }, [accounts]);\n  const wallet = useWallet();\n  const [account, setAccountName] = useState(false);\n  console.log(\"this here\", props.accounts);\n  const myvar = wallet.account;\n\n  const connectWallet = async e => {\n    e.preventDefault();\n    await wallet.connect();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background customFont\",\n    children: [/*#__PURE__*/_jsxDEV(MyNav, {\n      accounts: accounts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: connectWallet,\n        className: \"customButton enableEthereumButton\",\n        children: [accounts, \"WTF\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Account: \", accounts]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(SingleCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Connection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(MyCards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(MyCards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"OlJb3ab5NUvoOFl5vEnhUSs8C5g=\", false, function () {\n  return [useWallet];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/treasure-blox/src/App.js"],"names":["Button","Container","Nav","Navbar","NavDropdown","MyNav","MyCards","SingleCard","React","Component","useState","useEffect","getWeb3","useWallet","UseWalletProvider","App","web3","setWeb3","undefined","accounts","setAccounts","contract","setContract","init","eth","getAccounts","abi","require","Contract","wallet","account","setAccountName","console","log","props","myvar","connectWallet","e","preventDefault","connect"],"mappings":";;;AAAA,SAASA,MAAT,EAAgBC,SAAhB,EAA0BC,GAA1B,EAA8BC,MAA9B,EAAqCC,WAArC,QAAwD,iBAAxD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,UAAP,MAAuB,mCAAvB,C,CAEA;;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;AAGA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,YAA7C;AAKA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBP,QAAQ,CAACQ,SAAD,CAA/B;AACA,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBV,QAAQ,CAACQ,SAAD,CAAvC;AACA,QAAM,CAACG,QAAD,EAAUC,WAAV,IAAyBZ,QAAQ,CAACQ,SAAD,CAAvC;AAMAP,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMY,IAAI,GAAG,YAAW;AAEtB,YAAMP,IAAI,GAAG,MAAMJ,OAAO,EAA1B;AAEA,YAAMO,QAAQ,GAAG,MAAMH,IAAI,CAACQ,GAAL,CAASC,WAAT,EAAvB;;AAEA,YAAMC,GAAG,GAAGC,OAAO,CAAC,yBAAD,CAAnB,CANsB,CAOtB;AACA;AACA;;;AACA,YAAMN,QAAQ,GAAG,IAAIL,IAAI,CAACQ,GAAL,CAASI,QAAb,CAAsBF,GAAtB,EAA0B,qDAAqD,4CAA/E,CAAjB;AAGAT,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAI,MAAAA,WAAW,CAACD,QAAQ,CAAC,CAAD,CAAT,CAAX;AACAG,MAAAA,WAAW,CAACD,QAAD,CAAX;AAGD,KAlBD;;AAmBAE,IAAAA,IAAI;AAGL,GAxBM,EAwBL,CAACJ,QAAD,CAxBK,CAAT;AA2BE,QAAMU,MAAM,GAAGhB,SAAS,EAAxB;AAEA,QAAM,CAACiB,OAAD,EAASC,cAAT,IAA2BrB,QAAQ,CAAC,KAAD,CAAzC;AAGAsB,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBC,KAAK,CAACf,QAA9B;AACA,QAAMgB,KAAK,GAAGN,MAAM,CAACC,OAArB;;AAEA,QAAMM,aAAa,GAAG,MAAMC,CAAN,IAAY;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMT,MAAM,CAACU,OAAP,EAAN;AAED,GAJD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BAEE,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAEpB;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEiB,aAAjB;AAAgC,QAAA,SAAS,EAAC,mCAA1C;AAAA,mBAA+EjB,QAA/E;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCAAeA,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YATF,eAcE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA3ED;;GAAMJ,G;UAoCaF,S;;;KApCbE,G;AA6EN,eAAeA,GAAf","sourcesContent":["import { Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport MyNav from './MyNav';\nimport MyCards from './components/Structure/Cards';\nimport SingleCard from './components/Structure/SingleCard';\n\n// import img1 from './Treasure-hunt.jpeg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport React, { Component, useState, useEffect } from 'react'\nimport getWeb3 from \"./getWeb3\";\n// import Connection from \"./Connection\";\nimport { useWallet, UseWalletProvider } from 'use-wallet'\n\n\n\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [web3,setWeb3] = useState(undefined)\n  const [accounts,setAccounts] = useState(undefined)\n  const [contract,setContract] = useState(undefined)\n\n\n\n\n\n  useEffect(() => {\n\n      const init = async() => {\n\n        const web3 = await getWeb3();\n\n        const accounts = await web3.eth.getAccounts();\n\n        const abi = require('./TreasureBlox.abi.json');\n        // Set the provider\n        // web3.setProvider(new web3.providers.WebsocketProvider('ws://localhost:8545'));\n        // this.web3.setProvider(new this.web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/'));\n        const contract = new web3.eth.Contract(abi,\"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0xc4c51a5cac72b26d6467130490f72950610f40ed\");\n\n\n        setWeb3(web3)\n        setAccounts(accounts[0])\n        setContract(contract)\n\n\n      }\n      init()\n\n\n    },[accounts])\n\n\n    const wallet = useWallet()\n\n    const [account,setAccountName] = useState(false)\n\n\n    console.log(\"this here\",props.accounts)\n    const myvar = wallet.account;\n\n    const connectWallet = async(e) => {\n      e.preventDefault()\n      await wallet.connect()\n\n    }\n\n\n\n\n\n\n    return (\n        <div className=\"background customFont\">\n\n          <MyNav accounts={accounts}/>\n          <div>\n            <Button onClick={connectWallet} className=\"customButton enableEthereumButton\">{accounts}WTF</Button>\n            <div>Account: {accounts}</div>\n          </div>\n\n          <SingleCard/>\n          <Connection/>\n\n\n\n\n          <MyCards/>\n          <MyCards/>\n      </div>\n    );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}