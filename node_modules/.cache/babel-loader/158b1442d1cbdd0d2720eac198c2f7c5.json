{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/TreasureHuntDAPP_React/treasure-blox/src/Hunt1.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Tooltip, OverlayTrigger, Form, ButtonGroup, ButtonToolbar, CardColumns, CardGroup, Card, Button, Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport MyNav from './MyNav';\nimport MyCards from './components/Structure/Cards';\nimport SingleCard from './components/Structure/SingleCard';\nimport moment from 'moment'; // import img1 from './Treasure-hunt.jpeg';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component, useState, useEffect } from 'react';\nimport Connection from \"./Connection\";\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport \"./App.css\";\nimport Timer from './components/Structure/Timer';\nimport HomeCards from './components/Structure/HomeCards';\nimport HomeHuntCards from './components/Structure/HomeHuntCards';\nimport Cards from './components/Structure/Cards';\nimport PageCard from './components/Structure/PageCard';\nimport HuntWowCards from './components/Structure/HuntWowCards';\nimport EnterHuntCards from './components/Structure/EnterHuntCards';\nimport Confetti from 'react-confetti'; // Hook\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useWindowSize() {\n  _s();\n\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    } // Add event listener\n\n\n    window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n_s(useWindowSize, \"WMqaMVAPr0u8CJVTsAIdEuYrbbM=\");\n\nconst Hunt1 = props => {\n  _s2();\n\n  const commaNumber = require('comma-number');\n\n  const {\n    width,\n    height\n  } = useWindowSize();\n  const game1_id = props.game1_id;\n  const game1_live = props.game1_live;\n  const game1_prize = commaNumber(props.game1_prize, ',');\n  const game1_question_hash = props.game1_question_hash;\n  const game1_time_lock_cost = props.game1_time_lock_cost;\n  const game1_submit_secret_cost = props.game1_submit_secret_cost;\n  const game1_clue = props.game1_clue;\n  const allGame1_deadline_time = props.allGame1_deadline_time;\n  const allGame1_username = props.allGame1_username;\n  const allGame1_total_game_tries = props.allGame1_total_game_tries; // console.log(game1_id)s\n\n  const renderTooltip = props => /*#__PURE__*/_jsxDEV(Tooltip, {\n    id: \"button-tooltip\",\n    ...props,\n    children: \"Once you have purchased your Blox they buy you 30 seconds to enter your answer, no one else can answer in this time and this stops bots from beating you to it!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 3\n  }, this);\n\n  const winner = true;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spaceTopHome\",\n    children: [winner ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Confetti, {\n        width: width,\n        height: height,\n        wind: \"10\",\n        friction: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"siteTitle\",\n        children: \"Welcome, Elon has lost his Rocket! Can you help him find it to win the prize?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SingleCard, {\n        game1_id: props.game1_id,\n        game1_live: props.game1_live,\n        game1_prize: props.game1_prize,\n        game1_question_hash: props.game1_question_hash,\n        game1_time_lock_cost: props.game1_time_lock_cost,\n        game1_submit_secret_cost: props.game1_submit_secret_cost,\n        game1_riddle: props.game1_riddle,\n        game1_clue: props.game1_clue,\n        game1_head_start_time: props.game1_head_start_time,\n        game1_entry_limit: props.game1_entry_limit,\n        game1_entry_cost: props.game1_entry_cost,\n        allGame1_id: props.allGame1_id,\n        allGasme1_user_front_of_que: props.allGame1_user_front_of_que,\n        allGame1_deadline_time: props.allGame1_deadline_time,\n        allGame1_username: props.allGame1_username,\n        allGame1_total_game_tries: props.allGame1_total_game_tries,\n        countGame1: props.countGame1,\n        countGame1DeadlineTrue: props.countGame1DeadlineTrue,\n        decimals: props.decimals,\n        totalTreasure: props.totalTreasure,\n        contract: props.contract,\n        accounts: props.accounts,\n        game1numberOfEntries: props.game1numberOfEntries,\n        userGame1_id: props.userGame1_id,\n        userEntered_game1: props.userEntered_game1,\n        userGame1_headstart_time: props.userGame1_headstart_time,\n        userGame1_live: props.userGame1_live\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"mt-5\",\n        fluid: \"md\",\n        children: /*#__PURE__*/_jsxDEV(CardGroup, {\n          className: \"mt-5\",\n          children: /*#__PURE__*/_jsxDEV(CardColumns, {\n            children: [/*#__PURE__*/_jsxDEV(EnterHuntCards, {\n              web3: props.web3,\n              game1_id: props.game1_id,\n              game1_live: props.game1_live,\n              game1_prize: props.game1_prize,\n              game1_question_hash: props.game1_question_hash,\n              game1_time_lock_cost: props.game1_time_lock_cost,\n              game1_submit_secret_cost: props.game1_submit_secret_cost,\n              game1_riddle: props.game1_riddle,\n              game1_clue: props.game1_clue,\n              game1_head_start_time: props.game1_head_start_time,\n              game1_entry_limit: props.game1_entry_limit,\n              game1_entry_cost: props.game1_entry_cost,\n              allGame1_id: props.allGame1_id,\n              allGasme1_user_front_of_que: props.allGame1_user_front_of_que,\n              allGame1_deadline_time: props.allGame1_deadline_time,\n              allGame1_username: props.allGame1_username,\n              allGame1_total_game_tries: props.allGame1_total_game_tries,\n              countGame1: props.countGame1,\n              countGame1DeadlineTrue: props.countGame1DeadlineTrue,\n              decimals: props.decimals,\n              totalTreasure: props.totalTreasure,\n              contract: props.contract,\n              accounts: props.accounts,\n              game1numberOfEntries: props.game1numberOfEntries,\n              userGame1_id: props.userGame1_id,\n              userEntered_game1: props.userEntered_game1,\n              userGame1_headstart_time: props.userGame1_headstart_time,\n              userGame1_live: props.userGame1_live\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HuntWowCards, {\n              game1_id: props.game1_id,\n              game1_live: props.game1_live,\n              game1_prize: props.game1_prize,\n              game1_question_hash: props.game1_question_hash,\n              game1_time_lock_cost: props.game1_time_lock_cost,\n              game1_submit_secret_cost: props.game1_submit_secret_cost,\n              game1_riddle: props.game1_riddle,\n              game1_clue: props.game1_clue,\n              game1_head_start_time: props.game1_head_start_time,\n              game1_entry_limit: props.game1_entry_limit,\n              game1_entry_cost: props.game1_entry_cost,\n              allGame1_id: props.allGame1_id,\n              allGasme1_user_front_of_que: props.allGame1_user_front_of_que,\n              allGame1_deadline_time: props.allGame1_deadline_time,\n              allGame1_username: props.allGame1_username,\n              allGame1_total_game_tries: props.allGame1_total_game_tries,\n              countGame1: props.countGame1,\n              countGame1DeadlineTrue: props.countGame1DeadlineTrue,\n              decimals: props.decimals,\n              totalTreasure: props.totalTreasure,\n              game1numberOfEntries: props.game1numberOfEntries\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PageCard, {\n              game1_id: props.game1_id,\n              game1_live: props.game1_live,\n              game1_prize: props.game1_prize,\n              game1_question_hash: props.game1_question_hash,\n              game1_time_lock_cost: props.game1_time_lock_cost,\n              game1_submit_secret_cost: props.game1_submit_secret_cost,\n              game1_riddle: props.game1_riddle,\n              game1_clue: props.game1_clue,\n              game1_head_start_time: props.game1_head_start_time,\n              game1_entry_limit: props.game1_entry_limit,\n              game1_entry_cost: props.game1_entry_cost,\n              allGame1_id: props.allGame1_id,\n              allGasme1_user_front_of_que: props.allGame1_user_front_of_que,\n              allGame1_deadline_time: props.allGame1_deadline_time,\n              allGame1_username: props.allGame1_username,\n              allGame1_total_game_tries: props.allGame1_total_game_tries,\n              countGame1: props.countGame1,\n              countGame1DeadlineTrue: props.countGame1DeadlineTrue,\n              decimals: props.decimals,\n              totalTreasure: props.totalTreasure,\n              game1numberOfEntries: props.game1numberOfEntries\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HomeCards, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 7\n  }, this);\n};\n\n_s2(Hunt1, \"KjNohv3DNp89qhMgc5AAk+GTEgA=\", false, function () {\n  return [useWindowSize];\n});\n\n_c = Hunt1;\nexport default Hunt1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hunt1\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/TreasureHuntDAPP_React/treasure-blox/src/Hunt1.js"],"names":["Tooltip","OverlayTrigger","Form","ButtonGroup","ButtonToolbar","CardColumns","CardGroup","Card","Button","Container","Nav","Navbar","NavDropdown","MyNav","MyCards","SingleCard","moment","React","Component","useState","useEffect","Connection","useWallet","UseWalletProvider","Timer","HomeCards","HomeHuntCards","Cards","PageCard","HuntWowCards","EnterHuntCards","Confetti","useWindowSize","windowSize","setWindowSize","width","undefined","height","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Hunt1","props","commaNumber","require","game1_id","game1_live","game1_prize","game1_question_hash","game1_time_lock_cost","game1_submit_secret_cost","game1_clue","allGame1_deadline_time","allGame1_username","allGame1_total_game_tries","renderTooltip","winner","game1_riddle","game1_head_start_time","game1_entry_limit","game1_entry_cost","allGame1_id","allGame1_user_front_of_que","countGame1","countGame1DeadlineTrue","decimals","totalTreasure","contract","accounts","game1numberOfEntries","userGame1_id","userEntered_game1","userGame1_headstart_time","userGame1_live","web3"],"mappings":"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","sourcesContent":["import {Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport MyNav from './MyNav';\nimport MyCards from './components/Structure/Cards';\nimport SingleCard from './components/Structure/SingleCard';\nimport moment from 'moment';\n\n// import img1 from './Treasure-hunt.jpeg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport React, { Component, useState, useEffect } from 'react'\nimport Connection from \"./Connection\";\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport \"./App.css\";\n\nimport Timer from './components/Structure/Timer';\nimport HomeCards from './components/Structure/HomeCards';\nimport HomeHuntCards from './components/Structure/HomeHuntCards';\nimport Cards from './components/Structure/Cards';\nimport PageCard from './components/Structure/PageCard';\nimport HuntWowCards from './components/Structure/HuntWowCards';\nimport EnterHuntCards from './components/Structure/EnterHuntCards';\n\nimport Confetti from 'react-confetti'\n\n// Hook\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n\n\n\n\nconst Hunt1 = (props) => {\n\n\n  const commaNumber = require('comma-number')\n  const { width, height } = useWindowSize();\n\n\n\n  const game1_id = props.game1_id;\n  const game1_live = props.game1_live;\n  const game1_prize = commaNumber(props.game1_prize,',');\n  const game1_question_hash = props.game1_question_hash;\n  const game1_time_lock_cost = props.game1_time_lock_cost;\n  const game1_submit_secret_cost = props.game1_submit_secret_cost;\n  const game1_clue = props.game1_clue;\n  const allGame1_deadline_time= props.allGame1_deadline_time;\n  const allGame1_username = props.allGame1_username;\n  const allGame1_total_game_tries = props.allGame1_total_game_tries;\n\n\n  // console.log(game1_id)s\n\n  const renderTooltip = (props) => (\n\n\n  <Tooltip id=\"button-tooltip\" {...props}>\n    Once you have purchased your Blox they buy you 30 seconds to enter your answer, no one else can answer in this time and this stops bots from beating you to it!\n  </Tooltip>\n);\n\n\n\nconst winner = true;\n\n\n\n    return (\n\n      <div className=\"spaceTopHome\">\n      {winner? (\n        <div><Confetti\n          width={width}\n          height={height}\n          wind=\"10\"\n          friction=\"1\"\n        /></div>\n\n      ):(\n        <div></div>\n      )}\n\n      <div>\n            <div className=\"siteTitle\">Welcome, Elon has lost his Rocket! Can you help him find it to win the prize?</div>\n      <SingleCard\n      game1_id={props.game1_id}\n      game1_live={props.game1_live}\n      game1_prize={props.game1_prize}\n      game1_question_hash={props.game1_question_hash}\n      game1_time_lock_cost={props.game1_time_lock_cost}\n      game1_submit_secret_cost={props.game1_submit_secret_cost}\n      game1_riddle={props.game1_riddle}\n      game1_clue={props.game1_clue}\n      game1_head_start_time={props.game1_head_start_time}\n      game1_entry_limit={props.game1_entry_limit}\n      game1_entry_cost={props.game1_entry_cost}\n      allGame1_id={props.allGame1_id}\n      allGasme1_user_front_of_que={props.allGame1_user_front_of_que}\n      allGame1_deadline_time={props.allGame1_deadline_time}\n      allGame1_username={props.allGame1_username}\n      allGame1_total_game_tries={props.allGame1_total_game_tries}\n      countGame1={props.countGame1}\n      countGame1DeadlineTrue={props.countGame1DeadlineTrue}\n      decimals={props.decimals}\n      totalTreasure={props.totalTreasure}\n      contract={props.contract}\n      accounts={props.accounts}\n      game1numberOfEntries={props.game1numberOfEntries}\n      userGame1_id={props.userGame1_id}\n      userEntered_game1={props.userEntered_game1}\n      userGame1_headstart_time={props.userGame1_headstart_time}\n      userGame1_live={props.userGame1_live}/>\n\n\n      <Container className='mt-5' fluid=\"md\">\n            <CardGroup className='mt-5'>\n              <CardColumns >\n\n              <EnterHuntCards\n              web3={props.web3}\n              game1_id={props.game1_id}\n              game1_live={props.game1_live}\n              game1_prize={props.game1_prize}\n              game1_question_hash={props.game1_question_hash}\n              game1_time_lock_cost={props.game1_time_lock_cost}\n              game1_submit_secret_cost={props.game1_submit_secret_cost}\n              game1_riddle={props.game1_riddle}\n              game1_clue={props.game1_clue}\n              game1_head_start_time={props.game1_head_start_time}\n              game1_entry_limit={props.game1_entry_limit}\n              game1_entry_cost={props.game1_entry_cost}\n              allGame1_id={props.allGame1_id}\n              allGasme1_user_front_of_que={props.allGame1_user_front_of_que}\n              allGame1_deadline_time={props.allGame1_deadline_time}\n              allGame1_username={props.allGame1_username}\n              allGame1_total_game_tries={props.allGame1_total_game_tries}\n              countGame1={props.countGame1}\n              countGame1DeadlineTrue={props.countGame1DeadlineTrue}\n              decimals={props.decimals}\n              totalTreasure={props.totalTreasure}\n              contract={props.contract}\n              accounts={props.accounts}\n              game1numberOfEntries={props.game1numberOfEntries}\n              userGame1_id={props.userGame1_id}\n              userEntered_game1={props.userEntered_game1}\n              userGame1_headstart_time={props.userGame1_headstart_time}\n              userGame1_live={props.userGame1_live}/>\n              <br/>\n\n              <HuntWowCards\n              game1_id={props.game1_id}\n              game1_live={props.game1_live}\n              game1_prize={props.game1_prize}\n              game1_question_hash={props.game1_question_hash}\n              game1_time_lock_cost={props.game1_time_lock_cost}\n              game1_submit_secret_cost={props.game1_submit_secret_cost}\n              game1_riddle={props.game1_riddle}\n              game1_clue={props.game1_clue}\n              game1_head_start_time={props.game1_head_start_time}\n              game1_entry_limit={props.game1_entry_limit}\n              game1_entry_cost={props.game1_entry_cost}\n              allGame1_id={props.allGame1_id}\n              allGasme1_user_front_of_que={props.allGame1_user_front_of_que}\n              allGame1_deadline_time={props.allGame1_deadline_time}\n              allGame1_username={props.allGame1_username}\n              allGame1_total_game_tries={props.allGame1_total_game_tries}\n              countGame1={props.countGame1}\n              countGame1DeadlineTrue={props.countGame1DeadlineTrue}\n              decimals={props.decimals}\n              totalTreasure={props.totalTreasure}\n              game1numberOfEntries={props.game1numberOfEntries}/>\n\n              <PageCard\n              game1_id={props.game1_id}\n              game1_live={props.game1_live}\n              game1_prize={props.game1_prize}\n              game1_question_hash={props.game1_question_hash}\n              game1_time_lock_cost={props.game1_time_lock_cost}\n              game1_submit_secret_cost={props.game1_submit_secret_cost}\n              game1_riddle={props.game1_riddle}\n              game1_clue={props.game1_clue}\n              game1_head_start_time={props.game1_head_start_time}\n              game1_entry_limit={props.game1_entry_limit}\n              game1_entry_cost={props.game1_entry_cost}\n              allGame1_id={props.allGame1_id}\n              allGasme1_user_front_of_que={props.allGame1_user_front_of_que}\n              allGame1_deadline_time={props.allGame1_deadline_time}\n              allGame1_username={props.allGame1_username}\n              allGame1_total_game_tries={props.allGame1_total_game_tries}\n              countGame1={props.countGame1}\n              countGame1DeadlineTrue={props.countGame1DeadlineTrue}\n              decimals={props.decimals}\n              totalTreasure={props.totalTreasure}\n              game1numberOfEntries={props.game1numberOfEntries}/>\n\n              <HomeCards/>\n\n              </CardColumns>\n            </CardGroup>\n        </Container>\n\n      </div>\n\n\n\n</div>\n\n\n\n    );\n\n}\n\nexport default Hunt1;\n"]},"metadata":{},"sourceType":"module"}