{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PhoneNumberBase = exports.anonymizedPhone = exports.isE164Number = exports.getPhoneHash = void 0;\n\nvar attestations_1 = require(\"./attestations\");\n\nvar PHONE_SALT_SEPARATOR = '__';\nvar E164_REGEX = /^\\+[1-9][0-9]{1,14}$/;\n\nvar getPhoneHash = function (sha3, phoneNumber, salt) {\n  if (!phoneNumber || !isE164Number(phoneNumber)) {\n    throw Error('Attempting to hash a non-e164 number: ' + phoneNumber);\n  }\n\n  var prefix = (0, attestations_1.getIdentifierPrefix)(attestations_1.IdentifierType.PHONE_NUMBER);\n  var value = prefix + (salt ? phoneNumber + PHONE_SALT_SEPARATOR + salt : phoneNumber);\n  return sha3(value);\n};\n\nexports.getPhoneHash = getPhoneHash;\n\nfunction isE164Number(phoneNumber) {\n  return E164_REGEX.test(phoneNumber);\n}\n\nexports.isE164Number = isE164Number;\n\nfunction anonymizedPhone(phoneNumber) {\n  return phoneNumber.slice(0, -4) + 'XXXX';\n}\n\nexports.anonymizedPhone = anonymizedPhone;\nexports.PhoneNumberBase = {\n  getPhoneHash: exports.getPhoneHash,\n  isE164Number: isE164Number\n};","map":{"version":3,"sources":["../src/phoneNumbers.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,cAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAUA,IAAM,oBAAoB,GAAG,IAA7B;AACA,IAAM,UAAU,GAAG,sBAAnB;;AAEO,IAAM,YAAY,GAAG,UAC1B,IAD0B,EAE1B,WAF0B,EAG1B,IAH0B,EAGb;AAEb,MAAI,CAAC,WAAD,IAAgB,CAAC,YAAY,CAAC,WAAD,CAAjC,EAAgD;AAC9C,UAAM,KAAK,CAAC,2CAA2C,WAA5C,CAAX;AACD;;AACD,MAAM,MAAM,GAAG,CAAA,GAAA,cAAA,CAAA,mBAAA,EAAoB,cAAA,CAAA,cAAA,CAAe,YAAnC,CAAf;AACA,MAAM,KAAK,GAAG,MAAM,IAAI,IAAI,GAAG,WAAW,GAAG,oBAAd,GAAqC,IAAxC,GAA+C,WAAvD,CAApB;AACA,SAAO,IAAI,CAAC,KAAD,CAAX;AACD,CAXM;;AAAM,OAAA,CAAA,YAAA,GAAY,YAAZ;;AAab,SAAgB,YAAhB,CAA6B,WAA7B,EAAgD;AAC9C,SAAO,UAAU,CAAC,IAAX,CAAgB,WAAhB,CAAP;AACD;;AAFD,OAAA,CAAA,YAAA,GAAA,YAAA;;AAIA,SAAgB,eAAhB,CAAgC,WAAhC,EAAmD;AACjD,SAAO,WAAW,CAAC,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,IAA2B,MAAlC;AACD;;AAFD,OAAA,CAAA,eAAA,GAAA,eAAA;AAIa,OAAA,CAAA,eAAA,GAAkB;AAC7B,EAAA,YAAY,EAAA,OAAA,CAAA,YADiB;AAE7B,EAAA,YAAY,EAAA;AAFiB,CAAlB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PhoneNumberBase = exports.anonymizedPhone = exports.isE164Number = exports.getPhoneHash = void 0;\nvar attestations_1 = require(\"./attestations\");\nvar PHONE_SALT_SEPARATOR = '__';\nvar E164_REGEX = /^\\+[1-9][0-9]{1,14}$/;\nvar getPhoneHash = function (sha3, phoneNumber, salt) {\n    if (!phoneNumber || !isE164Number(phoneNumber)) {\n        throw Error('Attempting to hash a non-e164 number: ' + phoneNumber);\n    }\n    var prefix = (0, attestations_1.getIdentifierPrefix)(attestations_1.IdentifierType.PHONE_NUMBER);\n    var value = prefix + (salt ? phoneNumber + PHONE_SALT_SEPARATOR + salt : phoneNumber);\n    return sha3(value);\n};\nexports.getPhoneHash = getPhoneHash;\nfunction isE164Number(phoneNumber) {\n    return E164_REGEX.test(phoneNumber);\n}\nexports.isE164Number = isE164Number;\nfunction anonymizedPhone(phoneNumber) {\n    return phoneNumber.slice(0, -4) + 'XXXX';\n}\nexports.anonymizedPhone = anonymizedPhone;\nexports.PhoneNumberBase = {\n    getPhoneHash: exports.getPhoneHash,\n    isE164Number: isE164Number,\n};\n//# sourceMappingURL=phoneNumbers.js.map"]},"metadata":{},"sourceType":"script"}