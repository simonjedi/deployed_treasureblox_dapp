{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/TreasureHuntDAPP_React/treasure-blox/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport MyNav from './MyNav';\nimport Cards from './components/Structure/Game1/Cards';\nimport SingleCard from './components/Structure/Game1/SingleCard';\nimport moment from 'moment'; // import img1 from './Treasure-hunt.jpeg';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component, useState, useEffect } from 'react';\nimport getWeb3 from \"./getWeb3\";\nimport Connection from \"./Connection\";\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Hunt1 from \"./Hunt1\";\nimport Hunt2 from \"./Hunt2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [web3, setWeb3] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [decimals, setDecimals] = useState(null);\n  const [totalTreasure, setTotalTreasure] = useState(null);\n  const [game1_id, setGame1_id] = useState(undefined);\n  const [game1_live, setGame1_live] = useState(undefined);\n  const [game1_prize, setGame1_prize] = useState(undefined);\n  const [game1_question_hash, setGame1_question_hash] = useState(undefined);\n  const [game1_time_lock_cost, setgame1_time_lock_cost] = useState(undefined);\n  const [game1_submit_secret_cost, setGame1_submit_secret_cost] = useState(undefined);\n  const [game1_riddle, setGame1_riddle] = useState(undefined);\n  const [game1_clue, setGame1_clue] = useState(undefined);\n  const [game1_head_start_time, setGame1_head_start_time] = useState(undefined);\n  const [game1_entry_limit, setGame1_entry_limit] = useState(undefined);\n  const [game1_entry_cost, setGame1_entry_cost] = useState(undefined);\n  const [allGame1_id, setallGame1_id] = useState(undefined);\n  const [allGame1_user_front_of_que, setallGame1_user_front_of_que] = useState(undefined);\n  const [allGame1_deadline_time, setallGame1_deadline] = useState(undefined);\n  const [allGame1_username, setallGame1_username] = useState(undefined);\n  const [allGame1_total_game_tries, setallGame1_total_game_tries] = useState(undefined);\n  const [countGame1, setTimeGame1] = useState(60);\n  const [countGame1DeadlineTrue, setcountGame1DeadlineTrue] = useState(false);\n  const [game1numberOfEntries, setGame1numberOfEntries] = useState(0);\n  const [game1huntEntries, setGame1huntEntries] = useState(undefined);\n  const [userGame1_id, setUserGame1_id] = useState(undefined);\n  const [userEntered_game1, setUserEntered_game1] = useState(undefined);\n  const [userGame1_headstart_time, setUserGame1_headstart_time] = useState(undefined);\n  const [userGame1_live, setUserGame1_live] = useState(undefined);\n  const [winning_address, setWinning_address] = useState(undefined);\n  const [treasure_found, setTreasure_found] = useState(undefined);\n  const [winning_prize, setWinning_prize] = useState(undefined);\n  const [question_hash_solved, setQuestion_hash_solved] = useState(undefined);\n  const [winning_message, setWinning_message] = useState(undefined);\n  const [attemptId, setAttemptId] = useState(undefined);\n  const [attemptAddress, setAttemptAddress] = useState(undefined);\n  const [attemptUsername, setAttemptUsername] = useState(undefined);\n  const [attemptDeadline, setAttemptDeadline] = useState(undefined);\n  useEffect(() => {\n    const init = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n\n      const abi = require('./TreasureBlox.abi.json'); // Set the provider\n      // web3.setProvider(new web3.providers.WebsocketProvider('ws://localhost:8545'));\n      // this.web3.setProvider(new this.web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/'));\n      // LOCAL\n      // const contract = new web3.eth.Contract(abi,\"localhost:8545\" && \"0x2f62f1C0abCCae1315aEfc616119e20955ECfdb7\");\n      // TestNet\n\n\n      const contract = new web3.eth.Contract(abi, \"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0x187fC4cb509976ccdd9CfC97EddE394d7eB9F269\"); // Sstart Data Calls\n\n      const decimals = await contract.methods.decimals().call().then(console.log('Yes'));\n      const totalTreasure = await contract.methods.balanceOf(\"0xe3bAD75D329c7C238C8DEbf6b0FDed1786C16Cf1\").call(); // const owner = await contract.methods._owner().call();\n      // const marketingWallet = await contract.methods.marketingWallet().call().then(console.log('marketing Wallet Complete'));\n      //\n      // const total_supply = await contract.methods.totalSupply().call();\n      // const treasure_chest = await contract.methods.treasureChest().call();\n      // Loop Through Games\n\n      for (let i = 1; i < 2; i++) {\n        var obj = {\n          'game1': 'game' + \"i\" // 'game2' : 'game2'\n\n        };\n        var keys = Object.keys(obj);\n        var key = keys[i]; // Here you can use a string value as the property name\n\n        var game = obj[key];\n        console.log(game); // GET GAMES\n        // var x = 2, y = 3;\n        // eval(\"var x = 9; x\");               // prints 9\n        // print(x);                                  // prints 9\n        // print(eval(\"'use strict'; var x = 5; x\")); // prints 5\n        // print(eval(\"'use strict'; var x = 7; x\")); // prints 7\n        // print(eval(\"'use strict'; y\"));            // prints 3\n        // print(x);                                  // prints 9\n\n        var game = await contract.methods.Games(i).call();\n        var game1_id = await game[0];\n        const game1_live = await game[1];\n        const game1_prize = await game[2];\n        const game1_question_hash = await game[3];\n        const game1_time_lock_cost = await game[4];\n        const game1_submit_secret_cost = await game[5];\n        const game1_riddle = await game[6];\n        const game1_clue = await game[7];\n        const game1_head_start_time = await game[8];\n        const game1_entry_limit = await game[9];\n        const game1_entry_cost = await game[10];\n        setWeb3(web3);\n        setAccounts(accounts[0]);\n        setContract(contract);\n        setDecimals(decimals);\n        setTotalTreasure(totalTreasure);\n        setGame1_id(game1_id);\n        setGame1_live(game1_live);\n        setGame1_prize(game1_prize);\n        setGame1_question_hash(game1_question_hash);\n        setgame1_time_lock_cost(game1_time_lock_cost);\n        setGame1_submit_secret_cost(game1_submit_secret_cost);\n        setGame1_riddle(game1_riddle);\n        setGame1_clue(game1_clue);\n        setGame1_head_start_time(game1_head_start_time);\n        setGame1_entry_limit(game1_entry_limit);\n        setGame1_entry_cost(game1_entry_cost);\n      } // This Handels the countdown time and collecting information every 1 second so the counter goes down\n\n\n      const timer = window.setInterval(async () => {\n        var moment = require('moment'); // require\n        // GET ALL GAME TIMELINES AND gamesTriess\n\n\n        const allGame1 = await contract.methods.allGames(1).call();\n        const allGame1_id = await allGame1[0];\n        const allGame1_user_front_of_que = await allGame1[1];\n        const allGame1_deadline_time = await allGame1[2];\n        const allGame1_username = await allGame1[3];\n        const allGame1_total_game_tries = await allGame1[4];\n        const game1numberOfEntries = await contract.methods.numberOfEntries(1).call();\n        const game1huntEntries = await contract.methods.huntEntries(accounts[0], 1).call();\n        const userGame1_id = await game1huntEntries[0];\n        const userEntered_game1 = await game1huntEntries[1];\n        const userGame1_headstart_time = await game1huntEntries[2];\n        const userGame1_live = await game1huntEntries[3];\n        const pot1AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(1).call();\n        const winning_address = await pot1AnsweredCorrectly[0];\n        const treasure_found = await pot1AnsweredCorrectly[1];\n        const winning_prize = await pot1AnsweredCorrectly[2];\n        const question_hash_solved = await pot1AnsweredCorrectly[3];\n        const winning_message = await pot1AnsweredCorrectly[4];\n        const getAllLatestGameAttempts = await contract.methods.getAllLatestGameAttempts(1).call();\n        const attemptId = await getAllLatestGameAttempts[0];\n        const attemptAddress = await getAllLatestGameAttempts[1];\n        const attemptDeadline = await getAllLatestGameAttempts[2];\n        const attemptUsername = await getAllLatestGameAttempts[3];\n        console.log(\"winner trigger: \", treasure_found);\n        var currentStartDate = Date();\n        var startDate = new Date(currentStartDate); // // Hours part from the timestamp\n        // var startDateHours = startDate.getHours();\n        // // Minutes part from the timestamp\n        // var startDateMinutes = startDate.getMinutes();\n        // // Seconds part from the timestamp\n        // var startDateSeconds = startDate.getSeconds();\n        // Do\n\n        var endDateGame1 = new Date(allGame1_deadline_time * 1000); // // Hours part from the timestamp\n        // var endDateHours = endDate.getHours();\n        // // Minutes part from the timestamp\n        // var endDateMinutes = endDate.getMinutes();\n        // // Seconds part from the timestamp\n        // var endDateSeconds = endDate.getSeconds();\n\n        function getDifferenceInDays(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / (1000 * 60 * 60 * 24);\n        }\n\n        function getDifferenceInHours(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / (1000 * 60 * 60);\n        }\n\n        function getDifferenceInMinutes(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / (1000 * 60);\n        }\n\n        function getDifferenceInSeconds(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / 1000;\n        } // console.log(getDifferenceInDays(endDate, startDate));\n        // console.log(getDifferenceInHours(endDate, startDate));\n        // console.log(getDifferenceInMinutes(endDate, startDate));\n\n\n        console.log(getDifferenceInSeconds(startDate, endDateGame1));\n        var timeGame1 = Math.abs(getDifferenceInSeconds(startDate, endDateGame1));\n        setTimeGame1(timeGame1);\n        setTimeGame1(prevTime => prevTime - 1); // <-- Change this line!\n\n        setallGame1_id(allGame1_id);\n        setallGame1_user_front_of_que(allGame1_user_front_of_que);\n        setallGame1_deadline(allGame1_deadline_time);\n        setallGame1_username(allGame1_username);\n        console.log(\"username past: \", allGame1_username);\n        setallGame1_total_game_tries(allGame1_total_game_tries);\n\n        if (endDateGame1 - 1 >= startDate) {\n          setcountGame1DeadlineTrue(true);\n        } else {\n          setcountGame1DeadlineTrue(false);\n        }\n\n        setGame1numberOfEntries(game1numberOfEntries);\n        setUserGame1_id(userGame1_id);\n        setUserEntered_game1(userEntered_game1);\n        setUserGame1_headstart_time(userGame1_headstart_time);\n        setUserGame1_live(userGame1_live);\n        setWinning_address(winning_address);\n        setTreasure_found(treasure_found);\n        setWinning_prize(winning_prize);\n        setQuestion_hash_solved(question_hash_solved);\n        setWinning_message(winning_message);\n        setAttemptId(attemptId);\n        setAttemptAddress(attemptAddress);\n        setAttemptUsername(attemptUsername);\n        setAttemptDeadline(attemptDeadline);\n      }, 1000); // End of Game timer code\n    };\n\n    init();\n  }, [web3, accounts, contract, decimals, totalTreasure, game1_id, game1_live, game1_prize, game1_question_hash, game1_time_lock_cost, game1_submit_secret_cost, game1_riddle, game1_clue, allGame1_id, allGame1_user_front_of_que, allGame1_deadline_time, allGame1_username, allGame1_total_game_tries, countGame1, countGame1DeadlineTrue, game1_head_start_time, game1_entry_limit, game1_entry_cost, game1numberOfEntries, userGame1_id, userEntered_game1, userGame1_headstart_time, userGame1_live, winning_address, treasure_found, winning_prize, question_hash_solved, winning_message, attemptId, attemptUsername, attemptDeadline, attemptAddress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background customFont\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(MyNav, {\n        accounts: accounts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), \"// Pages\", /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            game1_id: game1_id,\n            game1_live: game1_live,\n            game1_prize: game1_prize,\n            game1_question_hash: game1_question_hash,\n            game1_time_lock_cost: game1_time_lock_cost,\n            game1_submit_secret_cost: game1_submit_secret_cost,\n            game1_riddle: game1_riddle,\n            game1_clue: game1_clue,\n            game1_head_start_time: game1_head_start_time,\n            game1_entry_limit: game1_entry_limit,\n            game1_entry_cost: game1_entry_cost,\n            allGame1_id: allGame1_id,\n            allGasme1_user_front_of_que: allGame1_user_front_of_que,\n            allGame1_deadline_time: allGame1_deadline_time,\n            allGame1_username: allGame1_username,\n            allGame1_total_game_tries: allGame1_total_game_tries,\n            countGame1: countGame1,\n            countGame1DeadlineTrue: countGame1DeadlineTrue,\n            totalTreasure: totalTreasure,\n            game1numberOfEntries: game1numberOfEntries\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/hunt1\",\n          children: /*#__PURE__*/_jsxDEV(Hunt1, {\n            web3: web3,\n            game1_id: game1_id,\n            game1_live: game1_live,\n            game1_prize: game1_prize,\n            game1_question_hash: game1_question_hash,\n            game1_time_lock_cost: game1_time_lock_cost,\n            game1_submit_secret_cost: game1_submit_secret_cost,\n            game1_riddle: game1_riddle,\n            game1_clue: game1_clue,\n            game1_head_start_time: game1_head_start_time,\n            game1_entry_limit: game1_entry_limit,\n            game1_entry_cost: game1_entry_cost,\n            allGame1_id: allGame1_id,\n            allGasme1_user_front_of_que: allGame1_user_front_of_que,\n            allGame1_deadline_time: allGame1_deadline_time,\n            allGame1_username: allGame1_username,\n            allGame1_total_game_tries: allGame1_total_game_tries,\n            countGame1: countGame1,\n            countGame1DeadlineTrue: countGame1DeadlineTrue,\n            decimals: decimals,\n            totalTreasure: totalTreasure,\n            contract: contract,\n            accounts: accounts,\n            game1numberOfEntries: game1numberOfEntries,\n            userGame1_id: userGame1_id,\n            userEntered_game1: userEntered_game1,\n            userGame1_headstart_time: userGame1_headstart_time,\n            userGame1_live: userGame1_live,\n            winning_address: winning_address,\n            treasure_found: treasure_found,\n            winning_prize: winning_prize,\n            question_hash_solved: question_hash_solved,\n            winning_message: winning_message,\n            attemptId: attemptId,\n            attemptAddress: attemptAddress,\n            attemptUsername: attemptUsername,\n            attemptDeadline: attemptDeadline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/hunt2\",\n          children: [/*#__PURE__*/_jsxDEV(SingleCard, {\n            decimals: decimals,\n            totalTreasure: totalTreasure\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Cards, {\n            game1_id: game1_id,\n            game1_live: game1_live,\n            game1_prize: game1_prize,\n            game1_question_hash: game1_question_hash,\n            game1_time_lock_cost: game1_time_lock_cost,\n            game1_submit_secret_cost: game1_submit_secret_cost,\n            game1_riddle: game1_riddle,\n            game1_clue: game1_clue,\n            game1_head_start_time: game1_head_start_time,\n            game1_entry_limit: game1_entry_limit,\n            game1_entry_cost: game1_entry_cost,\n            allGame1_id: allGame1_id,\n            allGasme1_user_front_of_que: allGame1_user_front_of_que,\n            allGame1_deadline_time: allGame1_deadline_time,\n            allGame1_username: allGame1_username,\n            allGame1_total_game_tries: allGame1_total_game_tries,\n            countGame1: countGame1,\n            countGame1DeadlineTrue: countGame1DeadlineTrue,\n            game1numberOfEntries: game1numberOfEntries\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"hDfVbNpznaHamRiL9Cc8viVtZZU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/TreasureHuntDAPP_React/treasure-blox/src/App.js"],"names":["Button","Container","Nav","Navbar","NavDropdown","MyNav","Cards","SingleCard","moment","React","Component","useState","useEffect","getWeb3","Connection","useWallet","UseWalletProvider","BrowserRouter","Router","Switch","Route","Link","Redirect","Home","Hunt1","Hunt2","App","web3","setWeb3","accounts","setAccounts","contract","setContract","decimals","setDecimals","totalTreasure","setTotalTreasure","game1_id","setGame1_id","undefined","game1_live","setGame1_live","game1_prize","setGame1_prize","game1_question_hash","setGame1_question_hash","game1_time_lock_cost","setgame1_time_lock_cost","game1_submit_secret_cost","setGame1_submit_secret_cost","game1_riddle","setGame1_riddle","game1_clue","setGame1_clue","game1_head_start_time","setGame1_head_start_time","game1_entry_limit","setGame1_entry_limit","game1_entry_cost","setGame1_entry_cost","allGame1_id","setallGame1_id","allGame1_user_front_of_que","setallGame1_user_front_of_que","allGame1_deadline_time","setallGame1_deadline","allGame1_username","setallGame1_username","allGame1_total_game_tries","setallGame1_total_game_tries","countGame1","setTimeGame1","countGame1DeadlineTrue","setcountGame1DeadlineTrue","game1numberOfEntries","setGame1numberOfEntries","game1huntEntries","setGame1huntEntries","userGame1_id","setUserGame1_id","userEntered_game1","setUserEntered_game1","userGame1_headstart_time","setUserGame1_headstart_time","userGame1_live","setUserGame1_live","winning_address","setWinning_address","treasure_found","setTreasure_found","winning_prize","setWinning_prize","question_hash_solved","setQuestion_hash_solved","winning_message","setWinning_message","attemptId","setAttemptId","attemptAddress","setAttemptAddress","attemptUsername","setAttemptUsername","attemptDeadline","setAttemptDeadline","init","eth","getAccounts","abi","require","Contract","methods","call","then","console","log","balanceOf","i","obj","keys","Object","key","game","Games","timer","window","setInterval","allGame1","allGames","numberOfEntries","huntEntries","pot1AnsweredCorrectly","Pot1AnsweredCorrectly","getAllLatestGameAttempts","currentStartDate","Date","startDate","endDateGame1","getDifferenceInDays","date1","date2","diffInMs","Math","abs","getDifferenceInHours","getDifferenceInMinutes","getDifferenceInSeconds","timeGame1","prevTime"],"mappings":"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","sourcesContent":["import { Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport MyNav from './MyNav';\nimport Cards from './components/Structure/Game1/Cards';\nimport SingleCard from './components/Structure/Game1/SingleCard';\nimport moment from 'moment';\n\n// import img1 from './Treasure-hunt.jpeg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport React, { Component, useState, useEffect } from 'react'\nimport getWeb3 from \"./getWeb3\";\nimport Connection from \"./Connection\";\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport \"./App.css\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\n\nimport Home from \"./Home\";\nimport Hunt1 from \"./Hunt1\";\nimport Hunt2 from \"./Hunt2\";\n\n\n\n\nconst App = () => {\n\n  const [web3,setWeb3] = useState(null)\n  const [accounts,setAccounts] = useState(null)\n  const [contract,setContract] = useState(null)\n  const [decimals,setDecimals] = useState(null)\n  const [totalTreasure,setTotalTreasure] = useState(null)\n\n  const [game1_id,setGame1_id] = useState(undefined)\n  const [game1_live,setGame1_live] = useState(undefined)\n  const [game1_prize,setGame1_prize] = useState(undefined)\n  const [game1_question_hash,setGame1_question_hash] = useState(undefined)\n  const [game1_time_lock_cost,setgame1_time_lock_cost] = useState(undefined)\n  const [game1_submit_secret_cost,setGame1_submit_secret_cost] = useState(undefined)\n  const [game1_riddle,setGame1_riddle] = useState(undefined)\n  const [game1_clue,setGame1_clue] = useState(undefined)\n  const [game1_head_start_time,setGame1_head_start_time] = useState(undefined)\n  const [game1_entry_limit,setGame1_entry_limit] = useState(undefined)\n  const [game1_entry_cost,setGame1_entry_cost] = useState(undefined)\n\n  const [allGame1_id,setallGame1_id] = useState(undefined)\n  const [allGame1_user_front_of_que,setallGame1_user_front_of_que] = useState(undefined)\n  const [allGame1_deadline_time,setallGame1_deadline] = useState(undefined)\n  const [allGame1_username,setallGame1_username] = useState(undefined)\n  const [allGame1_total_game_tries,setallGame1_total_game_tries] = useState(undefined)\n\n  const [countGame1, setTimeGame1] = useState(60);\n  const [countGame1DeadlineTrue, setcountGame1DeadlineTrue] = useState(false);\n\n  const [game1numberOfEntries, setGame1numberOfEntries] = useState(0);\n  const [game1huntEntries, setGame1huntEntries] = useState(undefined);\n  const [userGame1_id, setUserGame1_id] = useState(undefined);\n  const [userEntered_game1, setUserEntered_game1] = useState(undefined);\n  const [userGame1_headstart_time, setUserGame1_headstart_time] = useState(undefined);\n  const [userGame1_live, setUserGame1_live] = useState(undefined);\n\n  const [winning_address, setWinning_address] = useState(undefined);\n  const [treasure_found, setTreasure_found] = useState(undefined);\n  const [winning_prize, setWinning_prize] = useState(undefined);\n  const [question_hash_solved, setQuestion_hash_solved] = useState(undefined);\n  const [winning_message, setWinning_message] = useState(undefined);\n\n  const [attemptId, setAttemptId] = useState(undefined);\n  const [attemptAddress, setAttemptAddress] = useState(undefined);\n  const [attemptUsername, setAttemptUsername] = useState(undefined);\n  const [attemptDeadline, setAttemptDeadline] = useState(undefined);\n\n  useEffect(() => {\n\n      const init = async() => {\n\n        const web3 = await getWeb3();\n\n        const accounts = await web3.eth.getAccounts();\n\n        const abi = require('./TreasureBlox.abi.json');\n        // Set the provider\n        // web3.setProvider(new web3.providers.WebsocketProvider('ws://localhost:8545'));\n        // this.web3.setProvider(new this.web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/'));\n\n        // LOCAL\n        // const contract = new web3.eth.Contract(abi,\"localhost:8545\" && \"0x2f62f1C0abCCae1315aEfc616119e20955ECfdb7\");\n\n        // TestNet\n        const contract = new web3.eth.Contract(abi,\"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0x187fC4cb509976ccdd9CfC97EddE394d7eB9F269\");\n        // Sstart Data Calls\n        const decimals = await contract.methods.decimals().call().then(console.log('Yes'));\n\n        const totalTreasure = await contract.methods.balanceOf(\"0xe3bAD75D329c7C238C8DEbf6b0FDed1786C16Cf1\").call();\n\n\n        // const owner = await contract.methods._owner().call();\n        // const marketingWallet = await contract.methods.marketingWallet().call().then(console.log('marketing Wallet Complete'));\n        //\n        // const total_supply = await contract.methods.totalSupply().call();\n        // const treasure_chest = await contract.methods.treasureChest().call();\n\n\n\n// Loop Through Games\n\n\n        for (let i = 1; i < 2; i++) {\n\n          var obj = {\n            'game1' : 'game'+\"i\",\n            // 'game2' : 'game2'\n          }\n          var keys = Object.keys(obj);\n\n          var key = keys[i];\n\n          // Here you can use a string value as the property name\n          var game = obj[key];\n          console.log(game)\n\n// GET GAMES\n\n// var x = 2, y = 3;\n// eval(\"var x = 9; x\");               // prints 9\n// print(x);                                  // prints 9\n// print(eval(\"'use strict'; var x = 5; x\")); // prints 5\n// print(eval(\"'use strict'; var x = 7; x\")); // prints 7\n// print(eval(\"'use strict'; y\"));            // prints 3\n// print(x);                                  // prints 9\n\n        var game = await contract.methods.Games(i).call();\n\n\n        var game1_id = await game[0];\n        const game1_live = await game[1];\n        const game1_prize = await game[2];\n        const game1_question_hash = await game[3];\n        const game1_time_lock_cost= await game[4];\n        const game1_submit_secret_cost = await game[5];\n        const game1_riddle = await game[6];\n        const game1_clue = await game[7];\n        const game1_head_start_time = await game[8];\n        const game1_entry_limit = await game[9];\n        const game1_entry_cost = await game[10];\n\n        setWeb3(web3)\n        setAccounts(accounts[0])\n        setContract(contract)\n        setDecimals(decimals)\n        setTotalTreasure(totalTreasure)\n\n        setGame1_id(game1_id)\n        setGame1_live(game1_live)\n        setGame1_prize(game1_prize)\n        setGame1_question_hash(game1_question_hash)\n        setgame1_time_lock_cost(game1_time_lock_cost)\n        setGame1_submit_secret_cost(game1_submit_secret_cost)\n        setGame1_riddle(game1_riddle)\n        setGame1_clue(game1_clue)\n        setGame1_head_start_time(game1_head_start_time)\n        setGame1_entry_limit(game1_entry_limit)\n        setGame1_entry_cost(game1_entry_cost)\n\n}\n\n\n// This Handels the countdown time and collecting information every 1 second so the counter goes down\n        const timer = window.setInterval( async() => {\n            var moment = require('moment'); // require\n\n            // GET ALL GAME TIMELINES AND gamesTriess\n            const allGame1 = await contract.methods.allGames(1).call();\n            const allGame1_id = await allGame1[0];\n            const allGame1_user_front_of_que = await allGame1[1];\n            const allGame1_deadline_time =  await allGame1[2];\n            const allGame1_username = await allGame1[3];\n            const allGame1_total_game_tries = await allGame1[4];\n\n            const game1numberOfEntries = await contract.methods.numberOfEntries(1).call();\n\n            const game1huntEntries = await contract.methods.huntEntries(accounts[0],1).call();\n            const userGame1_id = await game1huntEntries[0];\n            const userEntered_game1 = await game1huntEntries[1];\n            const userGame1_headstart_time =  await game1huntEntries[2];\n            const userGame1_live = await game1huntEntries[3];\n\n\n            const pot1AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(1).call();\n            const winning_address = await pot1AnsweredCorrectly[0];\n            const treasure_found = await pot1AnsweredCorrectly[1];\n            const winning_prize =  await pot1AnsweredCorrectly[2];\n            const question_hash_solved = await pot1AnsweredCorrectly[3];\n            const winning_message = await pot1AnsweredCorrectly[4];\n\n            const getAllLatestGameAttempts = await contract.methods.getAllLatestGameAttempts(1).call();\n            const attemptId = await getAllLatestGameAttempts[0];\n            const attemptAddress = await getAllLatestGameAttempts[1];\n            const attemptDeadline =  await getAllLatestGameAttempts[2];\n            const attemptUsername = await getAllLatestGameAttempts[3];\n\n            console.log(\"winner trigger: \",treasure_found)\n\n            var currentStartDate = Date();\n            var startDate = new Date(currentStartDate);\n            // // Hours part from the timestamp\n            // var startDateHours = startDate.getHours();\n            // // Minutes part from the timestamp\n            // var startDateMinutes = startDate.getMinutes();\n            // // Seconds part from the timestamp\n            // var startDateSeconds = startDate.getSeconds();\n\n            // Do\n            var endDateGame1 = new Date(allGame1_deadline_time * 1000);\n            // // Hours part from the timestamp\n            // var endDateHours = endDate.getHours();\n            // // Minutes part from the timestamp\n            // var endDateMinutes = endDate.getMinutes();\n            // // Seconds part from the timestamp\n            // var endDateSeconds = endDate.getSeconds();\n\n            function getDifferenceInDays(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / (1000 * 60 * 60 * 24);\n              }\n\n            function getDifferenceInHours(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / (1000 * 60 * 60);\n              }\n\n            function getDifferenceInMinutes(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / (1000 * 60);\n              }\n\n            function getDifferenceInSeconds(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / 1000;\n              }\n            // console.log(getDifferenceInDays(endDate, startDate));\n            // console.log(getDifferenceInHours(endDate, startDate));\n            // console.log(getDifferenceInMinutes(endDate, startDate));\n\n            console.log(getDifferenceInSeconds(startDate, endDateGame1));\n\n            var timeGame1 = Math.abs(getDifferenceInSeconds(startDate, endDateGame1));\n\n            setTimeGame1(timeGame1)\n            setTimeGame1(prevTime => prevTime - 1); // <-- Change this line!\n\n            setallGame1_id(allGame1_id)\n            setallGame1_user_front_of_que(allGame1_user_front_of_que)\n            setallGame1_deadline(allGame1_deadline_time)\n            setallGame1_username(allGame1_username)\n            console.log(\"username past: \", allGame1_username)\n            setallGame1_total_game_tries(allGame1_total_game_tries)\n\n            if (endDateGame1-1 >= startDate){\n              setcountGame1DeadlineTrue(true);\n            } else {\n              setcountGame1DeadlineTrue(false);\n            }\n\n            setGame1numberOfEntries(game1numberOfEntries)\n\n            setUserGame1_id(userGame1_id)\n            setUserEntered_game1(userEntered_game1)\n            setUserGame1_headstart_time(userGame1_headstart_time)\n            setUserGame1_live(userGame1_live)\n\n            setWinning_address(winning_address)\n            setTreasure_found(treasure_found)\n            setWinning_prize(winning_prize)\n            setQuestion_hash_solved(question_hash_solved)\n            setWinning_message(winning_message)\n\n            setAttemptId(attemptId)\n            setAttemptAddress(attemptAddress)\n            setAttemptUsername(attemptUsername)\n            setAttemptDeadline(attemptDeadline)\n\n        }, 1000);\n        // End of Game timer code\n\n\n\n\n      }\n      init()\n\n    },[web3,accounts,contract,decimals,totalTreasure,\n      game1_id,game1_live,game1_prize,game1_question_hash,game1_time_lock_cost,game1_submit_secret_cost,game1_riddle,game1_clue,\n    allGame1_id,allGame1_user_front_of_que,allGame1_deadline_time,allGame1_username,allGame1_total_game_tries,countGame1,countGame1DeadlineTrue,\n  game1_head_start_time,game1_entry_limit,game1_entry_cost,game1numberOfEntries,userGame1_id,userEntered_game1,userGame1_headstart_time,userGame1_live,\n  winning_address,treasure_found,winning_prize,question_hash_solved,winning_message,attemptId,attemptUsername,attemptDeadline,attemptAddress])\n\n\n\n    return (\n\n        <div className=\"background customFont\">\n\n\n        <Router>\n        <MyNav accounts={accounts}/>\n\n\n// Pages\n\n        <Switch>\n                <Route path=\"/home\">\n\n                  <Home\n                  game1_id={game1_id}\n                  game1_live={game1_live}\n                  game1_prize={game1_prize}\n                  game1_question_hash={game1_question_hash}\n                  game1_time_lock_cost={game1_time_lock_cost}\n                  game1_submit_secret_cost={game1_submit_secret_cost}\n                  game1_riddle={game1_riddle}\n                  game1_clue={game1_clue}\n                  game1_head_start_time={game1_head_start_time}\n                  game1_entry_limit={game1_entry_limit}\n                  game1_entry_cost={game1_entry_cost}\n                  allGame1_id={allGame1_id}\n                  allGasme1_user_front_of_que={allGame1_user_front_of_que}\n                  allGame1_deadline_time={allGame1_deadline_time}\n                  allGame1_username={allGame1_username}\n                  allGame1_total_game_tries={allGame1_total_game_tries}\n                  countGame1={countGame1}\n                  countGame1DeadlineTrue={countGame1DeadlineTrue}\n                  totalTreasure={totalTreasure}\n                  game1numberOfEntries={game1numberOfEntries}/>\n\n\n\n                </Route>\n\n              <Route path=\"/hunt1\">\n\n                <Hunt1\n                web3={web3}\n                game1_id={game1_id}\n                game1_live={game1_live}\n                game1_prize={game1_prize}\n                game1_question_hash={game1_question_hash}\n                game1_time_lock_cost={game1_time_lock_cost}\n                game1_submit_secret_cost={game1_submit_secret_cost}\n                game1_riddle={game1_riddle}\n                game1_clue={game1_clue}\n                game1_head_start_time={game1_head_start_time}\n                game1_entry_limit={game1_entry_limit}\n                game1_entry_cost={game1_entry_cost}\n                allGame1_id={allGame1_id}\n                allGasme1_user_front_of_que={allGame1_user_front_of_que}\n                allGame1_deadline_time={allGame1_deadline_time}\n                allGame1_username={allGame1_username}\n                allGame1_total_game_tries={allGame1_total_game_tries}\n                countGame1={countGame1}\n                countGame1DeadlineTrue={countGame1DeadlineTrue}\n                decimals={decimals}\n                totalTreasure={totalTreasure}\n                contract={contract}\n                accounts={accounts}\n                game1numberOfEntries={game1numberOfEntries}\n                userGame1_id={userGame1_id}\n                userEntered_game1={userEntered_game1}\n                userGame1_headstart_time={userGame1_headstart_time}\n                userGame1_live={userGame1_live}\n                winning_address={winning_address}\n                treasure_found={treasure_found}\n                winning_prize={winning_prize}\n                question_hash_solved={question_hash_solved}\n                winning_message={winning_message}\n                attemptId={attemptId}\n                attemptAddress={attemptAddress}\n                attemptUsername={attemptUsername}\n                attemptDeadline={attemptDeadline}\n\n                />\n\n              </Route>\n\n              <Route path=\"/hunt2\">\n\n                <SingleCard decimals={decimals} totalTreasure={totalTreasure}/>\n\n                <Cards\n                game1_id={game1_id}\n                game1_live={game1_live}\n                game1_prize={game1_prize}\n                game1_question_hash={game1_question_hash}\n                game1_time_lock_cost={game1_time_lock_cost}\n                game1_submit_secret_cost={game1_submit_secret_cost}\n                game1_riddle={game1_riddle}\n                game1_clue={game1_clue}\n                game1_head_start_time={game1_head_start_time}\n                game1_entry_limit={game1_entry_limit}\n                game1_entry_cost={game1_entry_cost}\n                allGame1_id={allGame1_id}\n                allGasme1_user_front_of_que={allGame1_user_front_of_que}\n                allGame1_deadline_time={allGame1_deadline_time}\n                allGame1_username={allGame1_username}\n                allGame1_total_game_tries={allGame1_total_game_tries}\n                countGame1={countGame1}\n                countGame1DeadlineTrue={countGame1DeadlineTrue}\n                game1numberOfEntries={game1numberOfEntries}/>\n\n              </Route>\n\n        </Switch>\n\n        <Redirect to=\"/home\" />\n</Router>\n\n\n      </div>\n    );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}