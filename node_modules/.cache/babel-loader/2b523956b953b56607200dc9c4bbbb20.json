{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/TreasureHuntDAPP_React/treasure-blox/src/components/Structure/EnterHuntCards.js\";\nimport React from 'react';\nimport Timer from './Timer';\nimport img1 from './images/elons-rocket.jpg';\nimport img2 from './images/fortblox.png';\nimport img3 from './images/elons_lost_his_rocket.png';\nimport img4 from './images/elons_lost_his_rocket.png';\nimport { Tooltip, OverlayTrigger, Form, ButtonGroup, ButtonToolbar, CardColumns, CardGroup, Card, Button, Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './EnterHuntCards.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EnterHuntCards = props => {\n  const commaNumber = require('comma-number');\n\n  const game1_id = props.game1_id;\n  const game1_live = props.game1_live;\n  const game1_prize = commaNumber(props.game1_prize, ',');\n  const game1_question_hash = props.game1_question_hash;\n  const game1_time_lock_cost = props.game1_time_lock_cost;\n  const game1_submit_secret_cost = props.game1_submit_secret_cost;\n  const game1_clue = props.game1_clue;\n  const game1_head_start_time = props.game1_head_start_time;\n  const game1_entry_limit = props.game1_entry_limit;\n  const game1_entry_cost = props.game1_entry_cost;\n  const allGame1_deadline_time = props.allGame1_deadline_time;\n  console.log(\"enter card.js: \", props.attemptAddress); // console.log(game1_id)s\n\n  const renderTooltip = props => /*#__PURE__*/_jsxDEV(Tooltip, {\n    id: \"button-tooltip\",\n    ...props,\n    children: \"Once you have purchased your Blox they buy you 90 seconds to enter your answer, no one else can answer in this time. The aim is to stop bots from beating you to it!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"cardRounded border border-danger\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"customBodyThree\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          className: \"enterGameTitle\",\n          children: \"Elon's Wife lost his Rocket?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {\n          web3: props.web3,\n          game1_id: props.game1_id,\n          game1_live: props.game1_live,\n          game1_prize: props.game1_prize,\n          game1_question_hash: props.game1_question_hash,\n          game1_time_lock_cost: props.game1_time_lock_cost,\n          game1_submit_secret_cost: props.game1_submit_secret_cost,\n          game1_riddle: props.game1_riddle,\n          game1_clue: props.game1_clue,\n          game1_head_start_time: props.game1_head_start_time,\n          game1_entry_limit: props.game1_entry_limit,\n          game1_entry_cost: props.game1_entry_cost,\n          allGame1_deadline_time: props.allGame1_deadline_time,\n          allGame1_username: props.allGame1_username,\n          allGame1_total_game_tries: props.allGame1_total_game_tries,\n          allGame1_id: props.allGame1_id,\n          allGasme1_user_front_of_que: props.allGame1_user_front_of_que,\n          allGame1_deadline_time: props.allGame1_deadline_time,\n          allGame1_username: props.allGame1_username,\n          allGame1_total_game_tries: props.allGame1_total_game_tries,\n          countGame1: props.countGame1,\n          countGame1DeadlineTrue: props.countGame1DeadlineTrue,\n          decimals: props.decimals,\n          totalTreasure: props.totalTreasure,\n          contract: props.contract,\n          accounts: props.accounts,\n          game1numberOfEntries: props.game1numberOfEntries,\n          userGame1_id: props.userGame1_id,\n          userEntered_game1: props.userEntered_game1,\n          userGame1_headstart_time: props.userGame1_headstart_time,\n          userGame1_live: props.userGame1_live,\n          winning_address: props.winning_address,\n          treasure_found: props.treasure_found,\n          winning_prize: props.winning_prize,\n          question_hash_solved: props.question_hash_solved,\n          winning_message: props.winning_message,\n          attemptId: props.attemptId,\n          attemptUsername: props.attemptUsername,\n          attemptDeadline: props.attemptDeadline,\n          attemptAddress: props.attemptAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: \"blockquote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EnterHuntCards;\nexport default EnterHuntCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnterHuntCards\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/TreasureHuntDAPP_React/treasure-blox/src/components/Structure/EnterHuntCards.js"],"names":["React","Timer","img1","img2","img3","img4","Tooltip","OverlayTrigger","Form","ButtonGroup","ButtonToolbar","CardColumns","CardGroup","Card","Button","Container","Nav","Navbar","NavDropdown","BrowserRouter","Router","Switch","Route","Link","EnterHuntCards","props","commaNumber","require","game1_id","game1_live","game1_prize","game1_question_hash","game1_time_lock_cost","game1_submit_secret_cost","game1_clue","game1_head_start_time","game1_entry_limit","game1_entry_cost","allGame1_deadline_time","console","log","attemptAddress","renderTooltip","web3","game1_riddle","allGame1_username","allGame1_total_game_tries","allGame1_id","allGame1_user_front_of_que","countGame1","countGame1DeadlineTrue","decimals","totalTreasure","contract","accounts","game1numberOfEntries","userGame1_id","userEntered_game1","userGame1_headstart_time","userGame1_live","winning_address","treasure_found","winning_prize","question_hash_solved","winning_message","attemptId","attemptUsername","attemptDeadline"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Timer from './Timer';\n\nimport img1 from './images/elons-rocket.jpg';\nimport img2 from './images/fortblox.png';\nimport img3 from './images/elons_lost_his_rocket.png';\nimport img4 from './images/elons_lost_his_rocket.png';\n\n\n\nimport {Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './EnterHuntCards.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst EnterHuntCards = (props) => {\n\n  const commaNumber = require('comma-number')\n\n\n  const game1_id = props.game1_id;\n  const game1_live = props.game1_live;\n  const game1_prize = commaNumber(props.game1_prize,',');\n  const game1_question_hash = props.game1_question_hash;\n  const game1_time_lock_cost = props.game1_time_lock_cost;\n  const game1_submit_secret_cost = props.game1_submit_secret_cost;\n  const game1_clue = props.game1_clue;\n  const game1_head_start_time = props.game1_head_start_time;\n  const game1_entry_limit = props.game1_entry_limit;\n  const game1_entry_cost = props.game1_entry_cost;\n\n\n  const allGame1_deadline_time = props.allGame1_deadline_time;\n\nconsole.log(\"enter card.js: \",props.attemptAddress)\n\n  // console.log(game1_id)s\n\n  const renderTooltip = (props) => (\n\n\n  <Tooltip id=\"button-tooltip\" {...props}>\n    Once you have purchased your Blox they buy you 90 seconds to enter your answer, no one else can answer in this time. The aim is to stop bots from beating you to it!\n  </Tooltip>\n);\n\n\n\n  return(\n\n\n\n    <div>\n          <Card className='cardRounded border border-danger'>\n            <Card.Body className=\"customBodyThree\">\n              <Card.Header className=\"enterGameTitle\">Elon's Wife lost his Rocket?</Card.Header>\n\n              <Timer\n              web3={props.web3}\n              game1_id={props.game1_id}\n              game1_live={props.game1_live}\n              game1_prize={props.game1_prize}\n              game1_question_hash={props.game1_question_hash}\n              game1_time_lock_cost={props.game1_time_lock_cost}\n              game1_submit_secret_cost={props.game1_submit_secret_cost}\n              game1_riddle={props.game1_riddle}\n              game1_clue={props.game1_clue}\n              game1_head_start_time={props.game1_head_start_time}\n              game1_entry_limit={props.game1_entry_limit}\n              game1_entry_cost={props.game1_entry_cost}\n              allGame1_deadline_time={props.allGame1_deadline_time}\n              allGame1_username={props.allGame1_username}\n              allGame1_total_game_tries={props.allGame1_total_game_tries}\n              allGame1_id={props.allGame1_id}\n              allGasme1_user_front_of_que={props.allGame1_user_front_of_que}\n              allGame1_deadline_time={props.allGame1_deadline_time}\n              allGame1_username={props.allGame1_username}\n              allGame1_total_game_tries={props.allGame1_total_game_tries}\n              countGame1={props.countGame1}\n              countGame1DeadlineTrue={props.countGame1DeadlineTrue}\n              decimals={props.decimals}\n              totalTreasure={props.totalTreasure}\n              contract={props.contract}\n              accounts={props.accounts}\n              game1numberOfEntries={props.game1numberOfEntries}\n              userGame1_id={props.userGame1_id}\n              userEntered_game1={props.userEntered_game1}\n              userGame1_headstart_time={props.userGame1_headstart_time}\n              userGame1_live={props.userGame1_live}\n              winning_address={props.winning_address}\n              treasure_found={props.treasure_found}\n              winning_prize={props.winning_prize}\n              question_hash_solved={props.question_hash_solved}\n              winning_message={props.winning_message}\n              attemptId={props.attemptId}\n              attemptUsername={props.attemptUsername}\n              attemptDeadline={props.attemptDeadline}\n              attemptAddress={props.attemptAddress}\n              />\n\n              <footer className=\"blockquote\">\n              </footer>\n\n              <br />\n\n\n            </Card.Body>\n          </Card>\n\n    </div>\n\n\n\n  );\n\n\n};\n\nexport default EnterHuntCards;\n"]},"metadata":{},"sourceType":"module"}