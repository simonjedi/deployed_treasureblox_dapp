{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/PartnershipExample/GamesSelection/FighterPilot/FighterScreen.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useRef, useEffect, useCallback } from \"react\"; // import Bird from './components/Bird'\n// import Obstacles from './components/Obstacles'\n\nimport { Button, Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport useSound from 'use-sound'; //\n// import lazer from './assets/Lazer.wav';\n// import ohno from './assets/troy_oh_no.mp4';\n\nimport './style.css';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport ReactAudioPlayer from 'react-audio-player'; // Hook\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useWindowSize() {\n  _s();\n\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    } // Add event listener\n\n\n    window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n_s(useWindowSize, \"WMqaMVAPr0u8CJVTsAIdEuYrbbM=\");\n\nconst FighterScreen = props => {\n  _s2();\n\n  const {\n    width,\n    height\n  } = useWindowSize();\n  const canvas = document.getElementById(\"canvas\");\n  const ctx = canvas.getContext(\"2d\"); // Global Varabales\n\n  let controlPlayer = false;\n  let hasGameStarted = false;\n\n  function drawBoarder() {\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.clearRect(50, 50, 500, 500);\n  } // Render rectangles to canvas\n\n\n  function drawRect() {\n    // Draw player rect first\n    ctx.fillStyle = \"#901234\";\n    ctx.fillRect(playerRect.x, playerRect.y, playerRect.width, playerRect.height);\n    rectangles.forEach(rect => {\n      ctx.fillStyle = rect.color;\n      ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n    });\n  }\n\n  useEffect(() => {\n    // Prevent game from working whilst page reloads\n    let hasGameOver = false;\n    let startDate = null;\n\n    function millisecondsToMiutes(millis) {\n      let minutes = Math.floor(millis / 60000);\n      let seconds = Math.floor(millis % 60000 / 1000);\n      return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n    }\n\n    function gameOver() {\n      if (!hasGameOver) {\n        let endDate = new Date();\n        let timeDiff = endDate - startDate;\n\n        if (timeDiff < 60000) {\n          alert('You survived ' + timeDiff / 1000 + \" seconds!\");\n        } else {\n          let minutesSurvived = millisecondsToMiutes(timeDiff);\n          alert('You survived ${minutesSurvived} WOW!');\n        }\n\n        hasGameOver = true;\n      }\n    } // Canvas black boarder\n\n\n    let playerRect = {\n      x: 275,\n      y: 275,\n      width: 50,\n      height: 50\n    }; // Game Elements\n\n    let rectangles = [{\n      x: 75,\n      y: 75,\n      dx: 5,\n      dy: 4,\n      width: 75,\n      height: 75,\n      color: \"#000099\"\n    }, {\n      x: 400,\n      y: 75,\n      dx: -5,\n      dy: 5.5,\n      width: 80,\n      height: 60,\n      color: \"#000099\"\n    }, {\n      x: 75,\n      y: 445,\n      dx: 5,\n      dy: -5,\n      width: 40,\n      height: 80,\n      color: \"#000099\"\n    }, {\n      x: 420,\n      y: 450,\n      dx: -5,\n      dy: -5,\n      width: 130,\n      height: 25,\n      color: \"#000099\"\n    }]; // collision\n\n    function playerCollisionDetection() {\n      if (playerRect.x + playerRect.width > 550 || playerRect.x < 50 || playerRect.y + playerRect.height > 550 || playerRect.y < 50) {\n        gameOver();\n      }\n    }\n\n    function isRectangleCollision(rect1, rect2) {\n      return !(rect1.x > rect2.x + rect2.width || rect1.x + rect1.width < rect2.x || rect1.y > rect2.y + rect2.height || rect1.y + rect1.height < rect2.y);\n    }\n\n    function rectangleCollisionDetection() {\n      rectangles.forEach(rect => {\n        if (isRectangleCollision(playerRect, rect)) {\n          gameOver();\n        }\n      });\n    }\n\n    function moveRectangle() {\n      rectangles.forEach(rect => {\n        rect.x += rect.dx;\n        rect.y += rect.dy;\n      });\n    }\n\n    function boarderRectangleDetection() {\n      rectangles.forEach(rect => {\n        if (rect.x + rect.width > canvas.width || rect.x < 0) {\n          rect.dx *= -1;\n        }\n\n        if (rect.y + rect.height > canvas.height || rect.y < 0) {\n          rect.dy *= -1;\n        }\n      });\n    }\n\n    let numberOfSpeed = 0;\n\n    function configureRectSpeed() {\n      const speedUpGame = setInterval(() => {\n        numberOfSpeed++;\n        rectangles.forEach(rect => {\n          rect.dx >= 0 ? rect.dx += 1 : rect.dx -= 1;\n          rect.dy >= 0 ? rect.dy += 1 : rect.dy -= 1;\n        });\n\n        if (numberOfSpeed === 4) {\n          clearInterval(speedUpGame);\n        }\n      }, 10000);\n    } // Returns true if collision\n\n\n    function isCursorInRect(x, y, rect) {\n      return x > rect.x && x < rect.x + rect.width && y > rect.y && y < rect.y + rect.height;\n    }\n\n    canvas.addEventListener('mousedown', e => {\n      // get x & y coordinates in relation to the canvas\n      var pos = {\n        x: e.clientX - canvas.offsetLeft,\n        y: e.clientY - canvas.offsetTop\n      }; // See if they clicked on red square\n\n      if (isCursorInRect(pos.x, pos.y, playerRect)) {\n        //\n        if (!hasGameStarted) {\n          startDate = new Date();\n          configureRectSpeed();\n        }\n\n        hasGameStarted = true;\n        controlPlayer = true;\n      }\n    });\n    canvas.addEventListener(\"mousemove\", e => {\n      if (controlPlayer && !hasGameOver) {\n        // get x & y coordinates in relation to the canvas\n        var pos = {\n          x: e.clientX - canvas.offsetLeft,\n          y: e.clientY - canvas.offsetTop\n        };\n        playerRect.x = pos.x - 25;\n        playerRect.y = pos.y - 25;\n      }\n    });\n    canvas.addEventListener(\"mouseup\", () => {\n      controlPlayer = false;\n    });\n  }, [canvas, update, ctx, hasGameStarted, hasGameStarted]);\n\n  function update() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    drawBoarder();\n    drawRect();\n\n    if (hasGameStarted) {\n      moveRectangle();\n    }\n\n    playerCollisionDetection();\n    rectangleCollisionDetection();\n    boarderRectangleDetection();\n    requestAnimationFrame(update);\n  } // call update methord on initial document load\n\n\n  update();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: [\"Fighter Pilot\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        width: \"600\",\n        height: \"600\",\n        id: \"canvas\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(FighterScreen, \"bNiY6OdSHlT+REaiGeQKnvg2CD0=\", false, function () {\n  return [useWindowSize];\n});\n\n_c = FighterScreen;\nexport default FighterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FighterScreen\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/PartnershipExample/GamesSelection/FighterPilot/FighterScreen.js"],"names":["useState","useRef","useEffect","useCallback","Button","Container","Nav","Navbar","NavDropdown","useSound","BrowserRouter","Router","Switch","Route","Link","Redirect","ReactAudioPlayer","useWindowSize","windowSize","setWindowSize","width","undefined","height","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","FighterScreen","props","canvas","document","getElementById","ctx","getContext","controlPlayer","hasGameStarted","drawBoarder","fillStyle","fillRect","clearRect","drawRect","playerRect","x","y","rectangles","forEach","rect","color","hasGameOver","startDate","millisecondsToMiutes","millis","minutes","Math","floor","seconds","gameOver","endDate","Date","timeDiff","alert","minutesSurvived","dx","dy","playerCollisionDetection","isRectangleCollision","rect1","rect2","rectangleCollisionDetection","moveRectangle","boarderRectangleDetection","numberOfSpeed","configureRectSpeed","speedUpGame","setInterval","clearInterval","isCursorInRect","e","pos","clientX","offsetLeft","clientY","offsetTop","update","requestAnimationFrame"],"mappings":"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","sourcesContent":["\nimport { useState, useRef, useEffect, useCallback } from \"react\";\n\n// import Bird from './components/Bird'\n// import Obstacles from './components/Obstacles'\nimport { Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport useSound from 'use-sound';\n//\n// import lazer from './assets/Lazer.wav';\n// import ohno from './assets/troy_oh_no.mp4';\nimport './style.css';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport ReactAudioPlayer from 'react-audio-player';\n\n\n// Hook\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n\n\n\nconst FighterScreen = (props) =>{\n\n  const { width, height } = useWindowSize();\n\n  const canvas = document.getElementById(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  // Global Varabales\n\n  let controlPlayer = false;\n  let hasGameStarted = false;\n\n  function drawBoarder(){\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0,0,canvas.width,canvas.height);\n    ctx.clearRect(50,50,500,500);\n  }\n\n\n  // Render rectangles to canvas\n\n  function drawRect(){\n    // Draw player rect first\n    ctx.fillStyle = \"#901234\";\n    ctx.fillRect(playerRect.x,playerRect.y,playerRect.width,playerRect.height);\n\n    rectangles.forEach(rect => {\n      ctx.fillStyle = rect.color;\n      ctx.fillRect(rect.x,rect.y,rect.width,rect.height);\n    });\n\n  }\n\n\n\n\n\n\n  useEffect(() => {\n\n\n\n\n\n\n\n      // Prevent game from working whilst page reloads\n      let hasGameOver = false;\n      let startDate = null;\n\n      function millisecondsToMiutes(millis){\n        let minutes = Math.floor(millis/60000);\n        let seconds = Math.floor((millis % 60000)/1000);\n        return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n\n      }\n\n      function gameOver(){\n        if(!hasGameOver){\n          let endDate = new Date();\n          let timeDiff = endDate - startDate;\n          if (timeDiff < 60000){\n            alert('You survived '+ timeDiff/1000 +\" seconds!\");\n          }else{\n            let minutesSurvived = millisecondsToMiutes(timeDiff);\n            alert('You survived ${minutesSurvived} WOW!');\n\n          }\n\n          hasGameOver = true;\n        }\n      }\n\n\n      // Canvas black boarder\n\n\n\n      let playerRect = {\n        x:275,\n        y:275,\n        width:50,\n        height:50,\n      }\n\n      // Game Elements\n      let rectangles = [\n        {\n          x:75,\n          y:75,\n          dx:5,\n          dy:4,\n          width:75,\n          height:75,\n          color:\"#000099\",\n        },\n        {\n          x:400,\n          y:75,\n          dx:-5,\n          dy:5.5,\n          width:80,\n          height:60,\n          color:\"#000099\",\n        },\n        {\n          x:75,\n          y:445,\n          dx:5,\n          dy:-5,\n          width:40,\n          height:80,\n          color:\"#000099\",\n        },\n        {\n          x:420,\n          y:450,\n          dx:-5,\n          dy:-5,\n          width:130,\n          height:25,\n          color:\"#000099\",\n        },\n      ]\n\n\n\n      // collision\n      function playerCollisionDetection(){\n        if(playerRect.x + playerRect.width > 550 || playerRect.x < 50 || playerRect.y + playerRect.height > 550 || playerRect.y < 50\n        ){\n          gameOver();\n        }\n      }\n\n      function isRectangleCollision(rect1,rect2){\n        return !(\n          rect1.x > rect2.x + rect2.width || rect1.x + rect1.width < rect2.x || rect1.y > rect2.y + rect2.height || rect1.y + rect1.height < rect2.y\n        );\n      }\n\n      function rectangleCollisionDetection(){\n        rectangles.forEach(rect =>{\n          if(isRectangleCollision(playerRect,rect)){\n            gameOver();\n          }\n        })\n      }\n\n      function moveRectangle(){\n        rectangles.forEach(rect => {\n          rect.x += rect.dx;\n          rect.y += rect.dy;\n        })\n      }\n\n      function boarderRectangleDetection(){\n        rectangles.forEach(rect=>{\n          if(rect.x + rect.width > canvas.width || rect.x < 0){\n            rect.dx *= -1;\n          }\n          if(rect.y + rect.height > canvas.height || rect.y < 0){\n            rect.dy *= -1;\n          }\n        })\n      }\n\n      let numberOfSpeed = 0;\n\n      function configureRectSpeed(){\n        const speedUpGame = setInterval(()=>{\n          numberOfSpeed++;\n          rectangles.forEach(rect =>{\n            rect.dx >= 0 ? rect.dx += 1 : rect.dx -= 1;\n            rect.dy >= 0 ? rect.dy += 1 : rect.dy -= 1;\n\n          });\n          if(numberOfSpeed === 4){\n            clearInterval(speedUpGame);\n          }\n        },10000)\n      }\n\n\n\n\n      // Returns true if collision\n      function isCursorInRect(x,y,rect){\n        return(x > rect.x && x < rect.x+rect.width && y > rect.y && y < rect.y+rect.height);\n      }\n\n      canvas.addEventListener('mousedown', e => {\n\n        // get x & y coordinates in relation to the canvas\n        var pos = {\n          x: e.clientX - canvas.offsetLeft,\n          y: e.clientY - canvas.offsetTop,\n        };\n\n        // See if they clicked on red square\n        if (isCursorInRect(pos.x,pos.y,playerRect)){\n          //\n          if(!hasGameStarted){\n            startDate = new Date();\n            configureRectSpeed();\n          }\n          hasGameStarted = true;\n          controlPlayer = true;\n        }\n\n      });\n\n\n      canvas.addEventListener(\"mousemove\", e => {\n\n        if(controlPlayer && !hasGameOver){\n          // get x & y coordinates in relation to the canvas\n          var pos = {\n            x: e.clientX - canvas.offsetLeft,\n            y: e.clientY - canvas.offsetTop,\n          };\n          playerRect.x = pos.x - 25;\n          playerRect.y = pos.y - 25;\n        }\n\n      })\n\n\n\n      canvas.addEventListener(\"mouseup\", () =>{\n        controlPlayer = false;\n      })\n\n\n\n\n    }, [canvas,update,ctx,hasGameStarted,hasGameStarted]);\n\n\n    function update(){\n      ctx.clearRect(0,0,canvas.width,canvas.height);\n\n      drawBoarder();\n      drawRect();\n\n      if (hasGameStarted){\n        moveRectangle();\n      }\n\n      playerCollisionDetection();\n      rectangleCollisionDetection();\n      boarderRectangleDetection();\n      requestAnimationFrame(update);\n    }\n\n    // call update methord on initial document load\n    update();\n\n\n\n  return (\n    <div>\n\n<center>\nFighter Pilot<br/>\n<canvas width=\"600\" height=\"600\" id=\"canvas\"> </canvas>\n\n</center>\n<br/>\n    </div>\n  );\n}\n\nexport default FighterScreen;\n"]},"metadata":{},"sourceType":"module"}