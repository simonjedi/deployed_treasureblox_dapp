{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/treasure-blox/src/components/Structure/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Countdown from 'react-countdown';\nimport moment from 'moment';\nimport { CardColumns, CardGroup, Card, Button, Container, Nav, Navbar, NavDropdown, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = props => {\n  _s();\n\n  var moment = require('moment'); // require\n  // Timer\n  // const currentTimestamp = Math.floor(Date.now()/1000);\n  // const currentTimestamp = Math.floor();\n  // console.log(currentTimestamp); // get current timestamp\n  // let date = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(currentTimestamp)\n  // console.log(currentTimestamp);\n  // let time = props.allGame1_deadline_time - currentTimestamp\n  // console.log(currentTimestamp);\n  // const time1 = currentTimestamp + 10;\n  //   function secondsSinceEpoch() {\n  //     return new Date/1000 | 0;\n  // }\n  // const set = new theTime - secondsSinceEpoch();\n  // console.log(secondsSinceEpoch(allGame1_deadline_time));\n  // var diff = moment.unix(Date/1000 | 0).from(props.allGame1_deadline_time);\n  // const time2 = 10;\n  // const time3 = 69;\n  // console.log(game1_clue)\n  // props.allGame1_deadline_time\n  // console.log(\"Deadline:\", mytime)\n  // var diff = moment.unix(props.allGame1_deadline_time).from(Date/1000 | 0);\n  // console.log(secondsSinceEpoch(diff));\n  // var eventTime = props.allGame1_deadline_time;\n  //\n  // var currentTime = Date.now();\n  //\n  // var diffTime = eventTime-currentTime;\n  // .text(duration.hours()+\":\"+duration.minutes()+\":\"+duration.seconds())\n  // console.log(props.allGame1_deadline_time);\n  // function findDayDifference(date1, date2) {\n  // \t// always round down\n  //   return Math.floor((Math.abs(date2-date1))/(1000*60*60*24*60*60));\n  // }\n  // console.log(findDayDifference(props.allGame1_deadline_time,Date.now()))\n  // console.log(diffTime);\n  //   const currentStartDate = Date();\n  //   var startDate = new Date(currentStartDate);\n  //\n  //   // Hours part from the timestamp\n  //     var startDateHours = startDate.getHours();\n  //     // Minutes part from the timestamp\n  //     var startDateMinutes = startDate.getMinutes();\n  //     // Seconds part from the timestamp\n  //     var startDateSeconds = startDate.getSeconds();\n  //\n  //   // Do\n  //   var endDate = new Date(props.allGame1_deadline_time * 1000);\n  // // Hours part from the timestamp\n  //   var endDateHours = endDate.getHours();\n  //   // Minutes part from the timestamp\n  //   var endDateMinutes = endDate.getMinutes();\n  //   // Seconds part from the timestamp\n  //   var endDateSeconds = endDate.getSeconds();\n  //\n  //   console.log(\"Date Now\",startDate);\n  //   console.log(\"Date Now Seconds\",startDateSeconds);\n  //   console.log(\"Blockchain\", endDate);\n  //\n  //   let deadline = (endDateSeconds - startDateSeconds);\n  //   console.log(\"Subtracting Seconds\", deadline);\n  //   //\n  //   //\n  //   // const date1 = new Date('7/13/2010');\n  //   // const date2 = new Date('12/15/2010');\n  //\n  //   console.log(getDifferenceInDays(endDate, startDate));\n  //   console.log(getDifferenceInHours(endDate, startDate));\n  //   console.log(getDifferenceInMinutes(endDate, startDate));\n  //   console.log(getDifferenceInSeconds(endDate, startDate));\n  //\n  //   var endDateHours = endDate.getHours(getDifferenceInHours(endDate, startDate));\n  //   var endDateMinutes = endDate.getMinutes(getDifferenceInMinutes(endDate, startDate));\n  //   var endDateSeconds = endDate.getSeconds(getDifferenceInSeconds(endDate, startDate));\n  //\n  //   console.log(endDateHours);\n  //   console.log(endDateMinutes);\n  //   console.log(endDateSeconds);\n  //\n  //\n  //   // Minutes part from the timestamp\n  //   var endDateMinutes = endDate.getMinutes();\n  //   // Seconds part from the timestamp\n  //   var endDateSeconds = endDate.getSeconds();\n  //\n  //\n  //   function getDifferenceInDays(date1, date2) {\n  //     const diffInMs = Math.abs(date2 - date1);\n  //     return diffInMs / (1000 * 60 * 60 * 24);\n  //     }\n  //\n  //   function getDifferenceInHours(date1, date2) {\n  //     const diffInMs = Math.abs(date2 - date1);\n  //     return diffInMs / (1000 * 60 * 60);\n  //     }\n  //\n  //   function getDifferenceInMinutes(date1, date2) {\n  //     const diffInMs = Math.abs(date2 - date1);\n  //     return diffInMs / (1000 * 60);\n  //     }\n  //\n  //   function getDifferenceInSeconds(date1, date2) {\n  //     const diffInMs = Math.abs(date2 - date1);\n  //     return diffInMs / 1000;\n  //     }\n\n\n  const [count, setTime] = useState(40);\n  const [enddate, setEnddate] = useState(40);\n  useEffect(() => {\n    const timer = window.setInterval(() => {\n      const currentStartDate = Date();\n      var startDate = new Date(currentStartDate); // Hours part from the timestamp\n\n      var startDateHours = startDate.getHours(); // Minutes part from the timestamp\n\n      var startDateMinutes = startDate.getMinutes(); // Seconds part from the timestamp\n\n      var startDateSeconds = startDate.getSeconds(); // Do\n\n      var endDate = new Date(props.allGame1_deadline_time * 1000); // Hours part from the timestamp\n\n      var endDateHours = endDate.getHours(); // Minutes part from the timestamp\n\n      var endDateMinutes = endDate.getMinutes(); // Seconds part from the timestamp\n\n      var endDateSeconds = endDate.getSeconds();\n      console.log(\"Date Now\", startDate);\n      console.log(\"Date Now Seconds\", startDateSeconds);\n      console.log(\"Blockchain\", endDate);\n      let deadline = endDateSeconds - startDateSeconds;\n      console.log(\"Subtracting Seconds\", deadline); //\n      //\n      // const date1 = new Date('7/13/2010');\n      // const date2 = new Date('12/15/2010');\n\n      console.log(getDifferenceInDays(endDate, startDate));\n      console.log(getDifferenceInHours(endDate, startDate));\n      console.log(getDifferenceInMinutes(endDate, startDate));\n      console.log(getDifferenceInSeconds(endDate, startDate));\n      var endDateHours = endDate.getHours(getDifferenceInHours(endDate, startDate));\n      var endDateMinutes = endDate.getMinutes(getDifferenceInMinutes(endDate, startDate));\n      var endDateSeconds = endDate.getSeconds(getDifferenceInSeconds(endDate, startDate));\n      console.log(endDateHours);\n      console.log(endDateMinutes);\n      console.log(endDateSeconds); // Minutes part from the timestamp\n\n      var endDateMinutes = endDate.getMinutes(); // Seconds part from the timestamp\n\n      var endDateSeconds = endDate.getSeconds();\n\n      function getDifferenceInDays(date1, date2) {\n        const diffInMs = Math.abs(date2 - date1);\n        return diffInMs / (1000 * 60 * 60 * 24);\n      }\n\n      function getDifferenceInHours(date1, date2) {\n        const diffInMs = Math.abs(date2 - date1);\n        return diffInMs / (1000 * 60 * 60);\n      }\n\n      function getDifferenceInMinutes(date1, date2) {\n        const diffInMs = Math.abs(date2 - date1);\n        return diffInMs / (1000 * 60);\n      }\n\n      function getDifferenceInSeconds(date1, date2) {\n        const diffInMs = Math.abs(date2 - date1);\n        return diffInMs / 1000;\n      }\n\n      setEnddate(endDateSeconds);\n      setTime(prevTime => prevTime - 1); // <-- Change this line!\n    }, 1000);\n    return () => {\n      window.clearInterval(timer);\n    };\n    console.log('test');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attemptPrize\",\n      children: [\"This time slot will expire in \", enddate, \" seconds!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"uuGJaVwBb7p0XKjkznjpxm+KvWI=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/treasure-blox/src/components/Structure/Timer.js"],"names":["React","Component","useState","useEffect","ReactDOM","Countdown","moment","CardColumns","CardGroup","Card","Button","Container","Nav","Navbar","NavDropdown","Row","Col","Timer","props","require","count","setTime","enddate","setEnddate","timer","window","setInterval","currentStartDate","Date","startDate","startDateHours","getHours","startDateMinutes","getMinutes","startDateSeconds","getSeconds","endDate","allGame1_deadline_time","endDateHours","endDateMinutes","endDateSeconds","console","log","deadline","getDifferenceInDays","getDifferenceInHours","getDifferenceInMinutes","getDifferenceInSeconds","date1","date2","diffInMs","Math","abs","prevTime","clearInterval"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\nimport Countdown from 'react-countdown';\nimport moment from 'moment';\n\n\nimport { CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown,Row,Col } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Card.css';\n\nconst Timer = (props) => {\n  var moment = require('moment'); // require\n\n  // Timer\n  // const currentTimestamp = Math.floor(Date.now()/1000);\n  // const currentTimestamp = Math.floor();\n\n  // console.log(currentTimestamp); // get current timestamp\n    // let date = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(currentTimestamp)\n\n  // console.log(currentTimestamp);\n  // let time = props.allGame1_deadline_time - currentTimestamp\n  // console.log(currentTimestamp);\n  // const time1 = currentTimestamp + 10;\n\n\n//   function secondsSinceEpoch() {\n//     return new Date/1000 | 0;\n// }\n// const set = new theTime - secondsSinceEpoch();\n// console.log(secondsSinceEpoch(allGame1_deadline_time));\n\n\n// var diff = moment.unix(Date/1000 | 0).from(props.allGame1_deadline_time);\n\n\n  // const time2 = 10;\n  // const time3 = 69;\n\n  // console.log(game1_clue)\n\n// props.allGame1_deadline_time\n\n  // console.log(\"Deadline:\", mytime)\n  // var diff = moment.unix(props.allGame1_deadline_time).from(Date/1000 | 0);\n  // console.log(secondsSinceEpoch(diff));\n// var eventTime = props.allGame1_deadline_time;\n//\n// var currentTime = Date.now();\n//\n// var diffTime = eventTime-currentTime;\n\n\n// .text(duration.hours()+\":\"+duration.minutes()+\":\"+duration.seconds())\n\n\n  // console.log(props.allGame1_deadline_time);\n\n  // function findDayDifference(date1, date2) {\n  // \t// always round down\n  //   return Math.floor((Math.abs(date2-date1))/(1000*60*60*24*60*60));\n  // }\n\n  // console.log(findDayDifference(props.allGame1_deadline_time,Date.now()))\n// console.log(diffTime);\n\n\n\n//   const currentStartDate = Date();\n//   var startDate = new Date(currentStartDate);\n//\n//   // Hours part from the timestamp\n//     var startDateHours = startDate.getHours();\n//     // Minutes part from the timestamp\n//     var startDateMinutes = startDate.getMinutes();\n//     // Seconds part from the timestamp\n//     var startDateSeconds = startDate.getSeconds();\n//\n//   // Do\n//   var endDate = new Date(props.allGame1_deadline_time * 1000);\n// // Hours part from the timestamp\n//   var endDateHours = endDate.getHours();\n//   // Minutes part from the timestamp\n//   var endDateMinutes = endDate.getMinutes();\n//   // Seconds part from the timestamp\n//   var endDateSeconds = endDate.getSeconds();\n//\n//   console.log(\"Date Now\",startDate);\n//   console.log(\"Date Now Seconds\",startDateSeconds);\n//   console.log(\"Blockchain\", endDate);\n//\n//   let deadline = (endDateSeconds - startDateSeconds);\n//   console.log(\"Subtracting Seconds\", deadline);\n//   //\n//   //\n//   // const date1 = new Date('7/13/2010');\n//   // const date2 = new Date('12/15/2010');\n//\n//   console.log(getDifferenceInDays(endDate, startDate));\n//   console.log(getDifferenceInHours(endDate, startDate));\n//   console.log(getDifferenceInMinutes(endDate, startDate));\n//   console.log(getDifferenceInSeconds(endDate, startDate));\n//\n//   var endDateHours = endDate.getHours(getDifferenceInHours(endDate, startDate));\n//   var endDateMinutes = endDate.getMinutes(getDifferenceInMinutes(endDate, startDate));\n//   var endDateSeconds = endDate.getSeconds(getDifferenceInSeconds(endDate, startDate));\n//\n//   console.log(endDateHours);\n//   console.log(endDateMinutes);\n//   console.log(endDateSeconds);\n//\n//\n//   // Minutes part from the timestamp\n//   var endDateMinutes = endDate.getMinutes();\n//   // Seconds part from the timestamp\n//   var endDateSeconds = endDate.getSeconds();\n//\n//\n//   function getDifferenceInDays(date1, date2) {\n//     const diffInMs = Math.abs(date2 - date1);\n//     return diffInMs / (1000 * 60 * 60 * 24);\n//     }\n//\n//   function getDifferenceInHours(date1, date2) {\n//     const diffInMs = Math.abs(date2 - date1);\n//     return diffInMs / (1000 * 60 * 60);\n//     }\n//\n//   function getDifferenceInMinutes(date1, date2) {\n//     const diffInMs = Math.abs(date2 - date1);\n//     return diffInMs / (1000 * 60);\n//     }\n//\n//   function getDifferenceInSeconds(date1, date2) {\n//     const diffInMs = Math.abs(date2 - date1);\n//     return diffInMs / 1000;\n//     }\n\n\n\n\n\n  const [count, setTime] = useState(40);\n\n  const [enddate, setEnddate] = useState(40);\n\n\n  useEffect(() => {\n    const timer = window.setInterval(() => {\n\n      const currentStartDate = Date();\n      var startDate = new Date(currentStartDate);\n\n      // Hours part from the timestamp\n        var startDateHours = startDate.getHours();\n        // Minutes part from the timestamp\n        var startDateMinutes = startDate.getMinutes();\n        // Seconds part from the timestamp\n        var startDateSeconds = startDate.getSeconds();\n\n      // Do\n      var endDate = new Date(props.allGame1_deadline_time * 1000);\n    // Hours part from the timestamp\n      var endDateHours = endDate.getHours();\n      // Minutes part from the timestamp\n      var endDateMinutes = endDate.getMinutes();\n      // Seconds part from the timestamp\n      var endDateSeconds = endDate.getSeconds();\n\n      console.log(\"Date Now\",startDate);\n      console.log(\"Date Now Seconds\",startDateSeconds);\n      console.log(\"Blockchain\", endDate);\n\n      let deadline = (endDateSeconds - startDateSeconds);\n      console.log(\"Subtracting Seconds\", deadline);\n      //\n      //\n      // const date1 = new Date('7/13/2010');\n      // const date2 = new Date('12/15/2010');\n\n      console.log(getDifferenceInDays(endDate, startDate));\n      console.log(getDifferenceInHours(endDate, startDate));\n      console.log(getDifferenceInMinutes(endDate, startDate));\n      console.log(getDifferenceInSeconds(endDate, startDate));\n\n      var endDateHours = endDate.getHours(getDifferenceInHours(endDate, startDate));\n      var endDateMinutes = endDate.getMinutes(getDifferenceInMinutes(endDate, startDate));\n      var endDateSeconds = endDate.getSeconds(getDifferenceInSeconds(endDate, startDate));\n\n      console.log(endDateHours);\n      console.log(endDateMinutes);\n      console.log(endDateSeconds);\n\n\n      // Minutes part from the timestamp\n      var endDateMinutes = endDate.getMinutes();\n      // Seconds part from the timestamp\n      var endDateSeconds = endDate.getSeconds();\n\n\n      function getDifferenceInDays(date1, date2) {\n        const diffInMs = Math.abs(date2 - date1);\n        return diffInMs / (1000 * 60 * 60 * 24);\n        }\n\n      function getDifferenceInHours(date1, date2) {\n        const diffInMs = Math.abs(date2 - date1);\n        return diffInMs / (1000 * 60 * 60);\n        }\n\n      function getDifferenceInMinutes(date1, date2) {\n        const diffInMs = Math.abs(date2 - date1);\n        return diffInMs / (1000 * 60);\n        }\n\n      function getDifferenceInSeconds(date1, date2) {\n        const diffInMs = Math.abs(date2 - date1);\n        return diffInMs / 1000;\n        }\n\n      setEnddate(endDateSeconds)\n\n\n      setTime(prevTime => prevTime - 1); // <-- Change this line!\n\n    }, 1000);\n    return () => {\n      window.clearInterval(timer);\n    };\n\n  console.log('test');\n\n  }, []);\n\n\n\n\n\n\n\n\n  return(\n\n    <div>\n\n      <div className=\"attemptPrize\">This time slot will expire in {enddate} seconds!</div>\n\n    </div>\n\n  );\n\n};\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}