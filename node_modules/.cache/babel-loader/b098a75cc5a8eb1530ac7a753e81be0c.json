{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/PartnershipExample/GamesSelection/FighterPilot/FighterScreen.js\";\nimport { useState, useRef, useEffect, useCallback } from \"react\"; // import Bird from './components/Bird'\n// import Obstacles from './components/Obstacles'\n\nimport { Button, Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport useSound from 'use-sound'; //\n// import lazer from './assets/Lazer.wav';\n// import ohno from './assets/troy_oh_no.mp4';\n\nimport './style.css';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport ReactAudioPlayer from 'react-audio-player'; // Hook\n\nimport jet from \"./jet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FighterScreen = props => {\n  //\n  //   var [controlPlayer, setControlPlayer]= useState(false)\n  //   var [hasGameStarted, setHasGameStarted]= useState(false)\n  //   var [hasGameOver, setHasGameOver]= useState(false)\n  //   var [canvas, setCanvas]= useState(false)\n  //   var [ctx, setCtx]= useState(false)\n  //\n  //   // Prevent game from working whilst page reloads\n  //   let startDate = null;\n  //\n  //   let playerRect = {\n  //     x:275,\n  //     y:275,\n  //     width:50,\n  //     height:50,\n  //   }\n  //\n  //   // Game Elements\n  //   let rectangles = [\n  //     {\n  //       x:75,\n  //       y:75,\n  //       dx:5,\n  //       dy:4,\n  //       width:75,\n  //       height:75,\n  //       color:\"#000099\",\n  //     },\n  //     {\n  //       x:400,\n  //       y:75,\n  //       dx:-5,\n  //       dy:5.5,\n  //       width:80,\n  //       height:60,\n  //       color:\"#000099\",\n  //     },\n  //     {\n  //       x:75,\n  //       y:445,\n  //       dx:5,\n  //       dy:-5,\n  //       width:40,\n  //       height:80,\n  //       color:\"#000099\",\n  //     },\n  //     {\n  //       x:420,\n  //       y:450,\n  //       dx:-5,\n  //       dy:-5,\n  //       width:130,\n  //       height:25,\n  //       color:\"#000099\",\n  //     },\n  //   ]\n  //\n  //\n  //\n  //\n  //\n  //   useEffect(() => {\n  //\n  //\n  //\n  //         },10000)\n  //       }\n  //\n  //\n  //\n  //\n  //       // Returns true if collision\n  //       function isCursorInRect(x,y,rect){\n  //         return((x > rect.x) && (x < rect.x + rect.width) && (y > rect.y) && (y < rect.y + rect.height));\n  //       }\n  //\n  //\n  //\n  //       canvas.addEventListener('mousedown', on_canvas_down, false);\n  //\n  //       function on_canvas_down(ev) {\n  //\n  //           // get x & y coordinates in relation to the canvas\n  //\n  //           var x = ev.clientX - this.offsetLeft;\n  //           var y = ev.clientY - this.offsetTop;\n  //\n  //           // See if they clicked on red square\n  //           if(isCursorInRect(x,y,playerRect)){\n  //             //\n  //             if(!hasGameStarted){\n  //               startDate = new Date();\n  //               configureRectSpeed();\n  //             }\n  //             setControlPlayer(true);\n  //             setHasGameStarted(true);\n  //\n  //           }\n  //\n  //       }\n  //\n  //\n  //\n  //\n  //\n  //\n  //\n  //\n  //       canvas.addEventListener('mousemove', on_canvas_move, false);\n  //\n  //\n  //         function on_canvas_move(ev) {\n  //\n  //           if(controlPlayer && !hasGameOver){\n  //             // get x & y coordinates in relation to the canvas\n  //\n  //             var x = ev.clientX - this.offsetLeft;\n  //             var y = ev.clientY - this.offsetTop;\n  //\n  //             playerRect.x = x - 25;\n  //             playerRect.y = y - 25;\n  //           }\n  //           console.log(x,\"xxxxxxxxxx\")\n  //       }\n  //\n  //\n  //\n  //\n  //\n  //\n  //\n  //       canvas.addEventListener('mouseup', on_canvas_up, false);\n  //       function on_canvas_up(ev) {\n  //\n  //         setControlPlayer(false);\n  //       }\n  //\n  //\n  //\n  //     }, [controlPlayer,,hasGameStarted,hasGameOver,canvas,ctx]);\n  //\n  //\n  //\n  //\n  //\n  // //     const timer = window.setInterval( async() => {\n  // // }, 1000);\n  //\n  //\n  //\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: [\"Fighter Pilot\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        width: \"600\",\n        height: \"600\",\n        id: \"canvas\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FighterScreen;\nexport default FighterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FighterScreen\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/PartnershipExample/GamesSelection/FighterPilot/FighterScreen.js"],"names":["useState","useRef","useEffect","useCallback","Button","Container","Nav","Navbar","NavDropdown","useSound","BrowserRouter","Router","Switch","Route","Link","Redirect","ReactAudioPlayer","jet","FighterScreen","props"],"mappings":";AACA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,EAAsCC,WAAtC,QAAyD,OAAzD,C,CAEA;AACA;;AACA,SAASC,MAAT,EAAgBC,SAAhB,EAA0BC,GAA1B,EAA8BC,MAA9B,EAAqCC,WAArC,QAAwD,iBAAxD;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;AACA;AACA;;AACA,OAAO,aAAP;AAGA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,QALF,QAMO,kBANP;AAQA,OAAOC,gBAAP,MAA6B,oBAA7B,C,CAGA;;AAEA,OAAOC,GAAP,MAAgB,OAAhB;;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAU;AAEhsBACE;AAAA,4BAEJ;AAAA,+CACa;AAAA;AAAA;AAAA;AAAA,cADb,eAEA;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAoB,QAAA,MAAM,EAAC,KAA3B;AAAiC,QAAA,EAAE,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFI,eAOJ;AAAA;AAAA;AAAA;AAAA,YAPI;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApKD;;KAAMD,a;AAsKN,eAAeA,aAAf","sourcesContent":["\nimport { useState, useRef, useEffect, useCallback } from \"react\";\n\n// import Bird from './components/Bird'\n// import Obstacles from './components/Obstacles'\nimport { Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport useSound from 'use-sound';\n//\n// import lazer from './assets/Lazer.wav';\n// import ohno from './assets/troy_oh_no.mp4';\nimport './style.css';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport ReactAudioPlayer from 'react-audio-player';\n\n\n// Hook\n\nimport jet from \"./jet\";\n\n\nconst FighterScreen = (props) =>{\n\n//\n//   var [controlPlayer, setControlPlayer]= useState(false)\n//   var [hasGameStarted, setHasGameStarted]= useState(false)\n//   var [hasGameOver, setHasGameOver]= useState(false)\n//   var [canvas, setCanvas]= useState(false)\n//   var [ctx, setCtx]= useState(false)\n//\n//   // Prevent game from working whilst page reloads\n//   let startDate = null;\n//\n//   let playerRect = {\n//     x:275,\n//     y:275,\n//     width:50,\n//     height:50,\n//   }\n//\n//   // Game Elements\n//   let rectangles = [\n//     {\n//       x:75,\n//       y:75,\n//       dx:5,\n//       dy:4,\n//       width:75,\n//       height:75,\n//       color:\"#000099\",\n//     },\n//     {\n//       x:400,\n//       y:75,\n//       dx:-5,\n//       dy:5.5,\n//       width:80,\n//       height:60,\n//       color:\"#000099\",\n//     },\n//     {\n//       x:75,\n//       y:445,\n//       dx:5,\n//       dy:-5,\n//       width:40,\n//       height:80,\n//       color:\"#000099\",\n//     },\n//     {\n//       x:420,\n//       y:450,\n//       dx:-5,\n//       dy:-5,\n//       width:130,\n//       height:25,\n//       color:\"#000099\",\n//     },\n//   ]\n//\n//\n//\n//\n//\n//   useEffect(() => {\n//\n//\n//\n//         },10000)\n//       }\n//\n//\n//\n//\n//       // Returns true if collision\n//       function isCursorInRect(x,y,rect){\n//         return((x > rect.x) && (x < rect.x + rect.width) && (y > rect.y) && (y < rect.y + rect.height));\n//       }\n//\n//\n//\n//       canvas.addEventListener('mousedown', on_canvas_down, false);\n//\n//       function on_canvas_down(ev) {\n//\n//           // get x & y coordinates in relation to the canvas\n//\n//           var x = ev.clientX - this.offsetLeft;\n//           var y = ev.clientY - this.offsetTop;\n//\n//           // See if they clicked on red square\n//           if(isCursorInRect(x,y,playerRect)){\n//             //\n//             if(!hasGameStarted){\n//               startDate = new Date();\n//               configureRectSpeed();\n//             }\n//             setControlPlayer(true);\n//             setHasGameStarted(true);\n//\n//           }\n//\n//       }\n//\n//\n//\n//\n//\n//\n//\n//\n//       canvas.addEventListener('mousemove', on_canvas_move, false);\n//\n//\n//         function on_canvas_move(ev) {\n//\n//           if(controlPlayer && !hasGameOver){\n//             // get x & y coordinates in relation to the canvas\n//\n//             var x = ev.clientX - this.offsetLeft;\n//             var y = ev.clientY - this.offsetTop;\n//\n//             playerRect.x = x - 25;\n//             playerRect.y = y - 25;\n//           }\n//           console.log(x,\"xxxxxxxxxx\")\n//       }\n//\n//\n//\n//\n//\n//\n//\n//       canvas.addEventListener('mouseup', on_canvas_up, false);\n//       function on_canvas_up(ev) {\n//\n//         setControlPlayer(false);\n//       }\n//\n//\n//\n//     }, [controlPlayer,,hasGameStarted,hasGameOver,canvas,ctx]);\n//\n//\n//\n//\n//\n// //     const timer = window.setInterval( async() => {\n// // }, 1000);\n//\n//\n//\n\n  return (\n    <div>\n\n<center>\nFighter Pilot<br/>\n<canvas width=\"600\" height=\"600\" id=\"canvas\"> </canvas>\n\n</center>\n<br/>\n    </div>\n  );\n}\n\nexport default FighterScreen;\n"]},"metadata":{},"sourceType":"module"}