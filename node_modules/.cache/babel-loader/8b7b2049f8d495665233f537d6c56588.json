{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/PartnershipExample/GamesSelection/FighterPilot/FighterScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect, useCallback } from \"react\"; // import Bird from './components/Bird'\n// import Obstacles from './components/Obstacles'\n\nimport { Button, Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport useSound from 'use-sound'; //\n// import lazer from './assets/Lazer.wav';\n// import ohno from './assets/troy_oh_no.mp4';\n\nimport './style.css';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport ReactAudioPlayer from 'react-audio-player'; // Hook\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FighterScreen = props => {\n  _s();\n\n  const canvas = document.getElementById(\"canvas\");\n\n  if (canvas != null) {\n    // do here.\n    canvas.getContext(\"2d\");\n  } else {// report the error.\n  } // Global Varabales\n\n\n  let controlPlayer = false;\n  let hasGameStarted = false;\n\n  function drawBoarder() {\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.clearRect(50, 50, 500, 500);\n  } // Render rectangles to canvas\n\n\n  function drawRect() {\n    // Draw player rect first\n    ctx.fillStyle = \"#901234\";\n    ctx.fillRect(playerRect.x, playerRect.y, playerRect.width, playerRect.height);\n    rectangles.forEach(rect => {\n      ctx.fillStyle = rect.color;\n      ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n    });\n  }\n\n  let playerRect = {\n    x: 275,\n    y: 275,\n    width: 50,\n    height: 50\n  }; // Game Elements\n\n  let rectangles = [{\n    x: 75,\n    y: 75,\n    dx: 5,\n    dy: 4,\n    width: 75,\n    height: 75,\n    color: \"#000099\"\n  }, {\n    x: 400,\n    y: 75,\n    dx: -5,\n    dy: 5.5,\n    width: 80,\n    height: 60,\n    color: \"#000099\"\n  }, {\n    x: 75,\n    y: 445,\n    dx: 5,\n    dy: -5,\n    width: 40,\n    height: 80,\n    color: \"#000099\"\n  }, {\n    x: 420,\n    y: 450,\n    dx: -5,\n    dy: -5,\n    width: 130,\n    height: 25,\n    color: \"#000099\"\n  }]; // collision\n\n  function playerCollisionDetection() {\n    if (playerRect.x + playerRect.width > 550 || playerRect.x < 50 || playerRect.y + playerRect.height > 550 || playerRect.y < 50) {\n      gameOver();\n    }\n  }\n\n  function isRectangleCollision(rect1, rect2) {\n    return !(rect1.x > rect2.x + rect2.width || rect1.x + rect1.width < rect2.x || rect1.y > rect2.y + rect2.height || rect1.y + rect1.height < rect2.y);\n  }\n\n  function rectangleCollisionDetection() {\n    rectangles.forEach(rect => {\n      if (isRectangleCollision(playerRect, rect)) {\n        gameOver();\n      }\n    });\n  }\n\n  function moveRectangle() {\n    rectangles.forEach(rect => {\n      rect.x += rect.dx;\n      rect.y += rect.dy;\n    });\n  }\n\n  function boarderRectangleDetection() {\n    rectangles.forEach(rect => {\n      if (rect.x + rect.width > canvas.width || rect.x < 0) {\n        rect.dx *= -1;\n      }\n\n      if (rect.y + rect.height > canvas.height || rect.y < 0) {\n        rect.dy *= -1;\n      }\n    });\n  }\n\n  let numberOfSpeed = 0;\n\n  function configureRectSpeed() {\n    const speedUpGame = setInterval(() => {\n      numberOfSpeed++;\n      rectangles.forEach(rect => {\n        rect.dx >= 0 ? rect.dx += 1 : rect.dx -= 1;\n        rect.dy >= 0 ? rect.dy += 1 : rect.dy -= 1;\n      });\n\n      if (numberOfSpeed === 4) {\n        clearInterval(speedUpGame);\n      }\n    }, 10000);\n  }\n\n  let hasGameOver = false;\n  let startDate = null;\n\n  function millisecondsToMiutes(millis) {\n    let minutes = Math.floor(millis / 60000);\n    let seconds = Math.floor(millis % 60000 / 1000);\n    return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n  }\n\n  function gameOver() {\n    if (!hasGameOver) {\n      let endDate = new Date();\n      let timeDiff = endDate - startDate;\n\n      if (timeDiff < 60000) {\n        alert('You survived ' + timeDiff / 1000 + \" seconds!\");\n      } else {\n        let minutesSurvived = millisecondsToMiutes(timeDiff);\n        alert('You survived ${minutesSurvived} WOW!');\n      }\n\n      hasGameOver = true;\n    }\n  }\n\n  useEffect(() => {\n    // Returns true if collision\n    function isCursorInRect(x, y, rect) {\n      return x > rect.x && x < rect.x + rect.width && y > rect.y && y < rect.y + rect.height;\n    }\n\n    canvas.addEventListener('mousedown', e => {\n      // get x & y coordinates in relation to the canvas\n      var pos = {\n        x: e.clientX - canvas.offsetLeft,\n        y: e.clientY - canvas.offsetTop\n      }; // See if they clicked on red square\n\n      if (isCursorInRect(pos.x, pos.y, playerRect)) {\n        //\n        if (!hasGameStarted) {\n          startDate = new Date();\n          configureRectSpeed();\n        }\n\n        hasGameStarted = true;\n        controlPlayer = true;\n      }\n    });\n    canvas.addEventListener(\"mousemove\", e => {\n      if (controlPlayer && !hasGameOver) {\n        // get x & y coordinates in relation to the canvas\n        var pos = {\n          x: e.clientX - canvas.offsetLeft,\n          y: e.clientY - canvas.offsetTop\n        };\n        playerRect.x = pos.x - 25;\n        playerRect.y = pos.y - 25;\n      }\n    });\n    canvas.addEventListener(\"mouseup\", () => {\n      controlPlayer = false;\n    });\n  }, []);\n\n  function update() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    drawBoarder();\n    drawRect();\n\n    if (hasGameStarted) {\n      moveRectangle();\n    }\n\n    playerCollisionDetection();\n    rectangleCollisionDetection();\n    boarderRectangleDetection();\n    requestAnimationFrame(update);\n  } // call update methord on initial document load\n\n\n  update();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: [\"Fighter Pilot\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        width: \"600\",\n        height: \"600\",\n        id: \"canvas\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FighterScreen, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = FighterScreen;\nexport default FighterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FighterScreen\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/PartnershipExample/GamesSelection/FighterPilot/FighterScreen.js"],"names":["useState","useRef","useEffect","useCallback","Button","Container","Nav","Navbar","NavDropdown","useSound","BrowserRouter","Router","Switch","Route","Link","Redirect","ReactAudioPlayer","FighterScreen","props","canvas","document","getElementById","getContext","controlPlayer","hasGameStarted","drawBoarder","ctx","fillStyle","fillRect","width","height","clearRect","drawRect","playerRect","x","y","rectangles","forEach","rect","color","dx","dy","playerCollisionDetection","gameOver","isRectangleCollision","rect1","rect2","rectangleCollisionDetection","moveRectangle","boarderRectangleDetection","numberOfSpeed","configureRectSpeed","speedUpGame","setInterval","clearInterval","hasGameOver","startDate","millisecondsToMiutes","millis","minutes","Math","floor","seconds","endDate","Date","timeDiff","alert","minutesSurvived","isCursorInRect","addEventListener","e","pos","clientX","offsetLeft","clientY","offsetTop","update","requestAnimationFrame"],"mappings":"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","sourcesContent":["\nimport { useState, useRef, useEffect, useCallback } from \"react\";\n\n// import Bird from './components/Bird'\n// import Obstacles from './components/Obstacles'\nimport { Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport useSound from 'use-sound';\n//\n// import lazer from './assets/Lazer.wav';\n// import ohno from './assets/troy_oh_no.mp4';\nimport './style.css';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport ReactAudioPlayer from 'react-audio-player';\n\n\n// Hook\n\n\n\n\nconst FighterScreen = (props) =>{\n\n\n  const canvas = document.getElementById(\"canvas\");\n\n  if(canvas != null) {\n      // do here.\n      canvas.getContext(\"2d\");\n  } else {\n      // report the error.\n  }\n  \n\n  // Global Varabales\n\n  let controlPlayer = false;\n  let hasGameStarted = false;\n\n  function drawBoarder(){\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0,0,canvas.width,canvas.height);\n    ctx.clearRect(50,50,500,500);\n  }\n\n\n  // Render rectangles to canvas\n\n  function drawRect(){\n    // Draw player rect first\n    ctx.fillStyle = \"#901234\";\n    ctx.fillRect(playerRect.x,playerRect.y,playerRect.width,playerRect.height);\n\n    rectangles.forEach(rect => {\n      ctx.fillStyle = rect.color;\n      ctx.fillRect(rect.x,rect.y,rect.width,rect.height);\n    });\n\n  }\n\n  let playerRect = {\n    x:275,\n    y:275,\n    width:50,\n    height:50,\n  }\n\n  // Game Elements\n  let rectangles = [\n    {\n      x:75,\n      y:75,\n      dx:5,\n      dy:4,\n      width:75,\n      height:75,\n      color:\"#000099\",\n    },\n    {\n      x:400,\n      y:75,\n      dx:-5,\n      dy:5.5,\n      width:80,\n      height:60,\n      color:\"#000099\",\n    },\n    {\n      x:75,\n      y:445,\n      dx:5,\n      dy:-5,\n      width:40,\n      height:80,\n      color:\"#000099\",\n    },\n    {\n      x:420,\n      y:450,\n      dx:-5,\n      dy:-5,\n      width:130,\n      height:25,\n      color:\"#000099\",\n    },\n  ]\n\n  // collision\n  function playerCollisionDetection(){\n    if(playerRect.x + playerRect.width > 550 || playerRect.x < 50 || playerRect.y + playerRect.height > 550 || playerRect.y < 50\n    ){\n      gameOver();\n    }\n  }\n\n  function isRectangleCollision(rect1,rect2){\n    return !(\n      rect1.x > rect2.x + rect2.width || rect1.x + rect1.width < rect2.x || rect1.y > rect2.y + rect2.height || rect1.y + rect1.height < rect2.y\n    );\n  }\n\n  function rectangleCollisionDetection(){\n    rectangles.forEach(rect =>{\n      if(isRectangleCollision(playerRect,rect)){\n        gameOver();\n      }\n    })\n  }\n\n  function moveRectangle(){\n    rectangles.forEach(rect => {\n      rect.x += rect.dx;\n      rect.y += rect.dy;\n    })\n  }\n\n  function boarderRectangleDetection(){\n    rectangles.forEach(rect=>{\n      if(rect.x + rect.width > canvas.width || rect.x < 0){\n        rect.dx *= -1;\n      }\n      if(rect.y + rect.height > canvas.height || rect.y < 0){\n        rect.dy *= -1;\n      }\n    })\n  }\n\n  let numberOfSpeed = 0;\n\n  function configureRectSpeed(){\n    const speedUpGame = setInterval(()=>{\n      numberOfSpeed++;\n      rectangles.forEach(rect =>{\n        rect.dx >= 0 ? rect.dx += 1 : rect.dx -= 1;\n        rect.dy >= 0 ? rect.dy += 1 : rect.dy -= 1;\n\n      });\n      if(numberOfSpeed === 4){\n        clearInterval(speedUpGame);\n      }\n    },10000)\n  }\n  let hasGameOver = false;\n  let startDate = null;\n\n  function millisecondsToMiutes(millis){\n    let minutes = Math.floor(millis/60000);\n    let seconds = Math.floor((millis % 60000)/1000);\n    return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n\n  }\n\n  function gameOver(){\n    if(!hasGameOver){\n      let endDate = new Date();\n      let timeDiff = endDate - startDate;\n      if (timeDiff < 60000){\n        alert('You survived '+ timeDiff/1000 +\" seconds!\");\n      }else{\n        let minutesSurvived = millisecondsToMiutes(timeDiff);\n        alert('You survived ${minutesSurvived} WOW!');\n\n      }\n\n      hasGameOver = true;\n    }\n  }\n\n\n\n\n  useEffect(() => {\n\n\n      // Returns true if collision\n      function isCursorInRect(x,y,rect){\n        return(x > rect.x && x < rect.x+rect.width && y > rect.y && y < rect.y+rect.height);\n      }\n\n      canvas.addEventListener('mousedown', e => {\n\n        // get x & y coordinates in relation to the canvas\n        var pos = {\n          x: e.clientX - canvas.offsetLeft,\n          y: e.clientY - canvas.offsetTop,\n        };\n\n        // See if they clicked on red square\n        if (isCursorInRect(pos.x,pos.y,playerRect)){\n          //\n          if(!hasGameStarted){\n            startDate = new Date();\n            configureRectSpeed();\n          }\n          hasGameStarted = true;\n          controlPlayer = true;\n        }\n\n      });\n\n\n      canvas.addEventListener(\"mousemove\", e => {\n\n        if(controlPlayer && !hasGameOver){\n          // get x & y coordinates in relation to the canvas\n          var pos = {\n            x: e.clientX - canvas.offsetLeft,\n            y: e.clientY - canvas.offsetTop,\n          };\n          playerRect.x = pos.x - 25;\n          playerRect.y = pos.y - 25;\n        }\n\n      })\n\n      canvas.addEventListener(\"mouseup\", () =>{\n        controlPlayer = false;\n      })\n\n\n    }, []);\n\n\n\n\n    function update(){\n      ctx.clearRect(0,0,canvas.width,canvas.height);\n\n      drawBoarder();\n      drawRect();\n\n      if (hasGameStarted){\n        moveRectangle();\n      }\n\n      playerCollisionDetection();\n      rectangleCollisionDetection();\n      boarderRectangleDetection();\n      requestAnimationFrame(update);\n    }\n\n    // call update methord on initial document load\n    update();\n\n\n\n  return (\n    <div>\n\n<center>\nFighter Pilot<br/>\n<canvas width=\"600\" height=\"600\" id=\"canvas\"> </canvas>\n\n</center>\n<br/>\n    </div>\n  );\n}\n\nexport default FighterScreen;\n"]},"metadata":{},"sourceType":"module"}