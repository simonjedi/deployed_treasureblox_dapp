{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/BloxEscape/src/containers/PillarContainer.js\";\nimport React from \"react\";\nimport { v4 } from \"uuid\";\nimport $ from \"jquery\";\nimport Pillars from \"../components/Pillars\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PillarContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pillars: []\n    };\n    this.leftMargin = 200;\n    this.windowHeight = $(document).height() - $(\"body\").offset().top - 80;\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.updatePillars(), 1000);\n    this.moveLeft();\n  } // Moves the pillars to the left\n\n\n  moveLeft() {\n    let self = this;\n\n    if (!this.props.isGameOver) {\n      $(\"[id^=pillar]\").animate({\n        left: \"-=40px\" // Move the pillars to left\n\n      }, 250, // Perform the animation every 250ms\n      \"linear\", // For smooth transition of animation\n      () => {\n        self.moveLeft();\n      });\n    } else $(\"[id^=pillar]\").stop(true);\n  } // Removes the old pillar and add new ones\n\n\n  updatePillars() {\n    if (!this.props.isGameOver) {\n      let oldPillars = this.state.pillars;\n\n      if (oldPillars.length <= 10) {\n        // Total number of pillars are less than 10, add new pillars\n        const topHeight = Math.floor(Math.random() * 250) + 80;\n        const bottomHeight = this.windowHeight - topHeight - 60;\n        const abovePillarId = \"pillar\" + v4();\n        const belowPillarId = \"pillar\" + v4();\n        oldPillars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            height: topHeight,\n            // marginBottom: \"100px\",\n            left: this.leftMargin + \"px\",\n            width: \"50px\",\n            backgroundColor: \"white\"\n          },\n          id: abovePillarId,\n          className: \"pillar\"\n        }, v4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this));\n        oldPillars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            height: bottomHeight,\n            top: topHeight + 120,\n            left: this.leftMargin + \"px\",\n            width: \"50px\",\n            backgroundColor: \"white\"\n          },\n          id: belowPillarId,\n          className: \"pillar\"\n        }, v4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this));\n      } else {\n        // Pillar count has exceeded 10, remove the old pillars from the front\n        oldPillars.shift(); // remove first top pillar\n\n        oldPillars.shift(); // remove first bottom pillar\n      }\n\n      this.setState({\n        pillars: oldPillars\n      }, function () {// console.log(\"pillars: \" + this.state.pillars.length);\n      });\n    } else clearInterval(this.timerID);\n  }\n\n  componentWillMount() {\n    let initPillars = [];\n    const windowHeight = $(window).height() - $(\"body\").offset().top - 80;\n\n    for (let i = 0; i < 10; i = i + 2) {\n      let topHeight = Math.floor(Math.random() * 250) + 80;\n      let bottomHeight = windowHeight - topHeight - 60;\n      let abovePillarId = \"pillar\" + i;\n      let belowPillarId = \"pillar\" + (i + 1);\n      initPillars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          height: topHeight,\n          // marginBottom: \"100px\",\n          left: this.leftMargin + \"px\",\n          width: \"50px\",\n          backgroundColor: \"white\"\n        },\n        id: abovePillarId,\n        className: \"pillar\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this));\n      initPillars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          height: bottomHeight,\n          top: topHeight + 120,\n          left: this.leftMargin + \"px\",\n          width: \"50px\",\n          backgroundColor: \"white\"\n        },\n        id: belowPillarId,\n        className: \"pillar\"\n      }, i + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this));\n      if (i <= 8) this.leftMargin += 250;else this.leftMargin -= 400;\n    }\n\n    this.setState({\n      pillars: initPillars\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    // if (this.props.isGameOver) {\n    //   this.setState({\n    //     pillars: []\n    //   });\n    // }\n    return /*#__PURE__*/_jsxDEV(Pillars, {\n      pillars: this.state.pillars\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 10\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/BloxEscape/src/containers/PillarContainer.js"],"names":["React","v4","$","Pillars","PillarContainer","Component","constructor","props","state","pillars","leftMargin","windowHeight","document","height","offset","top","componentDidMount","timerID","setInterval","updatePillars","moveLeft","self","isGameOver","animate","left","stop","oldPillars","length","topHeight","Math","floor","random","bottomHeight","abovePillarId","belowPillarId","push","position","width","backgroundColor","shift","setState","clearInterval","componentWillMount","initPillars","window","i","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { v4 } from \"uuid\";\nimport $ from \"jquery\";\n\nimport Pillars from \"../components/Pillars\";\n\nexport default class PillarContainer extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { pillars: [] };\n\t\tthis.leftMargin = 200;\n\t\tthis.windowHeight = $(document).height() - $(\"body\").offset().top - 80;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.timerID = setInterval(() => this.updatePillars(), 1000);\n\t\tthis.moveLeft();\n\t}\n\n\t// Moves the pillars to the left\n\tmoveLeft() {\n\t\tlet self = this;\n\t\tif (!this.props.isGameOver) {\n\t\t\t$(\"[id^=pillar]\").animate(\n\t\t\t\t{\n\t\t\t\t\tleft: \"-=40px\" // Move the pillars to left\n\t\t\t\t},\n\t\t\t\t250,      // Perform the animation every 250ms\n\t\t\t\t\"linear\", // For smooth transition of animation\n\t\t\t\t() => {\n\t\t\t\t\tself.moveLeft();\n\t\t\t\t}\n\t\t\t);\n\t\t} else $(\"[id^=pillar]\").stop(true);\n\t}\n\n\t// Removes the old pillar and add new ones\n\tupdatePillars() {\n\t\tif (!this.props.isGameOver) {\n\t\t\tlet oldPillars = this.state.pillars;\n\t\t\tif (oldPillars.length <= 10) {\n\t\t\t\t// Total number of pillars are less than 10, add new pillars\n\t\t\t\tconst topHeight = Math.floor(Math.random() * 250) + 80;\n\t\t\t\tconst bottomHeight = this.windowHeight - topHeight - 60;\n\t\t\t\tconst abovePillarId = \"pillar\" + v4();\n\t\t\t\tconst belowPillarId = \"pillar\" + v4();\n\t\t\t\toldPillars.push(\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\theight: topHeight,\n\t\t\t\t\t\t\t// marginBottom: \"100px\",\n\t\t\t\t\t\t\tleft: this.leftMargin + \"px\",\n\t\t\t\t\t\t\twidth: \"50px\",\n\t\t\t\t\t\t\tbackgroundColor: \"white\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tkey={v4()}\n\t\t\t\t\t\tid={abovePillarId}\n\t\t\t\t\t\tclassName=\"pillar\"\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t\toldPillars.push(\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\theight: bottomHeight,\n\t\t\t\t\t\t\ttop: topHeight + 120,\n\t\t\t\t\t\t\tleft: this.leftMargin + \"px\",\n\t\t\t\t\t\t\twidth: \"50px\",\n\t\t\t\t\t\t\tbackgroundColor: \"white\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tkey={v4()}\n\t\t\t\t\t\tid={belowPillarId}\n\t\t\t\t\t\tclassName=\"pillar\"\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// Pillar count has exceeded 10, remove the old pillars from the front\n\t\t\t\toldPillars.shift();   // remove first top pillar\n\t\t\t\toldPillars.shift();   // remove first bottom pillar\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tpillars: oldPillars\n\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\t// console.log(\"pillars: \" + this.state.pillars.length);\n\t\t\t\t}\n\t\t\t);\n\t\t} else clearInterval(this.timerID);\n\t}\n\n\tcomponentWillMount() {\n\t\tlet initPillars = [];\n\t\tconst windowHeight = $(window).height() - $(\"body\").offset().top - 80;\n\t\tfor (let i = 0; i < 10; i = i + 2) {\n\t\t\tlet topHeight = Math.floor(Math.random() * 250) + 80;\n\t\t\tlet bottomHeight = windowHeight - topHeight - 60;\n\t\t\tlet abovePillarId = \"pillar\" + i;\n\t\t\tlet belowPillarId = \"pillar\" + (i + 1);\n\t\t\tinitPillars.push(\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\theight: topHeight,\n\t\t\t\t\t\t// marginBottom: \"100px\",\n\t\t\t\t\t\tleft: this.leftMargin + \"px\",\n\t\t\t\t\t\twidth: \"50px\",\n\t\t\t\t\t\tbackgroundColor: \"white\"\n\t\t\t\t\t}}\n\t\t\t\t\tkey={i}\n\t\t\t\t\tid={abovePillarId}\n\t\t\t\t\tclassName=\"pillar\"\n\t\t\t\t/>\n\t\t\t);\n\n\t\t\tinitPillars.push(\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\theight: bottomHeight,\n\t\t\t\t\t\ttop: topHeight + 120,\n\t\t\t\t\t\tleft: this.leftMargin + \"px\",\n\t\t\t\t\t\twidth: \"50px\",\n\t\t\t\t\t\tbackgroundColor: \"white\"\n\t\t\t\t\t}}\n\t\t\t\t\tkey={i + 1}\n\t\t\t\t\tid={belowPillarId}\n\t\t\t\t\tclassName=\"pillar\"\n\t\t\t\t/>\n\t\t\t);\n\t\t\tif (i <= 8) this.leftMargin += 250;\n\t\t\telse this.leftMargin -= 400;\n\t\t}\n\t\tthis.setState({\n\t\t\tpillars: initPillars\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timerID);\n\t}\n\n\trender() {\n\t\t// if (this.props.isGameOver) {\n\t\t//   this.setState({\n\t\t//     pillars: []\n\t\t//   });\n\t\t// }\n\t\treturn <Pillars pillars={this.state.pillars} />;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}