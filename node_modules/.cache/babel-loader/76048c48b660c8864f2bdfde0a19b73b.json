{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/Partnerships/Template/projectname.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// import MyNav from '../MyNav';\nimport SingleCard from './components/Structure/Game1/SingleCard';\nimport moment from 'moment'; // import img1 from './Treasure-hunt.jpeg';\n\nimport './projectname.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './components/Structure/HomeCard.css';\nimport React, { Component, useState, useEffect } from 'react'; // import Connection from \"./Connection\";\n\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport Timer from './components/Structure/Game1/Timer';\nimport HomeCards from './components/Structure/HomeCards';\nimport HomeHuntCards from './components/Structure/HomeHuntCards';\nimport HomeFeatureCards from './components/Structure/HomeFeatureCards'; // import Learnmore from './Learnmore';\n\nimport img1 from './components/Structure/images/elons-rocket.jpg';\nimport img2 from './components/Structure/images/fortblox.png';\nimport img3 from './components/Structure/images/treasureblox_header1.png';\nimport img4 from './components/Structure/images/treasureblox_header2.png';\nimport img5 from './components/Structure/images/treasureblox_header3.png';\nimport img6 from './components/Structure/images/treasureblox_header4.png';\nimport img7 from './components/Structure/images/treasureblox_header5.png';\nimport img8 from './components/Structure/images/treasureblox_header6.png';\nimport pdf from './components/Structure/images/TreasureBloxWhitePaperV1.pdf';\nimport { Helmet } from 'react-helmet';\nimport { Tooltip, OverlayTrigger, Form, ButtonGroup, ButtonToolbar, CardColumns, CardGroup, Card, Button, Container, Nav, Navbar, NavDropdown, Carousel } from 'react-bootstrap';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { HashLink as LinkHeader } from 'react-router-hash-link';\nimport TagManager from 'react-gtm-module'; // Hook\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useWindowSize() {\n  _s();\n\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    } // Add event listener\n\n\n    window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n_s(useWindowSize, \"WMqaMVAPr0u8CJVTsAIdEuYrbbM=\");\n\nconst ProjectName = props => {\n  _s2();\n\n  const {\n    width,\n    height\n  } = useWindowSize();\n  const [web3, setWeb3] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [wallet_for_google, setWallet_for_google] = useState('Unknown');\n  console.log(wallet_for_google, \"string?\");\n  const [ip, setIP] = useState('');\n  const [contract, setContract] = useState(null);\n  const [tokenContract, setTokenContract] = useState(null);\n  const [decimals, setDecimals] = useState(null);\n  const [totalTreasure, setTotalTreasure] = useState(null);\n  const [gameContractAddress, setGameContractAddress] = useState(null); // GAME 1\n\n  const [game1_id, setGame1_id] = useState(undefined);\n  const [game1_live, setGame1_live] = useState(undefined);\n  const [game1_prize, setGame1_prize] = useState(undefined);\n  const [game1_question_hash, setGame1_question_hash] = useState(undefined);\n  const [game1_time_lock_cost, setgame1_time_lock_cost] = useState(undefined);\n  const [game1_submit_secret_cost, setGame1_submit_secret_cost] = useState(undefined);\n  const [game1_riddle, setGame1_riddle] = useState(undefined);\n  const [game1_clue, setGame1_clue] = useState(undefined);\n  const [game1_head_start_time, setGame1_head_start_time] = useState(undefined);\n  const [game1_entry_limit, setGame1_entry_limit] = useState(undefined);\n  const [game1_entry_cost, setGame1_entry_cost] = useState(undefined);\n  const [allGame1_id, setallGame1_id] = useState(undefined);\n  const [allGame1_user_front_of_que, setallGame1_user_front_of_que] = useState(undefined);\n  const [allGame1_deadline_time, setallGame1_deadline] = useState(undefined);\n  const [allGame1_username, setallGame1_username] = useState(undefined);\n  const [allGame1_total_game_tries, setallGame1_total_game_tries] = useState(undefined);\n  const [countGame1, setTimeGame1] = useState(90);\n  const [countGame1DeadlineTrue, setcountGame1DeadlineTrue] = useState(false);\n  const [game1numberOfEntries, setGame1numberOfEntries] = useState(0);\n  const [game1huntEntries, setGame1huntEntries] = useState(undefined);\n  const [userGame1_id, setUserGame1_id] = useState(undefined);\n  const [userEntered_game1, setUserEntered_game1] = useState(undefined);\n  const [userGame1_headstart_time, setUserGame1_headstart_time] = useState(undefined);\n  const [userGame1_live, setUserGame1_live] = useState(undefined);\n  const [winning_address1, setWinning_address1] = useState(undefined);\n  const [treasure_found1, setTreasure_found1] = useState(undefined);\n  const [winning_prize1, setWinning_prize1] = useState(undefined);\n  const [question_hash_solved1, setQuestion_hash_solved1] = useState(undefined);\n  const [winning_message1, setWinning_message1] = useState(undefined);\n  const [attemptId1, setAttemptId1] = useState(undefined);\n  const [attemptAddress1, setAttemptAddress1] = useState(undefined);\n  const [attemptUsername1, setAttemptUsername1] = useState(undefined);\n  const [attemptDeadline1, setAttemptDeadline1] = useState(undefined);\n  const [totalGameEntriesGame1, settotalGameEntriesGame1] = useState(false); // Leaderboard\n\n  const [game1LeaderBoardIndex, setgame1LeaderBoardIndex] = useState([\"Loading\"]);\n  const [game1LeaderBoardGameID, setgame1LeaderBoardGameID] = useState([\"Loading\"]);\n  const [game1LeaderBoardAddress, setgame1LeaderBoardAddress] = useState([\"Loading\"]);\n  const [game1LeaderBoardEntered, setgame1LeaderBoardEntered] = useState([\"Loading\"]);\n  const [game1LeaderBoardUsername, setgame1LeaderBoardUsername] = useState([\"Loading\"]);\n  const [game1LeaderBoardTries, setgame1LeaderBoardTries] = useState([\"Loading\"]);\n  const [game1LeaderBoardStage, setgame1LeaderBoardStage] = useState([\"Loading\"]);\n  const [game1LeaderBoard, setgame1LeaderBoard] = useState([\"Loading\"]);\n  const [game1UserList, setGame1UserList] = useState([\"Loading\"]); // Leaderbaord Address Search\n\n  const [state_leaderboardAddressSearch_huntid_game1, setleaderboardAddressSearch_huntid_game1] = useState(false);\n  const [state_leaderboardAddressSearch_address_game1, setleaderboardAddressSearch_address_game1] = useState(false);\n  const [state_leaderboardAddressSearch_entered_game1, setleaderboardAddressSearch_entered_game1] = useState(false);\n  const [state_leaderboardAddressSearch_username_game1, setleaderboardAddressSearch_username_game1] = useState(false);\n  const [state_leaderboardAddressSearch_tries_game1, setleaderboardAddressSearch_tries_game1] = useState(false);\n  const [state_leaderboardAddressSearch_stage_game1, setleaderboardAddressSearch_stage_game1] = useState(false);\n  const [state_WinnerEstPrizeGame1, setWinnerEstPrizeGame1] = useState(false); // User Levels\n\n  const [userLevel1Game1, setUserLevel1Game1] = useState(false);\n  const [userLevel2Game1, setUserLevel2Game1] = useState(false);\n  const [userLevel3Game1, setUserLevel3Game1] = useState(false);\n  const [userLevel4Game1, setUserLevel4Game1] = useState(false); // GAME 2\n\n  const [game2_id, setGame2_id] = useState(undefined);\n  const [game2_live, setGame2_live] = useState(undefined);\n  const [game2_prize, setGame2_prize] = useState(undefined);\n  const [game2_question_hash, setGame2_question_hash] = useState(undefined);\n  const [game2_time_lock_cost, setgame2_time_lock_cost] = useState(undefined);\n  const [game2_submit_secret_cost, setGame2_submit_secret_cost] = useState(undefined);\n  const [game2_riddle, setGame2_riddle] = useState(undefined);\n  const [game2_clue, setGame2_clue] = useState(undefined);\n  const [game2_head_start_time, setGame2_head_start_time] = useState(undefined);\n  const [game2_entry_limit, setGame2_entry_limit] = useState(undefined);\n  const [game2_entry_cost, setGame2_entry_cost] = useState(undefined);\n  const [allGame2_id, setallGame2_id] = useState(undefined);\n  const [allGame2_user_front_of_que, setallGame2_user_front_of_que] = useState(undefined);\n  const [allGame2_deadline_time, setallGame2_deadline] = useState(undefined);\n  const [allGame2_username, setallGame2_username] = useState(undefined);\n  const [allGame2_total_game_tries, setallGame2_total_game_tries] = useState(undefined);\n  const [countGame2, setTimeGame2] = useState(90);\n  const [countGame2DeadlineTrue, setcountGame2DeadlineTrue] = useState(false);\n  const [game2numberOfEntries, setGame2numberOfEntries] = useState(0);\n  const [game2huntEntries, setGame2huntEntries] = useState(undefined);\n  const [userGame2_id, setUserGame2_id] = useState(undefined);\n  const [userEntered_game2, setUserEntered_game2] = useState(undefined);\n  const [userGame2_headstart_time, setUserGame2_headstart_time] = useState(undefined);\n  const [userGame2_live, setUserGame2_live] = useState(undefined);\n  const [winning_address2, setWinning_address2] = useState(undefined);\n  const [treasure_found2, setTreasure_found2] = useState(undefined);\n  const [winning_prize2, setWinning_prize2] = useState(undefined);\n  const [question_hash_solved2, setQuestion_hash_solved2] = useState(undefined);\n  const [winning_message2, setWinning_message2] = useState(undefined);\n  const [attemptId2, setAttemptId2] = useState(undefined);\n  const [attemptAddress2, setAttemptAddress2] = useState(undefined);\n  const [attemptUsername2, setAttemptUsername2] = useState(undefined);\n  const [attemptDeadline2, setAttemptDeadline2] = useState(undefined);\n  const [loaded, setloaded] = useState(false);\n  const [totalGameEntriesGame2, settotalGameEntriesGame2] = useState(false);\n  const [globalNumberOfTries, setGlobalNumberOfTries] = useState(false); // Leaderboard\n\n  const [game2LeaderBoardIndex, setgame2LeaderBoardIndex] = useState([\"Loading\"]);\n  const [game2LeaderBoardGameID, setgame2LeaderBoardGameID] = useState([\"Loading\"]);\n  const [game2LeaderBoardAddress, setgame2LeaderBoardAddress] = useState([\"Loading\"]);\n  const [game2LeaderBoardEntered, setgame2LeaderBoardEntered] = useState([\"Loading\"]);\n  const [game2LeaderBoardUsername, setgame2LeaderBoardUsername] = useState([\"Loading\"]);\n  const [game2LeaderBoardTries, setgame2LeaderBoardTries] = useState([\"Loading\"]);\n  const [game2LeaderBoardStage, setgame2LeaderBoardStage] = useState([\"Loading\"]);\n  const [game2LeaderBoard, setgame2LeaderBoard] = useState([\"Loading\"]);\n  const [game2UserList, setGame2UserList] = useState([\"Loading\"]); // Leaderbaord Address Search\n\n  const [state_leaderboardAddressSearch_huntid_game2, setleaderboardAddressSearch_huntid_game2] = useState(false);\n  const [state_leaderboardAddressSearch_address_game2, setleaderboardAddressSearch_address_game2] = useState(false);\n  const [state_leaderboardAddressSearch_entered_game2, setleaderboardAddressSearch_entered_game2] = useState(false);\n  const [state_leaderboardAddressSearch_username_game2, setleaderboardAddressSearch_username_game2] = useState(false);\n  const [state_leaderboardAddressSearch_tries_game2, setleaderboardAddressSearch_tries_game2] = useState(false);\n  const [state_leaderboardAddressSearch_stage_game2, setleaderboardAddressSearch_stage_game2] = useState(false);\n  const [state_WinnerEstPrizeGame2, setWinnerEstPrizeGame2] = useState(false); // User Levels\n\n  const [userLevel1Game2, setUserLevel1Game2] = useState(false);\n  const [userLevel2Game2, setUserLevel2Game2] = useState(false);\n  const [userLevel3Game2, setUserLevel3Game2] = useState(false);\n  const [userLevel4Game2, setUserLevel4Game2] = useState(false);\n  useEffect(() => {\n    const init = async () => {\n      //creating function to load ip address from the API\n      // const res = await axios.get('https://geolocation-db.com/json/')\n      // console.log(res,\"herererererere\");\n      // setIP(res.data.IPv4)\n      console.log(localStorage, \"item local\"); // {\"country_code\":\"IT\",\"country_name\":\"Italy\",\"city\":null,\"postal\":null,\"latitude\":43.1479,\"longitude\":12.1097,\"IPv4\":\"149.71.134.27\",\"state\":null}\n\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n\n      const abi = require('./TreasureBlox.abi.json');\n\n      const abiToken = require('./TreasureBloxToken.abi.json'); // Set the provider\n      // web3.setProvider(new web3.providers.WebsocketProvider('ws://localhost:8545'));\n      // this.web3.setProvider(new this.web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/'));\n      // LOCAL\n      // const contract = new web3.eth.Contract(abi,\"localhost:8545\" && \"0x9987602E9e9A76CbA7e9DB9217A0962BA8F9e605\");\n      // MainNet\n      // const contract = new web3.eth.Contract(abi,\"https://bsc-dataseed.binance.org/\" && \"0x845f23Ae63b5d03a363f216Ce0BAD4FB12259930\");\n      // Proxy 0x359a72d9F33685c025A6435fE1Cb4dF8fF6736B6\n      // GameV2 0xE2f3578757fe29a481D0221A6d1Ce7A33Ae01170\n\n\n      const contract = new web3.eth.Contract(abi, \"https://bsc-dataseed.binance.org/\" && \"0x1e59C9EEE5AD272464335deDB5abC466ef9a6643\");\n      const gameAddress = \"0x1e59C9EEE5AD272464335deDB5abC466ef9a6643\"; // const contract = new web3.eth.Contract(abi,\"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0xd34ac2bC3a7851d586EdDc3819a5c0Eea84563A3\");\n      // const gameAddress = \"0xd34ac2bC3a7851d586EdDc3819a5c0Eea84563A3\"\n\n      setGameContractAddress(gameAddress);\n      const tokenContract = new web3.eth.Contract(abiToken, \"https://bsc-dataseed.binance.org/\" && \"0x845f23Ae63b5d03a363f216Ce0BAD4FB12259930\"); // const tokenContract = new web3.eth.Contract(abiToken,\"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0x4203b43Bb1c245529d5b6dA0F53fc263194D16ba\");\n      // TestNet\n      // const contract = new web3.eth.Contract(abi,\"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0xE2f3578757fe29a481D0221A6d1Ce7A33Ae01170\");\n      // Sstart Data Calls\n\n      const decimals = await tokenContract.methods.decimals().call().then(console.log('Yes'));\n      var totalTreasure = await tokenContract.methods.balanceOf(\"0xbb4e46e5407d69b7a8e5948703C7bf3214f84295\").call();\n      totalTreasure = totalTreasure.substring(0, tokenContract.length - 18);\n      console.log(totalTreasure, \"Total Treasure token contract\"); // const owner = await contract.methods._owner().call();\n      // const marketingWallet = await contract.methods.marketingWallet().call().then(console.log('marketing Wallet Complete'));\n      //\n      // const total_supply = await contract.methods.totalSupply().call();\n      // const treasure_chest = await contract.methods.treasureChest().call();\n\n      setWeb3(web3);\n      setAccounts(accounts[0]);\n      setContract(contract);\n      setDecimals(decimals);\n      setTotalTreasure(totalTreasure);\n      setTokenContract(tokenContract);\n      setWallet_for_google(\"w=\" + accounts.toString()); // This Handels the countdown time and collecting information every 1 second so the counter goes down\n\n      const timer = window.setInterval(async () => {\n        var moment = require('moment'); // require\n        // GET GAMES\n        // GAME 1\n\n\n        const game1 = await contract.methods.Games(1).call();\n        const game1_id = await game1[0];\n        const game1_live = await game1[1];\n        var game1_prize = await game1[2]; // Local Testing\n        // var winnerEstPrizeGame1 = Math.round(game1_prize*.3);\n\n        var winnerEstPrizeGame1 = game1_prize.substring(0, Math.round(game1_prize * .3).length - 18);\n        setWinnerEstPrizeGame1(winnerEstPrizeGame1);\n        game1_prize = game1_prize.substring(0, game1_prize.length - 18);\n        const game1_question_hash = await game1[3];\n        var game1_time_lock_cost = await game1[4];\n        game1_time_lock_cost = game1_time_lock_cost.substring(0, game1_time_lock_cost.length - 18);\n        var game1_submit_secret_cost = await game1[5];\n        game1_submit_secret_cost = game1_submit_secret_cost.substring(0, game1_submit_secret_cost.length - 18);\n        const game1_riddle = await game1[6];\n        const game1_clue = await game1[7];\n        const game1_head_start_time = await game1[8];\n        const game1_entry_limit = await game1[9];\n        var game1_entry_cost = await game1[10];\n        game1_entry_cost = game1_entry_cost.substring(0, game1_entry_cost.length - 18);\n        setGame1_id(game1_id);\n        setGame1_live(game1_live);\n        setGame1_prize(game1_prize);\n        setGame1_question_hash(game1_question_hash);\n        setgame1_time_lock_cost(game1_time_lock_cost);\n        setGame1_submit_secret_cost(game1_submit_secret_cost);\n        setGame1_riddle(game1_riddle);\n        setGame1_clue(game1_clue);\n        setGame1_head_start_time(game1_head_start_time);\n        setGame1_entry_limit(game1_entry_limit);\n        setGame1_entry_cost(game1_entry_cost); // GAME 2\n\n        const game2 = await contract.methods.Games(2).call();\n        const game2_id = await game2[0];\n        const game2_live = await game2[1];\n        var game2_prize = await game2[2]; // Local Testing\n        // var winnerEstPrizeGame2 = Math.round(game2_prize*.3);\n\n        var winnerEstPrizeGame2 = game2_prize.substring(0, Math.round(game2_prize * .3).length - 18);\n        setWinnerEstPrizeGame2(winnerEstPrizeGame2);\n        game2_prize = game2_prize.substring(0, game2_prize.length - 18);\n        const game2_question_hash = await game2[3];\n        var game2_time_lock_cost = await game2[4];\n        game2_time_lock_cost = game2_time_lock_cost.substring(0, game2_time_lock_cost.length - 18);\n        var game2_submit_secret_cost = await game2[5];\n        game2_submit_secret_cost = game2_submit_secret_cost.substring(0, game2_submit_secret_cost.length - 18);\n        const game2_riddle = await game2[6];\n        const game2_clue = await game2[7];\n        const game2_head_start_time = await game2[8];\n        const game2_entry_limit = await game2[9];\n        var game2_entry_cost = await game2[10];\n        game2_entry_cost = game2_entry_cost.substring(0, game2_entry_cost.length - 18);\n        setGame2_id(game2_id);\n        setGame2_live(game2_live);\n        setGame2_prize(game2_prize);\n        setGame2_question_hash(game2_question_hash);\n        setgame2_time_lock_cost(game2_time_lock_cost);\n        setGame2_submit_secret_cost(game2_submit_secret_cost);\n        setGame2_riddle(game2_riddle);\n        setGame2_clue(game2_clue);\n        setGame2_head_start_time(game2_head_start_time);\n        setGame2_entry_limit(game2_entry_limit);\n        setGame2_entry_cost(game2_entry_cost); // GLOBAL\n\n        const globalTries = await contract.methods.totalumberOfTries().call();\n        setGlobalNumberOfTries(globalTries); // GET ALL GAME TIMELINES AND gamesTriess\n        // GAME 1\n\n        const allGame1 = await contract.methods.allGames(1).call();\n        const allGame1_id = await allGame1[0];\n        const allGame1_user_front_of_que = await allGame1[1];\n        const allGame1_deadline_time = await allGame1[2];\n        const allGame1_username = await allGame1[3];\n        const allGame1_total_game_tries = await allGame1[4];\n        const numberOfEntriesGame1 = await contract.methods.numberOfEntries(1).call();\n        const game1huntEntries = await contract.methods.huntEntries(accounts[0], 1).call();\n        const userGame1_id = await game1huntEntries[0];\n        const userEntered_game1 = await game1huntEntries[1];\n        const userGame1_headstart_time = await game1huntEntries[2];\n        const userGame1_live = await game1huntEntries[3];\n        const pot1AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(1).call();\n        const winning_address1 = await pot1AnsweredCorrectly[0];\n        const treasure_found1 = await pot1AnsweredCorrectly[1];\n        var winning_prize1 = await pot1AnsweredCorrectly[2];\n        winning_prize1 = winning_prize1.substring(0, winning_prize1.length - 18);\n        const question_hash_solved1 = await pot1AnsweredCorrectly[3];\n        const winning_message1 = await pot1AnsweredCorrectly[4];\n        const getAllLatestGameAttempts1 = await contract.methods.getAllLatestGameAttempts(1).call();\n        const attemptId1 = await getAllLatestGameAttempts1[0];\n        const attemptAddress1 = await getAllLatestGameAttempts1[1];\n        const attemptDeadline1 = await getAllLatestGameAttempts1[2];\n        const attemptUsername1 = await getAllLatestGameAttempts1[3];\n        const entriesGame1 = await contract.methods.numberOfEntries(1).call();\n        settotalGameEntriesGame1(entriesGame1); // Fetches New Games if required\n        // const item = await contract.getPastEvents('setGameEvent',{});\n        // console.log(item[0].returnValues[0])\n        // console.log(item[0].returnValues[1])\n        // console.log(item[0].returnValues[2])\n\n        var currentStartDate = Date();\n        var startDate = new Date(currentStartDate); // // Hours part from the timestamp\n        // var startDateHours = startDate.getHours();\n        // // Minutes part from the timestamp\n        // var startDateMinutes = startDate.getMinutes();\n        // // Seconds part from the timestamp\n        // var startDateSeconds = startDate.getSeconds();\n        // Do\n\n        var endDateGame1 = new Date(allGame1_deadline_time * 1000); // // Hours part from the timestamp\n        // var endDateHours = endDate.getHours();\n        // // Minutes part from the timestamp\n        // var endDateMinutes = endDate.getMinutes();\n        // // Seconds part from the timestamp\n        // var endDateSeconds = endDate.getSeconds();\n\n        function getDifferenceInDays(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / (1000 * 60 * 60 * 24);\n        }\n\n        function getDifferenceInHours(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / (1000 * 60 * 60);\n        }\n\n        function getDifferenceInMinutes(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / (1000 * 60);\n        }\n\n        function getDifferenceInSeconds(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / 1000;\n        } // console.log(getDifferenceInDays(endDate, startDate));\n        // console.log(getDifferenceInHours(endDate, startDate));\n        // console.log(getDifferenceInMinutes(endDate, startDate));\n        // console.log(getDifferenceInSeconds(startDate, endDateGame1));\n\n\n        var timeGame1 = Math.abs(getDifferenceInSeconds(startDate, endDateGame1));\n        setTimeGame1(timeGame1);\n        setTimeGame1(prevTime => prevTime - 1); // <-- Change this line!\n\n        setallGame1_id(allGame1_id);\n        setallGame1_user_front_of_que(allGame1_user_front_of_que);\n        setallGame1_deadline(allGame1_deadline_time);\n        setallGame1_username(allGame1_username);\n        console.log(\"username past: \", allGame1_username);\n        setallGame1_total_game_tries(allGame1_total_game_tries);\n\n        if (endDateGame1 - 1 >= startDate) {\n          setcountGame1DeadlineTrue(true);\n        } else {\n          setcountGame1DeadlineTrue(false);\n        }\n\n        setGame1numberOfEntries(entriesGame1);\n        setUserGame1_id(userGame1_id);\n        setUserEntered_game1(userEntered_game1);\n        setUserGame1_headstart_time(userGame1_headstart_time);\n        setUserGame1_live(userGame1_live);\n        setWinning_address1(winning_address1);\n        setTreasure_found1(treasure_found1);\n        setWinning_prize1(winning_prize1);\n        setQuestion_hash_solved1(question_hash_solved1);\n        setWinning_message1(winning_message1);\n        setAttemptId1(attemptId1);\n        setAttemptAddress1(attemptAddress1);\n        setAttemptUsername1(attemptUsername1);\n        setAttemptDeadline1(attemptDeadline1); // LeaderBoardAddressSearch\n\n        const leaderboardAddressSearch = await contract.methods.leaderboardAddressMapping(accounts[0], 1).call();\n        var leaderboardAddressSearch_huntid_game1 = await leaderboardAddressSearch[0];\n        var leaderboardAddressSearch_address_game1 = await leaderboardAddressSearch[1];\n        var leaderboardAddressSearch_entered_game1 = await leaderboardAddressSearch[2];\n        var leaderboardAddressSearch_username_game1 = await leaderboardAddressSearch[3];\n        var leaderboardAddressSearch_tries_game1 = await leaderboardAddressSearch[4];\n        var leaderboardAddressSearch_stage_game1 = await leaderboardAddressSearch[5];\n        setleaderboardAddressSearch_huntid_game1(leaderboardAddressSearch_huntid_game1);\n        setleaderboardAddressSearch_address_game1(leaderboardAddressSearch_address_game1);\n        setleaderboardAddressSearch_entered_game1(leaderboardAddressSearch_entered_game1);\n        setleaderboardAddressSearch_username_game1(leaderboardAddressSearch_username_game1);\n        setleaderboardAddressSearch_tries_game1(leaderboardAddressSearch_tries_game1);\n        setleaderboardAddressSearch_stage_game1(leaderboardAddressSearch_stage_game1); // User Levels\n\n        if (leaderboardAddressSearch_stage_game1 == 0) {\n          setUserLevel1Game1(true);\n        } else if (leaderboardAddressSearch_stage_game1 == 1) {\n          await setUserLevel2Game1(true);\n        } else if (leaderboardAddressSearch_stage_game1 == 2) {\n          setUserLevel3Game1(true);\n        } else if (leaderboardAddressSearch_stage_game1 == 3) {\n          setUserLevel4Game1(true);\n        } else {\n          setUserLevel1Game1(true);\n        }\n\n        const noOfEntrys = await contract.methods.numberOfEntries(1).call(); // LeaderBoard\n\n        var game1_leaderboard = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard1 = await leaderBoard;\n          game1_leaderboard.push(leaderboard1);\n        }\n\n        setgame1LeaderBoard(game1_leaderboard);\n        console.log(game1LeaderBoard, \"here\");\n        var game1_indexrows = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          game1_indexrows.push(i);\n        }\n\n        setgame1LeaderBoardIndex(game1_indexrows);\n        var game1_leaderboard_game_id = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard_game_id = await leaderBoard[0];\n          game1_leaderboard_game_id.push(leaderboard_game_id);\n        }\n\n        setgame1LeaderBoardGameID(game1_leaderboard_game_id);\n        var game1_leaderboard_address = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard_address = await leaderBoard[1];\n          game1_leaderboard_address.push(leaderboard_address);\n        }\n\n        setgame1LeaderBoardAddress(game1_leaderboard_address);\n        var game1_leaderboard_entered = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard_entered = await leaderBoard[2];\n          game1_leaderboard_entered.push(leaderboard_entered);\n        }\n\n        setgame1LeaderBoardEntered(game1_leaderboard_entered);\n        var game1_leaderboard_username = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard_username = await leaderBoard[3];\n          game1_leaderboard_username.push(leaderboard_username);\n        }\n\n        setgame1LeaderBoardUsername(game1_leaderboard_username);\n        var game1_leaderboard_tries = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard_tries = await leaderBoard[4];\n          game1_leaderboard_tries.push(parseInt(leaderboard_tries));\n        }\n\n        setgame1LeaderBoardTries(game1_leaderboard_tries);\n        var game1_leaderboard_stage = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard_stage = await leaderBoard[5];\n          game1_leaderboard_stage.push(leaderboard_stage);\n        }\n\n        setgame1LeaderBoardStage(game1_leaderboard_stage); // GAME 2\n\n        const allGame2 = await contract.methods.allGames(2).call();\n        const allGame2_id = await allGame2[0];\n        const allGame2_user_front_of_que = await allGame2[1];\n        const allGame2_deadline_time = await allGame2[2];\n        const allGame2_username = await allGame2[3];\n        const allGame2_total_game_tries = await allGame2[4];\n        const game2numberOfEntries = await contract.methods.numberOfEntries(2).call();\n        const game2huntEntries = await contract.methods.huntEntries(accounts[0], 2).call();\n        const userGame2_id = await game2huntEntries[0];\n        const userEntered_game2 = await game2huntEntries[1];\n        const userGame2_headstart_time = await game2huntEntries[2];\n        const userGame2_live = await game2huntEntries[3];\n        const numberOfEntriesGame2 = await contract.methods.numberOfEntries(2).call();\n        const pot2AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(2).call();\n        const winning_address2 = await pot2AnsweredCorrectly[0];\n        const treasure_found2 = await pot2AnsweredCorrectly[1];\n        var winning_prize2 = await pot2AnsweredCorrectly[2];\n        winning_prize2 = winning_prize2.substring(0, winning_prize2.length - 18);\n        const question_hash_solved2 = await pot2AnsweredCorrectly[3];\n        const winning_message2 = await pot2AnsweredCorrectly[4];\n        const getAllLatestGameAttempts2 = await contract.methods.getAllLatestGameAttempts(2).call();\n        const attemptId2 = await getAllLatestGameAttempts2[0];\n        const attemptAddress2 = await getAllLatestGameAttempts2[1];\n        const attemptDeadline2 = await getAllLatestGameAttempts2[2];\n        const attemptUsername2 = await getAllLatestGameAttempts2[3];\n        var currentStartDate = Date();\n        var startDate = new Date(currentStartDate); // Do\n\n        var endDateGame2 = new Date(allGame2_deadline_time * 1000);\n        console.log(getDifferenceInSeconds(startDate, endDateGame2));\n        var timeGame2 = Math.abs(getDifferenceInSeconds(startDate, endDateGame2));\n        setTimeGame2(timeGame2);\n        setTimeGame2(prevTime => prevTime - 1); // <-- Change this line!\n\n        setallGame2_id(allGame2_id);\n        setallGame2_user_front_of_que(allGame2_user_front_of_que);\n        setallGame2_deadline(allGame2_deadline_time);\n        setallGame2_username(allGame2_username);\n        setallGame2_total_game_tries(allGame2_total_game_tries);\n\n        if (endDateGame2 - 1 >= startDate) {\n          setcountGame2DeadlineTrue(true);\n        } else {\n          setcountGame2DeadlineTrue(false);\n        }\n\n        setGame2numberOfEntries(game2numberOfEntries);\n        setUserGame2_id(userGame2_id);\n        setUserEntered_game2(userEntered_game2);\n        setUserGame2_headstart_time(userGame2_headstart_time);\n        setUserGame2_live(userGame2_live);\n        setWinning_address2(winning_address2);\n        setTreasure_found2(treasure_found2);\n        setWinning_prize2(winning_prize2);\n        setQuestion_hash_solved2(question_hash_solved2);\n        setWinning_message2(winning_message2);\n        setAttemptId2(attemptId2);\n        setAttemptAddress2(attemptAddress2);\n        setAttemptUsername2(attemptUsername2);\n        setAttemptDeadline2(attemptDeadline2); // LeaderBoardAddressSearch\n\n        const leaderboardAddressSearch2 = await contract.methods.leaderboardAddressMapping(accounts[0], 2).call();\n        var leaderboardAddressSearch_huntid_game2 = await leaderboardAddressSearch2[0];\n        var leaderboardAddressSearch_address_game2 = await leaderboardAddressSearch2[1];\n        var leaderboardAddressSearch_entered_game2 = await leaderboardAddressSearch2[2];\n        var leaderboardAddressSearch_username_game2 = await leaderboardAddressSearch2[3];\n        var leaderboardAddressSearch_tries_game2 = await leaderboardAddressSearch2[4];\n        var leaderboardAddressSearch_stage_game2 = await leaderboardAddressSearch2[5];\n        setleaderboardAddressSearch_huntid_game2(leaderboardAddressSearch_huntid_game2);\n        setleaderboardAddressSearch_address_game2(leaderboardAddressSearch_address_game2);\n        setleaderboardAddressSearch_entered_game2(leaderboardAddressSearch_entered_game2);\n        setleaderboardAddressSearch_username_game2(leaderboardAddressSearch_username_game2);\n        setleaderboardAddressSearch_tries_game2(leaderboardAddressSearch_tries_game2);\n        setleaderboardAddressSearch_stage_game2(leaderboardAddressSearch_stage_game2); // User Levels\n\n        if (state_leaderboardAddressSearch_stage_game2 == 0) {\n          setUserLevel1Game2(true);\n        } else if (state_leaderboardAddressSearch_stage_game2 == 1) {\n          setUserLevel2Game2(true);\n        } else if (state_leaderboardAddressSearch_stage_game2 == 2) {\n          setUserLevel3Game2(true);\n        } else if (state_leaderboardAddressSearch_stage_game2 == 3) {\n          setUserLevel4Game2(true);\n        } else {\n          setUserLevel1Game2(true);\n        }\n\n        const noOfEntrys2 = await contract.methods.numberOfEntries(2).call(); // LeaderBoard\n\n        var game2_leaderboard = [];\n\n        for (var i = 0; i < noOfEntrys2; i++) {\n          const leaderBoard2 = await contract.methods.leaderboard(2, i).call();\n          var leaderboard2 = await leaderBoard2;\n          game2_leaderboard.push(leaderboard2);\n        }\n\n        setgame1LeaderBoard(game2_leaderboard);\n        console.log(game2LeaderBoard, \"here\");\n        var game2_indexrows = [];\n\n        for (var i = 0; i < noOfEntrys2; i++) {\n          game2_indexrows.push(i);\n        }\n\n        setgame2LeaderBoardIndex(game2_indexrows);\n        var game2_leaderboard_game_id = [];\n\n        for (var i = 0; i < noOfEntrys2; i++) {\n          const leaderBoard2 = await contract.methods.leaderboard(2, i).call();\n          var leaderboard_game_id2 = await leaderBoard2[0];\n          game2_leaderboard_game_id.push(leaderboard_game_id2);\n        }\n\n        setgame2LeaderBoardGameID(game2_leaderboard_game_id);\n        var game2_leaderboard_address = [];\n\n        for (var i = 0; i < noOfEntrys2; i++) {\n          const leaderBoard2 = await contract.methods.leaderboard(2, i).call();\n          var leaderboard_address2 = await leaderBoard2[1];\n          game2_leaderboard_address.push(leaderboard_address2);\n        }\n\n        setgame2LeaderBoardAddress(game2_leaderboard_address);\n        var game2_leaderboard_entered = [];\n\n        for (var i = 0; i < noOfEntrys2; i++) {\n          const leaderBoard2 = await contract.methods.leaderboard(2, i).call();\n          var leaderboard_entered2 = await leaderBoard2[2];\n          game2_leaderboard_entered.push(leaderboard_entered2);\n        }\n\n        setgame2LeaderBoardEntered(game2_leaderboard_entered);\n        var game2_leaderboard_username = [];\n\n        for (var i = 0; i < noOfEntrys2; i++) {\n          const leaderBoard2 = await contract.methods.leaderboard(2, i).call();\n          var leaderboard_username2 = await leaderBoard2[3];\n          game2_leaderboard_username.push(leaderboard_username2);\n        }\n\n        setgame2LeaderBoardUsername(game2_leaderboard_username);\n        var game2_leaderboard_tries = [];\n\n        for (var i = 0; i < noOfEntrys2; i++) {\n          const leaderBoard2 = await contract.methods.leaderboard(2, i).call();\n          var leaderboard_tries2 = await leaderBoard2[4];\n          game2_leaderboard_tries.push(parseInt(leaderboard_tries2));\n        }\n\n        setgame2LeaderBoardTries(game2_leaderboard_tries);\n        var game2_leaderboard_stage = [];\n\n        for (var i = 0; i < noOfEntrys2; i++) {\n          const leaderBoard2 = await contract.methods.leaderboard(2, i).call();\n          var leaderboard_stage2 = await leaderBoard2[5];\n          game2_leaderboard_stage.push(leaderboard_stage2);\n        }\n\n        setgame2LeaderBoardStage(game2_leaderboard_stage);\n      }, 1000); // End of Game timer code\n    };\n\n    init();\n  }, [web3, accounts, wallet_for_google, ip, contract, tokenContract, decimals, totalTreasure, globalNumberOfTries, gameContractAddress, // GAME1\n  game1_id, game1_live, game1_prize, game1_question_hash, game1_time_lock_cost, game1_submit_secret_cost, game1_riddle, game1_clue, allGame1_id, allGame1_user_front_of_que, allGame1_deadline_time, allGame1_username, allGame1_total_game_tries, countGame1, countGame1DeadlineTrue, game1_head_start_time, game1_entry_limit, game1_entry_cost, game1numberOfEntries, userGame1_id, userEntered_game1, userGame1_headstart_time, userGame1_live, winning_address1, treasure_found1, winning_prize1, question_hash_solved1, winning_message1, attemptId1, attemptUsername1, attemptDeadline1, attemptAddress1, totalGameEntriesGame1, game1LeaderBoardIndex, game1LeaderBoardGameID, game1LeaderBoardAddress, game1LeaderBoardEntered, game1LeaderBoardUsername, game1LeaderBoardTries, game1LeaderBoardStage, game1LeaderBoard, game1UserList, state_leaderboardAddressSearch_huntid_game1, state_leaderboardAddressSearch_address_game1, state_leaderboardAddressSearch_entered_game1, state_leaderboardAddressSearch_username_game1, state_leaderboardAddressSearch_tries_game1, state_leaderboardAddressSearch_stage_game1, state_WinnerEstPrizeGame1, userLevel1Game1, userLevel2Game1, userLevel3Game1, userLevel4Game1, // GAME2\n  game2_id, game2_live, game2_prize, game2_question_hash, game2_time_lock_cost, game2_submit_secret_cost, game2_riddle, game2_clue, allGame2_id, allGame2_user_front_of_que, allGame2_deadline_time, allGame2_username, allGame2_total_game_tries, countGame2, countGame2DeadlineTrue, game2_head_start_time, game2_entry_limit, game2_entry_cost, game2numberOfEntries, userGame2_id, userEntered_game2, userGame2_headstart_time, userGame2_live, winning_address2, treasure_found2, winning_prize2, question_hash_solved2, winning_message2, attemptId2, attemptUsername2, attemptDeadline2, attemptAddress2, totalGameEntriesGame2, game2LeaderBoardIndex, game2LeaderBoardGameID, game2LeaderBoardAddress, game2LeaderBoardEntered, game2LeaderBoardUsername, game2LeaderBoardTries, game2LeaderBoardStage, game2LeaderBoard, game2UserList, state_leaderboardAddressSearch_huntid_game2, state_leaderboardAddressSearch_address_game2, state_leaderboardAddressSearch_entered_game2, state_leaderboardAddressSearch_username_game2, state_leaderboardAddressSearch_tries_game2, state_leaderboardAddressSearch_stage_game2, state_WinnerEstPrizeGame2, userLevel1Game2, userLevel2Game2, userLevel3Game2, userLevel4Game2]);\n\n  const header_play_to_earn = event => {\n    window.dataLayer.push({\n      event: \"wallet_information\",\n      wallet: props.wallet_for_google,\n      wallet_ip: props.ip,\n      url: window.location.pathname,\n      buttonClicked: \"header_play_to_earn\"\n    });\n  };\n\n  const projecthunt = event => {\n    window.dataLayer.push({\n      event: \"wallet_information\",\n      wallet: props.wallet_for_google,\n      wallet_ip: props.ip,\n      url: window.location.pathname,\n      buttonClicked: \"projecthunt_clicked\"\n    });\n  };\n\n  const the_story_so_far = event => {\n    window.dataLayer.push({\n      event: \"wallet_information\",\n      wallet: props.wallet_for_google,\n      wallet_ip: props.ip,\n      url: window.location.pathname,\n      buttonClicked: \"the_story_so_far\"\n    });\n  };\n\n  const white_paper = event => {\n    window.dataLayer.push({\n      event: \"wallet_information\",\n      wallet: props.wallet_for_google,\n      wallet_ip: props.ip,\n      url: window.location.pathname,\n      buttonClicked: \"white_paper\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: height\n    },\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"TreasureBlox | Partnerships \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 996,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 995,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5\",\n      fluid: \"md\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spaceTopHome\",\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          sm: 12,\n          lg: 4,\n          className: \"d-none d-lg-block\",\n          nextIcon: \"\",\n          nextLabel: \"\",\n          children: /*#__PURE__*/_jsxDEV(Carousel.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"d-block w-100 cardRounded \",\n              src: img3,\n              alt: \"First slide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1006,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Carousel.Caption, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Your Treasure Hunt Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1012,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"TITLE OF TREASURE HUNT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(LinkHeader, {\n                to: \"/Partnerships/projecthunt\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"customButton\",\n                  onClick: projecthunt,\n                  to: \"/Partnerships/projecthunt\",\n                  style: {\n                    margin: '10px'\n                  },\n                  children: \"START HERE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1016,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1015,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1002,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 998,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 994,\n    columnNumber: 7\n  }, this);\n};\n\n_s2(ProjectName, \"dxg5mALK9izJS+BBzxbIh+vyEYQ=\", false, function () {\n  return [useWindowSize];\n});\n\n_c = ProjectName;\nexport default ProjectName;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectName\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/Partnerships/Template/projectname.js"],"names":["SingleCard","moment","React","Component","useState","useEffect","useWallet","UseWalletProvider","Timer","HomeCards","HomeHuntCards","HomeFeatureCards","img1","img2","img3","img4","img5","img6","img7","img8","pdf","Helmet","Tooltip","OverlayTrigger","Form","ButtonGroup","ButtonToolbar","CardColumns","CardGroup","Card","Button","Container","Nav","Navbar","NavDropdown","Carousel","BrowserRouter","Router","Switch","Route","Link","HashLink","LinkHeader","TagManager","useWindowSize","windowSize","setWindowSize","width","undefined","height","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","ProjectName","props","web3","setWeb3","accounts","setAccounts","wallet_for_google","setWallet_for_google","console","log","ip","setIP","contract","setContract","tokenContract","setTokenContract","decimals","setDecimals","totalTreasure","setTotalTreasure","gameContractAddress","setGameContractAddress","game1_id","setGame1_id","game1_live","setGame1_live","game1_prize","setGame1_prize","game1_question_hash","setGame1_question_hash","game1_time_lock_cost","setgame1_time_lock_cost","game1_submit_secret_cost","setGame1_submit_secret_cost","game1_riddle","setGame1_riddle","game1_clue","setGame1_clue","game1_head_start_time","setGame1_head_start_time","game1_entry_limit","setGame1_entry_limit","game1_entry_cost","setGame1_entry_cost","allGame1_id","setallGame1_id","allGame1_user_front_of_que","setallGame1_user_front_of_que","allGame1_deadline_time","setallGame1_deadline","allGame1_username","setallGame1_username","allGame1_total_game_tries","setallGame1_total_game_tries","countGame1","setTimeGame1","countGame1DeadlineTrue","setcountGame1DeadlineTrue","game1numberOfEntries","setGame1numberOfEntries","game1huntEntries","setGame1huntEntries","userGame1_id","setUserGame1_id","userEntered_game1","setUserEntered_game1","userGame1_headstart_time","setUserGame1_headstart_time","userGame1_live","setUserGame1_live","winning_address1","setWinning_address1","treasure_found1","setTreasure_found1","winning_prize1","setWinning_prize1","question_hash_solved1","setQuestion_hash_solved1","winning_message1","setWinning_message1","attemptId1","setAttemptId1","attemptAddress1","setAttemptAddress1","attemptUsername1","setAttemptUsername1","attemptDeadline1","setAttemptDeadline1","totalGameEntriesGame1","settotalGameEntriesGame1","game1LeaderBoardIndex","setgame1LeaderBoardIndex","game1LeaderBoardGameID","setgame1LeaderBoardGameID","game1LeaderBoardAddress","setgame1LeaderBoardAddress","game1LeaderBoardEntered","setgame1LeaderBoardEntered","game1LeaderBoardUsername","setgame1LeaderBoardUsername","game1LeaderBoardTries","setgame1LeaderBoardTries","game1LeaderBoardStage","setgame1LeaderBoardStage","game1LeaderBoard","setgame1LeaderBoard","game1UserList","setGame1UserList","state_leaderboardAddressSearch_huntid_game1","setleaderboardAddressSearch_huntid_game1","state_leaderboardAddressSearch_address_game1","setleaderboardAddressSearch_address_game1","state_leaderboardAddressSearch_entered_game1","setleaderboardAddressSearch_entered_game1","state_leaderboardAddressSearch_username_game1","setleaderboardAddressSearch_username_game1","state_leaderboardAddressSearch_tries_game1","setleaderboardAddressSearch_tries_game1","state_leaderboardAddressSearch_stage_game1","setleaderboardAddressSearch_stage_game1","state_WinnerEstPrizeGame1","setWinnerEstPrizeGame1","userLevel1Game1","setUserLevel1Game1","userLevel2Game1","setUserLevel2Game1","userLevel3Game1","setUserLevel3Game1","userLevel4Game1","setUserLevel4Game1","game2_id","setGame2_id","game2_live","setGame2_live","game2_prize","setGame2_prize","game2_question_hash","setGame2_question_hash","game2_time_lock_cost","setgame2_time_lock_cost","game2_submit_secret_cost","setGame2_submit_secret_cost","game2_riddle","setGame2_riddle","game2_clue","setGame2_clue","game2_head_start_time","setGame2_head_start_time","game2_entry_limit","setGame2_entry_limit","game2_entry_cost","setGame2_entry_cost","allGame2_id","setallGame2_id","allGame2_user_front_of_que","setallGame2_user_front_of_que","allGame2_deadline_time","setallGame2_deadline","allGame2_username","setallGame2_username","allGame2_total_game_tries","setallGame2_total_game_tries","countGame2","setTimeGame2","countGame2DeadlineTrue","setcountGame2DeadlineTrue","game2numberOfEntries","setGame2numberOfEntries","game2huntEntries","setGame2huntEntries","userGame2_id","setUserGame2_id","userEntered_game2","setUserEntered_game2","userGame2_headstart_time","setUserGame2_headstart_time","userGame2_live","setUserGame2_live","winning_address2","setWinning_address2","treasure_found2","setTreasure_found2","winning_prize2","setWinning_prize2","question_hash_solved2","setQuestion_hash_solved2","winning_message2","setWinning_message2","attemptId2","setAttemptId2","attemptAddress2","setAttemptAddress2","attemptUsername2","setAttemptUsername2","attemptDeadline2","setAttemptDeadline2","loaded","setloaded","totalGameEntriesGame2","settotalGameEntriesGame2","globalNumberOfTries","setGlobalNumberOfTries","game2LeaderBoardIndex","setgame2LeaderBoardIndex","game2LeaderBoardGameID","setgame2LeaderBoardGameID","game2LeaderBoardAddress","setgame2LeaderBoardAddress","game2LeaderBoardEntered","setgame2LeaderBoardEntered","game2LeaderBoardUsername","setgame2LeaderBoardUsername","game2LeaderBoardTries","setgame2LeaderBoardTries","game2LeaderBoardStage","setgame2LeaderBoardStage","game2LeaderBoard","setgame2LeaderBoard","game2UserList","setGame2UserList","state_leaderboardAddressSearch_huntid_game2","setleaderboardAddressSearch_huntid_game2","state_leaderboardAddressSearch_address_game2","setleaderboardAddressSearch_address_game2","state_leaderboardAddressSearch_entered_game2","setleaderboardAddressSearch_entered_game2","state_leaderboardAddressSearch_username_game2","setleaderboardAddressSearch_username_game2","state_leaderboardAddressSearch_tries_game2","setleaderboardAddressSearch_tries_game2","state_leaderboardAddressSearch_stage_game2","setleaderboardAddressSearch_stage_game2","state_WinnerEstPrizeGame2","setWinnerEstPrizeGame2","userLevel1Game2","setUserLevel1Game2","userLevel2Game2","setUserLevel2Game2","userLevel3Game2","setUserLevel3Game2","userLevel4Game2","setUserLevel4Game2","init","localStorage","getWeb3","eth","getAccounts","abi","require","abiToken","Contract","gameAddress","methods","call","then","balanceOf","substring","length","toString","timer","setInterval","game1","Games","winnerEstPrizeGame1","Math","round","game2","winnerEstPrizeGame2","globalTries","totalumberOfTries","allGame1","allGames","numberOfEntriesGame1","numberOfEntries","huntEntries","pot1AnsweredCorrectly","Pot1AnsweredCorrectly","getAllLatestGameAttempts1","getAllLatestGameAttempts","entriesGame1","currentStartDate","Date","startDate","endDateGame1","getDifferenceInDays","date1","date2","diffInMs","abs","getDifferenceInHours","getDifferenceInMinutes","getDifferenceInSeconds","timeGame1","prevTime","leaderboardAddressSearch","leaderboardAddressMapping","leaderboardAddressSearch_huntid_game1","leaderboardAddressSearch_address_game1","leaderboardAddressSearch_entered_game1","leaderboardAddressSearch_username_game1","leaderboardAddressSearch_tries_game1","leaderboardAddressSearch_stage_game1","noOfEntrys","game1_leaderboard","i","leaderBoard","leaderboard","leaderboard1","push","game1_indexrows","game1_leaderboard_game_id","leaderboard_game_id","game1_leaderboard_address","leaderboard_address","game1_leaderboard_entered","leaderboard_entered","game1_leaderboard_username","leaderboard_username","game1_leaderboard_tries","leaderboard_tries","parseInt","game1_leaderboard_stage","leaderboard_stage","allGame2","numberOfEntriesGame2","pot2AnsweredCorrectly","getAllLatestGameAttempts2","endDateGame2","timeGame2","leaderboardAddressSearch2","leaderboardAddressSearch_huntid_game2","leaderboardAddressSearch_address_game2","leaderboardAddressSearch_entered_game2","leaderboardAddressSearch_username_game2","leaderboardAddressSearch_tries_game2","leaderboardAddressSearch_stage_game2","noOfEntrys2","game2_leaderboard","leaderBoard2","leaderboard2","game2_indexrows","game2_leaderboard_game_id","leaderboard_game_id2","game2_leaderboard_address","leaderboard_address2","game2_leaderboard_entered","leaderboard_entered2","game2_leaderboard_username","leaderboard_username2","game2_leaderboard_tries","leaderboard_tries2","game2_leaderboard_stage","leaderboard_stage2","header_play_to_earn","event","dataLayer","wallet","wallet_ip","url","location","pathname","buttonClicked","projecthunt","the_story_so_far","white_paper","margin"],"mappings":";;;;AAAA;AACA,OAAOA,UAAP,MAAuB,yCAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,OAAO,mBAAP;AACA,OAAO,sCAAP;AACA,OAAO,sCAAP;AACA,OAAO,qCAAP;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD,C,CACA;;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,YAA7C;AAEA,OAAOC,KAAP,MAAkB,oCAAlB;AAEA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,gBAAP,MAA6B,yCAA7B,C,CAEA;;AAEA,OAAOC,IAAP,MAAiB,gDAAjB;AACA,OAAOC,IAAP,MAAiB,4CAAjB;AACA,OAAOC,IAAP,MAAiB,wDAAjB;AACA,OAAOC,IAAP,MAAiB,wDAAjB;AACA,OAAOC,IAAP,MAAiB,wDAAjB;AACA,OAAOC,IAAP,MAAiB,wDAAjB;AACA,OAAOC,IAAP,MAAiB,wDAAjB;AACA,OAAOC,IAAP,MAAiB,wDAAjB;AAIA,OAAOC,GAAP,MAAgB,4DAAhB;AAGA,SAASC,MAAT,QAAuB,cAAvB;AAIA,SAAQC,OAAR,EAAgBC,cAAhB,EAA+BC,IAA/B,EAAoCC,WAApC,EAAgDC,aAAhD,EAA8DC,WAA9D,EAA0EC,SAA1E,EAAoFC,IAApF,EAAyFC,MAAzF,EAAgGC,SAAhG,EAA0GC,GAA1G,EAA8GC,MAA9G,EAAqHC,WAArH,EAAiIC,QAAjI,QAAiJ,iBAAjJ;AAIA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;AAOA,SAASC,QAAQ,IAAIC,UAArB,QAAuC,wBAAvC;AAGA,OAAOC,UAAP,MAAuB,kBAAvB,C,CAGA;;;;AACA,SAASC,aAAT,GAAyB;AAAA;;AACvB;AACA;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B1C,QAAQ,CAAC;AAC3C2C,IAAAA,KAAK,EAAEC,SADoC;AAE3CC,IAAAA,MAAM,EAAED;AAFmC,GAAD,CAA5C;AAKA3C,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,aAAS6C,YAAT,GAAwB;AACtB;AACAJ,MAAAA,aAAa,CAAC;AACZC,QAAAA,KAAK,EAAEI,MAAM,CAACC,UADF;AAEZH,QAAAA,MAAM,EAAEE,MAAM,CAACE;AAFH,OAAD,CAAb;AAID,KARa,CASd;;;AACAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAVc,CAWd;;AACAA,IAAAA,YAAY,GAZE,CAad;;AACA,WAAO,MAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAb;AACD,GAfQ,EAeN,EAfM,CAAT,CARuB,CAuBf;;AACR,SAAOL,UAAP;AACD;;GAzBQD,a;;AA6BT,MAAMY,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAG7B,QAAM;AAAEV,IAAAA,KAAF;AAASE,IAAAA;AAAT,MAAoBL,aAAa,EAAvC;AAGA,QAAM,CAACc,IAAD,EAAMC,OAAN,IAAiBvD,QAAQ,CAAC,IAAD,CAA/B;AACA,QAAM,CAACwD,QAAD,EAAUC,WAAV,IAAyBzD,QAAQ,CAAC,IAAD,CAAvC;AAGA,QAAM,CAAC0D,iBAAD,EAAoBC,oBAApB,IAA4C3D,QAAQ,CAAC,SAAD,CAA1D;AAEA4D,EAAAA,OAAO,CAACC,GAAR,CAAYH,iBAAZ,EAA8B,SAA9B;AACA,QAAM,CAACI,EAAD,EAAKC,KAAL,IAAc/D,QAAQ,CAAC,EAAD,CAA5B;AAIA,QAAM,CAACgE,QAAD,EAAUC,WAAV,IAAyBjE,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACkE,aAAD,EAAeC,gBAAf,IAAmCnE,QAAQ,CAAC,IAAD,CAAjD;AACA,QAAM,CAACoE,QAAD,EAAUC,WAAV,IAAyBrE,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACsE,aAAD,EAAeC,gBAAf,IAAmCvE,QAAQ,CAAC,IAAD,CAAjD;AACA,QAAM,CAACwE,mBAAD,EAAqBC,sBAArB,IAA+CzE,QAAQ,CAAC,IAAD,CAA7D,CArB6B,CAwB/B;;AACE,QAAM,CAAC0E,QAAD,EAAUC,WAAV,IAAyB3E,QAAQ,CAAC4C,SAAD,CAAvC;AACA,QAAM,CAACgC,UAAD,EAAYC,aAAZ,IAA6B7E,QAAQ,CAAC4C,SAAD,CAA3C;AACA,QAAM,CAACkC,WAAD,EAAaC,cAAb,IAA+B/E,QAAQ,CAAC4C,SAAD,CAA7C;AACA,QAAM,CAACoC,mBAAD,EAAqBC,sBAArB,IAA+CjF,QAAQ,CAAC4C,SAAD,CAA7D;AACA,QAAM,CAACsC,oBAAD,EAAsBC,uBAAtB,IAAiDnF,QAAQ,CAAC4C,SAAD,CAA/D;AACA,QAAM,CAACwC,wBAAD,EAA0BC,2BAA1B,IAAyDrF,QAAQ,CAAC4C,SAAD,CAAvE;AACA,QAAM,CAAC0C,YAAD,EAAcC,eAAd,IAAiCvF,QAAQ,CAAC4C,SAAD,CAA/C;AACA,QAAM,CAAC4C,UAAD,EAAYC,aAAZ,IAA6BzF,QAAQ,CAAC4C,SAAD,CAA3C;AACA,QAAM,CAAC8C,qBAAD,EAAuBC,wBAAvB,IAAmD3F,QAAQ,CAAC4C,SAAD,CAAjE;AACA,QAAM,CAACgD,iBAAD,EAAmBC,oBAAnB,IAA2C7F,QAAQ,CAAC4C,SAAD,CAAzD;AACA,QAAM,CAACkD,gBAAD,EAAkBC,mBAAlB,IAAyC/F,QAAQ,CAAC4C,SAAD,CAAvD;AAEA,QAAM,CAACoD,WAAD,EAAaC,cAAb,IAA+BjG,QAAQ,CAAC4C,SAAD,CAA7C;AACA,QAAM,CAACsD,0BAAD,EAA4BC,6BAA5B,IAA6DnG,QAAQ,CAAC4C,SAAD,CAA3E;AACA,QAAM,CAACwD,sBAAD,EAAwBC,oBAAxB,IAAgDrG,QAAQ,CAAC4C,SAAD,CAA9D;AACA,QAAM,CAAC0D,iBAAD,EAAmBC,oBAAnB,IAA2CvG,QAAQ,CAAC4C,SAAD,CAAzD;AACA,QAAM,CAAC4D,yBAAD,EAA2BC,4BAA3B,IAA2DzG,QAAQ,CAAC4C,SAAD,CAAzE;AAEA,QAAM,CAAC8D,UAAD,EAAaC,YAAb,IAA6B3G,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAAC4G,sBAAD,EAAyBC,yBAAzB,IAAsD7G,QAAQ,CAAC,KAAD,CAApE;AAEA,QAAM,CAAC8G,oBAAD,EAAuBC,uBAAvB,IAAkD/G,QAAQ,CAAC,CAAD,CAAhE;AACA,QAAM,CAACgH,gBAAD,EAAmBC,mBAAnB,IAA0CjH,QAAQ,CAAC4C,SAAD,CAAxD;AACA,QAAM,CAACsE,YAAD,EAAeC,eAAf,IAAkCnH,QAAQ,CAAC4C,SAAD,CAAhD;AACA,QAAM,CAACwE,iBAAD,EAAoBC,oBAApB,IAA4CrH,QAAQ,CAAC4C,SAAD,CAA1D;AACA,QAAM,CAAC0E,wBAAD,EAA2BC,2BAA3B,IAA0DvH,QAAQ,CAAC4C,SAAD,CAAxE;AACA,QAAM,CAAC4E,cAAD,EAAiBC,iBAAjB,IAAsCzH,QAAQ,CAAC4C,SAAD,CAApD;AAEA,QAAM,CAAC8E,gBAAD,EAAmBC,mBAAnB,IAA0C3H,QAAQ,CAAC4C,SAAD,CAAxD;AACA,QAAM,CAACgF,eAAD,EAAkBC,kBAAlB,IAAwC7H,QAAQ,CAAC4C,SAAD,CAAtD;AACA,QAAM,CAACkF,cAAD,EAAiBC,iBAAjB,IAAsC/H,QAAQ,CAAC4C,SAAD,CAApD;AACA,QAAM,CAACoF,qBAAD,EAAwBC,wBAAxB,IAAoDjI,QAAQ,CAAC4C,SAAD,CAAlE;AACA,QAAM,CAACsF,gBAAD,EAAmBC,mBAAnB,IAA0CnI,QAAQ,CAAC4C,SAAD,CAAxD;AAEA,QAAM,CAACwF,UAAD,EAAaC,aAAb,IAA8BrI,QAAQ,CAAC4C,SAAD,CAA5C;AACA,QAAM,CAAC0F,eAAD,EAAkBC,kBAAlB,IAAwCvI,QAAQ,CAAC4C,SAAD,CAAtD;AACA,QAAM,CAAC4F,gBAAD,EAAmBC,mBAAnB,IAA0CzI,QAAQ,CAAC4C,SAAD,CAAxD;AACA,QAAM,CAAC8F,gBAAD,EAAmBC,mBAAnB,IAA0C3I,QAAQ,CAAC4C,SAAD,CAAxD;AACA,QAAM,CAACgG,qBAAD,EAAwBC,wBAAxB,IAAoD7I,QAAQ,CAAC,KAAD,CAAlE,CA/D6B,CAiE/B;;AACE,QAAM,CAAC8I,qBAAD,EAAwBC,wBAAxB,IAAoD/I,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAlE;AACA,QAAM,CAACgJ,sBAAD,EAAyBC,yBAAzB,IAAsDjJ,QAAQ,CAAC,CAAC,SAAD,CAAD,CAApE;AACA,QAAM,CAACkJ,uBAAD,EAA0BC,0BAA1B,IAAwDnJ,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAtE;AACA,QAAM,CAACoJ,uBAAD,EAA0BC,0BAA1B,IAAwDrJ,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAtE;AACA,QAAM,CAACsJ,wBAAD,EAA2BC,2BAA3B,IAA0DvJ,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAxE;AACA,QAAM,CAACwJ,qBAAD,EAAwBC,wBAAxB,IAAoDzJ,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAlE;AACA,QAAM,CAAC0J,qBAAD,EAAwBC,wBAAxB,IAAoD3J,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAlE;AAGA,QAAM,CAAC4J,gBAAD,EAAmBC,mBAAnB,IAA0C7J,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAxD;AACA,QAAM,CAAC8J,aAAD,EAAgBC,gBAAhB,IAAoC/J,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAlD,CA5E6B,CA8E7B;;AACA,QAAM,CAACgK,2CAAD,EAA8CC,wCAA9C,IAA0FjK,QAAQ,CAAC,KAAD,CAAxG;AACA,QAAM,CAACkK,4CAAD,EAA+CC,yCAA/C,IAA4FnK,QAAQ,CAAC,KAAD,CAA1G;AACA,QAAM,CAACoK,4CAAD,EAA+CC,yCAA/C,IAA4FrK,QAAQ,CAAC,KAAD,CAA1G;AACA,QAAM,CAACsK,6CAAD,EAAgDC,0CAAhD,IAA8FvK,QAAQ,CAAC,KAAD,CAA5G;AACA,QAAM,CAACwK,0CAAD,EAA6CC,uCAA7C,IAAwFzK,QAAQ,CAAC,KAAD,CAAtG;AACA,QAAM,CAAC0K,0CAAD,EAA6CC,uCAA7C,IAAwF3K,QAAQ,CAAC,KAAD,CAAtG;AACA,QAAM,CAAC4K,yBAAD,EAA4BC,sBAA5B,IAAsD7K,QAAQ,CAAC,KAAD,CAApE,CArF6B,CAuF/B;;AAGE,QAAM,CAAC8K,eAAD,EAAiBC,kBAAjB,IAAuC/K,QAAQ,CAAC,KAAD,CAArD;AACA,QAAM,CAACgL,eAAD,EAAiBC,kBAAjB,IAAuCjL,QAAQ,CAAC,KAAD,CAArD;AACA,QAAM,CAACkL,eAAD,EAAiBC,kBAAjB,IAAuCnL,QAAQ,CAAC,KAAD,CAArD;AACA,QAAM,CAACoL,eAAD,EAAiBC,kBAAjB,IAAuCrL,QAAQ,CAAC,KAAD,CAArD,CA7F6B,CAiG/B;;AAEE,QAAM,CAACsL,QAAD,EAAUC,WAAV,IAAyBvL,QAAQ,CAAC4C,SAAD,CAAvC;AACA,QAAM,CAAC4I,UAAD,EAAYC,aAAZ,IAA6BzL,QAAQ,CAAC4C,SAAD,CAA3C;AACA,QAAM,CAAC8I,WAAD,EAAaC,cAAb,IAA+B3L,QAAQ,CAAC4C,SAAD,CAA7C;AACA,QAAM,CAACgJ,mBAAD,EAAqBC,sBAArB,IAA+C7L,QAAQ,CAAC4C,SAAD,CAA7D;AACA,QAAM,CAACkJ,oBAAD,EAAsBC,uBAAtB,IAAiD/L,QAAQ,CAAC4C,SAAD,CAA/D;AACA,QAAM,CAACoJ,wBAAD,EAA0BC,2BAA1B,IAAyDjM,QAAQ,CAAC4C,SAAD,CAAvE;AACA,QAAM,CAACsJ,YAAD,EAAcC,eAAd,IAAiCnM,QAAQ,CAAC4C,SAAD,CAA/C;AACA,QAAM,CAACwJ,UAAD,EAAYC,aAAZ,IAA6BrM,QAAQ,CAAC4C,SAAD,CAA3C;AACA,QAAM,CAAC0J,qBAAD,EAAuBC,wBAAvB,IAAmDvM,QAAQ,CAAC4C,SAAD,CAAjE;AACA,QAAM,CAAC4J,iBAAD,EAAmBC,oBAAnB,IAA2CzM,QAAQ,CAAC4C,SAAD,CAAzD;AACA,QAAM,CAAC8J,gBAAD,EAAkBC,mBAAlB,IAAyC3M,QAAQ,CAAC4C,SAAD,CAAvD;AAEA,QAAM,CAACgK,WAAD,EAAaC,cAAb,IAA+B7M,QAAQ,CAAC4C,SAAD,CAA7C;AACA,QAAM,CAACkK,0BAAD,EAA4BC,6BAA5B,IAA6D/M,QAAQ,CAAC4C,SAAD,CAA3E;AACA,QAAM,CAACoK,sBAAD,EAAwBC,oBAAxB,IAAgDjN,QAAQ,CAAC4C,SAAD,CAA9D;AACA,QAAM,CAACsK,iBAAD,EAAmBC,oBAAnB,IAA2CnN,QAAQ,CAAC4C,SAAD,CAAzD;AACA,QAAM,CAACwK,yBAAD,EAA2BC,4BAA3B,IAA2DrN,QAAQ,CAAC4C,SAAD,CAAzE;AAEA,QAAM,CAAC0K,UAAD,EAAaC,YAAb,IAA6BvN,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACwN,sBAAD,EAAyBC,yBAAzB,IAAsDzN,QAAQ,CAAC,KAAD,CAApE;AAEA,QAAM,CAAC0N,oBAAD,EAAuBC,uBAAvB,IAAkD3N,QAAQ,CAAC,CAAD,CAAhE;AACA,QAAM,CAAC4N,gBAAD,EAAmBC,mBAAnB,IAA0C7N,QAAQ,CAAC4C,SAAD,CAAxD;AACA,QAAM,CAACkL,YAAD,EAAeC,eAAf,IAAkC/N,QAAQ,CAAC4C,SAAD,CAAhD;AACA,QAAM,CAACoL,iBAAD,EAAoBC,oBAApB,IAA4CjO,QAAQ,CAAC4C,SAAD,CAA1D;AACA,QAAM,CAACsL,wBAAD,EAA2BC,2BAA3B,IAA0DnO,QAAQ,CAAC4C,SAAD,CAAxE;AACA,QAAM,CAACwL,cAAD,EAAiBC,iBAAjB,IAAsCrO,QAAQ,CAAC4C,SAAD,CAApD;AAEA,QAAM,CAAC0L,gBAAD,EAAmBC,mBAAnB,IAA0CvO,QAAQ,CAAC4C,SAAD,CAAxD;AACA,QAAM,CAAC4L,eAAD,EAAkBC,kBAAlB,IAAwCzO,QAAQ,CAAC4C,SAAD,CAAtD;AACA,QAAM,CAAC8L,cAAD,EAAiBC,iBAAjB,IAAsC3O,QAAQ,CAAC4C,SAAD,CAApD;AACA,QAAM,CAACgM,qBAAD,EAAwBC,wBAAxB,IAAoD7O,QAAQ,CAAC4C,SAAD,CAAlE;AACA,QAAM,CAACkM,gBAAD,EAAmBC,mBAAnB,IAA0C/O,QAAQ,CAAC4C,SAAD,CAAxD;AAEA,QAAM,CAACoM,UAAD,EAAaC,aAAb,IAA8BjP,QAAQ,CAAC4C,SAAD,CAA5C;AACA,QAAM,CAACsM,eAAD,EAAkBC,kBAAlB,IAAwCnP,QAAQ,CAAC4C,SAAD,CAAtD;AACA,QAAM,CAACwM,gBAAD,EAAmBC,mBAAnB,IAA0CrP,QAAQ,CAAC4C,SAAD,CAAxD;AACA,QAAM,CAAC0M,gBAAD,EAAmBC,mBAAnB,IAA0CvP,QAAQ,CAAC4C,SAAD,CAAxD;AACA,QAAM,CAAC4M,MAAD,EAASC,SAAT,IAAsBzP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAAC0P,qBAAD,EAAwBC,wBAAxB,IAAoD3P,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAM,CAAC4P,mBAAD,EAAsBC,sBAAtB,IAAgD7P,QAAQ,CAAC,KAAD,CAA9D,CA3I6B,CA6I7B;;AACE,QAAM,CAAC8P,qBAAD,EAAwBC,wBAAxB,IAAoD/P,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAlE;AACA,QAAM,CAACgQ,sBAAD,EAAyBC,yBAAzB,IAAsDjQ,QAAQ,CAAC,CAAC,SAAD,CAAD,CAApE;AACA,QAAM,CAACkQ,uBAAD,EAA0BC,0BAA1B,IAAwDnQ,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAtE;AACA,QAAM,CAACoQ,uBAAD,EAA0BC,0BAA1B,IAAwDrQ,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAtE;AACA,QAAM,CAACsQ,wBAAD,EAA2BC,2BAA3B,IAA0DvQ,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAxE;AACA,QAAM,CAACwQ,qBAAD,EAAwBC,wBAAxB,IAAoDzQ,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAlE;AACA,QAAM,CAAC0Q,qBAAD,EAAwBC,wBAAxB,IAAoD3Q,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAlE;AAGA,QAAM,CAAC4Q,gBAAD,EAAmBC,mBAAnB,IAA0C7Q,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAxD;AACA,QAAM,CAAC8Q,aAAD,EAAgBC,gBAAhB,IAAoC/Q,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAlD,CAxJ2B,CA0J3B;;AACA,QAAM,CAACgR,2CAAD,EAA8CC,wCAA9C,IAA0FjR,QAAQ,CAAC,KAAD,CAAxG;AACA,QAAM,CAACkR,4CAAD,EAA+CC,yCAA/C,IAA4FnR,QAAQ,CAAC,KAAD,CAA1G;AACA,QAAM,CAACoR,4CAAD,EAA+CC,yCAA/C,IAA4FrR,QAAQ,CAAC,KAAD,CAA1G;AACA,QAAM,CAACsR,6CAAD,EAAgDC,0CAAhD,IAA8FvR,QAAQ,CAAC,KAAD,CAA5G;AACA,QAAM,CAACwR,0CAAD,EAA6CC,uCAA7C,IAAwFzR,QAAQ,CAAC,KAAD,CAAtG;AACA,QAAM,CAAC0R,0CAAD,EAA6CC,uCAA7C,IAAwF3R,QAAQ,CAAC,KAAD,CAAtG;AACA,QAAM,CAAC4R,yBAAD,EAA4BC,sBAA5B,IAAsD7R,QAAQ,CAAC,KAAD,CAApE,CAjK2B,CAmK3B;;AAEA,QAAM,CAAC8R,eAAD,EAAiBC,kBAAjB,IAAuC/R,QAAQ,CAAC,KAAD,CAArD;AACA,QAAM,CAACgS,eAAD,EAAiBC,kBAAjB,IAAuCjS,QAAQ,CAAC,KAAD,CAArD;AACA,QAAM,CAACkS,eAAD,EAAiBC,kBAAjB,IAAuCnS,QAAQ,CAAC,KAAD,CAArD;AACA,QAAM,CAACoS,eAAD,EAAiBC,kBAAjB,IAAuCrS,QAAQ,CAAC,KAAD,CAArD;AAIFC,EAAAA,SAAS,CAAC,MAAM;AAGZ,UAAMqS,IAAI,GAAG,YAAW;AACtB;AAEA;AACA;AACA;AAEA1O,MAAAA,OAAO,CAACC,GAAR,CAAY0O,YAAZ,EAAyB,YAAzB,EAPsB,CAQtB;;AAEA,YAAMjP,IAAI,GAAG,MAAMkP,OAAO,EAA1B;AAEA,YAAMhP,QAAQ,GAAG,MAAMF,IAAI,CAACmP,GAAL,CAASC,WAAT,EAAvB;;AAEA,YAAMC,GAAG,GAAGC,OAAO,CAAC,yBAAD,CAAnB;;AACA,YAAMC,QAAQ,GAAGD,OAAO,CAAC,8BAAD,CAAxB,CAfsB,CAgBtB;AACA;AACA;AAEA;AACA;AACA;AACA;AAER;AACA;;;AAEQ,YAAM5O,QAAQ,GAAG,IAAIV,IAAI,CAACmP,GAAL,CAASK,QAAb,CAAsBH,GAAtB,EAA0B,uCAAuC,4CAAjE,CAAjB;AACA,YAAMI,WAAW,GAAG,4CAApB,CA7BsB,CA+BtB;AACA;;AAEAtO,MAAAA,sBAAsB,CAACsO,WAAD,CAAtB;AAEA,YAAM7O,aAAa,GAAG,IAAIZ,IAAI,CAACmP,GAAL,CAASK,QAAb,CAAsBD,QAAtB,EAA+B,uCAAuC,4CAAtE,CAAtB,CApCsB,CAuCtB;AAEA;AACA;AACA;;AACA,YAAMzO,QAAQ,GAAG,MAAMF,aAAa,CAAC8O,OAAd,CAAsB5O,QAAtB,GAAiC6O,IAAjC,GAAwCC,IAAxC,CAA6CtP,OAAO,CAACC,GAAR,CAAY,KAAZ,CAA7C,CAAvB;AAEA,UAAIS,aAAa,GAAG,MAAMJ,aAAa,CAAC8O,OAAd,CAAsBG,SAAtB,CAAgC,4CAAhC,EAA8EF,IAA9E,EAA1B;AACA3O,MAAAA,aAAa,GAAGA,aAAa,CAAC8O,SAAd,CAAwB,CAAxB,EAA2BlP,aAAa,CAACmP,MAAd,GAAqB,EAAhD,CAAhB;AACAzP,MAAAA,OAAO,CAACC,GAAR,CAAYS,aAAZ,EAA0B,+BAA1B,EAhDsB,CAkDtB;AACA;AACA;AACA;AACA;;AACAf,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,WAAW,CAACD,QAAQ,CAAC,CAAD,CAAT,CAAX;AACAS,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAK,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,MAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACAH,MAAAA,gBAAgB,CAACD,aAAD,CAAhB;AAEAP,MAAAA,oBAAoB,CAAC,OAAKH,QAAQ,CAAC8P,QAAT,EAAN,CAApB,CA9DsB,CAgE9B;;AACQ,YAAMC,KAAK,GAAGxQ,MAAM,CAACyQ,WAAP,CAAoB,YAAW;AACzC,YAAI3T,MAAM,GAAG+S,OAAO,CAAC,QAAD,CAApB,CADyC,CACT;AAEhC;AACA;;;AACQ,cAAMa,KAAK,GAAG,MAAMzP,QAAQ,CAACgP,OAAT,CAAiBU,KAAjB,CAAuB,CAAvB,EAA0BT,IAA1B,EAApB;AAEA,cAAMvO,QAAQ,GAAG,MAAM+O,KAAK,CAAC,CAAD,CAA5B;AACA,cAAM7O,UAAU,GAAG,MAAM6O,KAAK,CAAC,CAAD,CAA9B;AACA,YAAI3O,WAAW,GAAG,MAAM2O,KAAK,CAAC,CAAD,CAA7B,CATiC,CAWjC;AACA;;AAEA,YAAIE,mBAAmB,GAAG7O,WAAW,CAACsO,SAAZ,CAAsB,CAAtB,EAAyBQ,IAAI,CAACC,KAAL,CAAW/O,WAAW,GAAC,EAAvB,EAA2BuO,MAA3B,GAAkC,EAA3D,CAA1B;AACAxI,QAAAA,sBAAsB,CAAC8I,mBAAD,CAAtB;AACA7O,QAAAA,WAAW,GAAGA,WAAW,CAACsO,SAAZ,CAAsB,CAAtB,EAAyBtO,WAAW,CAACuO,MAAZ,GAAmB,EAA5C,CAAd;AAGA,cAAMrO,mBAAmB,GAAG,MAAMyO,KAAK,CAAC,CAAD,CAAvC;AACA,YAAIvO,oBAAoB,GAAG,MAAMuO,KAAK,CAAC,CAAD,CAAtC;AACAvO,QAAAA,oBAAoB,GAAGA,oBAAoB,CAACkO,SAArB,CAA+B,CAA/B,EAAkClO,oBAAoB,CAACmO,MAArB,GAA4B,EAA9D,CAAvB;AACA,YAAIjO,wBAAwB,GAAG,MAAMqO,KAAK,CAAC,CAAD,CAA1C;AACArO,QAAAA,wBAAwB,GAAGA,wBAAwB,CAACgO,SAAzB,CAAmC,CAAnC,EAAsChO,wBAAwB,CAACiO,MAAzB,GAAgC,EAAtE,CAA3B;AACA,cAAM/N,YAAY,GAAG,MAAMmO,KAAK,CAAC,CAAD,CAAhC;AACA,cAAMjO,UAAU,GAAG,MAAMiO,KAAK,CAAC,CAAD,CAA9B;AACA,cAAM/N,qBAAqB,GAAG,MAAM+N,KAAK,CAAC,CAAD,CAAzC;AACA,cAAM7N,iBAAiB,GAAG,MAAM6N,KAAK,CAAC,CAAD,CAArC;AACA,YAAI3N,gBAAgB,GAAG,MAAM2N,KAAK,CAAC,EAAD,CAAlC;AACA3N,QAAAA,gBAAgB,GAAGA,gBAAgB,CAACsN,SAAjB,CAA2B,CAA3B,EAA8BtN,gBAAgB,CAACuN,MAAjB,GAAwB,EAAtD,CAAnB;AAGA1O,QAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,QAAAA,aAAa,CAACD,UAAD,CAAb;AACAG,QAAAA,cAAc,CAACD,WAAD,CAAd;AACAG,QAAAA,sBAAsB,CAACD,mBAAD,CAAtB;AACAG,QAAAA,uBAAuB,CAACD,oBAAD,CAAvB;AAEAG,QAAAA,2BAA2B,CAACD,wBAAD,CAA3B;AAEAG,QAAAA,eAAe,CAACD,YAAD,CAAf;AACAG,QAAAA,aAAa,CAACD,UAAD,CAAb;AACAG,QAAAA,wBAAwB,CAACD,qBAAD,CAAxB;AACAG,QAAAA,oBAAoB,CAACD,iBAAD,CAApB;AACAG,QAAAA,mBAAmB,CAACD,gBAAD,CAAnB,CA5CiC,CAgDzC;;AAIQ,cAAMgO,KAAK,GAAG,MAAM9P,QAAQ,CAACgP,OAAT,CAAiBU,KAAjB,CAAuB,CAAvB,EAA0BT,IAA1B,EAApB;AAEA,cAAM3H,QAAQ,GAAG,MAAMwI,KAAK,CAAC,CAAD,CAA5B;AACA,cAAMtI,UAAU,GAAG,MAAMsI,KAAK,CAAC,CAAD,CAA9B;AACA,YAAIpI,WAAW,GAAG,MAAMoI,KAAK,CAAC,CAAD,CAA7B,CAxDiC,CA0DjC;AACA;;AAEA,YAAIC,mBAAmB,GAAGrI,WAAW,CAAC0H,SAAZ,CAAsB,CAAtB,EAAyBQ,IAAI,CAACC,KAAL,CAAWnI,WAAW,GAAC,EAAvB,EAA2B2H,MAA3B,GAAkC,EAA3D,CAA1B;AACAxB,QAAAA,sBAAsB,CAACkC,mBAAD,CAAtB;AACArI,QAAAA,WAAW,GAAGA,WAAW,CAAC0H,SAAZ,CAAsB,CAAtB,EAAyB1H,WAAW,CAAC2H,MAAZ,GAAmB,EAA5C,CAAd;AAIA,cAAMzH,mBAAmB,GAAG,MAAMkI,KAAK,CAAC,CAAD,CAAvC;AACA,YAAIhI,oBAAoB,GAAE,MAAMgI,KAAK,CAAC,CAAD,CAArC;AACAhI,QAAAA,oBAAoB,GAAGA,oBAAoB,CAACsH,SAArB,CAA+B,CAA/B,EAAkCtH,oBAAoB,CAACuH,MAArB,GAA4B,EAA9D,CAAvB;AAEA,YAAIrH,wBAAwB,GAAG,MAAM8H,KAAK,CAAC,CAAD,CAA1C;AACA9H,QAAAA,wBAAwB,GAAGA,wBAAwB,CAACoH,SAAzB,CAAmC,CAAnC,EAAsCpH,wBAAwB,CAACqH,MAAzB,GAAgC,EAAtE,CAA3B;AAEA,cAAMnH,YAAY,GAAG,MAAM4H,KAAK,CAAC,CAAD,CAAhC;AACA,cAAM1H,UAAU,GAAG,MAAM0H,KAAK,CAAC,CAAD,CAA9B;AACA,cAAMxH,qBAAqB,GAAG,MAAMwH,KAAK,CAAC,CAAD,CAAzC;AACA,cAAMtH,iBAAiB,GAAG,MAAMsH,KAAK,CAAC,CAAD,CAArC;AACA,YAAIpH,gBAAgB,GAAG,MAAMoH,KAAK,CAAC,EAAD,CAAlC;AACApH,QAAAA,gBAAgB,GAAGA,gBAAgB,CAAC0G,SAAjB,CAA2B,CAA3B,EAA8B1G,gBAAgB,CAAC2G,MAAjB,GAAwB,EAAtD,CAAnB;AAGA9H,QAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,QAAAA,aAAa,CAACD,UAAD,CAAb;AACAG,QAAAA,cAAc,CAACD,WAAD,CAAd;AACAG,QAAAA,sBAAsB,CAACD,mBAAD,CAAtB;AACAG,QAAAA,uBAAuB,CAACD,oBAAD,CAAvB;AACAG,QAAAA,2BAA2B,CAACD,wBAAD,CAA3B;AACAG,QAAAA,eAAe,CAACD,YAAD,CAAf;AACAG,QAAAA,aAAa,CAACD,UAAD,CAAb;AACAG,QAAAA,wBAAwB,CAACD,qBAAD,CAAxB;AACAG,QAAAA,oBAAoB,CAACD,iBAAD,CAApB;AACAG,QAAAA,mBAAmB,CAACD,gBAAD,CAAnB,CA5FiC,CAkGzC;;AAEA,cAAMsH,WAAW,GAAG,MAAMhQ,QAAQ,CAACgP,OAAT,CAAiBiB,iBAAjB,GAAqChB,IAArC,EAA1B;AAEApD,QAAAA,sBAAsB,CAACmE,WAAD,CAAtB,CAtGyC,CAuG7C;AACA;;AACI,cAAME,QAAQ,GAAG,MAAMlQ,QAAQ,CAACgP,OAAT,CAAiBmB,QAAjB,CAA0B,CAA1B,EAA6BlB,IAA7B,EAAvB;AACA,cAAMjN,WAAW,GAAG,MAAMkO,QAAQ,CAAC,CAAD,CAAlC;AACA,cAAMhO,0BAA0B,GAAG,MAAMgO,QAAQ,CAAC,CAAD,CAAjD;AACA,cAAM9N,sBAAsB,GAAI,MAAM8N,QAAQ,CAAC,CAAD,CAA9C;AACA,cAAM5N,iBAAiB,GAAG,MAAM4N,QAAQ,CAAC,CAAD,CAAxC;AACA,cAAM1N,yBAAyB,GAAG,MAAM0N,QAAQ,CAAC,CAAD,CAAhD;AAEA,cAAME,oBAAoB,GAAG,MAAMpQ,QAAQ,CAACgP,OAAT,CAAiBqB,eAAjB,CAAiC,CAAjC,EAAoCpB,IAApC,EAAnC;AAIA,cAAMjM,gBAAgB,GAAG,MAAMhD,QAAQ,CAACgP,OAAT,CAAiBsB,WAAjB,CAA6B9Q,QAAQ,CAAC,CAAD,CAArC,EAAyC,CAAzC,EAA4CyP,IAA5C,EAA/B;AACA,cAAM/L,YAAY,GAAG,MAAMF,gBAAgB,CAAC,CAAD,CAA3C;AACA,cAAMI,iBAAiB,GAAG,MAAMJ,gBAAgB,CAAC,CAAD,CAAhD;AACA,cAAMM,wBAAwB,GAAI,MAAMN,gBAAgB,CAAC,CAAD,CAAxD;AACA,cAAMQ,cAAc,GAAG,MAAMR,gBAAgB,CAAC,CAAD,CAA7C;AAOA,cAAMuN,qBAAqB,GAAG,MAAMvQ,QAAQ,CAACgP,OAAT,CAAiBwB,qBAAjB,CAAuC,CAAvC,EAA0CvB,IAA1C,EAApC;AACA,cAAMvL,gBAAgB,GAAG,MAAM6M,qBAAqB,CAAC,CAAD,CAApD;AACA,cAAM3M,eAAe,GAAG,MAAM2M,qBAAqB,CAAC,CAAD,CAAnD;AACA,YAAIzM,cAAc,GAAI,MAAMyM,qBAAqB,CAAC,CAAD,CAAjD;AACAzM,QAAAA,cAAc,GAAGA,cAAc,CAACsL,SAAf,CAAyB,CAAzB,EAA4BtL,cAAc,CAACuL,MAAf,GAAsB,EAAlD,CAAjB;AAGA,cAAMrL,qBAAqB,GAAG,MAAMuM,qBAAqB,CAAC,CAAD,CAAzD;AACA,cAAMrM,gBAAgB,GAAG,MAAMqM,qBAAqB,CAAC,CAAD,CAApD;AAEA,cAAME,yBAAyB,GAAG,MAAMzQ,QAAQ,CAACgP,OAAT,CAAiB0B,wBAAjB,CAA0C,CAA1C,EAA6CzB,IAA7C,EAAxC;AACA,cAAM7K,UAAU,GAAG,MAAMqM,yBAAyB,CAAC,CAAD,CAAlD;AACA,cAAMnM,eAAe,GAAG,MAAMmM,yBAAyB,CAAC,CAAD,CAAvD;AACA,cAAM/L,gBAAgB,GAAI,MAAM+L,yBAAyB,CAAC,CAAD,CAAzD;AACA,cAAMjM,gBAAgB,GAAG,MAAMiM,yBAAyB,CAAC,CAAD,CAAxD;AAEA,cAAME,YAAY,GAAG,MAAM3Q,QAAQ,CAACgP,OAAT,CAAiBqB,eAAjB,CAAiC,CAAjC,EAAoCpB,IAApC,EAA3B;AACApK,QAAAA,wBAAwB,CAAC8L,YAAD,CAAxB,CAhJyC,CAkJzC;AACA;AACA;AACA;AACA;;AAGA,YAAIC,gBAAgB,GAAGC,IAAI,EAA3B;AACA,YAAIC,SAAS,GAAG,IAAID,IAAJ,CAASD,gBAAT,CAAhB,CA1JyC,CA2JzC;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,YAAIG,YAAY,GAAG,IAAIF,IAAJ,CAASzO,sBAAsB,GAAG,IAAlC,CAAnB,CAnKyC,CAoKzC;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAS4O,mBAAT,CAA6BC,KAA7B,EAAoCC,KAApC,EAA2C;AACzC,gBAAMC,QAAQ,GAAGvB,IAAI,CAACwB,GAAL,CAASF,KAAK,GAAGD,KAAjB,CAAjB;AACA,iBAAOE,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAf;AACC;;AAEH,iBAASE,oBAAT,CAA8BJ,KAA9B,EAAqCC,KAArC,EAA4C;AAC1C,gBAAMC,QAAQ,GAAGvB,IAAI,CAACwB,GAAL,CAASF,KAAK,GAAGD,KAAjB,CAAjB;AACA,iBAAOE,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAf;AACC;;AAEH,iBAASG,sBAAT,CAAgCL,KAAhC,EAAuCC,KAAvC,EAA8C;AAC5C,gBAAMC,QAAQ,GAAGvB,IAAI,CAACwB,GAAL,CAASF,KAAK,GAAGD,KAAjB,CAAjB;AACA,iBAAOE,QAAQ,IAAI,OAAO,EAAX,CAAf;AACC;;AAEH,iBAASI,sBAAT,CAAgCN,KAAhC,EAAuCC,KAAvC,EAA8C;AAC5C,gBAAMC,QAAQ,GAAGvB,IAAI,CAACwB,GAAL,CAASF,KAAK,GAAGD,KAAjB,CAAjB;AACA,iBAAOE,QAAQ,GAAG,IAAlB;AACC,SA7LsC,CA8LzC;AACA;AACA;AAEA;;;AAEA,YAAIK,SAAS,GAAG5B,IAAI,CAACwB,GAAL,CAASG,sBAAsB,CAACT,SAAD,EAAYC,YAAZ,CAA/B,CAAhB;AAKApO,QAAAA,YAAY,CAAC6O,SAAD,CAAZ;AACA7O,QAAAA,YAAY,CAAC8O,QAAQ,IAAIA,QAAQ,GAAG,CAAxB,CAAZ,CA1MyC,CA0MD;;AAExCxP,QAAAA,cAAc,CAACD,WAAD,CAAd;AACAG,QAAAA,6BAA6B,CAACD,0BAAD,CAA7B;AACAG,QAAAA,oBAAoB,CAACD,sBAAD,CAApB;AACAG,QAAAA,oBAAoB,CAACD,iBAAD,CAApB;AACA1C,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+ByC,iBAA/B;AACAG,QAAAA,4BAA4B,CAACD,yBAAD,CAA5B;;AAEA,YAAIuO,YAAY,GAAC,CAAb,IAAkBD,SAAtB,EAAgC;AAC9BjO,UAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACD,SAFD,MAEO;AACLA,UAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACD;;AAEDE,QAAAA,uBAAuB,CAAC4N,YAAD,CAAvB;AAEAxN,QAAAA,eAAe,CAACD,YAAD,CAAf;AACAG,QAAAA,oBAAoB,CAACD,iBAAD,CAApB;AACAG,QAAAA,2BAA2B,CAACD,wBAAD,CAA3B;AACAG,QAAAA,iBAAiB,CAACD,cAAD,CAAjB;AAEAG,QAAAA,mBAAmB,CAACD,gBAAD,CAAnB;AACAG,QAAAA,kBAAkB,CAACD,eAAD,CAAlB;AACAG,QAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACAG,QAAAA,wBAAwB,CAACD,qBAAD,CAAxB;AACAG,QAAAA,mBAAmB,CAACD,gBAAD,CAAnB;AAEAG,QAAAA,aAAa,CAACD,UAAD,CAAb;AACAG,QAAAA,kBAAkB,CAACD,eAAD,CAAlB;AACAG,QAAAA,mBAAmB,CAACD,gBAAD,CAAnB;AACAG,QAAAA,mBAAmB,CAACD,gBAAD,CAAnB,CAzOyC,CA4OrD;;AAEY,cAAMgN,wBAAwB,GAAG,MAAM1R,QAAQ,CAACgP,OAAT,CAAiB2C,yBAAjB,CAA2CnS,QAAQ,CAAC,CAAD,CAAnD,EAAuD,CAAvD,EAA0DyP,IAA1D,EAAvC;AAGA,YAAI2C,qCAAqC,GAAG,MAAMF,wBAAwB,CAAC,CAAD,CAA1E;AACA,YAAIG,sCAAsC,GAAG,MAAMH,wBAAwB,CAAC,CAAD,CAA3E;AACA,YAAII,sCAAsC,GAAG,MAAMJ,wBAAwB,CAAC,CAAD,CAA3E;AACA,YAAIK,uCAAuC,GAAG,MAAML,wBAAwB,CAAC,CAAD,CAA5E;AACA,YAAIM,oCAAoC,GAAG,MAAMN,wBAAwB,CAAC,CAAD,CAAzE;AACA,YAAIO,oCAAoC,GAAG,MAAMP,wBAAwB,CAAC,CAAD,CAAzE;AAOAzL,QAAAA,wCAAwC,CAAC2L,qCAAD,CAAxC;AACAzL,QAAAA,yCAAyC,CAAC0L,sCAAD,CAAzC;AACAxL,QAAAA,yCAAyC,CAACyL,sCAAD,CAAzC;AACAvL,QAAAA,0CAA0C,CAACwL,uCAAD,CAA1C;AACAtL,QAAAA,uCAAuC,CAACuL,oCAAD,CAAvC;AACArL,QAAAA,uCAAuC,CAACsL,oCAAD,CAAvC,CAlQyC,CAuQzC;;AACA,YAAIA,oCAAoC,IAAI,CAA5C,EAA8C;AAC5ClL,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,SAFD,MAEO,IAAIkL,oCAAoC,IAAI,CAA5C,EAA+C;AAEpD,gBAAMhL,kBAAkB,CAAC,IAAD,CAAxB;AAED,SAJM,MAIA,IAAIgL,oCAAoC,IAAI,CAA5C,EAA8C;AACnD9K,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,SAFM,MAEA,IAAI8K,oCAAoC,IAAI,CAA5C,EAA8C;AACnD5K,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,SAFM,MAEA;AACLN,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AAWD,cAAMmL,UAAU,GAAG,MAAMlS,QAAQ,CAACgP,OAAT,CAAiBqB,eAAjB,CAAiC,CAAjC,EAAoCpB,IAApC,EAAzB,CA/RyC,CAiSrD;;AAEY,YAAIkD,iBAAiB,GAAG,EAAxB;;AACE,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAApB,EAAgCE,CAAC,EAAjC,EAAqC;AACnC,gBAAMC,WAAW,GAAG,MAAMrS,QAAQ,CAACgP,OAAT,CAAiBsD,WAAjB,CAA6B,CAA7B,EAA+BF,CAA/B,EAAkCnD,IAAlC,EAA1B;AAEA,cAAIsD,YAAY,GAAG,MAAMF,WAAzB;AAEAF,UAAAA,iBAAiB,CAACK,IAAlB,CAAuBD,YAAvB;AACD;;AAED1M,QAAAA,mBAAmB,CAACsM,iBAAD,CAAnB;AACAvS,QAAAA,OAAO,CAACC,GAAR,CAAY+F,gBAAZ,EAA6B,MAA7B;AAIF,YAAI6M,eAAe,GAAG,EAAtB;;AACE,aAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAApB,EAAgCE,CAAC,EAAjC,EAAqC;AACnCK,UAAAA,eAAe,CAACD,IAAhB,CAAqBJ,CAArB;AACD;;AACHrN,QAAAA,wBAAwB,CAAC0N,eAAD,CAAxB;AAGA,YAAIC,yBAAyB,GAAG,EAAhC;;AACE,aAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAApB,EAAgCE,CAAC,EAAjC,EAAqC;AACnC,gBAAMC,WAAW,GAAG,MAAMrS,QAAQ,CAACgP,OAAT,CAAiBsD,WAAjB,CAA6B,CAA7B,EAA+BF,CAA/B,EAAkCnD,IAAlC,EAA1B;AAEA,cAAI0D,mBAAmB,GAAG,MAAMN,WAAW,CAAC,CAAD,CAA3C;AACAK,UAAAA,yBAAyB,CAACF,IAA1B,CAA+BG,mBAA/B;AACD;;AACH1N,QAAAA,yBAAyB,CAACyN,yBAAD,CAAzB;AAGA,YAAIE,yBAAyB,GAAG,EAAhC;;AACE,aAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAApB,EAAgCE,CAAC,EAAjC,EAAqC;AACnC,gBAAMC,WAAW,GAAG,MAAMrS,QAAQ,CAACgP,OAAT,CAAiBsD,WAAjB,CAA6B,CAA7B,EAA+BF,CAA/B,EAAkCnD,IAAlC,EAA1B;AAEA,cAAI4D,mBAAmB,GAAG,MAAMR,WAAW,CAAC,CAAD,CAA3C;AACAO,UAAAA,yBAAyB,CAACJ,IAA1B,CAA+BK,mBAA/B;AACD;;AACH1N,QAAAA,0BAA0B,CAACyN,yBAAD,CAA1B;AAEA,YAAIE,yBAAyB,GAAG,EAAhC;;AACE,aAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAApB,EAAgCE,CAAC,EAAjC,EAAqC;AACnC,gBAAMC,WAAW,GAAG,MAAMrS,QAAQ,CAACgP,OAAT,CAAiBsD,WAAjB,CAA6B,CAA7B,EAA+BF,CAA/B,EAAkCnD,IAAlC,EAA1B;AAEA,cAAI8D,mBAAmB,GAAG,MAAMV,WAAW,CAAC,CAAD,CAA3C;AACAS,UAAAA,yBAAyB,CAACN,IAA1B,CAA+BO,mBAA/B;AACD;;AAEH1N,QAAAA,0BAA0B,CAACyN,yBAAD,CAA1B;AAGA,YAAIE,0BAA0B,GAAG,EAAjC;;AACE,aAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAApB,EAAgCE,CAAC,EAAjC,EAAqC;AACnC,gBAAMC,WAAW,GAAG,MAAMrS,QAAQ,CAACgP,OAAT,CAAiBsD,WAAjB,CAA6B,CAA7B,EAA+BF,CAA/B,EAAkCnD,IAAlC,EAA1B;AAEA,cAAIgE,oBAAoB,GAAG,MAAMZ,WAAW,CAAC,CAAD,CAA5C;AACAW,UAAAA,0BAA0B,CAACR,IAA3B,CAAgCS,oBAAhC;AACD;;AAEH1N,QAAAA,2BAA2B,CAACyN,0BAAD,CAA3B;AAGA,YAAIE,uBAAuB,GAAG,EAA9B;;AACE,aAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAApB,EAAgCE,CAAC,EAAjC,EAAqC;AACnC,gBAAMC,WAAW,GAAG,MAAMrS,QAAQ,CAACgP,OAAT,CAAiBsD,WAAjB,CAA6B,CAA7B,EAA+BF,CAA/B,EAAkCnD,IAAlC,EAA1B;AAEA,cAAIkE,iBAAiB,GAAG,MAAMd,WAAW,CAAC,CAAD,CAAzC;AACAa,UAAAA,uBAAuB,CAACV,IAAxB,CAA6BY,QAAQ,CAACD,iBAAD,CAArC;AACD;;AAEH1N,QAAAA,wBAAwB,CAACyN,uBAAD,CAAxB;AAGA,YAAIG,uBAAuB,GAAG,EAA9B;;AACE,aAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAApB,EAAgCE,CAAC,EAAjC,EAAqC;AACnC,gBAAMC,WAAW,GAAG,MAAMrS,QAAQ,CAACgP,OAAT,CAAiBsD,WAAjB,CAA6B,CAA7B,EAA+BF,CAA/B,EAAkCnD,IAAlC,EAA1B;AAEA,cAAIqE,iBAAiB,GAAG,MAAMjB,WAAW,CAAC,CAAD,CAAzC;AACAgB,UAAAA,uBAAuB,CAACb,IAAxB,CAA6Bc,iBAA7B;AACD;;AAEH3N,QAAAA,wBAAwB,CAAC0N,uBAAD,CAAxB,CApXyC,CA0X3C;;AAEA,cAAME,QAAQ,GAAG,MAAMvT,QAAQ,CAACgP,OAAT,CAAiBmB,QAAjB,CAA0B,CAA1B,EAA6BlB,IAA7B,EAAvB;AACA,cAAMrG,WAAW,GAAG,MAAM2K,QAAQ,CAAC,CAAD,CAAlC;AACA,cAAMzK,0BAA0B,GAAG,MAAMyK,QAAQ,CAAC,CAAD,CAAjD;AACA,cAAMvK,sBAAsB,GAAI,MAAMuK,QAAQ,CAAC,CAAD,CAA9C;AACA,cAAMrK,iBAAiB,GAAG,MAAMqK,QAAQ,CAAC,CAAD,CAAxC;AACA,cAAMnK,yBAAyB,GAAG,MAAMmK,QAAQ,CAAC,CAAD,CAAhD;AAEA,cAAM7J,oBAAoB,GAAG,MAAM1J,QAAQ,CAACgP,OAAT,CAAiBqB,eAAjB,CAAiC,CAAjC,EAAoCpB,IAApC,EAAnC;AAEA,cAAMrF,gBAAgB,GAAG,MAAM5J,QAAQ,CAACgP,OAAT,CAAiBsB,WAAjB,CAA6B9Q,QAAQ,CAAC,CAAD,CAArC,EAAyC,CAAzC,EAA4CyP,IAA5C,EAA/B;AACA,cAAMnF,YAAY,GAAG,MAAMF,gBAAgB,CAAC,CAAD,CAA3C;AACA,cAAMI,iBAAiB,GAAG,MAAMJ,gBAAgB,CAAC,CAAD,CAAhD;AACA,cAAMM,wBAAwB,GAAI,MAAMN,gBAAgB,CAAC,CAAD,CAAxD;AACA,cAAMQ,cAAc,GAAG,MAAMR,gBAAgB,CAAC,CAAD,CAA7C;AAEA,cAAM4J,oBAAoB,GAAG,MAAMxT,QAAQ,CAACgP,OAAT,CAAiBqB,eAAjB,CAAiC,CAAjC,EAAoCpB,IAApC,EAAnC;AAIA,cAAMwE,qBAAqB,GAAG,MAAMzT,QAAQ,CAACgP,OAAT,CAAiBwB,qBAAjB,CAAuC,CAAvC,EAA0CvB,IAA1C,EAApC;AACA,cAAM3E,gBAAgB,GAAG,MAAMmJ,qBAAqB,CAAC,CAAD,CAApD;AACA,cAAMjJ,eAAe,GAAG,MAAMiJ,qBAAqB,CAAC,CAAD,CAAnD;AACA,YAAI/I,cAAc,GAAI,MAAM+I,qBAAqB,CAAC,CAAD,CAAjD;AAEA/I,QAAAA,cAAc,GAAGA,cAAc,CAAC0E,SAAf,CAAyB,CAAzB,EAA4B1E,cAAc,CAAC2E,MAAf,GAAsB,EAAlD,CAAjB;AAEA,cAAMzE,qBAAqB,GAAG,MAAM6I,qBAAqB,CAAC,CAAD,CAAzD;AACA,cAAM3I,gBAAgB,GAAG,MAAM2I,qBAAqB,CAAC,CAAD,CAApD;AAEA,cAAMC,yBAAyB,GAAG,MAAM1T,QAAQ,CAACgP,OAAT,CAAiB0B,wBAAjB,CAA0C,CAA1C,EAA6CzB,IAA7C,EAAxC;AACA,cAAMjE,UAAU,GAAG,MAAM0I,yBAAyB,CAAC,CAAD,CAAlD;AACA,cAAMxI,eAAe,GAAG,MAAMwI,yBAAyB,CAAC,CAAD,CAAvD;AACA,cAAMpI,gBAAgB,GAAI,MAAMoI,yBAAyB,CAAC,CAAD,CAAzD;AACA,cAAMtI,gBAAgB,GAAG,MAAMsI,yBAAyB,CAAC,CAAD,CAAxD;AAGA,YAAI9C,gBAAgB,GAAGC,IAAI,EAA3B;AACA,YAAIC,SAAS,GAAG,IAAID,IAAJ,CAASD,gBAAT,CAAhB,CAja2C,CAma3C;;AACA,YAAI+C,YAAY,GAAG,IAAI9C,IAAJ,CAAS7H,sBAAsB,GAAG,IAAlC,CAAnB;AAEApJ,QAAAA,OAAO,CAACC,GAAR,CAAY0R,sBAAsB,CAACT,SAAD,EAAY6C,YAAZ,CAAlC;AAEA,YAAIC,SAAS,GAAGhE,IAAI,CAACwB,GAAL,CAASG,sBAAsB,CAACT,SAAD,EAAY6C,YAAZ,CAA/B,CAAhB;AAEApK,QAAAA,YAAY,CAACqK,SAAD,CAAZ;AACArK,QAAAA,YAAY,CAACkI,QAAQ,IAAIA,QAAQ,GAAG,CAAxB,CAAZ,CA3a2C,CA2aH;;AAExC5I,QAAAA,cAAc,CAACD,WAAD,CAAd;AACAG,QAAAA,6BAA6B,CAACD,0BAAD,CAA7B;AACAG,QAAAA,oBAAoB,CAACD,sBAAD,CAApB;AACAG,QAAAA,oBAAoB,CAACD,iBAAD,CAApB;AACAG,QAAAA,4BAA4B,CAACD,yBAAD,CAA5B;;AAEA,YAAIuK,YAAY,GAAC,CAAb,IAAkB7C,SAAtB,EAAgC;AAC9BrH,UAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACD,SAFD,MAEO;AACLA,UAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACD;;AAEDE,QAAAA,uBAAuB,CAACD,oBAAD,CAAvB;AAEAK,QAAAA,eAAe,CAACD,YAAD,CAAf;AACAG,QAAAA,oBAAoB,CAACD,iBAAD,CAApB;AACAG,QAAAA,2BAA2B,CAACD,wBAAD,CAA3B;AACAG,QAAAA,iBAAiB,CAACD,cAAD,CAAjB;AAEAG,QAAAA,mBAAmB,CAACD,gBAAD,CAAnB;AACAG,QAAAA,kBAAkB,CAACD,eAAD,CAAlB;AACAG,QAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACAG,QAAAA,wBAAwB,CAACD,qBAAD,CAAxB;AACAG,QAAAA,mBAAmB,CAACD,gBAAD,CAAnB;AAEAG,QAAAA,aAAa,CAACD,UAAD,CAAb;AACAG,QAAAA,kBAAkB,CAACD,eAAD,CAAlB;AACAG,QAAAA,mBAAmB,CAACD,gBAAD,CAAnB;AACAG,QAAAA,mBAAmB,CAACD,gBAAD,CAAnB,CAzc2C,CA4c3C;;AAEA,cAAMuI,yBAAyB,GAAG,MAAM7T,QAAQ,CAACgP,OAAT,CAAiB2C,yBAAjB,CAA2CnS,QAAQ,CAAC,CAAD,CAAnD,EAAuD,CAAvD,EAA0DyP,IAA1D,EAAxC;AACA,YAAI6E,qCAAqC,GAAG,MAAMD,yBAAyB,CAAC,CAAD,CAA3E;AACA,YAAIE,sCAAsC,GAAG,MAAMF,yBAAyB,CAAC,CAAD,CAA5E;AACA,YAAIG,sCAAsC,GAAG,MAAMH,yBAAyB,CAAC,CAAD,CAA5E;AACA,YAAII,uCAAuC,GAAG,MAAMJ,yBAAyB,CAAC,CAAD,CAA7E;AACA,YAAIK,oCAAoC,GAAG,MAAML,yBAAyB,CAAC,CAAD,CAA1E;AACA,YAAIM,oCAAoC,GAAG,MAAMN,yBAAyB,CAAC,CAAD,CAA1E;AAEA5G,QAAAA,wCAAwC,CAAC6G,qCAAD,CAAxC;AACA3G,QAAAA,yCAAyC,CAAC4G,sCAAD,CAAzC;AACA1G,QAAAA,yCAAyC,CAAC2G,sCAAD,CAAzC;AACAzG,QAAAA,0CAA0C,CAAC0G,uCAAD,CAA1C;AACAxG,QAAAA,uCAAuC,CAACyG,oCAAD,CAAvC;AACAvG,QAAAA,uCAAuC,CAACwG,oCAAD,CAAvC,CA3d2C,CA8d3C;;AACA,YAAIzG,0CAA0C,IAAI,CAAlD,EAAoD;AAClDK,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,SAFD,MAEO,IAAIL,0CAA0C,IAAI,CAAlD,EAAqD;AAC1DO,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,SAFM,MAEA,IAAIP,0CAA0C,IAAI,CAAlD,EAAoD;AACzDS,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,SAFM,MAEA,IAAIT,0CAA0C,IAAI,CAAlD,EAAoD;AACzDW,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,SAFM,MAEA;AACLN,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AAKD,cAAMqG,WAAW,GAAG,MAAMpU,QAAQ,CAACgP,OAAT,CAAiBqB,eAAjB,CAAiC,CAAjC,EAAoCpB,IAApC,EAA1B,CA9e2C,CAgf3C;;AAEY,YAAIoF,iBAAiB,GAAG,EAAxB;;AACE,aAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgC,WAApB,EAAiChC,CAAC,EAAlC,EAAsC;AACpC,gBAAMkC,YAAY,GAAG,MAAMtU,QAAQ,CAACgP,OAAT,CAAiBsD,WAAjB,CAA6B,CAA7B,EAA+BF,CAA/B,EAAkCnD,IAAlC,EAA3B;AAEA,cAAIsF,YAAY,GAAG,MAAMD,YAAzB;AAEAD,UAAAA,iBAAiB,CAAC7B,IAAlB,CAAuB+B,YAAvB;AACD;;AAED1O,QAAAA,mBAAmB,CAACwO,iBAAD,CAAnB;AACAzU,QAAAA,OAAO,CAACC,GAAR,CAAY+M,gBAAZ,EAA6B,MAA7B;AAIF,YAAI4H,eAAe,GAAG,EAAtB;;AACE,aAAK,IAAIpC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgC,WAApB,EAAiChC,CAAC,EAAlC,EAAsC;AACpCoC,UAAAA,eAAe,CAAChC,IAAhB,CAAqBJ,CAArB;AACD;;AACHrG,QAAAA,wBAAwB,CAACyI,eAAD,CAAxB;AAGA,YAAIC,yBAAyB,GAAG,EAAhC;;AACE,aAAK,IAAIrC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgC,WAApB,EAAiChC,CAAC,EAAlC,EAAsC;AACpC,gBAAMkC,YAAY,GAAG,MAAMtU,QAAQ,CAACgP,OAAT,CAAiBsD,WAAjB,CAA6B,CAA7B,EAA+BF,CAA/B,EAAkCnD,IAAlC,EAA3B;AAEA,cAAIyF,oBAAoB,GAAG,MAAMJ,YAAY,CAAC,CAAD,CAA7C;AACAG,UAAAA,yBAAyB,CAACjC,IAA1B,CAA+BkC,oBAA/B;AACD;;AACHzI,QAAAA,yBAAyB,CAACwI,yBAAD,CAAzB;AAGA,YAAIE,yBAAyB,GAAG,EAAhC;;AACE,aAAK,IAAIvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgC,WAApB,EAAiChC,CAAC,EAAlC,EAAsC;AACpC,gBAAMkC,YAAY,GAAG,MAAMtU,QAAQ,CAACgP,OAAT,CAAiBsD,WAAjB,CAA6B,CAA7B,EAA+BF,CAA/B,EAAkCnD,IAAlC,EAA3B;AAEA,cAAI2F,oBAAoB,GAAG,MAAMN,YAAY,CAAC,CAAD,CAA7C;AACAK,UAAAA,yBAAyB,CAACnC,IAA1B,CAA+BoC,oBAA/B;AACD;;AACHzI,QAAAA,0BAA0B,CAACwI,yBAAD,CAA1B;AAEA,YAAIE,yBAAyB,GAAG,EAAhC;;AACE,aAAK,IAAIzC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgC,WAApB,EAAiChC,CAAC,EAAlC,EAAsC;AACpC,gBAAMkC,YAAY,GAAG,MAAMtU,QAAQ,CAACgP,OAAT,CAAiBsD,WAAjB,CAA6B,CAA7B,EAA+BF,CAA/B,EAAkCnD,IAAlC,EAA3B;AAEA,cAAI6F,oBAAoB,GAAG,MAAMR,YAAY,CAAC,CAAD,CAA7C;AACAO,UAAAA,yBAAyB,CAACrC,IAA1B,CAA+BsC,oBAA/B;AACD;;AAEHzI,QAAAA,0BAA0B,CAACwI,yBAAD,CAA1B;AAGA,YAAIE,0BAA0B,GAAG,EAAjC;;AACE,aAAK,IAAI3C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgC,WAApB,EAAiChC,CAAC,EAAlC,EAAsC;AACpC,gBAAMkC,YAAY,GAAG,MAAMtU,QAAQ,CAACgP,OAAT,CAAiBsD,WAAjB,CAA6B,CAA7B,EAA+BF,CAA/B,EAAkCnD,IAAlC,EAA3B;AAEA,cAAI+F,qBAAqB,GAAG,MAAMV,YAAY,CAAC,CAAD,CAA9C;AACAS,UAAAA,0BAA0B,CAACvC,IAA3B,CAAgCwC,qBAAhC;AACD;;AAEHzI,QAAAA,2BAA2B,CAACwI,0BAAD,CAA3B;AAGA,YAAIE,uBAAuB,GAAG,EAA9B;;AACE,aAAK,IAAI7C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgC,WAApB,EAAiChC,CAAC,EAAlC,EAAsC;AACpC,gBAAMkC,YAAY,GAAG,MAAMtU,QAAQ,CAACgP,OAAT,CAAiBsD,WAAjB,CAA6B,CAA7B,EAA+BF,CAA/B,EAAkCnD,IAAlC,EAA3B;AAEA,cAAIiG,kBAAkB,GAAG,MAAMZ,YAAY,CAAC,CAAD,CAA3C;AACAW,UAAAA,uBAAuB,CAACzC,IAAxB,CAA6BY,QAAQ,CAAC8B,kBAAD,CAArC;AACD;;AAEHzI,QAAAA,wBAAwB,CAACwI,uBAAD,CAAxB;AAEA,YAAIE,uBAAuB,GAAG,EAA9B;;AACE,aAAK,IAAI/C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgC,WAApB,EAAiChC,CAAC,EAAlC,EAAsC;AACpC,gBAAMkC,YAAY,GAAG,MAAMtU,QAAQ,CAACgP,OAAT,CAAiBsD,WAAjB,CAA6B,CAA7B,EAA+BF,CAA/B,EAAkCnD,IAAlC,EAA3B;AAEA,cAAImG,kBAAkB,GAAG,MAAMd,YAAY,CAAC,CAAD,CAA3C;AACAa,UAAAA,uBAAuB,CAAC3C,IAAxB,CAA6B4C,kBAA7B;AACD;;AAEHzI,QAAAA,wBAAwB,CAACwI,uBAAD,CAAxB;AAGb,OArkBa,EAqkBX,IArkBW,CAAd,CAjEsB,CAuoBtB;AAED,KAzoBD;;AA0oBA7G,IAAAA,IAAI;AASL,GAtpBM,EAspBL,CAAChP,IAAD,EAAME,QAAN,EAAeE,iBAAf,EAAiCI,EAAjC,EAAoCE,QAApC,EAA6CE,aAA7C,EAA2DE,QAA3D,EAAoEE,aAApE,EAAkFsL,mBAAlF,EAAsGpL,mBAAtG,EAEA;AACJE,EAAAA,QAHI,EAGKE,UAHL,EAGgBE,WAHhB,EAG4BE,mBAH5B,EAGgDE,oBAHhD,EAGqEE,wBAHrE,EAG8FE,YAH9F,EAG2GE,UAH3G,EAIJQ,WAJI,EAIQE,0BAJR,EAImCE,sBAJnC,EAI0DE,iBAJ1D,EAI4EE,yBAJ5E,EAIsGE,UAJtG,EAIiHE,sBAJjH,EAKJlB,qBALI,EAKkBE,iBALlB,EAKoCE,gBALpC,EAKqDgB,oBALrD,EAK0EI,YAL1E,EAKuFE,iBALvF,EAKyGE,wBALzG,EAKkIE,cALlI,EAMJE,gBANI,EAMaE,eANb,EAM6BE,cAN7B,EAM4CE,qBAN5C,EAMkEE,gBANlE,EAMmFE,UANnF,EAM8FI,gBAN9F,EAM+GE,gBAN/G,EAMgIJ,eANhI,EAOJM,qBAPI,EAOkBE,qBAPlB,EAOwCE,sBAPxC,EAO+DE,uBAP/D,EAQFE,uBARE,EAQsBE,wBARtB,EAQ+CE,qBAR/C,EAQqEE,qBARrE,EAQ2FE,gBAR3F,EAQ4GE,aAR5G,EAQ0HE,2CAR1H,EAQsKE,4CARtK,EAQmNE,4CARnN,EASFE,6CATE,EAS4CE,0CAT5C,EASuFE,0CATvF,EASkIE,yBATlI,EAS4JE,eAT5J,EAS4KE,eAT5K,EAS4LE,eAT5L,EAS4ME,eAT5M,EAUA;AACJE,EAAAA,QAXI,EAWKE,UAXL,EAWgBE,WAXhB,EAW4BE,mBAX5B,EAWgDE,oBAXhD,EAWqEE,wBAXrE,EAW8FE,YAX9F,EAW2GE,UAX3G,EAYJQ,WAZI,EAYQE,0BAZR,EAYmCE,sBAZnC,EAY0DE,iBAZ1D,EAY4EE,yBAZ5E,EAYsGE,UAZtG,EAYiHE,sBAZjH,EAaJlB,qBAbI,EAakBE,iBAblB,EAaoCE,gBAbpC,EAaqDgB,oBAbrD,EAa0EI,YAb1E,EAauFE,iBAbvF,EAayGE,wBAbzG,EAakIE,cAblI,EAcJE,gBAdI,EAcaE,eAdb,EAc6BE,cAd7B,EAc4CE,qBAd5C,EAckEE,gBAdlE,EAcmFE,UAdnF,EAc8FI,gBAd9F,EAc+GE,gBAd/G,EAcgIJ,eAdhI,EAeJQ,qBAfI,EAekBI,qBAflB,EAewCE,sBAfxC,EAe+DE,uBAf/D,EAgBFE,uBAhBE,EAgBsBE,wBAhBtB,EAgB+CE,qBAhB/C,EAgBqEE,qBAhBrE,EAgB2FE,gBAhB3F,EAgB4GE,aAhB5G,EAgB0HE,2CAhB1H,EAgBsKE,4CAhBtK,EAgBmNE,4CAhBnN,EAiBFE,6CAjBE,EAiB4CE,0CAjB5C,EAiBuFE,0CAjBvF,EAiBkIE,yBAjBlI,EAiB4JE,eAjB5J,EAiB4KE,eAjB5K,EAiB4LE,eAjB5L,EAiB4ME,eAjB5M,CAtpBK,CAAT;;AA8qBA,QAAMiH,mBAAmB,GAAIC,KAAD,IAAW;AACrCvW,IAAAA,MAAM,CAACwW,SAAP,CAAiB/C,IAAjB,CAAsB;AACpB8C,MAAAA,KAAK,EAAE,oBADa;AAEpBE,MAAAA,MAAM,EAAEnW,KAAK,CAACK,iBAFM;AAGpB+V,MAAAA,SAAS,EAAEpW,KAAK,CAACS,EAHG;AAIpB4V,MAAAA,GAAG,EAAE3W,MAAM,CAAC4W,QAAP,CAAgBC,QAJD;AAKpBC,MAAAA,aAAa,EAAC;AALM,KAAtB;AAOD,GARD;;AAWA,QAAMC,WAAW,GAAIR,KAAD,IAAW;AAC7BvW,IAAAA,MAAM,CAACwW,SAAP,CAAiB/C,IAAjB,CAAsB;AACpB8C,MAAAA,KAAK,EAAE,oBADa;AAEpBE,MAAAA,MAAM,EAAEnW,KAAK,CAACK,iBAFM;AAGpB+V,MAAAA,SAAS,EAAEpW,KAAK,CAACS,EAHG;AAIpB4V,MAAAA,GAAG,EAAE3W,MAAM,CAAC4W,QAAP,CAAgBC,QAJD;AAKpBC,MAAAA,aAAa,EAAC;AALM,KAAtB;AAOD,GARD;;AAUA,QAAME,gBAAgB,GAAIT,KAAD,IAAW;AAClCvW,IAAAA,MAAM,CAACwW,SAAP,CAAiB/C,IAAjB,CAAsB;AACpB8C,MAAAA,KAAK,EAAE,oBADa;AAEpBE,MAAAA,MAAM,EAAEnW,KAAK,CAACK,iBAFM;AAGpB+V,MAAAA,SAAS,EAAEpW,KAAK,CAACS,EAHG;AAIpB4V,MAAAA,GAAG,EAAE3W,MAAM,CAAC4W,QAAP,CAAgBC,QAJD;AAKpBC,MAAAA,aAAa,EAAC;AALM,KAAtB;AAOD,GARD;;AAUA,QAAMG,WAAW,GAAIV,KAAD,IAAW;AAC7BvW,IAAAA,MAAM,CAACwW,SAAP,CAAiB/C,IAAjB,CAAsB;AACpB8C,MAAAA,KAAK,EAAE,oBADa;AAEpBE,MAAAA,MAAM,EAAEnW,KAAK,CAACK,iBAFM;AAGpB+V,MAAAA,SAAS,EAAEpW,KAAK,CAACS,EAHG;AAIpB4V,MAAAA,GAAG,EAAE3W,MAAM,CAAC4W,QAAP,CAAgBC,QAJD;AAKpBC,MAAAA,aAAa,EAAC;AALM,KAAtB;AAOD,GARD;;AAeE,sBAEE;AAAK,IAAA,KAAK,EAAE;AAAChX,MAAAA,MAAM,EAAEA;AAAT,KAAZ;AAAA,4BACA,QAAC,MAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAIA,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,KAAK,EAAC,IAAlC;AAAA,6BAIJ;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BAEE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE,EAAd;AAAkB,UAAA,EAAE,EAAE,CAAtB;AAAyB,UAAA,SAAS,EAAC,mBAAnC;AAAuD,UAAA,QAAQ,EAAC,EAAhE;AAAmE,UAAA,SAAS,EAAC,EAA7E;AAAA,iCACE,QAAC,QAAD,CAAU,IAAV;AAAA,oCACA;AACE,cAAA,SAAS,EAAC,4BADZ;AAEE,cAAA,GAAG,EAAEnC,IAFP;AAGE,cAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,oBADA,eAMA,QAAC,QAAD,CAAU,OAAV;AAAA,sCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFA,eAIA,QAAC,UAAD;AAAY,gBAAA,EAAE,EAAC,2BAAf;AAAA,uCACE,QAAC,MAAD;AAAQ,kBAAA,SAAS,EAAC,cAAlB;AAAiC,kBAAA,OAAO,EAAEoZ,WAA1C;AAAwD,kBAAA,EAAE,EAAC,2BAA3D;AAAuF,kBAAA,KAAK,EAAE;AAACG,oBAAAA,MAAM,EAAC;AAAR,mBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AAJI;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AA2CH,CAn7BD;;IAAM7W,W;UAGsBZ,a;;;KAHtBY,W;AAq7BN,eAAeA,WAAf","sourcesContent":["// import MyNav from '../MyNav';\nimport SingleCard from './components/Structure/Game1/SingleCard';\nimport moment from 'moment';\n\n// import img1 from './Treasure-hunt.jpeg';\nimport './projectname.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './components/Structure/HomeCard.css';\n\nimport React, { Component, useState, useEffect } from 'react'\n// import Connection from \"./Connection\";\nimport { useWallet, UseWalletProvider } from 'use-wallet'\n\nimport Timer from './components/Structure/Game1/Timer';\n\nimport HomeCards from './components/Structure/HomeCards';\nimport HomeHuntCards from './components/Structure/HomeHuntCards';\nimport HomeFeatureCards from './components/Structure/HomeFeatureCards';\n\n// import Learnmore from './Learnmore';\n\nimport img1 from './components/Structure/images/elons-rocket.jpg';\nimport img2 from './components/Structure/images/fortblox.png';\nimport img3 from './components/Structure/images/treasureblox_header1.png';\nimport img4 from './components/Structure/images/treasureblox_header2.png';\nimport img5 from './components/Structure/images/treasureblox_header3.png';\nimport img6 from './components/Structure/images/treasureblox_header4.png';\nimport img7 from './components/Structure/images/treasureblox_header5.png';\nimport img8 from './components/Structure/images/treasureblox_header6.png';\n\n\n\nimport pdf from './components/Structure/images/TreasureBloxWhitePaperV1.pdf';\n\n\nimport { Helmet } from 'react-helmet';\n\n\n\nimport {Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown,Carousel } from 'react-bootstrap';\n\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport { HashLink as LinkHeader } from 'react-router-hash-link';\n\n\nimport TagManager from 'react-gtm-module'\n\n\n// Hook\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n\n\n\nconst ProjectName = (props) => {\n\n\n  const { width, height } = useWindowSize();\n\n\n  const [web3,setWeb3] = useState(null)\n  const [accounts,setAccounts] = useState(null)\n\n\n  const [wallet_for_google, setWallet_for_google] = useState('Unknown');\n\n  console.log(wallet_for_google,\"string?\")\n  const [ip, setIP] = useState('');\n\n\n\n  const [contract,setContract] = useState(null)\n  const [tokenContract,setTokenContract] = useState(null)\n  const [decimals,setDecimals] = useState(null)\n  const [totalTreasure,setTotalTreasure] = useState(null)\n  const [gameContractAddress,setGameContractAddress] = useState(null)\n\n\n// GAME 1\n  const [game1_id,setGame1_id] = useState(undefined)\n  const [game1_live,setGame1_live] = useState(undefined)\n  const [game1_prize,setGame1_prize] = useState(undefined)\n  const [game1_question_hash,setGame1_question_hash] = useState(undefined)\n  const [game1_time_lock_cost,setgame1_time_lock_cost] = useState(undefined)\n  const [game1_submit_secret_cost,setGame1_submit_secret_cost] = useState(undefined)\n  const [game1_riddle,setGame1_riddle] = useState(undefined)\n  const [game1_clue,setGame1_clue] = useState(undefined)\n  const [game1_head_start_time,setGame1_head_start_time] = useState(undefined)\n  const [game1_entry_limit,setGame1_entry_limit] = useState(undefined)\n  const [game1_entry_cost,setGame1_entry_cost] = useState(undefined)\n\n  const [allGame1_id,setallGame1_id] = useState(undefined)\n  const [allGame1_user_front_of_que,setallGame1_user_front_of_que] = useState(undefined)\n  const [allGame1_deadline_time,setallGame1_deadline] = useState(undefined)\n  const [allGame1_username,setallGame1_username] = useState(undefined)\n  const [allGame1_total_game_tries,setallGame1_total_game_tries] = useState(undefined)\n\n  const [countGame1, setTimeGame1] = useState(90);\n  const [countGame1DeadlineTrue, setcountGame1DeadlineTrue] = useState(false);\n\n  const [game1numberOfEntries, setGame1numberOfEntries] = useState(0);\n  const [game1huntEntries, setGame1huntEntries] = useState(undefined);\n  const [userGame1_id, setUserGame1_id] = useState(undefined);\n  const [userEntered_game1, setUserEntered_game1] = useState(undefined);\n  const [userGame1_headstart_time, setUserGame1_headstart_time] = useState(undefined);\n  const [userGame1_live, setUserGame1_live] = useState(undefined);\n\n  const [winning_address1, setWinning_address1] = useState(undefined);\n  const [treasure_found1, setTreasure_found1] = useState(undefined);\n  const [winning_prize1, setWinning_prize1] = useState(undefined);\n  const [question_hash_solved1, setQuestion_hash_solved1] = useState(undefined);\n  const [winning_message1, setWinning_message1] = useState(undefined);\n\n  const [attemptId1, setAttemptId1] = useState(undefined);\n  const [attemptAddress1, setAttemptAddress1] = useState(undefined);\n  const [attemptUsername1, setAttemptUsername1] = useState(undefined);\n  const [attemptDeadline1, setAttemptDeadline1] = useState(undefined);\n  const [totalGameEntriesGame1, settotalGameEntriesGame1] = useState(false);\n\n// Leaderboard\n  const [game1LeaderBoardIndex, setgame1LeaderBoardIndex] = useState([\"Loading\"]);\n  const [game1LeaderBoardGameID, setgame1LeaderBoardGameID] = useState([\"Loading\"]);\n  const [game1LeaderBoardAddress, setgame1LeaderBoardAddress] = useState([\"Loading\"]);\n  const [game1LeaderBoardEntered, setgame1LeaderBoardEntered] = useState([\"Loading\"]);\n  const [game1LeaderBoardUsername, setgame1LeaderBoardUsername] = useState([\"Loading\"]);\n  const [game1LeaderBoardTries, setgame1LeaderBoardTries] = useState([\"Loading\"]);\n  const [game1LeaderBoardStage, setgame1LeaderBoardStage] = useState([\"Loading\"]);\n\n\n  const [game1LeaderBoard, setgame1LeaderBoard] = useState([\"Loading\"]);\n  const [game1UserList, setGame1UserList] = useState([\"Loading\"]);\n\n  // Leaderbaord Address Search\n  const [state_leaderboardAddressSearch_huntid_game1, setleaderboardAddressSearch_huntid_game1] = useState(false);\n  const [state_leaderboardAddressSearch_address_game1, setleaderboardAddressSearch_address_game1] = useState(false);\n  const [state_leaderboardAddressSearch_entered_game1, setleaderboardAddressSearch_entered_game1] = useState(false);\n  const [state_leaderboardAddressSearch_username_game1, setleaderboardAddressSearch_username_game1] = useState(false);\n  const [state_leaderboardAddressSearch_tries_game1, setleaderboardAddressSearch_tries_game1] = useState(false);\n  const [state_leaderboardAddressSearch_stage_game1, setleaderboardAddressSearch_stage_game1] = useState(false);\n  const [state_WinnerEstPrizeGame1, setWinnerEstPrizeGame1] = useState(false);\n\n// User Levels\n\n\n  const [userLevel1Game1,setUserLevel1Game1] = useState(false);\n  const [userLevel2Game1,setUserLevel2Game1] = useState(false);\n  const [userLevel3Game1,setUserLevel3Game1] = useState(false);\n  const [userLevel4Game1,setUserLevel4Game1] = useState(false);\n\n\n\n// GAME 2\n\n  const [game2_id,setGame2_id] = useState(undefined)\n  const [game2_live,setGame2_live] = useState(undefined)\n  const [game2_prize,setGame2_prize] = useState(undefined)\n  const [game2_question_hash,setGame2_question_hash] = useState(undefined)\n  const [game2_time_lock_cost,setgame2_time_lock_cost] = useState(undefined)\n  const [game2_submit_secret_cost,setGame2_submit_secret_cost] = useState(undefined)\n  const [game2_riddle,setGame2_riddle] = useState(undefined)\n  const [game2_clue,setGame2_clue] = useState(undefined)\n  const [game2_head_start_time,setGame2_head_start_time] = useState(undefined)\n  const [game2_entry_limit,setGame2_entry_limit] = useState(undefined)\n  const [game2_entry_cost,setGame2_entry_cost] = useState(undefined)\n\n  const [allGame2_id,setallGame2_id] = useState(undefined)\n  const [allGame2_user_front_of_que,setallGame2_user_front_of_que] = useState(undefined)\n  const [allGame2_deadline_time,setallGame2_deadline] = useState(undefined)\n  const [allGame2_username,setallGame2_username] = useState(undefined)\n  const [allGame2_total_game_tries,setallGame2_total_game_tries] = useState(undefined)\n\n  const [countGame2, setTimeGame2] = useState(90);\n  const [countGame2DeadlineTrue, setcountGame2DeadlineTrue] = useState(false);\n\n  const [game2numberOfEntries, setGame2numberOfEntries] = useState(0);\n  const [game2huntEntries, setGame2huntEntries] = useState(undefined);\n  const [userGame2_id, setUserGame2_id] = useState(undefined);\n  const [userEntered_game2, setUserEntered_game2] = useState(undefined);\n  const [userGame2_headstart_time, setUserGame2_headstart_time] = useState(undefined);\n  const [userGame2_live, setUserGame2_live] = useState(undefined);\n\n  const [winning_address2, setWinning_address2] = useState(undefined);\n  const [treasure_found2, setTreasure_found2] = useState(undefined);\n  const [winning_prize2, setWinning_prize2] = useState(undefined);\n  const [question_hash_solved2, setQuestion_hash_solved2] = useState(undefined);\n  const [winning_message2, setWinning_message2] = useState(undefined);\n\n  const [attemptId2, setAttemptId2] = useState(undefined);\n  const [attemptAddress2, setAttemptAddress2] = useState(undefined);\n  const [attemptUsername2, setAttemptUsername2] = useState(undefined);\n  const [attemptDeadline2, setAttemptDeadline2] = useState(undefined);\n  const [loaded, setloaded] = useState(false);\n  const [totalGameEntriesGame2, settotalGameEntriesGame2] = useState(false);\n  const [globalNumberOfTries, setGlobalNumberOfTries] = useState(false);\n\n  // Leaderboard\n    const [game2LeaderBoardIndex, setgame2LeaderBoardIndex] = useState([\"Loading\"]);\n    const [game2LeaderBoardGameID, setgame2LeaderBoardGameID] = useState([\"Loading\"]);\n    const [game2LeaderBoardAddress, setgame2LeaderBoardAddress] = useState([\"Loading\"]);\n    const [game2LeaderBoardEntered, setgame2LeaderBoardEntered] = useState([\"Loading\"]);\n    const [game2LeaderBoardUsername, setgame2LeaderBoardUsername] = useState([\"Loading\"]);\n    const [game2LeaderBoardTries, setgame2LeaderBoardTries] = useState([\"Loading\"]);\n    const [game2LeaderBoardStage, setgame2LeaderBoardStage] = useState([\"Loading\"]);\n\n\n    const [game2LeaderBoard, setgame2LeaderBoard] = useState([\"Loading\"]);\n    const [game2UserList, setGame2UserList] = useState([\"Loading\"]);\n\n    // Leaderbaord Address Search\n    const [state_leaderboardAddressSearch_huntid_game2, setleaderboardAddressSearch_huntid_game2] = useState(false);\n    const [state_leaderboardAddressSearch_address_game2, setleaderboardAddressSearch_address_game2] = useState(false);\n    const [state_leaderboardAddressSearch_entered_game2, setleaderboardAddressSearch_entered_game2] = useState(false);\n    const [state_leaderboardAddressSearch_username_game2, setleaderboardAddressSearch_username_game2] = useState(false);\n    const [state_leaderboardAddressSearch_tries_game2, setleaderboardAddressSearch_tries_game2] = useState(false);\n    const [state_leaderboardAddressSearch_stage_game2, setleaderboardAddressSearch_stage_game2] = useState(false);\n    const [state_WinnerEstPrizeGame2, setWinnerEstPrizeGame2] = useState(false);\n\n    // User Levels\n\n    const [userLevel1Game2,setUserLevel1Game2] = useState(false);\n    const [userLevel2Game2,setUserLevel2Game2] = useState(false);\n    const [userLevel3Game2,setUserLevel3Game2] = useState(false);\n    const [userLevel4Game2,setUserLevel4Game2] = useState(false);\n\n\n\n  useEffect(() => {\n\n\n      const init = async() => {\n        //creating function to load ip address from the API\n\n        // const res = await axios.get('https://geolocation-db.com/json/')\n        // console.log(res,\"herererererere\");\n        // setIP(res.data.IPv4)\n\n        console.log(localStorage,\"item local\")\n        // {\"country_code\":\"IT\",\"country_name\":\"Italy\",\"city\":null,\"postal\":null,\"latitude\":43.1479,\"longitude\":12.1097,\"IPv4\":\"149.71.134.27\",\"state\":null}\n\n        const web3 = await getWeb3();\n\n        const accounts = await web3.eth.getAccounts();\n\n        const abi = require('./TreasureBlox.abi.json');\n        const abiToken = require('./TreasureBloxToken.abi.json');\n        // Set the provider\n        // web3.setProvider(new web3.providers.WebsocketProvider('ws://localhost:8545'));\n        // this.web3.setProvider(new this.web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/'));\n\n        // LOCAL\n        // const contract = new web3.eth.Contract(abi,\"localhost:8545\" && \"0x9987602E9e9A76CbA7e9DB9217A0962BA8F9e605\");\n        // MainNet\n        // const contract = new web3.eth.Contract(abi,\"https://bsc-dataseed.binance.org/\" && \"0x845f23Ae63b5d03a363f216Ce0BAD4FB12259930\");\n\n// Proxy 0x359a72d9F33685c025A6435fE1Cb4dF8fF6736B6\n// GameV2 0xE2f3578757fe29a481D0221A6d1Ce7A33Ae01170\n\n        const contract = new web3.eth.Contract(abi,\"https://bsc-dataseed.binance.org/\" && \"0x1e59C9EEE5AD272464335deDB5abC466ef9a6643\");\n        const gameAddress = \"0x1e59C9EEE5AD272464335deDB5abC466ef9a6643\"\n\n        // const contract = new web3.eth.Contract(abi,\"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0xd34ac2bC3a7851d586EdDc3819a5c0Eea84563A3\");\n        // const gameAddress = \"0xd34ac2bC3a7851d586EdDc3819a5c0Eea84563A3\"\n\n        setGameContractAddress(gameAddress);\n\n        const tokenContract = new web3.eth.Contract(abiToken,\"https://bsc-dataseed.binance.org/\" && \"0x845f23Ae63b5d03a363f216Ce0BAD4FB12259930\");\n\n\n        // const tokenContract = new web3.eth.Contract(abiToken,\"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0x4203b43Bb1c245529d5b6dA0F53fc263194D16ba\");\n\n        // TestNet\n        // const contract = new web3.eth.Contract(abi,\"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0xE2f3578757fe29a481D0221A6d1Ce7A33Ae01170\");\n        // Sstart Data Calls\n        const decimals = await tokenContract.methods.decimals().call().then(console.log('Yes'));\n\n        var totalTreasure = await tokenContract.methods.balanceOf(\"0xbb4e46e5407d69b7a8e5948703C7bf3214f84295\").call();\n        totalTreasure = totalTreasure.substring(0, tokenContract.length-18)\n        console.log(totalTreasure,\"Total Treasure token contract\")\n\n        // const owner = await contract.methods._owner().call();\n        // const marketingWallet = await contract.methods.marketingWallet().call().then(console.log('marketing Wallet Complete'));\n        //\n        // const total_supply = await contract.methods.totalSupply().call();\n        // const treasure_chest = await contract.methods.treasureChest().call();\n        setWeb3(web3)\n        setAccounts(accounts[0])\n        setContract(contract)\n        setDecimals(decimals)\n        setTotalTreasure(totalTreasure)\n        setTokenContract(tokenContract)\n\n        setWallet_for_google(\"w=\"+accounts.toString())\n\n// This Handels the countdown time and collecting information every 1 second so the counter goes down\n        const timer = window.setInterval( async() => {\n            var moment = require('moment'); // require\n\n            // GET GAMES\n            // GAME 1\n                    const game1 = await contract.methods.Games(1).call();\n\n                    const game1_id = await game1[0];\n                    const game1_live = await game1[1];\n                    var game1_prize = await game1[2];\n\n                    // Local Testing\n                    // var winnerEstPrizeGame1 = Math.round(game1_prize*.3);\n\n                    var winnerEstPrizeGame1 = game1_prize.substring(0, Math.round(game1_prize*.3).length-18);\n                    setWinnerEstPrizeGame1(winnerEstPrizeGame1)\n                    game1_prize = game1_prize.substring(0, game1_prize.length-18);\n\n\n                    const game1_question_hash = await game1[3];\n                    var game1_time_lock_cost = await game1[4];\n                    game1_time_lock_cost = game1_time_lock_cost.substring(0, game1_time_lock_cost.length-18);\n                    var game1_submit_secret_cost = await game1[5];\n                    game1_submit_secret_cost = game1_submit_secret_cost.substring(0, game1_submit_secret_cost.length-18);\n                    const game1_riddle = await game1[6];\n                    const game1_clue = await game1[7];\n                    const game1_head_start_time = await game1[8];\n                    const game1_entry_limit = await game1[9];\n                    var game1_entry_cost = await game1[10];\n                    game1_entry_cost = game1_entry_cost.substring(0, game1_entry_cost.length-18);\n\n\n                    setGame1_id(game1_id)\n                    setGame1_live(game1_live)\n                    setGame1_prize(game1_prize)\n                    setGame1_question_hash(game1_question_hash)\n                    setgame1_time_lock_cost(game1_time_lock_cost)\n\n                    setGame1_submit_secret_cost(game1_submit_secret_cost)\n\n                    setGame1_riddle(game1_riddle)\n                    setGame1_clue(game1_clue)\n                    setGame1_head_start_time(game1_head_start_time)\n                    setGame1_entry_limit(game1_entry_limit)\n                    setGame1_entry_cost(game1_entry_cost)\n\n\n\n            // GAME 2\n\n\n\n                    const game2 = await contract.methods.Games(2).call();\n\n                    const game2_id = await game2[0];\n                    const game2_live = await game2[1];\n                    var game2_prize = await game2[2];\n\n                    // Local Testing\n                    // var winnerEstPrizeGame2 = Math.round(game2_prize*.3);\n\n                    var winnerEstPrizeGame2 = game2_prize.substring(0, Math.round(game2_prize*.3).length-18);\n                    setWinnerEstPrizeGame2(winnerEstPrizeGame2)\n                    game2_prize = game2_prize.substring(0, game2_prize.length-18);\n\n\n\n                    const game2_question_hash = await game2[3];\n                    var game2_time_lock_cost= await game2[4];\n                    game2_time_lock_cost = game2_time_lock_cost.substring(0, game2_time_lock_cost.length-18);\n\n                    var game2_submit_secret_cost = await game2[5];\n                    game2_submit_secret_cost = game2_submit_secret_cost.substring(0, game2_submit_secret_cost.length-18);\n\n                    const game2_riddle = await game2[6];\n                    const game2_clue = await game2[7];\n                    const game2_head_start_time = await game2[8];\n                    const game2_entry_limit = await game2[9];\n                    var game2_entry_cost = await game2[10];\n                    game2_entry_cost = game2_entry_cost.substring(0, game2_entry_cost.length-18);\n\n\n                    setGame2_id(game2_id)\n                    setGame2_live(game2_live)\n                    setGame2_prize(game2_prize)\n                    setGame2_question_hash(game2_question_hash)\n                    setgame2_time_lock_cost(game2_time_lock_cost)\n                    setGame2_submit_secret_cost(game2_submit_secret_cost)\n                    setGame2_riddle(game2_riddle)\n                    setGame2_clue(game2_clue)\n                    setGame2_head_start_time(game2_head_start_time)\n                    setGame2_entry_limit(game2_entry_limit)\n                    setGame2_entry_cost(game2_entry_cost)\n\n\n\n\n\n            // GLOBAL\n\n            const globalTries = await contract.methods.totalumberOfTries().call();\n\n            setGlobalNumberOfTries(globalTries)\n        // GET ALL GAME TIMELINES AND gamesTriess\n        // GAME 1\n            const allGame1 = await contract.methods.allGames(1).call();\n            const allGame1_id = await allGame1[0];\n            const allGame1_user_front_of_que = await allGame1[1];\n            const allGame1_deadline_time =  await allGame1[2];\n            const allGame1_username = await allGame1[3];\n            const allGame1_total_game_tries = await allGame1[4];\n\n            const numberOfEntriesGame1 = await contract.methods.numberOfEntries(1).call();\n\n\n\n            const game1huntEntries = await contract.methods.huntEntries(accounts[0],1).call();\n            const userGame1_id = await game1huntEntries[0];\n            const userEntered_game1 = await game1huntEntries[1];\n            const userGame1_headstart_time =  await game1huntEntries[2];\n            const userGame1_live = await game1huntEntries[3];\n\n\n\n\n\n\n            const pot1AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(1).call();\n            const winning_address1 = await pot1AnsweredCorrectly[0];\n            const treasure_found1 = await pot1AnsweredCorrectly[1];\n            var winning_prize1 =  await pot1AnsweredCorrectly[2];\n            winning_prize1 = winning_prize1.substring(0, winning_prize1.length-18);\n\n\n            const question_hash_solved1 = await pot1AnsweredCorrectly[3];\n            const winning_message1 = await pot1AnsweredCorrectly[4];\n\n            const getAllLatestGameAttempts1 = await contract.methods.getAllLatestGameAttempts(1).call();\n            const attemptId1 = await getAllLatestGameAttempts1[0];\n            const attemptAddress1 = await getAllLatestGameAttempts1[1];\n            const attemptDeadline1 =  await getAllLatestGameAttempts1[2];\n            const attemptUsername1 = await getAllLatestGameAttempts1[3];\n\n            const entriesGame1 = await contract.methods.numberOfEntries(1).call()\n            settotalGameEntriesGame1(entriesGame1);\n\n            // Fetches New Games if required\n            // const item = await contract.getPastEvents('setGameEvent',{});\n            // console.log(item[0].returnValues[0])\n            // console.log(item[0].returnValues[1])\n            // console.log(item[0].returnValues[2])\n\n\n            var currentStartDate = Date();\n            var startDate = new Date(currentStartDate);\n            // // Hours part from the timestamp\n            // var startDateHours = startDate.getHours();\n            // // Minutes part from the timestamp\n            // var startDateMinutes = startDate.getMinutes();\n            // // Seconds part from the timestamp\n            // var startDateSeconds = startDate.getSeconds();\n\n            // Do\n            var endDateGame1 = new Date(allGame1_deadline_time * 1000);\n            // // Hours part from the timestamp\n            // var endDateHours = endDate.getHours();\n            // // Minutes part from the timestamp\n            // var endDateMinutes = endDate.getMinutes();\n            // // Seconds part from the timestamp\n            // var endDateSeconds = endDate.getSeconds();\n\n            function getDifferenceInDays(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / (1000 * 60 * 60 * 24);\n              }\n\n            function getDifferenceInHours(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / (1000 * 60 * 60);\n              }\n\n            function getDifferenceInMinutes(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / (1000 * 60);\n              }\n\n            function getDifferenceInSeconds(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / 1000;\n              }\n            // console.log(getDifferenceInDays(endDate, startDate));\n            // console.log(getDifferenceInHours(endDate, startDate));\n            // console.log(getDifferenceInMinutes(endDate, startDate));\n\n            // console.log(getDifferenceInSeconds(startDate, endDateGame1));\n\n            var timeGame1 = Math.abs(getDifferenceInSeconds(startDate, endDateGame1));\n\n\n\n\n            setTimeGame1(timeGame1)\n            setTimeGame1(prevTime => prevTime - 1); // <-- Change this line!\n\n            setallGame1_id(allGame1_id)\n            setallGame1_user_front_of_que(allGame1_user_front_of_que)\n            setallGame1_deadline(allGame1_deadline_time)\n            setallGame1_username(allGame1_username)\n            console.log(\"username past: \", allGame1_username)\n            setallGame1_total_game_tries(allGame1_total_game_tries)\n\n            if (endDateGame1-1 >= startDate){\n              setcountGame1DeadlineTrue(true);\n            } else {\n              setcountGame1DeadlineTrue(false);\n            }\n\n            setGame1numberOfEntries(entriesGame1)\n\n            setUserGame1_id(userGame1_id)\n            setUserEntered_game1(userEntered_game1)\n            setUserGame1_headstart_time(userGame1_headstart_time)\n            setUserGame1_live(userGame1_live)\n\n            setWinning_address1(winning_address1)\n            setTreasure_found1(treasure_found1)\n            setWinning_prize1(winning_prize1)\n            setQuestion_hash_solved1(question_hash_solved1)\n            setWinning_message1(winning_message1)\n\n            setAttemptId1(attemptId1)\n            setAttemptAddress1(attemptAddress1)\n            setAttemptUsername1(attemptUsername1)\n            setAttemptDeadline1(attemptDeadline1)\n\n\n// LeaderBoardAddressSearch\n\n            const leaderboardAddressSearch = await contract.methods.leaderboardAddressMapping(accounts[0],1).call();\n\n\n            var leaderboardAddressSearch_huntid_game1 = await leaderboardAddressSearch[0];\n            var leaderboardAddressSearch_address_game1 = await leaderboardAddressSearch[1];\n            var leaderboardAddressSearch_entered_game1 = await leaderboardAddressSearch[2];\n            var leaderboardAddressSearch_username_game1 = await leaderboardAddressSearch[3];\n            var leaderboardAddressSearch_tries_game1 = await leaderboardAddressSearch[4];\n            var leaderboardAddressSearch_stage_game1 = await leaderboardAddressSearch[5];\n\n\n\n\n\n\n            setleaderboardAddressSearch_huntid_game1(leaderboardAddressSearch_huntid_game1)\n            setleaderboardAddressSearch_address_game1(leaderboardAddressSearch_address_game1)\n            setleaderboardAddressSearch_entered_game1(leaderboardAddressSearch_entered_game1)\n            setleaderboardAddressSearch_username_game1(leaderboardAddressSearch_username_game1)\n            setleaderboardAddressSearch_tries_game1(leaderboardAddressSearch_tries_game1)\n            setleaderboardAddressSearch_stage_game1(leaderboardAddressSearch_stage_game1)\n\n\n\n\n            // User Levels\n            if (leaderboardAddressSearch_stage_game1 == 0){\n              setUserLevel1Game1(true)\n            } else if (leaderboardAddressSearch_stage_game1 == 1) {\n\n              await setUserLevel2Game1(true)\n\n            } else if (leaderboardAddressSearch_stage_game1 == 2){\n              setUserLevel3Game1(true)\n            } else if (leaderboardAddressSearch_stage_game1 == 3){\n              setUserLevel4Game1(true)\n            } else {\n              setUserLevel1Game1(true)\n            }\n\n\n\n\n\n\n\n\n\n\n            const noOfEntrys = await contract.methods.numberOfEntries(1).call();\n\n// LeaderBoard\n\n            var game1_leaderboard = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard1 = await leaderBoard;\n\n                game1_leaderboard.push(leaderboard1);\n              }\n\n              setgame1LeaderBoard(game1_leaderboard)\n              console.log(game1LeaderBoard,\"here\")\n\n\n\n            var game1_indexrows = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                game1_indexrows.push(i);\n              }\n            setgame1LeaderBoardIndex(game1_indexrows)\n\n\n            var game1_leaderboard_game_id = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard_game_id = await leaderBoard[0];\n                game1_leaderboard_game_id.push(leaderboard_game_id);\n              }\n            setgame1LeaderBoardGameID(game1_leaderboard_game_id)\n\n\n            var game1_leaderboard_address = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard_address = await leaderBoard[1];\n                game1_leaderboard_address.push(leaderboard_address);\n              }\n            setgame1LeaderBoardAddress(game1_leaderboard_address)\n\n            var game1_leaderboard_entered = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard_entered = await leaderBoard[2];\n                game1_leaderboard_entered.push(leaderboard_entered);\n              }\n\n            setgame1LeaderBoardEntered(game1_leaderboard_entered)\n\n\n            var game1_leaderboard_username = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard_username = await leaderBoard[3];\n                game1_leaderboard_username.push(leaderboard_username);\n              }\n\n            setgame1LeaderBoardUsername(game1_leaderboard_username)\n\n\n            var game1_leaderboard_tries = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard_tries = await leaderBoard[4];\n                game1_leaderboard_tries.push(parseInt(leaderboard_tries));\n              }\n\n            setgame1LeaderBoardTries(game1_leaderboard_tries)\n\n\n            var game1_leaderboard_stage = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard_stage = await leaderBoard[5];\n                game1_leaderboard_stage.push(leaderboard_stage);\n              }\n\n            setgame1LeaderBoardStage(game1_leaderboard_stage)\n\n\n\n\n\n          // GAME 2\n\n          const allGame2 = await contract.methods.allGames(2).call();\n          const allGame2_id = await allGame2[0];\n          const allGame2_user_front_of_que = await allGame2[1];\n          const allGame2_deadline_time =  await allGame2[2];\n          const allGame2_username = await allGame2[3];\n          const allGame2_total_game_tries = await allGame2[4];\n\n          const game2numberOfEntries = await contract.methods.numberOfEntries(2).call();\n\n          const game2huntEntries = await contract.methods.huntEntries(accounts[0],2).call();\n          const userGame2_id = await game2huntEntries[0];\n          const userEntered_game2 = await game2huntEntries[1];\n          const userGame2_headstart_time =  await game2huntEntries[2];\n          const userGame2_live = await game2huntEntries[3];\n\n          const numberOfEntriesGame2 = await contract.methods.numberOfEntries(2).call();\n\n\n\n          const pot2AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(2).call();\n          const winning_address2 = await pot2AnsweredCorrectly[0];\n          const treasure_found2 = await pot2AnsweredCorrectly[1];\n          var winning_prize2 =  await pot2AnsweredCorrectly[2];\n\n          winning_prize2 = winning_prize2.substring(0, winning_prize2.length-18);\n\n          const question_hash_solved2 = await pot2AnsweredCorrectly[3];\n          const winning_message2 = await pot2AnsweredCorrectly[4];\n\n          const getAllLatestGameAttempts2 = await contract.methods.getAllLatestGameAttempts(2).call();\n          const attemptId2 = await getAllLatestGameAttempts2[0];\n          const attemptAddress2 = await getAllLatestGameAttempts2[1];\n          const attemptDeadline2 =  await getAllLatestGameAttempts2[2];\n          const attemptUsername2 = await getAllLatestGameAttempts2[3];\n\n\n          var currentStartDate = Date();\n          var startDate = new Date(currentStartDate);\n\n          // Do\n          var endDateGame2 = new Date(allGame2_deadline_time * 1000);\n\n          console.log(getDifferenceInSeconds(startDate, endDateGame2));\n\n          var timeGame2 = Math.abs(getDifferenceInSeconds(startDate, endDateGame2));\n\n          setTimeGame2(timeGame2)\n          setTimeGame2(prevTime => prevTime - 1); // <-- Change this line!\n\n          setallGame2_id(allGame2_id)\n          setallGame2_user_front_of_que(allGame2_user_front_of_que)\n          setallGame2_deadline(allGame2_deadline_time)\n          setallGame2_username(allGame2_username)\n          setallGame2_total_game_tries(allGame2_total_game_tries)\n\n          if (endDateGame2-1 >= startDate){\n            setcountGame2DeadlineTrue(true);\n          } else {\n            setcountGame2DeadlineTrue(false);\n          }\n\n          setGame2numberOfEntries(game2numberOfEntries)\n\n          setUserGame2_id(userGame2_id)\n          setUserEntered_game2(userEntered_game2)\n          setUserGame2_headstart_time(userGame2_headstart_time)\n          setUserGame2_live(userGame2_live)\n\n          setWinning_address2(winning_address2)\n          setTreasure_found2(treasure_found2)\n          setWinning_prize2(winning_prize2)\n          setQuestion_hash_solved2(question_hash_solved2)\n          setWinning_message2(winning_message2)\n\n          setAttemptId2(attemptId2)\n          setAttemptAddress2(attemptAddress2)\n          setAttemptUsername2(attemptUsername2)\n          setAttemptDeadline2(attemptDeadline2)\n\n\n          // LeaderBoardAddressSearch\n\n          const leaderboardAddressSearch2 = await contract.methods.leaderboardAddressMapping(accounts[0],2).call();\n          var leaderboardAddressSearch_huntid_game2 = await leaderboardAddressSearch2[0];\n          var leaderboardAddressSearch_address_game2 = await leaderboardAddressSearch2[1];\n          var leaderboardAddressSearch_entered_game2 = await leaderboardAddressSearch2[2];\n          var leaderboardAddressSearch_username_game2 = await leaderboardAddressSearch2[3];\n          var leaderboardAddressSearch_tries_game2 = await leaderboardAddressSearch2[4];\n          var leaderboardAddressSearch_stage_game2 = await leaderboardAddressSearch2[5];\n\n          setleaderboardAddressSearch_huntid_game2(leaderboardAddressSearch_huntid_game2)\n          setleaderboardAddressSearch_address_game2(leaderboardAddressSearch_address_game2)\n          setleaderboardAddressSearch_entered_game2(leaderboardAddressSearch_entered_game2)\n          setleaderboardAddressSearch_username_game2(leaderboardAddressSearch_username_game2)\n          setleaderboardAddressSearch_tries_game2(leaderboardAddressSearch_tries_game2)\n          setleaderboardAddressSearch_stage_game2(leaderboardAddressSearch_stage_game2)\n\n\n          // User Levels\n          if (state_leaderboardAddressSearch_stage_game2 == 0){\n            setUserLevel1Game2(true)\n          } else if (state_leaderboardAddressSearch_stage_game2 == 1) {\n            setUserLevel2Game2(true)\n          } else if (state_leaderboardAddressSearch_stage_game2 == 2){\n            setUserLevel3Game2(true)\n          } else if (state_leaderboardAddressSearch_stage_game2 == 3){\n            setUserLevel4Game2(true)\n          } else {\n            setUserLevel1Game2(true)\n          }\n\n\n\n\n          const noOfEntrys2 = await contract.methods.numberOfEntries(2).call();\n\n          // LeaderBoard\n\n                      var game2_leaderboard = [];\n                        for (var i = 0; i < noOfEntrys2; i++) {\n                          const leaderBoard2 = await contract.methods.leaderboard(2,i).call();\n\n                          var leaderboard2 = await leaderBoard2;\n\n                          game2_leaderboard.push(leaderboard2);\n                        }\n\n                        setgame1LeaderBoard(game2_leaderboard)\n                        console.log(game2LeaderBoard,\"here\")\n\n\n\n                      var game2_indexrows = [];\n                        for (var i = 0; i < noOfEntrys2; i++) {\n                          game2_indexrows.push(i);\n                        }\n                      setgame2LeaderBoardIndex(game2_indexrows)\n\n\n                      var game2_leaderboard_game_id = [];\n                        for (var i = 0; i < noOfEntrys2; i++) {\n                          const leaderBoard2 = await contract.methods.leaderboard(2,i).call();\n\n                          var leaderboard_game_id2 = await leaderBoard2[0];\n                          game2_leaderboard_game_id.push(leaderboard_game_id2);\n                        }\n                      setgame2LeaderBoardGameID(game2_leaderboard_game_id)\n\n\n                      var game2_leaderboard_address = [];\n                        for (var i = 0; i < noOfEntrys2; i++) {\n                          const leaderBoard2 = await contract.methods.leaderboard(2,i).call();\n\n                          var leaderboard_address2 = await leaderBoard2[1];\n                          game2_leaderboard_address.push(leaderboard_address2);\n                        }\n                      setgame2LeaderBoardAddress(game2_leaderboard_address)\n\n                      var game2_leaderboard_entered = [];\n                        for (var i = 0; i < noOfEntrys2; i++) {\n                          const leaderBoard2 = await contract.methods.leaderboard(2,i).call();\n\n                          var leaderboard_entered2 = await leaderBoard2[2];\n                          game2_leaderboard_entered.push(leaderboard_entered2);\n                        }\n\n                      setgame2LeaderBoardEntered(game2_leaderboard_entered)\n\n\n                      var game2_leaderboard_username = [];\n                        for (var i = 0; i < noOfEntrys2; i++) {\n                          const leaderBoard2 = await contract.methods.leaderboard(2,i).call();\n\n                          var leaderboard_username2 = await leaderBoard2[3];\n                          game2_leaderboard_username.push(leaderboard_username2);\n                        }\n\n                      setgame2LeaderBoardUsername(game2_leaderboard_username)\n\n\n                      var game2_leaderboard_tries = [];\n                        for (var i = 0; i < noOfEntrys2; i++) {\n                          const leaderBoard2 = await contract.methods.leaderboard(2,i).call();\n\n                          var leaderboard_tries2 = await leaderBoard2[4];\n                          game2_leaderboard_tries.push(parseInt(leaderboard_tries2));\n                        }\n\n                      setgame2LeaderBoardTries(game2_leaderboard_tries)\n\n                      var game2_leaderboard_stage = [];\n                        for (var i = 0; i < noOfEntrys2; i++) {\n                          const leaderBoard2 = await contract.methods.leaderboard(2,i).call();\n\n                          var leaderboard_stage2 = await leaderBoard2[5];\n                          game2_leaderboard_stage.push(leaderboard_stage2);\n                        }\n\n                      setgame2LeaderBoardStage(game2_leaderboard_stage)\n\n\n        }, 1000);\n        // End of Game timer code\n\n      }\n      init()\n\n\n\n\n\n\n\n\n    },[web3,accounts,wallet_for_google,ip,contract,tokenContract,decimals,totalTreasure,globalNumberOfTries,gameContractAddress,\n\n      // GAME1\n  game1_id,game1_live,game1_prize,game1_question_hash,game1_time_lock_cost,game1_submit_secret_cost,game1_riddle,game1_clue,\n  allGame1_id,allGame1_user_front_of_que,allGame1_deadline_time,allGame1_username,allGame1_total_game_tries,countGame1,countGame1DeadlineTrue,\n  game1_head_start_time,game1_entry_limit,game1_entry_cost,game1numberOfEntries,userGame1_id,userEntered_game1,userGame1_headstart_time,userGame1_live,\n  winning_address1,treasure_found1,winning_prize1,question_hash_solved1,winning_message1,attemptId1,attemptUsername1,attemptDeadline1,attemptAddress1,\n  totalGameEntriesGame1,game1LeaderBoardIndex,game1LeaderBoardGameID,game1LeaderBoardAddress,\n    game1LeaderBoardEntered,game1LeaderBoardUsername,game1LeaderBoardTries,game1LeaderBoardStage,game1LeaderBoard,game1UserList,state_leaderboardAddressSearch_huntid_game1,state_leaderboardAddressSearch_address_game1,state_leaderboardAddressSearch_entered_game1,\n    state_leaderboardAddressSearch_username_game1,state_leaderboardAddressSearch_tries_game1,state_leaderboardAddressSearch_stage_game1,state_WinnerEstPrizeGame1,userLevel1Game1,userLevel2Game1,userLevel3Game1,userLevel4Game1,\n      // GAME2\n  game2_id,game2_live,game2_prize,game2_question_hash,game2_time_lock_cost,game2_submit_secret_cost,game2_riddle,game2_clue,\n  allGame2_id,allGame2_user_front_of_que,allGame2_deadline_time,allGame2_username,allGame2_total_game_tries,countGame2,countGame2DeadlineTrue,\n  game2_head_start_time,game2_entry_limit,game2_entry_cost,game2numberOfEntries,userGame2_id,userEntered_game2,userGame2_headstart_time,userGame2_live,\n  winning_address2,treasure_found2,winning_prize2,question_hash_solved2,winning_message2,attemptId2,attemptUsername2,attemptDeadline2,attemptAddress2,\n  totalGameEntriesGame2,game2LeaderBoardIndex,game2LeaderBoardGameID,game2LeaderBoardAddress,\n    game2LeaderBoardEntered,game2LeaderBoardUsername,game2LeaderBoardTries,game2LeaderBoardStage,game2LeaderBoard,game2UserList,state_leaderboardAddressSearch_huntid_game2,state_leaderboardAddressSearch_address_game2,state_leaderboardAddressSearch_entered_game2,\n    state_leaderboardAddressSearch_username_game2,state_leaderboardAddressSearch_tries_game2,state_leaderboardAddressSearch_stage_game2,state_WinnerEstPrizeGame2,userLevel1Game2,userLevel2Game2,userLevel3Game2,userLevel4Game2,\n])\n\n\n\n\n\n  const header_play_to_earn = (event) => {\n    window.dataLayer.push({\n      event: \"wallet_information\",\n      wallet: props.wallet_for_google,\n      wallet_ip: props.ip,\n      url: window.location.pathname,\n      buttonClicked:\"header_play_to_earn\"\n    });\n  }\n\n\n  const projecthunt = (event) => {\n    window.dataLayer.push({\n      event: \"wallet_information\",\n      wallet: props.wallet_for_google,\n      wallet_ip: props.ip,\n      url: window.location.pathname,\n      buttonClicked:\"projecthunt_clicked\"\n    });\n  }\n\n  const the_story_so_far = (event) => {\n    window.dataLayer.push({\n      event: \"wallet_information\",\n      wallet: props.wallet_for_google,\n      wallet_ip: props.ip,\n      url: window.location.pathname,\n      buttonClicked:\"the_story_so_far\"\n    });\n  }\n\n  const white_paper = (event) => {\n    window.dataLayer.push({\n      event: \"wallet_information\",\n      wallet: props.wallet_for_google,\n      wallet_ip: props.ip,\n      url: window.location.pathname,\n      buttonClicked:\"white_paper\"\n    });\n  }\n\n\n\n\n\n\n    return (\n\n      <div style={{height: height}}>\n      <Helmet>\n        <title>TreasureBlox | Partnerships </title>\n      </Helmet>\n      <Container className='mt-5' fluid=\"md\">\n\n\n\n  <div className=\"spaceTopHome\">\n\n    <Carousel sm={12} lg={4} className=\"d-none d-lg-block\" nextIcon=\"\" nextLabel=\"\">\n      <Carousel.Item>\n      <img\n        className=\"d-block w-100 cardRounded \"\n        src={img3}\n        alt=\"First slide\"\n      />\n      <Carousel.Caption >\n      <h3>Your Treasure Hunt Name</h3>\n      <p>TITLE OF TREASURE HUNT</p>\n\n      <LinkHeader to=\"/Partnerships/projecthunt\">\n        <Button className=\"customButton\" onClick={projecthunt}  to=\"/Partnerships/projecthunt\" style={{margin:'10px'}}>START HERE</Button>\n      </LinkHeader>\n\n      </Carousel.Caption>\n      </Carousel.Item>\n\n\n    </Carousel>\n\n\n      </div>\n\n\n      </Container>\n      </div>\n\n\n    );\n\n}\n\nexport default ProjectName;\n"]},"metadata":{},"sourceType":"module"}