{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/treasure-blox/src/Connection.js\",\n    _s = $RefreshSig$();\n\n// App.js\nimport React, { useState } from 'react';\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport { Button } from 'react-bootstrap';\nimport MyNav from \"./MyNav\";\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Connection = props => {\n  _s();\n\n  const wallet = useWallet();\n  const [account, setAccountName] = useState(false); // if (props.accounts){\n  //   setAccountName(true)\n  // }\n\n  console.log(\"this here\", props.accounts);\n\n  const connectWallet = async e => {\n    e.preventDefault();\n    await wallet.connect(); // setAccountName(true)\n  };\n\n  return account ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: connectWallet,\n      className: \"customButton enableEthereumButton\",\n      children: [props.accounts, \"WTF\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: connectWallet,\n      className: \"customButton enableEthereumButton\",\n      children: [props.accounts, \"WTF2\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}; // Wrap everything in <UseWalletProvider />\n\n\n_s(Connection, \"FEshYIEnWXuUp9fvLDaoqYpAJQQ=\", false, function () {\n  return [useWallet];\n});\n\n_c = Connection;\nexport default (() => /*#__PURE__*/_jsxDEV(UseWalletProvider, {\n  chainId: 1337,\n  connectors: {\n    // This is how connectors get configured\n    provided: {\n      provider: window.cleanEthereum\n    }\n  },\n  children: /*#__PURE__*/_jsxDEV(Connection, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 3\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"Connection\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/treasure-blox/src/Connection.js"],"names":["React","useState","useWallet","UseWalletProvider","Button","MyNav","App","Connection","props","wallet","account","setAccountName","console","log","accounts","connectWallet","e","preventDefault","connect","provided","provider","window","cleanEthereum"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,YAA7C;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAY;AAAA;;AAE7B,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AAEA,QAAM,CAACQ,OAAD,EAASC,cAAT,IAA2BV,QAAQ,CAAC,KAAD,CAAzC,CAJ6B,CAO7B;AACA;AACA;;AAGAW,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBL,KAAK,CAACM,QAA9B;;AAEA,QAAMC,aAAa,GAAG,MAAMC,CAAN,IAAY;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMR,MAAM,CAACS,OAAP,EAAN,CAFgC,CAKhC;AAED,GAPD;;AAWA,SAAOR,OAAO,gBACZ;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEK,aAAjB;AAAgC,MAAA,SAAS,EAAC,mCAA1C;AAAA,iBAA+EP,KAAK,CAACM,QAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADY,gBAKZ;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC,aAAjB;AAAgC,MAAA,SAAS,EAAC,mCAA1C;AAAA,iBAA+EP,KAAK,CAACM,QAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UALF;AAWD,CApCD,C,CAuCA;;;GAvCMP,U;UAEWL,S;;;KAFXK,U;AAwCN,gBAAe,mBACb,QAAC,iBAAD;AACE,EAAA,OAAO,EAAE,IADX;AAEE,EAAA,UAAU,EAAE;AACV;AACAY,IAAAA,QAAQ,EAAE;AAACC,MAAAA,QAAQ,EAAEC,MAAM,CAACC;AAAlB;AAFA,GAFd;AAAA,yBAQE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,QADF","sourcesContent":["// App.js\n\nimport React, {useState} from 'react'\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport { Button } from 'react-bootstrap';\n\nimport MyNav from \"./MyNav\";\nimport App from \"./App\";\n\n\nconst Connection = (props) =>  {\n\n  const wallet = useWallet()\n\n  const [account,setAccountName] = useState(false)\n\n\n  // if (props.accounts){\n  //   setAccountName(true)\n  // }\n\n\n  console.log(\"this here\",props.accounts)\n\n  const connectWallet = async(e) => {\n    e.preventDefault()\n    await wallet.connect()\n\n\n    // setAccountName(true)\n\n  }\n\n\n\n  return account?(\n    <div>\n      <Button onClick={connectWallet} className=\"customButton enableEthereumButton\">{props.accounts}WTF</Button>\n    </div>\n  ) :(\n    <div>\n      <Button onClick={connectWallet} className=\"customButton enableEthereumButton\">{props.accounts}WTF2</Button>\n\n    </div>\n  )\n\n}\n\n\n// Wrap everything in <UseWalletProvider />\nexport default () => (\n  <UseWalletProvider\n    chainId={1337}\n    connectors={{\n      // This is how connectors get configured\n      provided: {provider: window.cleanEthereum},\n    }}>\n\n\n    <Connection />\n  </UseWalletProvider>\n)\n"]},"metadata":{},"sourceType":"module"}