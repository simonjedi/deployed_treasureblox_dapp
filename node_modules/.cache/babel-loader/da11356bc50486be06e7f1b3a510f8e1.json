{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport MyNav from './MyNav';\nimport SingleCard from './components/Structure/Game1/SingleCard';\nimport moment from 'moment'; // import img1 from './Treasure-hunt.jpeg';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component, useState, useEffect } from 'react';\nimport getWeb3 from \"./getWeb3\";\nimport Connection from \"./Connection\";\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Hunt1 from \"./Hunt1\";\nimport Hunt2 from \"./Hunt2\";\nimport { Helmet } from 'react-helmet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [web3, setWeb3] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [decimals, setDecimals] = useState(null);\n  const [totalTreasure, setTotalTreasure] = useState(null); // GAME 1\n\n  const [game1_id, setGame1_id] = useState(undefined);\n  const [game1_live, setGame1_live] = useState(undefined);\n  const [game1_prize, setGame1_prize] = useState(undefined);\n  const [game1_question_hash, setGame1_question_hash] = useState(undefined);\n  const [game1_time_lock_cost, setgame1_time_lock_cost] = useState(undefined);\n  const [game1_submit_secret_cost, setGame1_submit_secret_cost] = useState(undefined);\n  const [game1_riddle, setGame1_riddle] = useState(undefined);\n  const [game1_clue, setGame1_clue] = useState(undefined);\n  const [game1_head_start_time, setGame1_head_start_time] = useState(undefined);\n  const [game1_entry_limit, setGame1_entry_limit] = useState(undefined);\n  const [game1_entry_cost, setGame1_entry_cost] = useState(undefined);\n  const [allGame1_id, setallGame1_id] = useState(undefined);\n  const [allGame1_user_front_of_que, setallGame1_user_front_of_que] = useState(undefined);\n  const [allGame1_deadline_time, setallGame1_deadline] = useState(undefined);\n  const [allGame1_username, setallGame1_username] = useState(undefined);\n  const [allGame1_total_game_tries, setallGame1_total_game_tries] = useState(undefined);\n  const [countGame1, setTimeGame1] = useState(90);\n  const [countGame1DeadlineTrue, setcountGame1DeadlineTrue] = useState(false);\n  const [game1numberOfEntries, setGame1numberOfEntries] = useState(0);\n  const [game1huntEntries, setGame1huntEntries] = useState(undefined);\n  const [userGame1_id, setUserGame1_id] = useState(undefined);\n  const [userEntered_game1, setUserEntered_game1] = useState(undefined);\n  const [userGame1_headstart_time, setUserGame1_headstart_time] = useState(undefined);\n  const [userGame1_live, setUserGame1_live] = useState(undefined);\n  const [winning_address1, setWinning_address1] = useState(undefined);\n  const [treasure_found1, setTreasure_found1] = useState(undefined);\n  const [winning_prize1, setWinning_prize1] = useState(undefined);\n  const [question_hash_solved1, setQuestion_hash_solved1] = useState(undefined);\n  const [winning_message1, setWinning_message1] = useState(undefined);\n  const [attemptId1, setAttemptId1] = useState(undefined);\n  const [attemptAddress1, setAttemptAddress1] = useState(undefined);\n  const [attemptUsername1, setAttemptUsername1] = useState(undefined);\n  const [attemptDeadline1, setAttemptDeadline1] = useState(undefined);\n  const [totalGameEntriesGame1, settotalGameEntriesGame1] = useState(false); // GAME 2\n\n  const [game2_id, setGame2_id] = useState(undefined);\n  const [game2_live, setGame2_live] = useState(undefined);\n  const [game2_prize, setGame2_prize] = useState(undefined);\n  const [game2_question_hash, setGame2_question_hash] = useState(undefined);\n  const [game2_time_lock_cost, setgame2_time_lock_cost] = useState(undefined);\n  const [game2_submit_secret_cost, setGame2_submit_secret_cost] = useState(undefined);\n  const [game2_riddle, setGame2_riddle] = useState(undefined);\n  const [game2_clue, setGame2_clue] = useState(undefined);\n  const [game2_head_start_time, setGame2_head_start_time] = useState(undefined);\n  const [game2_entry_limit, setGame2_entry_limit] = useState(undefined);\n  const [game2_entry_cost, setGame2_entry_cost] = useState(undefined);\n  const [allGame2_id, setallGame2_id] = useState(undefined);\n  const [allGame2_user_front_of_que, setallGame2_user_front_of_que] = useState(undefined);\n  const [allGame2_deadline_time, setallGame2_deadline] = useState(undefined);\n  const [allGame2_username, setallGame2_username] = useState(undefined);\n  const [allGame2_total_game_tries, setallGame2_total_game_tries] = useState(undefined);\n  const [countGame2, setTimeGame2] = useState(90);\n  const [countGame2DeadlineTrue, setcountGame2DeadlineTrue] = useState(false);\n  const [game2numberOfEntries, setGame2numberOfEntries] = useState(0);\n  const [game2huntEntries, setGame2huntEntries] = useState(undefined);\n  const [userGame2_id, setUserGame2_id] = useState(undefined);\n  const [userEntered_game2, setUserEntered_game2] = useState(undefined);\n  const [userGame2_headstart_time, setUserGame2_headstart_time] = useState(undefined);\n  const [userGame2_live, setUserGame2_live] = useState(undefined);\n  const [winning_address2, setWinning_address2] = useState(undefined);\n  const [treasure_found2, setTreasure_found2] = useState(undefined);\n  const [winning_prize2, setWinning_prize2] = useState(undefined);\n  const [question_hash_solved2, setQuestion_hash_solved2] = useState(undefined);\n  const [winning_message2, setWinning_message2] = useState(undefined);\n  const [attemptId2, setAttemptId2] = useState(undefined);\n  const [attemptAddress2, setAttemptAddress2] = useState(undefined);\n  const [attemptUsername2, setAttemptUsername2] = useState(undefined);\n  const [attemptDeadline2, setAttemptDeadline2] = useState(undefined);\n  const [loaded, setloaded] = useState(false);\n  const [totalGameEntriesGame2, settotalGameEntriesGame2] = useState(false);\n  const [globalNumberOfTries, setGlobalNumberOfTries] = useState(false);\n  useEffect(() => {\n    const init = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n\n      const abi = require('./TreasureBlox.abi.json'); // Set the provider\n      // web3.setProvider(new web3.providers.WebsocketProvider('ws://localhost:8545'));\n      // this.web3.setProvider(new this.web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/'));\n      // LOCAL\n      // const contract = new web3.eth.Contract(abi,\"localhost:8545\" && \"0x9987602E9e9A76CbA7e9DB9217A0962BA8F9e605\");\n      // MainNet\n      // const contract = new web3.eth.Contract(abi,\"https://bsc-dataseed.binance.org/\" && \"0x845f23Ae63b5d03a363f216Ce0BAD4FB12259930\");\n      // TestNet\n\n\n      const contract = new web3.eth.Contract(abi, \"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0x714edC2c9E5E0c98700c468e7bd93FDa605bbB61\"); // Sstart Data Calls\n\n      const decimals = await contract.methods.decimals().call().then(console.log('Yes'));\n      var totalTreasure = await contract.methods.balanceOf(\"0xbb4e46e5407d69b7a8e5948703C7bf3214f84295\").call();\n      totalTreasure = totalTreasure.substring(0, totalTreasure.length - 18); // const owner = await contract.methods._owner().call();\n      // const marketingWallet = await contract.methods.marketingWallet().call().then(console.log('marketing Wallet Complete'));\n      //\n      // const total_supply = await contract.methods.totalSupply().call();\n      // const treasure_chest = await contract.methods.treasureChest().call();\n\n      setWeb3(web3);\n      setAccounts(accounts[0]);\n      setContract(contract);\n      setDecimals(decimals);\n      setTotalTreasure(totalTreasure); // GET GAMES\n      // GAME 1\n\n      const game1 = await contract.methods.Games(1).call();\n      const game1_id = await game1[0];\n      const game1_live = await game1[1];\n      var game1_prize = await game1[2];\n      game1_prize = game1_prize.substring(0, game1_prize.length - 18);\n      const game1_question_hash = await game1[3];\n      var game1_time_lock_cost = await game1[4];\n      game1_time_lock_cost = game1_time_lock_cost.substring(0, game1_time_lock_cost.length - 18);\n      var game1_submit_secret_cost = await game1[5];\n      game1_submit_secret_cost = game1_submit_secret_cost.substring(0, game1_submit_secret_cost.length - 18);\n      const game1_riddle = await game1[6];\n      const game1_clue = await game1[7];\n      const game1_head_start_time = await game1[8];\n      const game1_entry_limit = await game1[9];\n      var game1_entry_cost = await game1[10];\n      game1_entry_cost = game1_entry_cost.substring(0, game1_entry_cost.length - 18);\n      setGame1_id(game1_id);\n      setGame1_live(game1_live);\n      setGame1_prize(game1_prize);\n      setGame1_question_hash(game1_question_hash);\n      setgame1_time_lock_cost(game1_time_lock_cost);\n      setGame1_submit_secret_cost(game1_submit_secret_cost);\n      setGame1_riddle(game1_riddle);\n      setGame1_clue(game1_clue);\n      setGame1_head_start_time(game1_head_start_time);\n      setGame1_entry_limit(game1_entry_limit);\n      setGame1_entry_cost(game1_entry_cost); // GAME 2\n\n      const game2 = await contract.methods.Games(2).call();\n      const game2_id = await game2[0];\n      const game2_live = await game2[1];\n      var game2_prize = await game2[2];\n      game2_prize = game2_prize.substring(0, game2_prize.length - 18);\n      const game2_question_hash = await game2[3];\n      var game2_time_lock_cost = await game2[4];\n      game2_time_lock_cost = game2_time_lock_cost.substring(0, game2_time_lock_cost.length - 18);\n      var game2_submit_secret_cost = await game2[5];\n      game2_submit_secret_cost = game2_submit_secret_cost.substring(0, game2_submit_secret_cost.length - 18);\n      const game2_riddle = await game2[6];\n      const game2_clue = await game2[7];\n      const game2_head_start_time = await game2[8];\n      const game2_entry_limit = await game2[9];\n      var game2_entry_cost = await game2[10];\n      game2_entry_cost = game2_entry_cost.substring(0, game2_entry_cost.length - 18);\n      setGame2_id(game2_id);\n      setGame2_live(game2_live);\n      setGame2_prize(game2_prize);\n      setGame2_question_hash(game2_question_hash);\n      setgame2_time_lock_cost(game2_time_lock_cost);\n      setGame2_submit_secret_cost(game2_submit_secret_cost);\n      setGame2_riddle(game2_riddle);\n      setGame2_clue(game2_clue);\n      setGame2_head_start_time(game2_head_start_time);\n      setGame2_entry_limit(game2_entry_limit);\n      setGame2_entry_cost(game2_entry_cost); // This Handels the countdown time and collecting information every 1 second so the counter goes down\n\n      const timer = window.setInterval(async () => {\n        var moment = require('moment'); // require\n        // GLOBAL\n\n\n        const globalTries = await contract.methods.totalumberOfTries().call();\n        console.log(\"number of tries:\", globalTries);\n        setGlobalNumberOfTries(globalTries); // GET ALL GAME TIMELINES AND gamesTriess\n        // GAME 1\n\n        const allGame1 = await contract.methods.allGames(1).call();\n        const allGame1_id = await allGame1[0];\n        const allGame1_user_front_of_que = await allGame1[1];\n        const allGame1_deadline_time = await allGame1[2];\n        const allGame1_username = await allGame1[3];\n        const allGame1_total_game_tries = await allGame1[4];\n        const numberOfEntriesGame1 = await contract.methods.numberOfEntries(1).call();\n        const game1huntEntries = await contract.methods.huntEntries(accounts[0], 1).call();\n        const userGame1_id = await game1huntEntries[0];\n        const userEntered_game1 = await game1huntEntries[1];\n        const userGame1_headstart_time = await game1huntEntries[2];\n        const userGame1_live = await game1huntEntries[3];\n        const pot1AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(1).call();\n        const winning_address1 = await pot1AnsweredCorrectly[0];\n        const treasure_found1 = await pot1AnsweredCorrectly[1];\n        var winning_prize1 = await pot1AnsweredCorrectly[2];\n        winning_prize1 = winning_prize1.substring(0, winning_prize1.length - 18);\n        const question_hash_solved1 = await pot1AnsweredCorrectly[3];\n        const winning_message1 = await pot1AnsweredCorrectly[4];\n        const getAllLatestGameAttempts1 = await contract.methods.getAllLatestGameAttempts(1).call();\n        const attemptId1 = await getAllLatestGameAttempts1[0];\n        const attemptAddress1 = await getAllLatestGameAttempts1[1];\n        const attemptDeadline1 = await getAllLatestGameAttempts1[2];\n        const attemptUsername1 = await getAllLatestGameAttempts1[3];\n        const entriesGame1 = await contract.methods.numberOfEntries(1).call();\n        settotalGameEntriesGame1(entriesGame1); // Fetches New Games if required\n        // const item = await contract.getPastEvents('setGameEvent',{});\n        // console.log(item[0].returnValues[0])\n        // console.log(item[0].returnValues[1])\n        // console.log(item[0].returnValues[2])\n\n        var currentStartDate = Date();\n        var startDate = new Date(currentStartDate); // // Hours part from the timestamp\n        // var startDateHours = startDate.getHours();\n        // // Minutes part from the timestamp\n        // var startDateMinutes = startDate.getMinutes();\n        // // Seconds part from the timestamp\n        // var startDateSeconds = startDate.getSeconds();\n        // Do\n\n        var endDateGame1 = new Date(allGame1_deadline_time * 1000); // // Hours part from the timestamp\n        // var endDateHours = endDate.getHours();\n        // // Minutes part from the timestamp\n        // var endDateMinutes = endDate.getMinutes();\n        // // Seconds part from the timestamp\n        // var endDateSeconds = endDate.getSeconds();\n\n        function getDifferenceInDays(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / (1000 * 60 * 60 * 24);\n        }\n\n        function getDifferenceInHours(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / (1000 * 60 * 60);\n        }\n\n        function getDifferenceInMinutes(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / (1000 * 60);\n        }\n\n        function getDifferenceInSeconds(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / 1000;\n        } // console.log(getDifferenceInDays(endDate, startDate));\n        // console.log(getDifferenceInHours(endDate, startDate));\n        // console.log(getDifferenceInMinutes(endDate, startDate));\n        // console.log(getDifferenceInSeconds(startDate, endDateGame1));\n\n\n        var timeGame1 = Math.abs(getDifferenceInSeconds(startDate, endDateGame1));\n        setTimeGame1(timeGame1);\n        setTimeGame1(prevTime => prevTime - 1); // <-- Change this line!\n\n        setallGame1_id(allGame1_id);\n        setallGame1_user_front_of_que(allGame1_user_front_of_que);\n        setallGame1_deadline(allGame1_deadline_time);\n        setallGame1_username(allGame1_username);\n        console.log(\"username past: \", allGame1_username);\n        setallGame1_total_game_tries(allGame1_total_game_tries);\n\n        if (endDateGame1 - 1 >= startDate) {\n          setcountGame1DeadlineTrue(true);\n        } else {\n          setcountGame1DeadlineTrue(false);\n        }\n\n        setGame1numberOfEntries(totalGameEntriesGame1);\n        setUserGame1_id(userGame1_id);\n        setUserEntered_game1(userEntered_game1);\n        setUserGame1_headstart_time(userGame1_headstart_time);\n        setUserGame1_live(userGame1_live);\n        setWinning_address1(winning_address1);\n        setTreasure_found1(treasure_found1);\n        setWinning_prize1(winning_prize1);\n        setQuestion_hash_solved1(question_hash_solved1);\n        setWinning_message1(winning_message1);\n        setAttemptId1(attemptId1);\n        setAttemptAddress1(attemptAddress1);\n        setAttemptUsername1(attemptUsername1);\n        setAttemptDeadline1(attemptDeadline1); // GAME 2\n\n        const allGame2 = await contract.methods.allGames(2).call();\n        const allGame2_id = await allGame2[0];\n        const allGame2_user_front_of_que = await allGame2[1];\n        const allGame2_deadline_time = await allGame2[2];\n        const allGame2_username = await allGame2[3];\n        const allGame2_total_game_tries = await allGame2[4];\n        const game2numberOfEntries = await contract.methods.numberOfEntries(2).call();\n        const game2huntEntries = await contract.methods.huntEntries(accounts[0], 2).call();\n        const userGame2_id = await game2huntEntries[0];\n        const userEntered_game2 = await game2huntEntries[1];\n        const userGame2_headstart_time = await game2huntEntries[2];\n        const userGame2_live = await game2huntEntries[3];\n        const numberOfEntriesGame2 = await contract.methods.numberOfEntries(2).call();\n        const pot2AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(2).call();\n        const winning_address2 = await pot2AnsweredCorrectly[0];\n        const treasure_found2 = await pot2AnsweredCorrectly[1];\n        var winning_prize2 = await pot2AnsweredCorrectly[2];\n        winning_prize2 = winning_prize2.substring(0, winning_prize2.length - 18);\n        const question_hash_solved2 = await pot2AnsweredCorrectly[3];\n        const winning_message2 = await pot2AnsweredCorrectly[4];\n        const getAllLatestGameAttempts2 = await contract.methods.getAllLatestGameAttempts(2).call();\n        const attemptId2 = await getAllLatestGameAttempts2[0];\n        const attemptAddress2 = await getAllLatestGameAttempts2[1];\n        const attemptDeadline2 = await getAllLatestGameAttempts2[2];\n        const attemptUsername2 = await getAllLatestGameAttempts2[3];\n        var currentStartDate = Date();\n        var startDate = new Date(currentStartDate); // Do\n\n        var endDateGame2 = new Date(allGame2_deadline_time * 1000);\n        console.log(getDifferenceInSeconds(startDate, endDateGame2));\n        var timeGame2 = Math.abs(getDifferenceInSeconds(startDate, endDateGame2));\n        setTimeGame2(timeGame2);\n        setTimeGame2(prevTime => prevTime - 1); // <-- Change this line!\n\n        setallGame2_id(allGame2_id);\n        setallGame2_user_front_of_que(allGame2_user_front_of_que);\n        setallGame2_deadline(allGame2_deadline_time);\n        setallGame2_username(allGame2_username);\n        setallGame2_total_game_tries(allGame2_total_game_tries);\n\n        if (endDateGame2 - 1 >= startDate) {\n          setcountGame2DeadlineTrue(true);\n        } else {\n          setcountGame2DeadlineTrue(false);\n        }\n\n        setGame2numberOfEntries(game2numberOfEntries);\n        setUserGame2_id(userGame2_id);\n        setUserEntered_game2(userEntered_game2);\n        setUserGame2_headstart_time(userGame2_headstart_time);\n        setUserGame2_live(userGame2_live);\n        setWinning_address2(winning_address2);\n        setTreasure_found2(treasure_found2);\n        setWinning_prize2(winning_prize2);\n        setQuestion_hash_solved2(question_hash_solved2);\n        setWinning_message2(winning_message2);\n        setAttemptId2(attemptId2);\n        setAttemptAddress2(attemptAddress2);\n        setAttemptUsername2(attemptUsername2);\n        setAttemptDeadline2(attemptDeadline2);\n      }, 1000); // End of Game timer code\n    };\n\n    init();\n  }, [web3, accounts, contract, decimals, totalTreasure, // GAME1\n  game1_id, game1_live, game1_prize, game1_question_hash, game1_time_lock_cost, game1_submit_secret_cost, game1_riddle, game1_clue, allGame1_id, allGame1_user_front_of_que, allGame1_deadline_time, allGame1_username, allGame1_total_game_tries, countGame1, countGame1DeadlineTrue, game1_head_start_time, game1_entry_limit, game1_entry_cost, game1numberOfEntries, userGame1_id, userEntered_game1, userGame1_headstart_time, userGame1_live, winning_address1, treasure_found1, winning_prize1, question_hash_solved1, winning_message1, attemptId1, attemptUsername1, attemptDeadline1, attemptAddress1, totalGameEntriesGame1, // GAME2\n  game2_id, game2_live, game2_prize, game2_question_hash, game2_time_lock_cost, game2_submit_secret_cost, game2_riddle, game2_clue, allGame2_id, allGame2_user_front_of_que, allGame2_deadline_time, allGame2_username, allGame2_total_game_tries, countGame2, countGame2DeadlineTrue, game2_head_start_time, game2_entry_limit, game2_entry_cost, game2numberOfEntries, userGame2_id, userEntered_game2, userGame2_headstart_time, userGame2_live, winning_address2, treasure_found2, winning_prize2, question_hash_solved2, winning_message2, attemptId2, attemptUsername2, attemptDeadline2, attemptAddress2, totalGameEntriesGame2, globalNumberOfTries]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background customFont\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"TreasureBlox | DAPP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(MyNav, {\n        accounts: accounts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this), \"// Pages\", /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            game1_id: game1_id,\n            game1_live: game1_live,\n            game1_prize: game1_prize,\n            game1_question_hash: game1_question_hash,\n            game1_time_lock_cost: game1_time_lock_cost,\n            game1_submit_secret_cost: game1_submit_secret_cost,\n            game1_riddle: game1_riddle,\n            game1_clue: game1_clue,\n            game1_head_start_time: game1_head_start_time,\n            game1_entry_limit: game1_entry_limit,\n            game1_entry_cost: game1_entry_cost,\n            allGame1_id: allGame1_id,\n            allGasme1_user_front_of_que: allGame1_user_front_of_que,\n            allGame1_deadline_time: allGame1_deadline_time,\n            allGame1_username: allGame1_username,\n            allGame1_total_game_tries: allGame1_total_game_tries,\n            countGame1: countGame1,\n            countGame1DeadlineTrue: countGame1DeadlineTrue,\n            totalTreasure: totalTreasure,\n            game1numberOfEntries: game1numberOfEntries,\n            game2_id: game2_id,\n            game2_live: game2_live,\n            game2_prize: game2_prize,\n            game2_question_hash: game2_question_hash,\n            game2_time_lock_cost: game2_time_lock_cost,\n            game2_submit_secret_cost: game2_submit_secret_cost,\n            game2_riddle: game2_riddle,\n            game2_clue: game2_clue,\n            game2_head_start_time: game2_head_start_time,\n            game2_entry_limit: game2_entry_limit,\n            game2_entry_cost: game2_entry_cost,\n            allGame2_id: allGame2_id,\n            allGasme2_user_front_of_que: allGame2_user_front_of_que,\n            allGame2_deadline_time: allGame2_deadline_time,\n            allGame2_username: allGame2_username,\n            allGame2_total_game_tries: allGame2_total_game_tries,\n            countGame2: countGame2,\n            countGame2DeadlineTrue: countGame2DeadlineTrue,\n            totalGameEntriesGame1: totalGameEntriesGame1,\n            totalGameEntriesGame2: totalGameEntriesGame2,\n            globalNumberOfTries: globalNumberOfTries\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/hunt1\",\n          children: /*#__PURE__*/_jsxDEV(Hunt1, {\n            web3: web3,\n            game1_id: game1_id,\n            game1_live: game1_live,\n            game1_prize: game1_prize,\n            game1_question_hash: game1_question_hash,\n            game1_time_lock_cost: game1_time_lock_cost,\n            game1_submit_secret_cost: game1_submit_secret_cost,\n            game1_riddle: game1_riddle,\n            game1_clue: game1_clue,\n            game1_head_start_time: game1_head_start_time,\n            game1_entry_limit: game1_entry_limit,\n            game1_entry_cost: game1_entry_cost,\n            allGame1_id: allGame1_id,\n            allGasme1_user_front_of_que: allGame1_user_front_of_que,\n            allGame1_deadline_time: allGame1_deadline_time,\n            allGame1_username: allGame1_username,\n            allGame1_total_game_tries: allGame1_total_game_tries,\n            countGame1: countGame1,\n            countGame1DeadlineTrue: countGame1DeadlineTrue,\n            decimals: decimals,\n            totalTreasure: totalTreasure,\n            contract: contract,\n            accounts: accounts,\n            game1numberOfEntries: game1numberOfEntries,\n            userGame1_id: userGame1_id,\n            userEntered_game1: userEntered_game1,\n            userGame1_headstart_time: userGame1_headstart_time,\n            userGame1_live: userGame1_live,\n            winning_address1: winning_address1,\n            treasure_found1: treasure_found1,\n            winning_prize1: winning_prize1,\n            question_hash_solved1: question_hash_solved1,\n            winning_message1: winning_message1,\n            attemptId1: attemptId1,\n            attemptAddress1: attemptAddress1,\n            attemptUsername1: attemptUsername1,\n            attemptDeadline1: attemptDeadline1,\n            totalGameEntriesGame1: totalGameEntriesGame1,\n            globalNumberOfTries: globalNumberOfTries\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/hunt2\",\n          children: /*#__PURE__*/_jsxDEV(Hunt2, {\n            web3: web3,\n            game2_id: game2_id,\n            game2_live: game2_live,\n            game2_prize: game2_prize,\n            game2_question_hash: game2_question_hash,\n            game2_time_lock_cost: game2_time_lock_cost,\n            game2_submit_secret_cost: game2_submit_secret_cost,\n            game2_riddle: game2_riddle,\n            game2_clue: game2_clue,\n            game2_head_start_time: game2_head_start_time,\n            game2_entry_limit: game2_entry_limit,\n            game2_entry_cost: game2_entry_cost,\n            allGame2_id: allGame2_id,\n            allGame2_user_front_of_que: allGame2_user_front_of_que,\n            allGame2_deadline_time: allGame2_deadline_time,\n            allGame2_username: allGame2_username,\n            allGame2_total_game_tries: allGame2_total_game_tries,\n            countGame2: countGame2,\n            countGame2DeadlineTrue: countGame2DeadlineTrue,\n            decimals: decimals,\n            totalTreasure: totalTreasure,\n            contract: contract,\n            accounts: accounts,\n            game2numberOfEntries: game2numberOfEntries,\n            userGame2_id: userGame2_id,\n            userEntered_game2: userEntered_game2,\n            userGame2_headstart_time: userGame2_headstart_time,\n            userGame2_live: userGame2_live,\n            winning_address2: winning_address2,\n            treasure_found2: treasure_found2,\n            winning_prize2: winning_prize2,\n            question_hash_solved2: question_hash_solved2,\n            winning_message2: winning_message2,\n            attemptId2: attemptId2,\n            attemptAddress2: attemptAddress2,\n            attemptUsername2: attemptUsername2,\n            attemptDeadline2: attemptDeadline2,\n            totalGameEntriesGame2: totalGameEntriesGame2,\n            globalNumberOfTries: globalNumberOfTries\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 500,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"5r4RMosPwy9ZOOdB9M88WXhI7Ls=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/App.js"],"names":["Button","Container","Nav","Navbar","NavDropdown","MyNav","SingleCard","moment","React","Component","useState","useEffect","getWeb3","Connection","useWallet","UseWalletProvider","BrowserRouter","Router","Switch","Route","Link","Redirect","Home","Hunt1","Hunt2","Helmet","App","web3","setWeb3","accounts","setAccounts","contract","setContract","decimals","setDecimals","totalTreasure","setTotalTreasure","game1_id","setGame1_id","undefined","game1_live","setGame1_live","game1_prize","setGame1_prize","game1_question_hash","setGame1_question_hash","game1_time_lock_cost","setgame1_time_lock_cost","game1_submit_secret_cost","setGame1_submit_secret_cost","game1_riddle","setGame1_riddle","game1_clue","setGame1_clue","game1_head_start_time","setGame1_head_start_time","game1_entry_limit","setGame1_entry_limit","game1_entry_cost","setGame1_entry_cost","allGame1_id","setallGame1_id","allGame1_user_front_of_que","setallGame1_user_front_of_que","allGame1_deadline_time","setallGame1_deadline","allGame1_username","setallGame1_username","allGame1_total_game_tries","setallGame1_total_game_tries","countGame1","setTimeGame1","countGame1DeadlineTrue","setcountGame1DeadlineTrue","game1numberOfEntries","setGame1numberOfEntries","game1huntEntries","setGame1huntEntries","userGame1_id","setUserGame1_id","userEntered_game1","setUserEntered_game1","userGame1_headstart_time","setUserGame1_headstart_time","userGame1_live","setUserGame1_live","winning_address1","setWinning_address1","treasure_found1","setTreasure_found1","winning_prize1","setWinning_prize1","question_hash_solved1","setQuestion_hash_solved1","winning_message1","setWinning_message1","attemptId1","setAttemptId1","attemptAddress1","setAttemptAddress1","attemptUsername1","setAttemptUsername1","attemptDeadline1","setAttemptDeadline1","totalGameEntriesGame1","settotalGameEntriesGame1","game2_id","setGame2_id","game2_live","setGame2_live","game2_prize","setGame2_prize","game2_question_hash","setGame2_question_hash","game2_time_lock_cost","setgame2_time_lock_cost","game2_submit_secret_cost","setGame2_submit_secret_cost","game2_riddle","setGame2_riddle","game2_clue","setGame2_clue","game2_head_start_time","setGame2_head_start_time","game2_entry_limit","setGame2_entry_limit","game2_entry_cost","setGame2_entry_cost","allGame2_id","setallGame2_id","allGame2_user_front_of_que","setallGame2_user_front_of_que","allGame2_deadline_time","setallGame2_deadline","allGame2_username","setallGame2_username","allGame2_total_game_tries","setallGame2_total_game_tries","countGame2","setTimeGame2","countGame2DeadlineTrue","setcountGame2DeadlineTrue","game2numberOfEntries","setGame2numberOfEntries","game2huntEntries","setGame2huntEntries","userGame2_id","setUserGame2_id","userEntered_game2","setUserEntered_game2","userGame2_headstart_time","setUserGame2_headstart_time","userGame2_live","setUserGame2_live","winning_address2","setWinning_address2","treasure_found2","setTreasure_found2","winning_prize2","setWinning_prize2","question_hash_solved2","setQuestion_hash_solved2","winning_message2","setWinning_message2","attemptId2","setAttemptId2","attemptAddress2","setAttemptAddress2","attemptUsername2","setAttemptUsername2","attemptDeadline2","setAttemptDeadline2","loaded","setloaded","totalGameEntriesGame2","settotalGameEntriesGame2","globalNumberOfTries","setGlobalNumberOfTries","init","eth","getAccounts","abi","require","Contract","methods","call","then","console","log","balanceOf","substring","length","game1","Games","game2","timer","window","setInterval","globalTries","totalumberOfTries","allGame1","allGames","numberOfEntriesGame1","numberOfEntries","huntEntries","pot1AnsweredCorrectly","Pot1AnsweredCorrectly","getAllLatestGameAttempts1","getAllLatestGameAttempts","entriesGame1","currentStartDate","Date","startDate","endDateGame1","getDifferenceInDays","date1","date2","diffInMs","Math","abs","getDifferenceInHours","getDifferenceInMinutes","getDifferenceInSeconds","timeGame1","prevTime","allGame2","numberOfEntriesGame2","pot2AnsweredCorrectly","getAllLatestGameAttempts2","endDateGame2","timeGame2"],"mappings":"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","sourcesContent":["import { Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport MyNav from './MyNav';\nimport SingleCard from './components/Structure/Game1/SingleCard';\nimport moment from 'moment';\n\n// import img1 from './Treasure-hunt.jpeg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport React, { Component, useState, useEffect } from 'react'\nimport getWeb3 from \"./getWeb3\";\nimport Connection from \"./Connection\";\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport \"./App.css\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\n\nimport Home from \"./Home\";\nimport Hunt1 from \"./Hunt1\";\nimport Hunt2 from \"./Hunt2\";\n\nimport { Helmet } from 'react-helmet';\n\n\nconst App = () => {\n\n  const [web3,setWeb3] = useState(null)\n  const [accounts,setAccounts] = useState(null)\n  const [contract,setContract] = useState(null)\n  const [decimals,setDecimals] = useState(null)\n  const [totalTreasure,setTotalTreasure] = useState(null)\n\n// GAME 1\n  const [game1_id,setGame1_id] = useState(undefined)\n  const [game1_live,setGame1_live] = useState(undefined)\n  const [game1_prize,setGame1_prize] = useState(undefined)\n  const [game1_question_hash,setGame1_question_hash] = useState(undefined)\n  const [game1_time_lock_cost,setgame1_time_lock_cost] = useState(undefined)\n  const [game1_submit_secret_cost,setGame1_submit_secret_cost] = useState(undefined)\n  const [game1_riddle,setGame1_riddle] = useState(undefined)\n  const [game1_clue,setGame1_clue] = useState(undefined)\n  const [game1_head_start_time,setGame1_head_start_time] = useState(undefined)\n  const [game1_entry_limit,setGame1_entry_limit] = useState(undefined)\n  const [game1_entry_cost,setGame1_entry_cost] = useState(undefined)\n\n  const [allGame1_id,setallGame1_id] = useState(undefined)\n  const [allGame1_user_front_of_que,setallGame1_user_front_of_que] = useState(undefined)\n  const [allGame1_deadline_time,setallGame1_deadline] = useState(undefined)\n  const [allGame1_username,setallGame1_username] = useState(undefined)\n  const [allGame1_total_game_tries,setallGame1_total_game_tries] = useState(undefined)\n\n  const [countGame1, setTimeGame1] = useState(90);\n  const [countGame1DeadlineTrue, setcountGame1DeadlineTrue] = useState(false);\n\n  const [game1numberOfEntries, setGame1numberOfEntries] = useState(0);\n  const [game1huntEntries, setGame1huntEntries] = useState(undefined);\n  const [userGame1_id, setUserGame1_id] = useState(undefined);\n  const [userEntered_game1, setUserEntered_game1] = useState(undefined);\n  const [userGame1_headstart_time, setUserGame1_headstart_time] = useState(undefined);\n  const [userGame1_live, setUserGame1_live] = useState(undefined);\n\n  const [winning_address1, setWinning_address1] = useState(undefined);\n  const [treasure_found1, setTreasure_found1] = useState(undefined);\n  const [winning_prize1, setWinning_prize1] = useState(undefined);\n  const [question_hash_solved1, setQuestion_hash_solved1] = useState(undefined);\n  const [winning_message1, setWinning_message1] = useState(undefined);\n\n  const [attemptId1, setAttemptId1] = useState(undefined);\n  const [attemptAddress1, setAttemptAddress1] = useState(undefined);\n  const [attemptUsername1, setAttemptUsername1] = useState(undefined);\n  const [attemptDeadline1, setAttemptDeadline1] = useState(undefined);\n  const [totalGameEntriesGame1, settotalGameEntriesGame1] = useState(false);\n\n// GAME 2\n\n  const [game2_id,setGame2_id] = useState(undefined)\n  const [game2_live,setGame2_live] = useState(undefined)\n  const [game2_prize,setGame2_prize] = useState(undefined)\n  const [game2_question_hash,setGame2_question_hash] = useState(undefined)\n  const [game2_time_lock_cost,setgame2_time_lock_cost] = useState(undefined)\n  const [game2_submit_secret_cost,setGame2_submit_secret_cost] = useState(undefined)\n  const [game2_riddle,setGame2_riddle] = useState(undefined)\n  const [game2_clue,setGame2_clue] = useState(undefined)\n  const [game2_head_start_time,setGame2_head_start_time] = useState(undefined)\n  const [game2_entry_limit,setGame2_entry_limit] = useState(undefined)\n  const [game2_entry_cost,setGame2_entry_cost] = useState(undefined)\n\n  const [allGame2_id,setallGame2_id] = useState(undefined)\n  const [allGame2_user_front_of_que,setallGame2_user_front_of_que] = useState(undefined)\n  const [allGame2_deadline_time,setallGame2_deadline] = useState(undefined)\n  const [allGame2_username,setallGame2_username] = useState(undefined)\n  const [allGame2_total_game_tries,setallGame2_total_game_tries] = useState(undefined)\n\n  const [countGame2, setTimeGame2] = useState(90);\n  const [countGame2DeadlineTrue, setcountGame2DeadlineTrue] = useState(false);\n\n  const [game2numberOfEntries, setGame2numberOfEntries] = useState(0);\n  const [game2huntEntries, setGame2huntEntries] = useState(undefined);\n  const [userGame2_id, setUserGame2_id] = useState(undefined);\n  const [userEntered_game2, setUserEntered_game2] = useState(undefined);\n  const [userGame2_headstart_time, setUserGame2_headstart_time] = useState(undefined);\n  const [userGame2_live, setUserGame2_live] = useState(undefined);\n\n  const [winning_address2, setWinning_address2] = useState(undefined);\n  const [treasure_found2, setTreasure_found2] = useState(undefined);\n  const [winning_prize2, setWinning_prize2] = useState(undefined);\n  const [question_hash_solved2, setQuestion_hash_solved2] = useState(undefined);\n  const [winning_message2, setWinning_message2] = useState(undefined);\n\n  const [attemptId2, setAttemptId2] = useState(undefined);\n  const [attemptAddress2, setAttemptAddress2] = useState(undefined);\n  const [attemptUsername2, setAttemptUsername2] = useState(undefined);\n  const [attemptDeadline2, setAttemptDeadline2] = useState(undefined);\n  const [loaded, setloaded] = useState(false);\n  const [totalGameEntriesGame2, settotalGameEntriesGame2] = useState(false);\n  const [globalNumberOfTries, setGlobalNumberOfTries] = useState(false);\n\n\n\n  useEffect(() => {\n\n\n\n\n      const init = async() => {\n\n\n\n        const web3 = await getWeb3();\n\n        const accounts = await web3.eth.getAccounts();\n\n        const abi = require('./TreasureBlox.abi.json');\n        // Set the provider\n        // web3.setProvider(new web3.providers.WebsocketProvider('ws://localhost:8545'));\n        // this.web3.setProvider(new this.web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/'));\n\n        // LOCAL\n        // const contract = new web3.eth.Contract(abi,\"localhost:8545\" && \"0x9987602E9e9A76CbA7e9DB9217A0962BA8F9e605\");\n        // MainNet\n        // const contract = new web3.eth.Contract(abi,\"https://bsc-dataseed.binance.org/\" && \"0x845f23Ae63b5d03a363f216Ce0BAD4FB12259930\");\n\n        // TestNet\n        const contract = new web3.eth.Contract(abi,\"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0x714edC2c9E5E0c98700c468e7bd93FDa605bbB61\");\n        // Sstart Data Calls\n        const decimals = await contract.methods.decimals().call().then(console.log('Yes'));\n\n        var totalTreasure = await contract.methods.balanceOf(\"0xbb4e46e5407d69b7a8e5948703C7bf3214f84295\").call();\n        totalTreasure = totalTreasure.substring(0, totalTreasure.length-18);\n\n\n        // const owner = await contract.methods._owner().call();\n        // const marketingWallet = await contract.methods.marketingWallet().call().then(console.log('marketing Wallet Complete'));\n        //\n        // const total_supply = await contract.methods.totalSupply().call();\n        // const treasure_chest = await contract.methods.treasureChest().call();\n        setWeb3(web3)\n        setAccounts(accounts[0])\n        setContract(contract)\n        setDecimals(decimals)\n        setTotalTreasure(totalTreasure)\n\n// GET GAMES\n// GAME 1\n        const game1 = await contract.methods.Games(1).call();\n\n        const game1_id = await game1[0];\n        const game1_live = await game1[1];\n        var game1_prize = await game1[2];\n        game1_prize = game1_prize.substring(0, game1_prize.length-18);\n\n        const game1_question_hash = await game1[3];\n        var game1_time_lock_cost = await game1[4];\n        game1_time_lock_cost = game1_time_lock_cost.substring(0, game1_time_lock_cost.length-18);\n        var game1_submit_secret_cost = await game1[5];\n        game1_submit_secret_cost = game1_submit_secret_cost.substring(0, game1_submit_secret_cost.length-18);\n        const game1_riddle = await game1[6];\n        const game1_clue = await game1[7];\n        const game1_head_start_time = await game1[8];\n        const game1_entry_limit = await game1[9];\n        var game1_entry_cost = await game1[10];\n        game1_entry_cost = game1_entry_cost.substring(0, game1_entry_cost.length-18);\n\n\n        setGame1_id(game1_id)\n        setGame1_live(game1_live)\n        setGame1_prize(game1_prize)\n        setGame1_question_hash(game1_question_hash)\n        setgame1_time_lock_cost(game1_time_lock_cost)\n\n        setGame1_submit_secret_cost(game1_submit_secret_cost)\n\n        setGame1_riddle(game1_riddle)\n        setGame1_clue(game1_clue)\n        setGame1_head_start_time(game1_head_start_time)\n        setGame1_entry_limit(game1_entry_limit)\n        setGame1_entry_cost(game1_entry_cost)\n\n\n// GAME 2\n        const game2 = await contract.methods.Games(2).call();\n\n        const game2_id = await game2[0];\n        const game2_live = await game2[1];\n        var game2_prize = await game2[2];\n        game2_prize = game2_prize.substring(0, game2_prize.length-18);\n\n        const game2_question_hash = await game2[3];\n        var game2_time_lock_cost= await game2[4];\n        game2_time_lock_cost = game2_time_lock_cost.substring(0, game2_time_lock_cost.length-18);\n\n        var game2_submit_secret_cost = await game2[5];\n        game2_submit_secret_cost = game2_submit_secret_cost.substring(0, game2_submit_secret_cost.length-18);\n\n        const game2_riddle = await game2[6];\n        const game2_clue = await game2[7];\n        const game2_head_start_time = await game2[8];\n        const game2_entry_limit = await game2[9];\n        var game2_entry_cost = await game2[10];\n        game2_entry_cost = game2_entry_cost.substring(0, game2_entry_cost.length-18);\n\n\n        setGame2_id(game2_id)\n        setGame2_live(game2_live)\n        setGame2_prize(game2_prize)\n        setGame2_question_hash(game2_question_hash)\n        setgame2_time_lock_cost(game2_time_lock_cost)\n        setGame2_submit_secret_cost(game2_submit_secret_cost)\n        setGame2_riddle(game2_riddle)\n        setGame2_clue(game2_clue)\n        setGame2_head_start_time(game2_head_start_time)\n        setGame2_entry_limit(game2_entry_limit)\n        setGame2_entry_cost(game2_entry_cost)\n\n\n\n// This Handels the countdown time and collecting information every 1 second so the counter goes down\n        const timer = window.setInterval( async() => {\n            var moment = require('moment'); // require\n\n\n            // GLOBAL\n\n            const globalTries = await contract.methods.totalumberOfTries().call();\n            console.log(\"number of tries:\",globalTries)\n            setGlobalNumberOfTries(globalTries)\n        // GET ALL GAME TIMELINES AND gamesTriess\n        // GAME 1\n            const allGame1 = await contract.methods.allGames(1).call();\n            const allGame1_id = await allGame1[0];\n            const allGame1_user_front_of_que = await allGame1[1];\n            const allGame1_deadline_time =  await allGame1[2];\n            const allGame1_username = await allGame1[3];\n            const allGame1_total_game_tries = await allGame1[4];\n\n            const numberOfEntriesGame1 = await contract.methods.numberOfEntries(1).call();\n\n\n\n            const game1huntEntries = await contract.methods.huntEntries(accounts[0],1).call();\n            const userGame1_id = await game1huntEntries[0];\n            const userEntered_game1 = await game1huntEntries[1];\n            const userGame1_headstart_time =  await game1huntEntries[2];\n            const userGame1_live = await game1huntEntries[3];\n\n\n            const pot1AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(1).call();\n            const winning_address1 = await pot1AnsweredCorrectly[0];\n            const treasure_found1 = await pot1AnsweredCorrectly[1];\n            var winning_prize1 =  await pot1AnsweredCorrectly[2];\n            winning_prize1 = winning_prize1.substring(0, winning_prize1.length-18);\n\n\n            const question_hash_solved1 = await pot1AnsweredCorrectly[3];\n            const winning_message1 = await pot1AnsweredCorrectly[4];\n\n            const getAllLatestGameAttempts1 = await contract.methods.getAllLatestGameAttempts(1).call();\n            const attemptId1 = await getAllLatestGameAttempts1[0];\n            const attemptAddress1 = await getAllLatestGameAttempts1[1];\n            const attemptDeadline1 =  await getAllLatestGameAttempts1[2];\n            const attemptUsername1 = await getAllLatestGameAttempts1[3];\n\n            const entriesGame1 = await contract.methods.numberOfEntries(1).call()\n            settotalGameEntriesGame1(entriesGame1);\n\n            // Fetches New Games if required\n            // const item = await contract.getPastEvents('setGameEvent',{});\n            // console.log(item[0].returnValues[0])\n            // console.log(item[0].returnValues[1])\n            // console.log(item[0].returnValues[2])\n\n\n            var currentStartDate = Date();\n            var startDate = new Date(currentStartDate);\n            // // Hours part from the timestamp\n            // var startDateHours = startDate.getHours();\n            // // Minutes part from the timestamp\n            // var startDateMinutes = startDate.getMinutes();\n            // // Seconds part from the timestamp\n            // var startDateSeconds = startDate.getSeconds();\n\n            // Do\n            var endDateGame1 = new Date(allGame1_deadline_time * 1000);\n            // // Hours part from the timestamp\n            // var endDateHours = endDate.getHours();\n            // // Minutes part from the timestamp\n            // var endDateMinutes = endDate.getMinutes();\n            // // Seconds part from the timestamp\n            // var endDateSeconds = endDate.getSeconds();\n\n            function getDifferenceInDays(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / (1000 * 60 * 60 * 24);\n              }\n\n            function getDifferenceInHours(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / (1000 * 60 * 60);\n              }\n\n            function getDifferenceInMinutes(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / (1000 * 60);\n              }\n\n            function getDifferenceInSeconds(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / 1000;\n              }\n            // console.log(getDifferenceInDays(endDate, startDate));\n            // console.log(getDifferenceInHours(endDate, startDate));\n            // console.log(getDifferenceInMinutes(endDate, startDate));\n\n            // console.log(getDifferenceInSeconds(startDate, endDateGame1));\n\n            var timeGame1 = Math.abs(getDifferenceInSeconds(startDate, endDateGame1));\n\n\n\n\n            setTimeGame1(timeGame1)\n            setTimeGame1(prevTime => prevTime - 1); // <-- Change this line!\n\n            setallGame1_id(allGame1_id)\n            setallGame1_user_front_of_que(allGame1_user_front_of_que)\n            setallGame1_deadline(allGame1_deadline_time)\n            setallGame1_username(allGame1_username)\n            console.log(\"username past: \", allGame1_username)\n            setallGame1_total_game_tries(allGame1_total_game_tries)\n\n            if (endDateGame1-1 >= startDate){\n              setcountGame1DeadlineTrue(true);\n            } else {\n              setcountGame1DeadlineTrue(false);\n            }\n\n            setGame1numberOfEntries(totalGameEntriesGame1)\n\n            setUserGame1_id(userGame1_id)\n            setUserEntered_game1(userEntered_game1)\n            setUserGame1_headstart_time(userGame1_headstart_time)\n            setUserGame1_live(userGame1_live)\n\n            setWinning_address1(winning_address1)\n            setTreasure_found1(treasure_found1)\n            setWinning_prize1(winning_prize1)\n            setQuestion_hash_solved1(question_hash_solved1)\n            setWinning_message1(winning_message1)\n\n            setAttemptId1(attemptId1)\n            setAttemptAddress1(attemptAddress1)\n            setAttemptUsername1(attemptUsername1)\n            setAttemptDeadline1(attemptDeadline1)\n\n\n\n\n          // GAME 2\n\n          const allGame2 = await contract.methods.allGames(2).call();\n          const allGame2_id = await allGame2[0];\n          const allGame2_user_front_of_que = await allGame2[1];\n          const allGame2_deadline_time =  await allGame2[2];\n          const allGame2_username = await allGame2[3];\n          const allGame2_total_game_tries = await allGame2[4];\n\n          const game2numberOfEntries = await contract.methods.numberOfEntries(2).call();\n\n          const game2huntEntries = await contract.methods.huntEntries(accounts[0],2).call();\n          const userGame2_id = await game2huntEntries[0];\n          const userEntered_game2 = await game2huntEntries[1];\n          const userGame2_headstart_time =  await game2huntEntries[2];\n          const userGame2_live = await game2huntEntries[3];\n\n          const numberOfEntriesGame2 = await contract.methods.numberOfEntries(2).call();\n\n\n\n          const pot2AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(2).call();\n          const winning_address2 = await pot2AnsweredCorrectly[0];\n          const treasure_found2 = await pot2AnsweredCorrectly[1];\n          var winning_prize2 =  await pot2AnsweredCorrectly[2];\n\n          winning_prize2 = winning_prize2.substring(0, winning_prize2.length-18);\n\n          const question_hash_solved2 = await pot2AnsweredCorrectly[3];\n          const winning_message2 = await pot2AnsweredCorrectly[4];\n\n          const getAllLatestGameAttempts2 = await contract.methods.getAllLatestGameAttempts(2).call();\n          const attemptId2 = await getAllLatestGameAttempts2[0];\n          const attemptAddress2 = await getAllLatestGameAttempts2[1];\n          const attemptDeadline2 =  await getAllLatestGameAttempts2[2];\n          const attemptUsername2 = await getAllLatestGameAttempts2[3];\n\n\n          var currentStartDate = Date();\n          var startDate = new Date(currentStartDate);\n\n          // Do\n          var endDateGame2 = new Date(allGame2_deadline_time * 1000);\n\n          console.log(getDifferenceInSeconds(startDate, endDateGame2));\n\n          var timeGame2 = Math.abs(getDifferenceInSeconds(startDate, endDateGame2));\n\n          setTimeGame2(timeGame2)\n          setTimeGame2(prevTime => prevTime - 1); // <-- Change this line!\n\n          setallGame2_id(allGame2_id)\n          setallGame2_user_front_of_que(allGame2_user_front_of_que)\n          setallGame2_deadline(allGame2_deadline_time)\n          setallGame2_username(allGame2_username)\n          setallGame2_total_game_tries(allGame2_total_game_tries)\n\n          if (endDateGame2-1 >= startDate){\n            setcountGame2DeadlineTrue(true);\n          } else {\n            setcountGame2DeadlineTrue(false);\n          }\n\n          setGame2numberOfEntries(game2numberOfEntries)\n\n          setUserGame2_id(userGame2_id)\n          setUserEntered_game2(userEntered_game2)\n          setUserGame2_headstart_time(userGame2_headstart_time)\n          setUserGame2_live(userGame2_live)\n\n          setWinning_address2(winning_address2)\n          setTreasure_found2(treasure_found2)\n          setWinning_prize2(winning_prize2)\n          setQuestion_hash_solved2(question_hash_solved2)\n          setWinning_message2(winning_message2)\n\n          setAttemptId2(attemptId2)\n          setAttemptAddress2(attemptAddress2)\n          setAttemptUsername2(attemptUsername2)\n          setAttemptDeadline2(attemptDeadline2)\n\n        }, 1000);\n        // End of Game timer code\n\n\n\n\n      }\n      init()\n\n    },[web3,accounts,contract,decimals,totalTreasure,\n      // GAME1\n  game1_id,game1_live,game1_prize,game1_question_hash,game1_time_lock_cost,game1_submit_secret_cost,game1_riddle,game1_clue,\n  allGame1_id,allGame1_user_front_of_que,allGame1_deadline_time,allGame1_username,allGame1_total_game_tries,countGame1,countGame1DeadlineTrue,\n  game1_head_start_time,game1_entry_limit,game1_entry_cost,game1numberOfEntries,userGame1_id,userEntered_game1,userGame1_headstart_time,userGame1_live,\n  winning_address1,treasure_found1,winning_prize1,question_hash_solved1,winning_message1,attemptId1,attemptUsername1,attemptDeadline1,attemptAddress1,\n  totalGameEntriesGame1,\n      // GAME2\n  game2_id,game2_live,game2_prize,game2_question_hash,game2_time_lock_cost,game2_submit_secret_cost,game2_riddle,game2_clue,\n  allGame2_id,allGame2_user_front_of_que,allGame2_deadline_time,allGame2_username,allGame2_total_game_tries,countGame2,countGame2DeadlineTrue,\n  game2_head_start_time,game2_entry_limit,game2_entry_cost,game2numberOfEntries,userGame2_id,userEntered_game2,userGame2_headstart_time,userGame2_live,\n  winning_address2,treasure_found2,winning_prize2,question_hash_solved2,winning_message2,attemptId2,attemptUsername2,attemptDeadline2,attemptAddress2,\n  totalGameEntriesGame2,\n  globalNumberOfTries\n])\n\n\n\n\n    return (\n\n\n\n\n        <div className=\"background customFont\">\n\n\n        <Helmet>\n          <title>TreasureBlox | DAPP</title>\n        </Helmet>\n\n\n        <Router>\n        <MyNav accounts={accounts}/>\n\n\n// Pages\n\n        <Switch>\n                <Route path=\"/home\">\n\n                  <Home\n                  game1_id={game1_id}\n                  game1_live={game1_live}\n                  game1_prize={game1_prize}\n                  game1_question_hash={game1_question_hash}\n                  game1_time_lock_cost={game1_time_lock_cost}\n                  game1_submit_secret_cost={game1_submit_secret_cost}\n                  game1_riddle={game1_riddle}\n                  game1_clue={game1_clue}\n                  game1_head_start_time={game1_head_start_time}\n                  game1_entry_limit={game1_entry_limit}\n                  game1_entry_cost={game1_entry_cost}\n\n                  allGame1_id={allGame1_id}\n                  allGasme1_user_front_of_que={allGame1_user_front_of_que}\n                  allGame1_deadline_time={allGame1_deadline_time}\n                  allGame1_username={allGame1_username}\n                  allGame1_total_game_tries={allGame1_total_game_tries}\n                  countGame1={countGame1}\n                  countGame1DeadlineTrue={countGame1DeadlineTrue}\n                  totalTreasure={totalTreasure}\n                  game1numberOfEntries={game1numberOfEntries}\n\n                  game2_id={game2_id}\n                  game2_live={game2_live}\n                  game2_prize={game2_prize}\n                  game2_question_hash={game2_question_hash}\n                  game2_time_lock_cost={game2_time_lock_cost}\n                  game2_submit_secret_cost={game2_submit_secret_cost}\n                  game2_riddle={game2_riddle}\n                  game2_clue={game2_clue}\n                  game2_head_start_time={game2_head_start_time}\n                  game2_entry_limit={game2_entry_limit}\n                  game2_entry_cost={game2_entry_cost}\n                  allGame2_id={allGame2_id}\n                  allGasme2_user_front_of_que={allGame2_user_front_of_que}\n                  allGame2_deadline_time={allGame2_deadline_time}\n                  allGame2_username={allGame2_username}\n                  allGame2_total_game_tries={allGame2_total_game_tries}\n                  countGame2={countGame2}\n                  countGame2DeadlineTrue={countGame2DeadlineTrue}\n\n                  totalGameEntriesGame1={totalGameEntriesGame1}\n                  totalGameEntriesGame2={totalGameEntriesGame2}\n                  globalNumberOfTries={globalNumberOfTries}\n\n\n                  />\n                </Route>\n\n              <Route path=\"/hunt1\">\n\n                <Hunt1\n                web3={web3}\n                game1_id={game1_id}\n                game1_live={game1_live}\n                game1_prize={game1_prize}\n                game1_question_hash={game1_question_hash}\n                game1_time_lock_cost={game1_time_lock_cost}\n                game1_submit_secret_cost={game1_submit_secret_cost}\n                game1_riddle={game1_riddle}\n                game1_clue={game1_clue}\n                game1_head_start_time={game1_head_start_time}\n                game1_entry_limit={game1_entry_limit}\n                game1_entry_cost={game1_entry_cost}\n                allGame1_id={allGame1_id}\n                allGasme1_user_front_of_que={allGame1_user_front_of_que}\n                allGame1_deadline_time={allGame1_deadline_time}\n                allGame1_username={allGame1_username}\n                allGame1_total_game_tries={allGame1_total_game_tries}\n                countGame1={countGame1}\n                countGame1DeadlineTrue={countGame1DeadlineTrue}\n                decimals={decimals}\n                totalTreasure={totalTreasure}\n                contract={contract}\n                accounts={accounts}\n                game1numberOfEntries={game1numberOfEntries}\n                userGame1_id={userGame1_id}\n                userEntered_game1={userEntered_game1}\n                userGame1_headstart_time={userGame1_headstart_time}\n                userGame1_live={userGame1_live}\n                winning_address1={winning_address1}\n                treasure_found1={treasure_found1}\n                winning_prize1={winning_prize1}\n                question_hash_solved1={question_hash_solved1}\n                winning_message1={winning_message1}\n                attemptId1={attemptId1}\n                attemptAddress1={attemptAddress1}\n                attemptUsername1={attemptUsername1}\n                attemptDeadline1={attemptDeadline1}\n                totalGameEntriesGame1={totalGameEntriesGame1}\n                globalNumberOfTries={globalNumberOfTries}\n                />\n\n              </Route>\n\n              <Route path=\"/hunt2\">\n\n              <Hunt2\n              web3={web3}\n              game2_id={game2_id}\n              game2_live={game2_live}\n              game2_prize={game2_prize}\n              game2_question_hash={game2_question_hash}\n              game2_time_lock_cost={game2_time_lock_cost}\n              game2_submit_secret_cost={game2_submit_secret_cost}\n              game2_riddle={game2_riddle}\n              game2_clue={game2_clue}\n              game2_head_start_time={game2_head_start_time}\n              game2_entry_limit={game2_entry_limit}\n              game2_entry_cost={game2_entry_cost}\n              allGame2_id={allGame2_id}\n              allGame2_user_front_of_que={allGame2_user_front_of_que}\n              allGame2_deadline_time={allGame2_deadline_time}\n              allGame2_username={allGame2_username}\n              allGame2_total_game_tries={allGame2_total_game_tries}\n              countGame2={countGame2}\n              countGame2DeadlineTrue={countGame2DeadlineTrue}\n              decimals={decimals}\n              totalTreasure={totalTreasure}\n              contract={contract}\n              accounts={accounts}\n              game2numberOfEntries={game2numberOfEntries}\n              userGame2_id={userGame2_id}\n              userEntered_game2={userEntered_game2}\n              userGame2_headstart_time={userGame2_headstart_time}\n              userGame2_live={userGame2_live}\n              winning_address2={winning_address2}\n              treasure_found2={treasure_found2}\n              winning_prize2={winning_prize2}\n              question_hash_solved2={question_hash_solved2}\n              winning_message2={winning_message2}\n              attemptId2={attemptId2}\n              attemptAddress2={attemptAddress2}\n              attemptUsername2={attemptUsername2}\n              attemptDeadline2={attemptDeadline2}\n              totalGameEntriesGame2={totalGameEntriesGame2}\n              globalNumberOfTries={globalNumberOfTries}\n\n              />\n\n              </Route>\n\n        </Switch>\n\n        <Redirect to=\"/home\" />\n</Router>\n\n\n      </div>\n    );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}