{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/Connection.js\",\n    _s = $RefreshSig$();\n\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport { Button } from 'react-bootstrap';\nimport MyNav from \"./MyNav\";\nimport App from \"./App\";\nimport getWeb3 from \"./getWeb3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Connection = props => {\n  _s();\n\n  const wallet = useWallet();\n  const blockNumber = wallet.getBlockNumber();\n  const {\n    current: web3\n  } = useRef(new Web3(window.ethereum));\n\n  const activate = connector => wallet.connect(connector);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"use-wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), (() => {\n      var _wallet$error;\n\n      if ((_wallet$error = wallet.error) === null || _wallet$error === void 0 ? void 0 : _wallet$error.name) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: wallet.error instanceof ConnectionRejectedError ? 'Connection error: the user rejected the activation' : wallet.error.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: wallet.reset(),\n            children: \"retry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this);\n      }\n\n      if (wallet.status === 'connecting') {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Connecting to \", wallet.connector, \"\\u2026\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => wallet.reset(),\n            children: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this);\n      }\n\n      if (wallet.status === 'connected') {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Connected.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => wallet.reset(),\n            children: \"disconnect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connect\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connect-label\",\n          children: \"Connect:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connect-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => activate('injected'),\n            children: \"injected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => activate('frame'),\n            children: \"frame\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => activate('portis'),\n            children: \"portis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => activate('fortmatic'),\n            children: \"fortmatic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => activate('torus'),\n            children: \"torus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => activate('walletconnect'),\n            children: \"walletconnect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => activate('walletlink'),\n            children: \"walletlink\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this);\n    })(), wallet.connected && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: wallet.account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), wallet.account && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Balance:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: wallet.balance === '-1' ? '…' : `${wallet.balance} ETH`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this), wallet.connected && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Block:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: blockNumber || '…'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Connection, \"so3H6EQjbF4iMcmOWIJfMQsyDdA=\", false, function () {\n  return [useWallet];\n});\n\n_c = Connection;\nReactDOM.render( /*#__PURE__*/_jsxDEV(UseWalletProvider, {\n  connectors: {\n    injected: {\n      //allows you to connect and switch between mainnet and rinkeby within Metamask.\n      chainId: [1, 4]\n    },\n    fortmatic: {\n      chainId: [1],\n      apiKey: ''\n    },\n    portis: {\n      dAppId: '',\n      chainId: [1]\n    },\n    walletconnect: {\n      chainId: [1],\n      rpcUrl: 'https://mainnet.eth.aragon.network/'\n    },\n    walletlink: {\n      chainId: [1],\n      url: 'https://mainnet.eth.aragon.network/'\n    }\n  },\n  children: [/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n    children: `\n          body {\n            width: 40rem;\n            margin: 0 auto;\n            font-family: sans-serif;\n            font-size: 18px;\n            line-height: 1.5;\n          }\n          button {\n            width: 6rem;\n          }\n          h1 {\n            font-weight: 400;\n          }\n          p {\n            display: grid;\n            justify-content: space-between;\n            align-items: center;\n            grid-auto-flow: column;\n            gap: 1rem;\n            align-items: center;\n            margin: 2rem 0;\n          }\n          button {\n            height: 3rem;\n            cursor: pointer;\n            font-size: 1rem;\n            padding: 0;\n          }\n          .connect-label {\n            margin-bottom: 1rem;\n          }\n          .connect-buttons {\n            display: grid;\n            gap: 10px;\n            grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));\n          }\n          .connect-buttons button {\n            width: 100%;\n            height: 4rem;\n          }\n        `\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 104,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(Connection, {\n  accounts: props.accounts\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 180,\n  columnNumber: 5\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"Connection\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/Connection.js"],"names":["React","useState","useEffect","useWallet","UseWalletProvider","Button","MyNav","App","getWeb3","Connection","props","wallet","blockNumber","getBlockNumber","current","web3","useRef","Web3","window","ethereum","activate","connector","connect","error","name","ConnectionRejectedError","reset","status","connected","account","balance","ReactDOM","render","injected","chainId","fortmatic","apiKey","portis","dAppId","walletconnect","rpcUrl","walletlink","url","accounts"],"mappings":"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","sourcesContent":["// App.js\n\nimport React, {useState, useEffect} from 'react'\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport { Button } from 'react-bootstrap';\n\nimport MyNav from \"./MyNav\";\nimport App from \"./App\";\nimport getWeb3 from \"./getWeb3\";\n\n\n\n\nconst Connection = (props) =>  {\n\n\n\n  const wallet = useWallet()\n    const blockNumber = wallet.getBlockNumber()\n    const { current: web3 } = useRef(new Web3(window.ethereum))\n\n    const activate = (connector) => wallet.connect(connector)\n\n    return (\n      <>\n        <h1>use-wallet</h1>\n\n        {(() => {\n          if (wallet.error?.name) {\n            return (\n              <p>\n                <span>\n                  {wallet.error instanceof ConnectionRejectedError\n                    ? 'Connection error: the user rejected the activation'\n                    : wallet.error.name}\n                </span>\n                <button onClick={wallet.reset()}>retry</button>\n              </p>\n            )\n          }\n\n          if (wallet.status === 'connecting') {\n            return (\n              <p>\n                <span>Connecting to {wallet.connector}…</span>\n                <button onClick={() => wallet.reset()}>cancel</button>\n              </p>\n            )\n          }\n\n          if (wallet.status === 'connected') {\n            return (\n              <p>\n                <span>Connected.</span>\n                <button onClick={() => wallet.reset()}>disconnect</button>\n              </p>\n            )\n          }\n\n          return (\n            <div className=\"connect\">\n              <div className=\"connect-label\">Connect:</div>\n              <div className=\"connect-buttons\">\n                <button onClick={() => activate('injected')}>injected</button>\n                <button onClick={() => activate('frame')}>frame</button>\n                <button onClick={() => activate('portis')}>portis</button>\n                <button onClick={() => activate('fortmatic')}>fortmatic</button>\n                <button onClick={() => activate('torus')}>torus</button>\n                <button onClick={() => activate('walletconnect')}>\n                  walletconnect\n                </button>\n                <button onClick={() => activate('walletlink')}>walletlink</button>\n              </div>\n            </div>\n          )\n        })()}\n\n        {wallet.connected && (\n          <>\n            <p>\n              <span>Account:</span>\n              <span>{wallet.account}</span>\n            </p>\n          </>\n        )}\n\n        {wallet.account && (\n          <p>\n            <span>Balance:</span>\n            <span>{wallet.balance === '-1' ? '…' : `${wallet.balance} ETH`}</span>\n          </p>\n        )}\n\n        {wallet.connected && (\n          <p>\n            <span>Block:</span> <span>{blockNumber || '…'}</span>\n          </p>\n        )}\n      </>\n    )\n  }\n\n  ReactDOM.render(\n    <UseWalletProvider\n      connectors={{\n        injected: {\n          //allows you to connect and switch between mainnet and rinkeby within Metamask.\n          chainId: [1, 4],\n        },\n        fortmatic: {\n          chainId: [1],\n          apiKey: '',\n        },\n        portis: {\n          dAppId: '',\n          chainId: [1],\n        },\n        walletconnect: {\n          chainId: [1],\n          rpcUrl: 'https://mainnet.eth.aragon.network/',\n        },\n        walletlink: {\n          chainId: [1],\n          url: 'https://mainnet.eth.aragon.network/',\n        },\n      }}\n    >\n      <App />\n      <style>\n        {`\n          body {\n            width: 40rem;\n            margin: 0 auto;\n            font-family: sans-serif;\n            font-size: 18px;\n            line-height: 1.5;\n          }\n          button {\n            width: 6rem;\n          }\n          h1 {\n            font-weight: 400;\n          }\n          p {\n            display: grid;\n            justify-content: space-between;\n            align-items: center;\n            grid-auto-flow: column;\n            gap: 1rem;\n            align-items: center;\n            margin: 2rem 0;\n          }\n          button {\n            height: 3rem;\n            cursor: pointer;\n            font-size: 1rem;\n            padding: 0;\n          }\n          .connect-label {\n            margin-bottom: 1rem;\n          }\n          .connect-buttons {\n            display: grid;\n            gap: 10px;\n            grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));\n          }\n          .connect-buttons button {\n            width: 100%;\n            height: 4rem;\n          }\n        `}\n      </style>\n    </UseWalletProvider>,\n\n\n\n\n\n\n    <Connection accounts={props.accounts}/>\n\n\n)\n"]},"metadata":{},"sourceType":"module"}