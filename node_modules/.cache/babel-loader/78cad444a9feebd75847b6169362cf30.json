{"ast":null,"code":"'use strict';\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n *  SigningKey\n *\n *\n */\n\nvar hdnode_1 = require(\"./hdnode\");\n\nvar bytes_1 = require(\"./bytes\");\n\nvar properties_1 = require(\"./properties\");\n\nvar secp256k1_1 = require(\"./secp256k1\");\n\nvar errors = __importStar(require(\"../errors\")); ///////////////////////////////\n\n\nvar SigningKey = function () {\n  function SigningKey(privateKey) {\n    errors.checkNew(this, SigningKey);\n    var privateKeyBytes = null;\n\n    if (hdnode_1.HDNode.isHDNode(privateKey)) {\n      properties_1.defineReadOnly(this, 'mnemonic', privateKey.mnemonic);\n      properties_1.defineReadOnly(this, 'path', privateKey.path);\n      privateKeyBytes = bytes_1.arrayify(privateKey.privateKey);\n    } else {\n      // A lot of common tools do not prefix private keys with a 0x\n      if (typeof privateKey === 'string' && privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n        privateKey = '0x' + privateKey;\n      }\n\n      privateKeyBytes = bytes_1.arrayify(privateKey);\n    }\n\n    try {\n      if (privateKeyBytes.length !== 32) {\n        errors.throwError('exactly 32 bytes required', errors.INVALID_ARGUMENT, {\n          arg: 'privateKey',\n          value: '[REDACTED]'\n        });\n      }\n    } catch (error) {\n      var params = {\n        arg: 'privateKey',\n        reason: error.reason,\n        value: '[REDACTED]'\n      };\n\n      if (error.value) {\n        if (typeof error.value.length === 'number') {\n          params.length = error.value.length;\n        }\n\n        params.type = typeof error.value;\n      }\n\n      errors.throwError('invalid private key', error.code, params);\n    }\n\n    properties_1.defineReadOnly(this, 'privateKey', bytes_1.hexlify(privateKeyBytes));\n    properties_1.defineReadOnly(this, 'keyPair', new secp256k1_1.KeyPair(privateKeyBytes));\n    properties_1.defineReadOnly(this, 'publicKey', this.keyPair.publicKey);\n    properties_1.defineReadOnly(this, 'address', secp256k1_1.computeAddress(this.keyPair.publicKey));\n    properties_1.setType(this, 'SigningKey');\n  }\n\n  SigningKey.prototype.signDigest = function (digest) {\n    return this.keyPair.sign(digest);\n  };\n\n  SigningKey.prototype.computeSharedSecret = function (key) {\n    return this.keyPair.computeSharedSecret(bytes_1.arrayify(key));\n  };\n\n  SigningKey.isSigningKey = function (value) {\n    return properties_1.isType(value, 'SigningKey');\n  };\n\n  return SigningKey;\n}();\n\nexports.SigningKey = SigningKey;","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/node_modules/@meterio/ethers/utils/signing-key.js"],"names":["__importStar","mod","__esModule","result","k","Object","hasOwnProperty","call","defineProperty","exports","value","hdnode_1","require","bytes_1","properties_1","secp256k1_1","errors","SigningKey","privateKey","checkNew","privateKeyBytes","HDNode","isHDNode","defineReadOnly","mnemonic","path","arrayify","match","length","throwError","INVALID_ARGUMENT","arg","error","params","reason","type","code","hexlify","KeyPair","keyPair","publicKey","computeAddress","setType","prototype","signDigest","digest","sign","computeSharedSecret","key","isSigningKey","isType"],"mappings":"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","sourcesContent":["'use strict';\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n *  SigningKey\n *\n *\n */\nvar hdnode_1 = require(\"./hdnode\");\nvar bytes_1 = require(\"./bytes\");\nvar properties_1 = require(\"./properties\");\nvar secp256k1_1 = require(\"./secp256k1\");\nvar errors = __importStar(require(\"../errors\"));\n///////////////////////////////\nvar SigningKey = /** @class */ (function () {\n    function SigningKey(privateKey) {\n        errors.checkNew(this, SigningKey);\n        var privateKeyBytes = null;\n        if (hdnode_1.HDNode.isHDNode(privateKey)) {\n            properties_1.defineReadOnly(this, 'mnemonic', privateKey.mnemonic);\n            properties_1.defineReadOnly(this, 'path', privateKey.path);\n            privateKeyBytes = bytes_1.arrayify(privateKey.privateKey);\n        }\n        else {\n            // A lot of common tools do not prefix private keys with a 0x\n            if (typeof (privateKey) === 'string' && privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                privateKey = '0x' + privateKey;\n            }\n            privateKeyBytes = bytes_1.arrayify(privateKey);\n        }\n        try {\n            if (privateKeyBytes.length !== 32) {\n                errors.throwError('exactly 32 bytes required', errors.INVALID_ARGUMENT, { arg: 'privateKey', value: '[REDACTED]' });\n            }\n        }\n        catch (error) {\n            var params = { arg: 'privateKey', reason: error.reason, value: '[REDACTED]' };\n            if (error.value) {\n                if (typeof (error.value.length) === 'number') {\n                    params.length = error.value.length;\n                }\n                params.type = typeof (error.value);\n            }\n            errors.throwError('invalid private key', error.code, params);\n        }\n        properties_1.defineReadOnly(this, 'privateKey', bytes_1.hexlify(privateKeyBytes));\n        properties_1.defineReadOnly(this, 'keyPair', new secp256k1_1.KeyPair(privateKeyBytes));\n        properties_1.defineReadOnly(this, 'publicKey', this.keyPair.publicKey);\n        properties_1.defineReadOnly(this, 'address', secp256k1_1.computeAddress(this.keyPair.publicKey));\n        properties_1.setType(this, 'SigningKey');\n    }\n    SigningKey.prototype.signDigest = function (digest) {\n        return this.keyPair.sign(digest);\n    };\n    SigningKey.prototype.computeSharedSecret = function (key) {\n        return this.keyPair.computeSharedSecret(bytes_1.arrayify(key));\n    };\n    SigningKey.isSigningKey = function (value) {\n        return properties_1.isType(value, 'SigningKey');\n    };\n    return SigningKey;\n}());\nexports.SigningKey = SigningKey;\n"]},"metadata":{},"sourceType":"script"}