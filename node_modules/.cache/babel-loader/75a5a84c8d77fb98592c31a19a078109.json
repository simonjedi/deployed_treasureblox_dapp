{"ast":null,"code":"/** @module  audio-play Play buffer in browser via WAA */\n'use strict';\n\nconst getContext = require('audio-context');\n\nconst isAudioBuffer = require('is-audio-buffer');\n\nmodule.exports = function Play(buffer, how, cb) {\n  if (!isAudioBuffer(buffer)) throw Error('Argument should be an audio buffer');\n\n  if (how instanceof Function) {\n    cb = how;\n  }\n\n  how = how || {};\n\n  cb = cb || (() => {});\n\n  if (how.context == null) how.context = getContext();\n  if (how.currentTime == null) how.currentTime = 0;\n  if (how.start == null) how.start = 0;\n  if (how.end == null) how.end = buffer.duration;\n  how.start = normTime(how.start, buffer.duration);\n  how.end = normTime(how.end, buffer.duration);\n  let sourceNode = createNode(buffer, how);\n\n  if (!how.gain) {\n    how.gain = how.context.createGain();\n    how.gain.gain.value = how.volume == null ? 1 : how.volume;\n    how.gain.connect(how.context.destination);\n  }\n\n  sourceNode.connect(how.gain);\n  sourceNode.addEventListener('ended', cb); //provide API\n\n  play.play = pause.play = play;\n  play.pause = pause.pause = pause;\n  let startTime = 0;\n  let isPlaying = false;\n  return how.autoplay != false ? play() : play;\n\n  function play() {\n    if (isPlaying) return pause;\n    isPlaying = true;\n    startTime = how.context.currentTime;\n\n    if (how.loop) {\n      sourceNode.start(startTime, how.start + how.currentTime);\n    } else {\n      sourceNode.start(startTime, how.start + how.currentTime, how.end - how.start);\n    }\n\n    return pause;\n  }\n\n  function pause() {\n    if (!isPlaying) return pause.play;\n    isPlaying = false;\n    sourceNode.stop();\n    sourceNode.removeEventListener('ended', cb);\n    let playedTime = how.context.currentTime - startTime;\n    how.autoplay = false;\n    how.currentTime = playedTime;\n    let playback = Play(buffer, how, cb);\n    play.play = pause.play = playback.play;\n    play.pause = pause.pause = playback.pause;\n    play.currentTime = pause.currentTime = playback.currentTime = how.currentTime;\n    return playback;\n  }\n};\n\nfunction normTime(time, duration) {\n  return time < 0 ? duration + time % duration : Math.min(duration, time);\n}\n\nfunction createNode(buffer, how) {\n  let sourceNode = how.context.createBufferSource();\n  sourceNode.buffer = buffer; //init options\n\n  if (how.detune != null) sourceNode.detune = how.detune;\n  if (how.rate != null) sourceNode.playbackRate.value = how.rate;\n\n  if (how.loop) {\n    sourceNode.loop = true;\n    sourceNode.loopStart = how.start;\n    sourceNode.loopEnd = how.end;\n  }\n\n  return sourceNode;\n}","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/TreasureHuntDAPP_React/treasure-blox/node_modules/audio-play/browser.js"],"names":["getContext","require","isAudioBuffer","module","exports","Play","buffer","how","cb","Error","Function","context","currentTime","start","end","duration","normTime","sourceNode","createNode","gain","createGain","value","volume","connect","destination","addEventListener","play","pause","startTime","isPlaying","autoplay","loop","stop","removeEventListener","playedTime","playback","time","Math","min","createBufferSource","detune","rate","playbackRate","loopStart","loopEnd"],"mappings":"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","sourcesContent":["/** @module  audio-play Play buffer in browser via WAA */\r\n\r\n'use strict';\r\n\r\nconst getContext = require('audio-context');\r\nconst isAudioBuffer = require('is-audio-buffer');\r\n\r\nmodule.exports = function Play (buffer, how, cb) {\r\n\tif (!isAudioBuffer(buffer)) throw Error('Argument should be an audio buffer');\r\n\r\n\tif (how instanceof Function) {\r\n\t\tcb = how;\r\n\t}\r\n\r\n\thow = how || {};\r\n\tcb = cb || (() => {});\r\n\r\n\tif (how.context == null) how.context = getContext();\r\n\r\n\tif (how.currentTime == null) how.currentTime = 0;\r\n\tif (how.start == null) how.start = 0;\r\n\tif (how.end == null) how.end = buffer.duration;\r\n\thow.start = normTime(how.start, buffer.duration);\r\n\thow.end = normTime(how.end, buffer.duration);\r\n\r\n\tlet sourceNode = createNode(buffer, how);\r\n\r\n\tif (!how.gain) {\r\n\t\thow.gain = how.context.createGain();\r\n\t\thow.gain.gain.value = how.volume == null ? 1 : how.volume;\r\n\t\thow.gain.connect(how.context.destination);\r\n\t}\r\n\tsourceNode.connect(how.gain);\r\n\r\n\tsourceNode.addEventListener('ended', cb);\r\n\r\n\t//provide API\r\n\tplay.play = pause.play = play;\r\n\tplay.pause = pause.pause = pause;\r\n\r\n\tlet startTime = 0;\r\n\tlet isPlaying = false;\r\n\r\n\treturn how.autoplay != false ? play() : play;\r\n\r\n\tfunction play () {\r\n\t\tif (isPlaying) return pause;\r\n\r\n\t\tisPlaying = true;\r\n\r\n\t\tstartTime = how.context.currentTime;\r\n\r\n\t\tif (how.loop) {\r\n\t\t\tsourceNode.start(startTime, how.start + how.currentTime);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsourceNode.start(startTime, how.start + how.currentTime, how.end - how.start);\r\n\t\t}\r\n\r\n\t\treturn pause;\r\n\t}\r\n\r\n\tfunction pause () {\r\n\t\tif (!isPlaying) return pause.play;\r\n\t\tisPlaying = false;\r\n\r\n\t\tsourceNode.stop();\r\n\t\tsourceNode.removeEventListener('ended', cb);\r\n\r\n\t\tlet playedTime = (how.context.currentTime - startTime);\r\n\r\n\t\thow.autoplay = false;\r\n\t\thow.currentTime = playedTime;\r\n\r\n\t\tlet playback = Play(buffer, how, cb);\r\n\t\tplay.play = pause.play = playback.play;\r\n\t\tplay.pause = pause.pause = playback.pause;\r\n\t\tplay.currentTime = pause.currentTime = playback.currentTime = how.currentTime;\r\n\r\n\t\treturn playback;\r\n\t}\r\n}\r\n\r\nfunction normTime (time, duration) {\r\n\treturn time < 0 ? (duration + (time % duration)) : Math.min(duration, time);\r\n}\r\n\r\nfunction createNode (buffer, how) {\r\n\tlet sourceNode = how.context.createBufferSource();\r\n\r\n\tsourceNode.buffer = buffer;\r\n\r\n\t//init options\r\n\tif (how.detune != null) sourceNode.detune = how.detune;\r\n\tif (how.rate != null) sourceNode.playbackRate.value = how.rate;\r\n\r\n\r\n\tif (how.loop) {\r\n\t\tsourceNode.loop = true;\r\n\t\tsourceNode.loopStart = how.start;\r\n\t\tsourceNode.loopEnd = how.end;\r\n\t}\r\n\r\n\treturn sourceNode;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}