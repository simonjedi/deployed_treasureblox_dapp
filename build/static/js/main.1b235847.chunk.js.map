{"version":3,"sources":["getWeb3.js","Connection.js","components/Structure/images/Treasure-hunt.jpeg","components/Structure/Game1/SingleCard.js","components/Structure/images/elons-rocket.jpg","components/Structure/images/fortblox.png","components/Structure/images/Blox.gif","components/Structure/Sounds/waiting.wav","components/Structure/Game1/Step1Card.js","components/Structure/Sounds/enter.wav","components/Structure/Game1/Step2Card.js","components/Structure/images/rocket_crash.gif","components/Structure/images/eyes.gif","components/Structure/Sounds/music.wav","components/Structure/Sounds/fail.wav","components/Structure/Game1/Step3Card.js","components/Structure/Game1/Step3CardNoEntry.js","components/Structure/Sounds/celebrate.wav","components/Structure/Game1/Timer.js","components/Structure/HomeCards.js","components/Structure/HomeHuntCards.js","components/Structure/Game1/PageCard.js","components/Structure/Game1/HuntWowCards.js","components/Structure/Game1/EnterHuntCards.js","Hunt1.js","TreasureBlox_Logo.png","MyNav.js","Home.js","components/Structure/Game2/Step1Card.js","components/Structure/Game2/Step2Card.js","components/Structure/Game2/Step3Card.js","components/Structure/Game2/Step3CardNoEntry.js","components/Structure/Game2/Timer.js","components/Structure/Game2/SingleCard.js","components/Structure/Game2/PageCard.js","components/Structure/Game2/HuntWowCards.js","components/Structure/Game2/EnterHuntCards.js","Hunt2.js","App.js","reportWebVitals.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","Connection","props","wallet","useWallet","useState","firstPartAddress","setFirstPartAddress","secondPartAddress","setSecondPartAddress","useEffect","eth","getAccounts","accounts","usersAccount","stringOfUsersAccount","String","slice","init","connectWallet","e","connect","location","reload","Button","onClick","className","chainId","connectors","provided","cleanEthereum","SingleCard","commaNumber","require","game1_prize","decimals","game1_entry_cost","show","setShow","Container","fluid","Row","Col","Card","Header","Body","game1_riddle","variant","game1_clue","Modal","onHide","size","centered","class","src","allowfullscreen","Step1Card","loading","setloading","contract","handleSubmitEnter","methods","enterGame","allGame1_id","send","from","setTimeout","headStart","Date","game1_head_start_time","toLocaleDateString","alt","blox_loading","width","waiting","autoPlay","game1numberOfEntries","game1_entry_limit","allGame1_total_game_tries","Step2Card","undefined","username","setUsername","allGame1_deadline_time","handleSubmit","headStartTimeLock","result2","updateLocalDeadLineTime","enter","game1_time_lock_cost","Form","Control","type","placeholder","name","value","onChange","event","target","checked","Step3Card","keccak256","secret","setSecret","message","setMessage","hashedSecret","setHashedSecret","unlucky","setunlucky","SubmitSecret","events","submitSecretFailEvent","returnValues","countGame1","cancelLocalTime","rocketSmash","fail","music","eyes","required","userAccount","toString","userSecret","confirmedSecret","utils","soliditySha3","attemptUsername1","Timer","winning_prize1","setTransactionConfirmed","timeLock","setTimelock","game1_live","userEntered_game1","countGame2DeadlineTrue","attemptAddress2","winning_address1","celebrate","winning_message1","Step3CardNoEntry","bool","treasure_found1","HomeCards","treasure","totalTreasure","Title","to","HuntWowCards","game2_prize","Img","img1","img2","game2_riddle","game2numberOfEntries","allGame2_total_game_tries","PageCard","game1_submit_secret_cost","EnterHuntCards","attemptAddress1","Hunt1","height","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","removeEventListener","useWindowSize","winner","numberOfPieces","drawShape","ctx","beginPath","i","lineTo","Math","cos","PI","sin","closePath","stroke","CardGroup","CardColumns","MyNav","Navbar","collapseOnSelect","expand","Brand","logo","Toggle","Collapse","id","Nav","NavDropdown","title","Item","href","Divider","Home","game1_id","game1_question_hash","HomeHuntCards","game2_entry_cost","allGame2_id","game2_head_start_time","game2_entry_limit","allGame2_deadline_time","game2_time_lock_cost","countGame2","attemptUsername2","winning_prize2","game2_live","userEntered_game2","winning_address2","winning_message2","treasure_found2","game2_clue","game2_submit_secret_cost","Hunt2","App","setWeb3","setAccounts","setContract","setDecimals","setTotalTreasure","setGame1_id","setGame1_live","setGame1_prize","setGame1_question_hash","setgame1_time_lock_cost","setGame1_submit_secret_cost","setGame1_riddle","setGame1_clue","setGame1_head_start_time","setGame1_entry_limit","setGame1_entry_cost","setallGame1_id","allGame1_user_front_of_que","setallGame1_user_front_of_que","setallGame1_deadline","allGame1_username","setallGame1_username","setallGame1_total_game_tries","setTimeGame1","countGame1DeadlineTrue","setcountGame1DeadlineTrue","setGame1numberOfEntries","userGame1_id","setUserGame1_id","setUserEntered_game1","userGame1_headstart_time","setUserGame1_headstart_time","userGame1_live","setUserGame1_live","setWinning_address1","setTreasure_found1","setWinning_prize1","question_hash_solved1","setQuestion_hash_solved1","setWinning_message1","attemptId1","setAttemptId1","setAttemptAddress1","setAttemptUsername1","attemptDeadline1","setAttemptDeadline1","game2_id","setGame2_id","setGame2_live","setGame2_prize","game2_question_hash","setGame2_question_hash","setgame2_time_lock_cost","setGame2_submit_secret_cost","setGame2_riddle","setGame2_clue","setGame2_head_start_time","setGame2_entry_limit","setGame2_entry_cost","setallGame2_id","allGame2_user_front_of_que","setallGame2_user_front_of_que","setallGame2_deadline","allGame2_username","setallGame2_username","setallGame2_total_game_tries","setTimeGame2","setcountGame2DeadlineTrue","setGame2numberOfEntries","userGame2_id","setUserGame2_id","setUserEntered_game2","userGame2_headstart_time","setUserGame2_headstart_time","userGame2_live","setUserGame2_live","setWinning_address2","setTreasure_found2","setWinning_prize2","question_hash_solved2","setQuestion_hash_solved2","setWinning_message2","attemptId2","setAttemptId2","setAttemptAddress2","setAttemptUsername2","attemptDeadline2","setAttemptDeadline2","abi","Contract","call","then","balanceOf","Games","game1","game2","setInterval","getDifferenceInSeconds","date1","date2","abs","allGames","allGame1","numberOfEntries","huntEntries","game1huntEntries","Pot1AnsweredCorrectly","pot1AnsweredCorrectly","getAllLatestGameAttempts","getAllLatestGameAttempts1","currentStartDate","startDate","endDateGame1","timeGame1","prevTime","allGame2","game2huntEntries","pot2AnsweredCorrectly","getAllLatestGameAttempts2","endDateGame2","timeGame2","path","allGasme1_user_front_of_que","allGasme2_user_front_of_que","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iqYAwCeA,EAtCC,kBACd,IAAIC,SAAQ,SAACC,EAASC,GAEpBC,OAAOC,iBAAiB,OAAxB,sBAAgC,kCAAAC,EAAA,0DAE1BF,OAAOG,SAFmB,wBAGtBC,EAAO,IAAIC,IAAKL,OAAOG,UAHD,kBAMpBH,OAAOG,SAASG,SANI,OAQ1BR,EAAQM,GARkB,gDAW1BL,EAAO,EAAD,IAXoB,gCAerBC,OAAOI,MAERA,EAAOJ,OAAOI,KACpBG,QAAQC,IAAI,2BACZV,EAAQM,KAMFK,EAAW,IAAIJ,IAAKK,UAAUC,aAAa,mDAE3CP,EAAO,IAAIC,IAAKI,GACtBF,QAAQC,IAAI,gDACZV,EAAQM,IA7BoB,8D,OCM9BQ,EAAa,SAACC,GAElB,IAAMC,EAASC,cACf,EAAgDC,mBAAS,kBAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAkDF,mBAAS,IAA3D,mBAAOG,EAAP,KAA0BC,EAA1B,KAEAC,qBAAU,YACG,uCAAG,kCAAAnB,EAAA,sEACQN,IADR,cACLQ,EADK,gBAEYA,EAAKkB,IAAIC,cAFrB,OAELC,EAFK,OAGLC,EAAeD,EAAS,GACxBE,EAAuB,IAAIC,OAAOF,GACxClB,QAAQC,IAAIkB,EAAqBE,MAAM,EAAG,IAC1CV,EAAoBQ,EAAqBE,MAAM,EAAG,IAClDR,EAAqB,OAAOM,EAAqBE,MAAM,GAAI,KAPhD,4CAAH,qDAWVC,MAGH,IAAMC,EAAa,uCAAG,WAAMC,GAAN,iBAAA7B,EAAA,sEACdY,EAAOkB,UADO,OAEdP,EAAeZ,EAAMW,SACrBE,EAAuB,IAAIC,OAAOF,GACxClB,QAAQC,IAAIkB,EAAqBE,MAAM,EAAG,IAC1CV,EAAoB,WACpBE,EAAqB,IACrBpB,OAAOiC,SAASC,SAPI,2CAAH,sDAYnB,OACE,8BACE,eAACC,EAAA,EAAD,CAAQC,QAASN,EAAeO,UAAU,oCAA1C,UAA+EpB,EAAkBE,QAMxF,WAACN,GAAD,OACb,cAAC,IAAD,CACEyB,QAAS,KACTC,WAAY,CAEVC,SAAU,CAAC/B,SAAUT,OAAOyC,gBAJhC,SAOE,cAAC,EAAD,CAAYjB,SAAUX,EAAMW,c,6CC5DjB,I,mCC+FAkB,G,OApFI,SAAC7B,GAClB,IAAM8B,EAAcC,EAAQ,IAMtBC,GAHWhC,EAAMiC,SAGHH,EAAY9B,EAAMgC,YAAY,MAC5CE,EAAmBJ,EAAY9B,EAAMkC,iBAAiB,KAI5D,EAAwB/B,oBAAS,GAAjC,mBAAOgC,EAAP,KAAaC,EAAb,KAOA,OAEE,cAACC,EAAA,EAAD,CAAWb,UAAU,OAAOc,MAAM,KAAlC,SAEA,eAACC,EAAA,EAAD,WAEA,cAACC,EAAA,EAAD,UACA,8BACE,eAACC,EAAA,EAAD,CAAMjB,UAAU,mBAAhB,UACA,cAACiB,EAAA,EAAKC,OAAN,oBACA,eAACD,EAAA,EAAKE,KAAN,CAAWnB,UAAU,gBAArB,UACE,qBAAKA,UAAU,gBAAf,8CAEA,sBAAKA,UAAU,YAAf,mBAAkCQ,EAAlC,WACA,sBAAKR,UAAU,gBAAf,wBAA2CU,EAA3C,WACA,iCAMJ,cAACM,EAAA,EAAD,UACA,8BACE,eAACC,EAAA,EAAD,CAAMjB,UAAU,mBAAhB,UACA,cAACiB,EAAA,EAAKC,OAAN,qBACA,eAACD,EAAA,EAAKE,KAAN,CAAWnB,UAAU,gBAArB,UACE,qBAAKA,UAAU,gBAAf,SAAgCxB,EAAM4C,eAEtC,qBAAKpB,UAAU,YAAf,SAA2B,mBAAGqB,QAAQ,UAAUtB,QAhCnC,kBAAMa,GAAQ,IAgCA,SAA2CpC,EAAM8C,eAC5E,qBAAKtB,UAAU,gBAAf,mCACA,uBAIA,cAACuB,EAAA,EAAD,CAAOZ,KAAMA,EAAMa,OAvCL,kBAAMZ,GAAQ,IAuCYa,KAAK,KAAK,kBAAgB,gCAAgCC,UAAQ,EAA1G,SAGE,qBAAKC,MAAM,0CAAX,SACA,wBAAQA,MAAM,wBAAwBC,IAAI,kDAAkDC,iBAAe,yBCpEtG,G,0BAAA,IAA0B,0CCA1B,MAA0B,qCCA1B,MAA0B,iCCA1B,MAA0B,oC,iBC+H1BC,G,OAnGG,SAACtD,GAGjB,IAEMkC,EAFcH,EAAQ,GAEHD,CAAY9B,EAAMkC,iBAAiB,KAG5D,EAA6B/B,oBAAS,GAAtC,mBAAOoD,EAAP,KAAeC,EAAf,KAGMC,EAAWzD,EAAMyD,SACjB9C,EAAWX,EAAMW,SAUf+C,EAAiB,uCAAG,sBAAArE,EAAA,6DACxBmE,GAAW,GADa,SAElBC,EAASE,QAAQC,UAAU5D,EAAM6D,aAAaC,KAAK,CAACC,KAAMpD,IAFxC,OAKxBqD,YAAW,WACPR,GAAW,KACb,KAPsB,2CAAH,qDAanBS,EADS,IAAIC,KAAiC,IAA5BlE,EAAMmE,uBACPC,mBAAmB,SAO1C,OAEM,8BAEMb,EACA,gCACA,uBACE,uBAFF,8CAII,uBACA,uBACA,qBACEc,IAAI,eACJjB,IAAKkB,EACLC,MAAM,KACN/C,UAAU,gCAEZ,cAAC,IAAD,CACE4B,IAAKoB,EACLC,UAAQ,IAEZ,uBACF,0BAGA,gCACE,qBAAKjD,UAAU,aAAf,yBACA,sBAAKA,UAAU,iBAAf,wBAA4CU,EAA5C,WACA,+IAAkH+B,EAAlH,yCAGA,uBACA,sBAAKzC,UAAU,mBAAf,wCAA8DxB,EAAM0E,qBAApE,MAA6F1E,EAAM2E,qBACnG,uBAEA,uBACA,cAACrD,EAAA,EAAD,CAAQE,UAAU,eAAeD,QAASmC,EAA1C,6BACA,uBACA,uBACA,iDAAoB1D,EAAM4E,6BAE1B,8BC/GD,MAA0B,kC,SC8H1BC,G,OAnGG,SAAC7E,GAEG+B,EAAQ,IACVA,EAAQ,IAD1B,IAGA,EAA+B5B,wBAAS2E,GAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA6B7E,oBAAS,GAAtC,mBAAOoD,EAAP,KAAeC,EAAf,KAKMC,GADyBzD,EAAMiF,uBACpBjF,EAAMyD,UACjB9C,EAAWX,EAAMW,SAUfuE,EAAY,uCAAG,4BAAA7F,EAAA,6DAEnBmE,GAAW,GAFQ,SAGGC,EAASE,QAAQwB,kBAAkBJ,EAAS/E,EAAM6D,aAAaC,KAAK,CAACC,KAAMpD,IAH9E,OAGbyE,EAHa,OAInBJ,OAAYF,GAEZpF,QAAQC,IAAI,wBAAwByF,GAEpCpF,EAAMqF,wBAAwBD,GAE9B1F,QAAQC,IAAI,sBAEZqE,YAAW,WACPR,GAAW,KACb,KAdiB,2CAAH,qDAoBpB,OACM,8BACMD,EACA,gCACA,uBACE,uBAFF,mCAII,uBACA,uBACA,qBACEc,IAAI,eACJjB,IAAKkB,EACLC,MAAM,KACN/C,UAAU,gCAEZ,cAAC,IAAD,CACE4B,IAAKoB,EACLC,UAAQ,IAEZ,uBACF,0BAGA,gCACE,cAAC,IAAD,CACErB,IAAKkC,EACLb,UAAQ,IAEV,qBAAKjD,UAAU,mBAAf,+BACA,qBAAKA,UAAU,iBAAf,gCACA,mHAEA,uBACA,sBAAKA,UAAU,mBAAf,sCAA4DxB,EAAMuF,qBAAlE,WAEA,uBACA,mDAEA,cAACC,EAAA,EAAKC,QAAN,CAAcC,KAAK,OAAOC,YAAY,YAAYC,KAAK,WAAWC,MAAOd,EAAUe,SAjErE,SAACC,GACzB,IAAMC,EAASD,EAAMC,OACfH,EAAwB,aAAhBG,EAAON,KAAsBM,EAAOC,QAAUD,EAAOH,MACtDG,EAAOJ,KACpBZ,EAAYa,MA+DF,uBACA,cAACvE,EAAA,EAAD,CAAQE,UAAU,eAAeD,QAAS2D,EAA1C,2BACA,uBACA,uBACA,iDAAoBlF,EAAM4E,oCCjH3B,MAA0B,yCCA1B,MAA0B,iCCA1B,MAA0B,kCCA1B,MAA0B,iCCqN1BsB,EAzLG,SAAClG,GAGG+B,EAAQ,IAA5B,IACMoE,EAAYpE,EAAQ,IAG1B,GAFWA,EAAQ,IAEQ5B,mBAAS,KAApC,mBAAOiG,EAAP,KAAcC,EAAd,KACA,EAA6BlG,mBAAS,IAAtC,mBAAOmG,EAAP,KAAeC,EAAf,KACA,EAAuCpG,wBAAS2E,GAAhD,mBAAO0B,EAAP,KAAoBC,EAApB,KACA,EAA6BtG,oBAAS,GAAtC,mBAAOuG,EAAP,KAAeC,EAAf,KAEA,EAA6BxG,oBAAS,GAAtC,mBAAOoD,EAAP,KAAeC,EAAf,KAGMC,GADyBzD,EAAMiF,uBACpBjF,EAAMyD,UACjB9C,EAAWX,EAAMW,SAmCfuE,EAAY,uCAAG,sBAAA7F,EAAA,6DAEnBmE,GAAW,GAFQ,SAGEC,EAASE,QAAQiD,aAAaJ,EAAaJ,EAAOpG,EAAM6D,YAAYyC,GAASxC,KAAK,CAACC,KAAMpD,IAH3F,OAKwC,GALxC,OAKRkG,OAAOC,sBAAsBC,aAAa,IAGnDvD,GAAW,GACXmD,GAAW,IAEXA,GAAW,GAGbN,EAAU,IACVE,EAAW,IAEXvC,YAAW,WACPR,GAAW,KACb,KAnBiB,2CAAH,qDA8BpB,OAP2B,IAArBxD,EAAMgH,YACRhH,EAAMiH,kBAOJ,8BAIM1D,EACA,8BAGQ,gCACE,uBACE,uBAFJ,qCAIM,uBACA,uBACA,qBACEc,IAAI,eACJjB,IAAKkB,EACLC,MAAM,KACN/C,UAAU,gCAEZ,cAAC,IAAD,CACE4B,IAAKoB,EACLC,UAAQ,IAEZ,uBACF,4BAKV,gCACM,8BAEKiC,EAIS,gCACE,qBAAKlF,UAAU,mBAAf,gCACE,qBACE6C,IAAI,WACJjB,IAAK8D,EACL3C,MAAM,MACN/C,UAAU,gCAEZ,cAAC,IAAD,CACE4B,IAAK+D,EACL1C,UAAQ,OAMlB,0BAQd,gCACE,qBAAKjD,UAAU,mBAAf,wCAEA,cAAC,IAAD,CACE4B,IAAKgE,EACL3C,UAAQ,IAGV,sBAAKjD,UAAU,iBAAf,uBAA2CxB,EAAMgH,cAEjD,qBACE3C,IAAI,OACJjB,IAAKiE,EACL9C,MAAM,MACN/C,UAAU,gCAGZ,uBACA,mDACA,cAACgE,EAAA,EAAKC,QAAN,CAAcC,KAAK,WAAY4B,UAAQ,EAAC3B,YAAY,mBAAmBC,KAAK,SAASC,MAAOO,EAAQN,SA/IlF,SAACC,GAC/B,IAAMC,EAASD,EAAMC,OAEfH,EAAwB,aAAhBG,EAAON,KAAsBM,EAAOC,QAAUD,EAAOH,MAK7D0B,GAJSvB,EAAOI,OAIF,KAAKD,EAAUxF,GAAU6G,SAAS,QAEhDC,EAAa,KAAKtB,EAAUN,GAAO2B,SAAS,OAE5CE,EAAkB1H,EAAMT,KAAKoI,MAAMC,aAAaL,EAAYE,GAAYD,SAAS,OAEvFnB,EAAUR,GACVY,EAAgBiB,MAkIJ,2DACA,cAAClC,EAAA,EAAKC,QAAN,CAAcC,KAAK,OAAO4B,UAAQ,EAAC3B,YAAY,0BAA0BC,KAAK,UAAUC,MAAOS,EAASR,SA3HrF,SAACC,GAChC,IAAMC,EAASD,EAAMC,OAEfH,EAAwB,aAAhBG,EAAON,KAAsBM,EAAOC,QAAUD,EAAOH,MACnDG,EAAOM,QAEvBC,EAAWV,MAsHC,uBACA,cAACvE,EAAA,EAAD,CAAQE,UAAU,eAAeD,QAAS2D,EAA1C,2BACA,uBACA,uBACA,iDAAoBlF,EAAM4E,sCCrH7BsB,EA7DG,SAAClG,GAEG+B,EAAQ,IACVA,EAAQ,IACfA,EAAQ,IAFnB,IAIA,EAA2B5B,wBAAS2E,GAApC,mBACA,GADA,UAC6B3E,wBAAS2E,IAAtC,mBACA,GADA,UACuC3E,wBAAS2E,IAAhD,mBAEA,GAFA,UAE6B3E,oBAAS,IAAtC,6BAE+BH,EAAMiF,uBACpBjF,EAAMyD,SACNzD,EAAMW,SAyBvB,OAJ2B,IAArBX,EAAMgH,YACRhH,EAAMiH,kBAKE,gCACE,qBAAKzF,UAAU,mBAAf,8CAEA,uBACCxB,EAAM6H,iBAJT,gCAME,uBANF,4DASE,uBACA,sBAAKrG,UAAU,mBAAf,4BAAkDxB,EAAMgH,WAAxD,cAEA,uBACA,iDAAoBhH,EAAM4E,iCC1E3B,MAA0B,sCCkM1BkD,EA9KD,SAAC9H,GACb,IAGM+H,EAHchG,EAAQ,GAGLD,CAAY9B,EAAM+H,eAAe,KAExD,EAAuD5H,wBAAS2E,GAAhE,mBAA4BkD,GAA5B,WACA,EAA+B7H,oBAAS,GAAxC,mBAAO8H,EAAP,KAAgBC,EAAhB,KAKQC,EAAanI,EAAMmI,WAEnB7C,EAAQtF,EAAMoI,kBAehBnB,EAAkB,WACpBiB,GAAY,IAMhB,OAIF,aADI,CACJ,gBAEKC,EAEC,8BAGA,8BAEG7C,EAGC,8BAEE,8BACU2C,GAAYjI,EAAMqI,uBAClB,8BACGL,GAA2BhI,EAAMW,UAAYX,EAAMsI,gBAClD,8BAEItI,EAAMW,UAAYX,EAAMuI,iBAEtB,gCACE,cAAC,IAAD,CACEnF,IAAKoF,EACL/D,UAAQ,IAHZ,6CAME,qBAAKjD,UAAU,aAAf,oBACA,sBAAKA,UAAU,iBAAf,uBAA2CuG,EAA3C,WAEA,uBACA,qBAAKvG,UAAU,iBAAf,6BACA,qBAAKA,UAAU,mBAAf,SAAmCxB,EAAMyI,mBAEzC,uBAAK,uBACL,qBAAKjH,UAAU,iBAAf,6BACCxB,EAAMuI,oBAOT,qBAAK/G,UAAU,mBAAf,SAEE,cAAC,EAAD,2BACIxB,GADJ,IACWiH,gBAAiBA,SAOpC,8BAEE,cAACyB,EAAD,2BACI1I,GADJ,IACWiH,gBAAiBA,SAQlC,8BAEE,cAAC,EAAD,2BACIjH,GADJ,IACWqF,wBA1FD,SAACsD,GAC3BA,IACFX,GAAwB,GACxBtI,QAAQC,IAAI,gBAAiBsI,GAC7BC,GAAY,GACZxI,QAAQC,IAAI,oBAAqBsI,cAkG3B,8BACE,cAAC,EAAD,eACIjI,UAWR,8BACGA,EAAM4I,gBACH,gCACE,cAAC,IAAD,CACExF,IAAKoF,EACL/D,UAAQ,IAHZ,iEAME,qBAAKjD,UAAU,aAAf,oBACA,sBAAKA,UAAU,iBAAf,uBAA2CuG,EAA3C,WACA,uBACA,qBAAKvG,UAAU,iBAAf,6BACA,qBAAKA,UAAU,mBAAf,SAAmCxB,EAAMyI,mBACzC,uBACA,uBACA,qBAAKjH,UAAU,iBAAf,6BACCxB,EAAMuI,oBAGT,kFAEA,qBAAK/G,UAAU,aAAf,uC,iBCjFDqH,EAzEG,SAAC7I,GAEjB,IAAM8B,EAAcC,EAAQ,IAGtB+G,GADyB9I,EAAMiF,uBACpBnD,EAAY9B,EAAM+I,cAAc,MAcjD,OAGE,gCACM,cAACtG,EAAA,EAAD,CAAMjB,UAAU,cAAhB,SACE,eAACiB,EAAA,EAAKE,KAAN,CAAWnB,UAAU,kBAArB,UACE,cAACiB,EAAA,EAAKuG,MAAN,CAAYxH,UAAU,YAAtB,2BAEA,qBAAKA,UAAU,mBAAf,oBACA,qBAAKA,UAAU,kBAAf,oIACA,qBAAKA,UAAU,mBAAf,oBACA,qBAAKA,UAAU,kBAAf,qIACA,qBAAKA,UAAU,mBAAf,wBACA,qBAAKA,UAAU,kBAAf,gKACA,uBACA,cAAC,IAAD,CAAMyH,GAAG,SAAT,SACE,cAAC3H,EAAA,EAAD,CAAQE,UAAU,8BAA8ByH,GAAG,SAAnD,wBAGF,cAAC,IAAD,CAAMA,GAAG,SAAT,SACE,cAAC3H,EAAA,EAAD,CAAQE,UAAU,8BAA8ByH,GAAG,SAAnD,2BAGF,cAAC,IAAD,CAAMA,GAAG,SAAT,SACE,cAAC3H,EAAA,EAAD,CAAQE,UAAU,8BAA8ByH,GAAG,SAAnD,6BAMN,cAACxG,EAAA,EAAD,CAAMjB,UAAU,cAAhB,SACE,eAACiB,EAAA,EAAKE,KAAN,CAAWnB,UAAU,gBAArB,UACE,cAACiB,EAAA,EAAKuG,MAAN,CAAYxH,UAAU,YAAtB,2BACA,sBAAKA,UAAU,mBAAf,kCAAwDsH,EAAxD,WACA,uEACA,uBACA,cAACxH,EAAA,EAAD,CAAQE,UAAU,eAAlB,sBAEA,gCCWC0H,G,OApEM,SAAClJ,GAEpB,IAAM8B,EAAcC,EAAQ,IAEtBC,EAAcF,EAAY9B,EAAMgC,YAAY,KAC5CmH,EAAcrH,EAAY9B,EAAMmJ,YAAY,KAiBlD,OAGE,gCACA,eAAC1G,EAAA,EAAD,CAAMjB,UAAU,cAAhB,UACE,cAACiB,EAAA,EAAK2G,IAAN,CAAUvG,QAAQ,MAAMO,IAAKiG,EAAMhF,IAAI,OAAO7C,UAAU,kBACxD,eAACiB,EAAA,EAAKE,KAAN,WACE,cAACF,EAAA,EAAKuG,MAAN,CAAYxH,UAAU,YAAtB,qCACA,0CAAaxB,EAAM4C,gBACnB,yCAAYZ,EAAZ,WACA,4DAA+BhC,EAAM0E,wBACrC,uBACA,cAAC,IAAD,CAAMuE,GAAG,SAAT,SACE,cAAC3H,EAAA,EAAD,CAAQE,UAAU,eAAeyH,GAAG,SAApC,iCAEF,uBAAK,uBAEL,sBAAKzH,UAAU,YAAf,UAA4BxB,EAAM4E,0BAAlC,qBAIJ,eAACnC,EAAA,EAAD,CAAMjB,UAAU,cAAhB,UACE,cAACiB,EAAA,EAAK2G,IAAN,CAAUvG,QAAQ,MAAMO,IAAKkG,EAAMjF,IAAI,OAAO7C,UAAU,kBACxD,eAACiB,EAAA,EAAKE,KAAN,WACE,cAACF,EAAA,EAAKuG,MAAN,CAAYxH,UAAU,YAAtB,uBACA,0CAAaxB,EAAMuJ,gBACnB,yCAAYJ,EAAZ,WACA,4DAA+BnJ,EAAMwJ,wBACrC,uBACA,cAAC,IAAD,CAAMP,GAAG,SAAT,SACE,cAAC3H,EAAA,EAAD,CAAQE,UAAU,eAAeyH,GAAG,SAApC,oCAEF,uBAAK,uBACL,sBAAKzH,UAAU,YAAf,UAA4BxB,EAAMyJ,0BAAlC,0BCpBOC,EA1CE,SAAC1J,GAoBhB,OAKE,8BAEA,cAACyC,EAAA,EAAD,CAAMjB,UAAU,cAAhB,SACE,cAACiB,EAAA,EAAK2G,IAAN,CAAUvG,QAAQ,MAAMO,IAAKiG,EAAMhF,IAAI,OAAO7C,UAAU,qBCoB/C0H,EAxCM,SAAClJ,GAEA+B,EAAQ,IAW5B,OAEE,8BAGM,cAACU,EAAA,EAAD,CAAMjB,UAAU,cAAhB,SACE,eAACiB,EAAA,EAAKE,KAAN,CAAWnB,UAAU,gBAArB,UACE,cAACiB,EAAA,EAAKuG,MAAN,CAAYxH,UAAU,YAAtB,mBACA,6KACA,uBACA,sBAAKA,UAAU,mBAAf,2BAAiDxB,EAAMkC,iBAAvD,WACA,sBAAKV,UAAU,mBAAf,sCAA4DxB,EAAMuF,qBAAlE,WACA,sBAAK/D,UAAU,mBAAf,mCAAyDxB,EAAM2J,yBAA/D,WACd,+BC4BeC,I,OAtDQ,SAAC5J,GAEF+B,EAAQ,IAKG/B,EAAMiF,uBAEvCvF,QAAQC,IAAI,kBAAkBK,EAAM6J,iBAclC,OAIE,8BACM,cAACpH,EAAA,EAAD,CAAMjB,UAAU,mCAAhB,SACE,eAACiB,EAAA,EAAKE,KAAN,CAAWnB,UAAU,kBAArB,UACE,cAACiB,EAAA,EAAKC,OAAN,CAAalB,UAAU,iBAAvB,0CAEA,cAAC,EAAD,eACIxB,IAGJ,wBAAQwB,UAAU,eAGlB,gC,qBCRd,IA4EesI,GA5ED,SAAC9J,GAEb,IAAM8B,EAAcC,EAAQ,IAC5B,EA9BF,WAGE,MAAoC5B,mBAAS,CAC3CoE,WAAOO,EACPiF,YAAQjF,IAFV,mBAAOkF,EAAP,KAAmBC,EAAnB,KAqBA,OAhBAzJ,qBAAU,WAER,SAAS0J,IAEPD,EAAc,CACZ1F,MAAOpF,OAAOgL,WACdJ,OAAQ5K,OAAOiL,cAQnB,OAJAjL,OAAOC,iBAAiB,SAAU8K,GAElCA,IAEO,kBAAM/K,OAAOkL,oBAAoB,SAAUH,MACjD,IACIF,EAMmBM,GAAlB/F,EAAR,EAAQA,MAAOwF,EAAf,EAAeA,OAYTQ,GAVczI,EAAY9B,EAAMgC,YAAY,KAUnChC,EAAM4I,iBAEnB,OAEE,sBAAKpH,UAAU,eAAf,UACC+I,EACC,8BAAK,cAAC,KAAD,CACHhG,MAAOA,EACPwF,OAAQA,EACTS,eAAgB,IAEfC,UAAW,SAAAC,GACTA,EAAIC,YACJ,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACrBF,EAAIG,OAAO,GAAK,GAAKC,KAAKC,IAAI,EAAID,KAAKE,GAAK,EAAIJ,GAAI,GAAK,GAAKE,KAAKG,IAAI,EAAIH,KAAKE,GAAK,EAAIJ,IAE3FF,EAAIQ,YACJR,EAAIS,cAOR,wBAKF,gCACM,qBAAK3J,UAAU,YAAf,2FACN,cAAC,EAAD,eAAexB,IAEf,cAACqC,EAAA,EAAD,CAAWb,UAAU,OAAOc,MAAM,KAAlC,SACM,cAAC8I,EAAA,EAAD,CAAW5J,UAAU,OAArB,SACE,eAAC6J,EAAA,EAAD,WAEE,cAAC,GAAD,eAAoBrL,IACpB,uBACA,cAAC,EAAD,eAAkBA,IAElB,cAAC,EAAD,eAAcA,IAEd,cAAC,EAAD,kBC/GD,OAA0B,8CC2E1BsL,GAvDD,SAACtL,GAEb,OAEE,cAACuL,EAAA,EAAD,CAAQC,kBAAgB,EAAChK,UAAU,wBAAwBiK,OAAO,KAAK5I,QAAQ,OAA/E,SACE,eAACR,EAAA,EAAD,WAEA,cAAC,IAAD,CAAMb,UAAU,cAAcyH,GAAG,QAAjC,SACA,cAACsC,EAAA,EAAOG,MAAR,UACC,qBACErH,IAAI,oBACJjB,IAAKuI,GACLpH,MAAM,MACN/C,UAAU,oCAKb,cAAC+J,EAAA,EAAOK,OAAR,CAAe,gBAAc,0BAC7B,eAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,wBAApB,UACE,eAACC,EAAA,EAAD,CAAKvK,UAAU,UAAf,UACE,cAAC,IAAD,CAAMA,UAAU,cAAcyH,GAAG,QAAjC,kBAGA,cAAC,IAAD,CAAMzH,UAAU,cAAcyH,GAAG,SAAjC,2BAGA,cAAC,IAAD,CAAMzH,UAAU,cAAcyH,GAAG,SAAjC,uBAGA,eAAC+C,EAAA,EAAD,CAAaC,MAAM,WAAWH,GAAG,0BAAjC,UACE,cAACE,EAAA,EAAYE,KAAb,CAAkBC,KAAK,cAAvB,oBACA,cAACH,EAAA,EAAYE,KAAb,CAAkBC,KAAK,cAAvB,4BACA,cAACH,EAAA,EAAYE,KAAb,CAAkBC,KAAK,cAAvB,uBACA,cAACH,EAAA,EAAYI,QAAb,IACA,cAACJ,EAAA,EAAYE,KAAb,CAAkBC,KAAK,cAAvB,kCAIJ,cAACJ,EAAA,EAAD,CAAKvK,UAAU,UAAf,SAEE,cAAC,EAAD,CAAYb,SAAUX,EAAMW,sB,SCiCvB0L,GA1DF,SAACrM,GAEZ,IAAM8B,EAAcC,EAAQ,IAGX/B,EAAMsM,SACJtM,EAAMmI,WACLrG,EAAY9B,EAAMgC,YAAY,KACtBhC,EAAMuM,oBACLvM,EAAMuF,qBACFvF,EAAM2J,yBACpB3J,EAAM8C,WAGM9C,EAAMiF,uBAenC,OAEE,8BACA,cAAC5C,EAAA,EAAD,CAAWb,UAAU,OAAOc,MAAM,KAAlC,SAEJ,sBAAKd,UAAU,eAAf,UAEM,qBAAKA,UAAU,YAAf,6FACA,cAAC4J,EAAA,EAAD,CAAW5J,UAAU,OAArB,SAEE,eAAC6J,EAAA,EAAD,WAEE,cAAC,EAAD,eAAerL,IAEf,cAACwM,EAAD,eAAmBxM,iBCqChBsD,I,cAzFG,SAACtD,GAGjB,IAEMyM,EAFc1K,EAAQ,GAEHD,CAAY9B,EAAMyM,iBAAiB,KAE5D,EAA6BtM,oBAAS,GAAtC,mBAAOoD,EAAP,KAAeC,EAAf,KAEMC,EAAWzD,EAAMyD,SACjB9C,EAAWX,EAAMW,SAQf+C,EAAiB,uCAAG,sBAAArE,EAAA,6DACxBmE,GAAW,GADa,SAElBC,EAASE,QAAQC,UAAU5D,EAAM0M,aAAa5I,KAAK,CAACC,KAAMpD,IAFxC,OAIxBqD,YAAW,WACPR,GAAW,KACb,KANsB,2CAAH,qDAWnBS,EADS,IAAIC,KAAiC,IAA5BlE,EAAM2M,uBACPvI,mBAAmB,SAG1C,OAEM,8BAEMb,EACA,gCACA,uBACE,uBAFF,8CAII,uBACA,uBACA,qBACEc,IAAI,eACJjB,IAAKkB,EACLC,MAAM,KACN/C,UAAU,gCAEZ,cAAC,IAAD,CACE4B,IAAKoB,EACLC,UAAQ,IAEZ,uBACF,0BAGA,gCACE,qBAAKjD,UAAU,aAAf,yBACA,sBAAKA,UAAU,iBAAf,wBAA4CiL,EAA5C,WACA,+IAAkHxI,EAAlH,yCAGA,uBACA,sBAAKzC,UAAU,mBAAf,wCAA8DxB,EAAMwJ,qBAApE,MAA6FxJ,EAAM4M,qBACnG,uBAEA,uBACA,cAACtL,EAAA,EAAD,CAAQE,UAAU,eAAeD,QAASmC,EAA1C,6BACA,uBACA,uBACA,iDAAoB1D,EAAMyJ,6BAE1B,8BC0BD5E,I,OAlGG,SAAC7E,GAEG+B,EAAQ,IACVA,EAAQ,IAD1B,IAGA,EAA+B5B,wBAAS2E,GAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA6B7E,oBAAS,GAAtC,mBAAOoD,EAAP,KAAeC,EAAf,KAKMC,GADyBzD,EAAM6M,uBACpB7M,EAAMyD,UACjB9C,EAAWX,EAAMW,SAUfuE,EAAY,uCAAG,4BAAA7F,EAAA,6DAEnBmE,GAAW,GAFQ,SAGGC,EAASE,QAAQwB,kBAAkBJ,EAAS/E,EAAM0M,aAAa5I,KAAK,CAACC,KAAMpD,IAH9E,OAGbyE,EAHa,OAInBJ,OAAYF,GAEZpF,QAAQC,IAAI,wBAAwByF,GAEpCpF,EAAMqF,wBAAwBD,GAE9B1F,QAAQC,IAAI,sBAEZqE,YAAW,WACPR,GAAW,KACb,KAdiB,2CAAH,qDAoBpB,OACM,8BACMD,EACA,gCACA,uBACE,uBAFF,mCAII,uBACA,uBACA,qBACEc,IAAI,eACJjB,IAAKkB,EACLC,MAAM,KACN/C,UAAU,gCAEZ,cAAC,IAAD,CACE4B,IAAKoB,EACLC,UAAQ,IAEZ,uBACF,0BAGA,gCACE,cAAC,IAAD,CACErB,IAAKkC,EACLb,UAAQ,IAEV,qBAAKjD,UAAU,mBAAf,+BACA,qBAAKA,UAAU,iBAAf,gCACA,mHAEA,uBACA,sBAAKA,UAAU,mBAAf,sCAA4DxB,EAAM8M,qBAAlE,WAEA,uBACA,mDAEA,cAACtH,EAAA,EAAKC,QAAN,CAAcC,KAAK,OAAOC,YAAY,YAAYC,KAAK,WAAWC,MAAOd,EAAUe,SAlEvE,SAACC,GACzB,IAAMC,EAASD,EAAMC,OACfH,EAAwB,aAAhBG,EAAON,KAAsBM,EAAOC,QAAUD,EAAOH,MACtDG,EAAOJ,KACpBZ,EAAYa,MA+DA,uBACA,cAACvE,EAAA,EAAD,CAAQE,UAAU,eAAeD,QAAS2D,EAA1C,2BACA,uBACA,uBACA,iDAAoBlF,EAAMyJ,oCCsG3BvD,GA3LG,SAAClG,GAEG+B,EAAQ,IAA5B,IACMoE,EAAYpE,EAAQ,IAG1B,GAFWA,EAAQ,IAEQ5B,mBAAS,KAApC,mBAAOiG,EAAP,KAAcC,EAAd,KACA,EAA6BlG,mBAAS,IAAtC,mBAAOmG,EAAP,KAAeC,EAAf,KACA,EAAuCpG,wBAAS2E,GAAhD,mBAAO0B,EAAP,KAAoBC,EAApB,KACA,EAA6BtG,oBAAS,GAAtC,mBAAOuG,EAAP,KAAeC,EAAf,KACA,EAAyBxG,oBAAS,GAAlC,mBAGA,GAHA,UAG6BA,oBAAS,IAAtC,mBAAOoD,EAAP,KAAeC,EAAf,KAGMC,GADyBzD,EAAM6M,uBACpB7M,EAAMyD,UACjB9C,EAAWX,EAAMW,SAmCfuE,EAAY,uCAAG,sBAAA7F,EAAA,6DAInBmE,GAAW,GAJQ,SAKEC,EAASE,QAAQiD,aAAaJ,EAAaJ,EAAOpG,EAAM0M,YAAYpG,GAASxC,KAAK,CAACC,KAAMpD,IAL3F,OAOsC,GAPtC,OAORkG,OAAOC,sBAAsBC,aAAa,IAGnDvD,GAAW,GACXmD,GAAW,IAGXA,GAAW,GAObN,EAAU,IACVE,EAAW,IAEXvC,YAAW,WACPR,GAAW,KACb,KA1BiB,2CAAH,qDAqCpB,OAP2B,IAArBxD,EAAM+M,YACR/M,EAAMiH,kBAOJ,8BAEM1D,EACA,8BAEQ,gCACE,uBACE,uBAFJ,qCAIM,uBACA,uBACA,qBACEc,IAAI,eACJjB,IAAKkB,EACLC,MAAM,KACN/C,UAAU,gCAEZ,cAAC,IAAD,CACE4B,IAAKoB,EACLC,UAAQ,IAEZ,uBACF,4BAKV,gCACM,8BAEKiC,EAES,gCACE,qBAAKlF,UAAU,mBAAf,gCACE,qBACE6C,IAAI,WACJjB,IAAK8D,EACL3C,MAAM,MACN/C,UAAU,gCAEZ,cAAC,IAAD,CACE4B,IAAK+D,EACL1C,UAAQ,OAKlB,0BAMd,gCACE,qBAAKjD,UAAU,mBAAf,wCAEA,cAAC,IAAD,CACE4B,IAAKgE,EACL3C,UAAQ,IAGV,sBAAKjD,UAAU,iBAAf,uBAA2CxB,EAAM+M,cAEjD,qBACE1I,IAAI,WACJjB,IAAKiE,EACL9C,MAAM,MACN/C,UAAU,gCAGZ,uBACA,mDACA,cAACgE,EAAA,EAAKC,QAAN,CAAcC,KAAK,WAAY4B,UAAQ,EAAC3B,YAAY,mBAAmBC,KAAK,SAASC,MAAOO,EAAQN,SA9IlF,SAACC,GAC/B,IAAMC,EAASD,EAAMC,OAEfH,EAAwB,aAAhBG,EAAON,KAAsBM,EAAOC,QAAUD,EAAOH,MAK7D0B,GAJSvB,EAAOI,OAIF,KAAKD,EAAUxF,GAAU6G,SAAS,QAEhDC,EAAa,KAAKtB,EAAUN,GAAO2B,SAAS,OAE5CE,EAAkB1H,EAAMT,KAAKoI,MAAMC,aAAaL,EAAYE,GAAYD,SAAS,OAEvFnB,EAAUR,GACVY,EAAgBiB,MAiIJ,2DACA,cAAClC,EAAA,EAAKC,QAAN,CAAcC,KAAK,OAAO4B,UAAQ,EAAC3B,YAAY,0BAA0BC,KAAK,UAAUC,MAAOS,EAASR,SA7HrF,SAACC,GAChC,IAAMC,EAASD,EAAMC,OAEfH,EAAwB,aAAhBG,EAAON,KAAsBM,EAAOC,QAAUD,EAAOH,MACnDG,EAAOM,QAEvBC,EAAWV,MAwHC,uBAGA,cAACvE,EAAA,EAAD,CAAQE,UAAU,eAAeD,QAAS2D,EAA1C,2BACA,uBACA,uBACA,iDAAoBlF,EAAMyJ,sCCtH7BvD,GA9DG,SAAClG,GAEG+B,EAAQ,IACVA,EAAQ,IACfA,EAAQ,IAFnB,IAIA,EAA2B5B,wBAAS2E,GAApC,mBACA,GADA,UAC6B3E,wBAAS2E,IAAtC,mBACA,GADA,UACuC3E,wBAAS2E,IAAhD,mBAEA,GAFA,UAE6B3E,oBAAS,IAAtC,6BAE+BH,EAAM6M,uBACpB7M,EAAMyD,SACNzD,EAAMW,SA0BvB,OAN2B,IAArBX,EAAM+M,YACR/M,EAAMiH,kBAOE,gCACE,qBAAKzF,UAAU,mBAAf,8CAEA,uBACCxB,EAAMgN,iBAJT,gCAME,uBANF,4DASE,uBACA,sBAAKxL,UAAU,mBAAf,4BAAkDxB,EAAM+M,WAAxD,cAEA,uBACA,iDAAoB/M,EAAMyJ,iCC6H3B3B,GAlLD,SAAC9H,GACb,IAGMiN,EAHclL,EAAQ,GAGLD,CAAY9B,EAAMiN,eAAe,KAExD,EAAuD9M,wBAAS2E,GAAhE,mBAA4BkD,GAA5B,WACA,EAA+B7H,oBAAS,GAAxC,mBAAO8H,EAAP,KAAgBC,EAAhB,KAKQgF,EAAalN,EAAMkN,WAEnB5H,EAAQtF,EAAMmN,kBAehBlG,EAAkB,WACpBiB,GAAY,IAShB,OAIF,aADI,CACJ,gBAEKgF,EAEC,8BAGA,8BAEG5H,EAGC,8BAEE,8BAEU2C,GAAYjI,EAAMqI,uBAClB,8BACGL,GAA2BhI,EAAMW,UAAYX,EAAMsI,gBAClD,8BAEItI,EAAMW,UAAYX,EAAMoN,iBAEtB,gCACE,cAAC,IAAD,CACEhK,IAAKoF,EACL/D,UAAQ,IAHZ,6CAME,qBAAKjD,UAAU,aAAf,oBACA,sBAAKA,UAAU,iBAAf,uBAA2CyL,EAA3C,WAEA,uBACA,qBAAKzL,UAAU,iBAAf,6BACA,qBAAKA,UAAU,mBAAf,SAAmCxB,EAAMqN,mBAEzC,uBAAK,uBACL,qBAAK7L,UAAU,iBAAf,6BACCxB,EAAMuI,oBAOT,qBAAK/G,UAAU,mBAAf,SAEE,cAAC,GAAD,2BACIxB,GADJ,IACWiH,gBAAiBA,SAOpC,8BAEE,cAAC,GAAD,2BACIjH,GADJ,IACWiH,gBAAiBA,SAQlC,8BAEE,cAAC,GAAD,2BACIjH,GADJ,IACWqF,wBA9FD,SAACsD,GAC3BA,IACFX,GAAwB,GACxBtI,QAAQC,IAAI,gBAAiBsI,GAC7BC,GAAY,GACZxI,QAAQC,IAAI,oBAAqBsI,cAsG3B,8BACE,cAAC,GAAD,eACIjI,UAWR,8BACGA,EAAMsN,gBACH,gCACE,cAAC,IAAD,CACElK,IAAKoF,EACL/D,UAAQ,IAHZ,iEAME,qBAAKjD,UAAU,aAAf,oBACA,sBAAKA,UAAU,iBAAf,uBAA2CyL,EAA3C,WACA,uBACA,qBAAKzL,UAAU,iBAAf,6BACA,qBAAKA,UAAU,mBAAf,SAAmCxB,EAAMqN,mBACzC,uBACA,uBACA,qBAAK7L,UAAU,iBAAf,6BACCxB,EAAMoN,oBAGT,kFAEA,qBAAK5L,UAAU,aAAf,uCCzGDK,I,OAlEI,SAAC7B,GAClB,IAAM8B,EAAcC,EAAQ,IAMtBoH,GAHWnJ,EAAMiC,SAGHH,EAAY9B,EAAMmJ,YAAY,MAC5CsD,EAAmB3K,EAAY9B,EAAMyM,iBAAiB,KAK5D,OAEE,cAACpK,EAAA,EAAD,CAAWb,UAAU,OAAOc,MAAM,KAAlC,SAEA,eAACC,EAAA,EAAD,WAEA,cAACC,EAAA,EAAD,UACA,8BACE,eAACC,EAAA,EAAD,CAAMjB,UAAU,mBAAhB,UACA,cAACiB,EAAA,EAAKC,OAAN,oBACA,eAACD,EAAA,EAAKE,KAAN,CAAWnB,UAAU,gBAArB,UACE,qBAAKA,UAAU,gBAAf,0CAEA,sBAAKA,UAAU,YAAf,mBAAkC2H,EAAlC,WACA,sBAAK3H,UAAU,gBAAf,wBAA2CiL,EAA3C,WACA,iCAQJ,cAACjK,EAAA,EAAD,UACA,8BACE,eAACC,EAAA,EAAD,CAAMjB,UAAU,mBAAhB,UACA,cAACiB,EAAA,EAAKC,OAAN,qBACA,eAACD,EAAA,EAAKE,KAAN,CAAWnB,UAAU,gBAArB,UACE,qBAAKA,UAAU,gBAAf,SAAgCxB,EAAMuJ,eAEtC,qBAAK/H,UAAU,YAAf,SAA4BxB,EAAMuN,aAClC,qBAAK/L,UAAU,gBAAf,8CACA,wCCXOkI,GA/BE,SAAC1J,GAShB,OAKE,8BAEA,cAACyC,EAAA,EAAD,CAAMjB,UAAU,cAAhB,SACE,cAACiB,EAAA,EAAK2G,IAAN,CAAUvG,QAAQ,MAAMO,IAAKkG,EAAMjF,IAAI,OAAO7C,UAAU,qBC6B/C0H,GArCM,SAAClJ,GAEA+B,EAAQ,IAU5B,OAEE,8BAEM,cAACU,EAAA,EAAD,CAAMjB,UAAU,cAAhB,SACE,eAACiB,EAAA,EAAKE,KAAN,CAAWnB,UAAU,gBAArB,UACE,cAACiB,EAAA,EAAKuG,MAAN,CAAYxH,UAAU,YAAtB,mBACA,6KACA,uBACA,sBAAKA,UAAU,mBAAf,2BAAiDxB,EAAMyM,iBAAvD,WACA,sBAAKjL,UAAU,mBAAf,sCAA4DxB,EAAM8M,qBAAlE,WACA,sBAAKtL,UAAU,mBAAf,mCAAyDxB,EAAMwN,yBAA/D,WACA,+BCuBC5D,I,OAjDQ,SAAC5J,GAEF+B,EAAQ,IAEG/B,EAAM6M,uBAEvCnN,QAAQC,IAAI,kBAAkBK,EAAMsI,iBAYlC,OAIE,8BACM,cAAC7F,EAAA,EAAD,CAAMjB,UAAU,mCAAhB,SACE,eAACiB,EAAA,EAAKE,KAAN,CAAWnB,UAAU,kBAArB,UACE,cAACiB,EAAA,EAAKC,OAAN,CAAalB,UAAU,iBAAvB,2CAEA,cAAC,GAAD,eACIxB,IAGJ,wBAAQwB,UAAU,eAGlB,gCCAd,IA6EeiM,GA7ED,SAACzN,GAEb,IAAM8B,EAAcC,EAAQ,IAC5B,EA9BF,WAGE,MAAoC5B,mBAAS,CAC3CoE,WAAOO,EACPiF,YAAQjF,IAFV,mBAAOkF,EAAP,KAAmBC,EAAnB,KAqBA,OAhBAzJ,qBAAU,WAER,SAAS0J,IAEPD,EAAc,CACZ1F,MAAOpF,OAAOgL,WACdJ,OAAQ5K,OAAOiL,cAQnB,OAJAjL,OAAOC,iBAAiB,SAAU8K,GAElCA,IAEO,kBAAM/K,OAAOkL,oBAAoB,SAAUH,MACjD,IACIF,EAMmBM,GAAlB/F,EAAR,EAAQA,MAAOwF,EAAf,EAAeA,OAaTQ,GAVczI,EAAY9B,EAAMgC,YAAY,KAUnChC,EAAMsN,iBAEnB,OAEE,sBAAK9L,UAAU,eAAf,UACC+I,EACC,8BAAK,cAAC,KAAD,CACHhG,MAAOA,EACPwF,OAAQA,EACTS,eAAgB,IAEfC,UAAW,SAAAC,GACTA,EAAIC,YACJ,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACrBF,EAAIG,OAAO,GAAK,GAAKC,KAAKC,IAAI,EAAID,KAAKE,GAAK,EAAIJ,GAAI,GAAK,GAAKE,KAAKG,IAAI,EAAIH,KAAKE,GAAK,EAAIJ,IAE3FF,EAAIQ,YACJR,EAAIS,cAOR,wBAKF,gCACM,qBAAK3J,UAAU,YAAf,wFACN,cAAC,GAAD,eAAexB,IAEf,cAACqC,EAAA,EAAD,CAAWb,UAAU,OAAOc,MAAM,KAAlC,SACM,cAAC8I,EAAA,EAAD,CAAW5J,UAAU,OAArB,SACE,eAAC6J,EAAA,EAAD,WAEE,cAAC,GAAD,eAAoBrL,IACpB,uBACA,cAAC,GAAD,eAAkBA,IAElB,cAAC,GAAD,eAAcA,IAEd,cAAC,EAAD,kBCmfD0N,GApkBH,WAGV,MAAuBvN,mBAAS,MAAhC,mBAAOZ,EAAP,KAAYoO,EAAZ,KACA,EAA+BxN,mBAAS,MAAxC,mBAAOQ,EAAP,KAAgBiN,EAAhB,KACA,EAA+BzN,mBAAS,MAAxC,mBAAOsD,EAAP,KAAgBoK,EAAhB,KACA,EAA+B1N,mBAAS,MAAxC,mBAAO8B,EAAP,KAAgB6L,EAAhB,KACA,EAAyC3N,mBAAS,MAAlD,mBAAO4I,EAAP,KAAqBgF,EAArB,KAGA,EAA+B5N,wBAAS2E,GAAxC,mBAAOwH,EAAP,KAAgB0B,EAAhB,KACA,EAAmC7N,wBAAS2E,GAA5C,mBAAOqD,EAAP,KAAkB8F,EAAlB,KACA,EAAqC9N,wBAAS2E,GAA9C,mBAAO9C,EAAP,KAAmBkM,EAAnB,KACA,EAAqD/N,wBAAS2E,GAA9D,mBAAOyH,EAAP,KAA2B4B,EAA3B,KACA,EAAuDhO,wBAAS2E,GAAhE,mBAAOS,EAAP,KAA4B6I,EAA5B,KACA,EAA+DjO,wBAAS2E,GAAxE,mBAAO6E,EAAP,KAAgC0E,EAAhC,KACA,EAAuClO,wBAAS2E,GAAhD,mBAAOlC,GAAP,KAAoB0L,GAApB,KACA,GAAmCnO,wBAAS2E,GAA5C,qBAAOhC,GAAP,MAAkByL,GAAlB,MACA,GAAyDpO,wBAAS2E,GAAlE,qBAAOX,GAAP,MAA6BqK,GAA7B,MACA,GAAiDrO,wBAAS2E,GAA1D,qBAAOH,GAAP,MAAyB8J,GAAzB,MACA,GAA+CtO,wBAAS2E,GAAxD,qBAAO5C,GAAP,MAAwBwM,GAAxB,MAEA,GAAqCvO,wBAAS2E,GAA9C,qBAAOjB,GAAP,MAAmB8K,GAAnB,MACA,GAAmExO,wBAAS2E,GAA5E,qBAAO8J,GAAP,MAAkCC,GAAlC,MACA,GAAsD1O,wBAAS2E,GAA/D,qBAAOG,GAAP,MAA8B6J,GAA9B,MACA,GAAiD3O,wBAAS2E,GAA1D,qBAAOiK,GAAP,MAAyBC,GAAzB,MACA,GAAiE7O,wBAAS2E,GAA1E,qBAAOF,GAAP,MAAiCqK,GAAjC,MAEA,GAAmC9O,mBAAS,IAA5C,qBAAO6G,GAAP,MAAmBkI,GAAnB,MACA,GAA4D/O,oBAAS,GAArE,qBAAOgP,GAAP,MAA+BC,GAA/B,MAEA,GAAwDjP,mBAAS,GAAjE,qBAAOuE,GAAP,MAA6B2K,GAA7B,MACA,GAAgDlP,wBAAS2E,GAAzD,qBACA,IADA,YACwC3E,wBAAS2E,IAAjD,qBAAOwK,GAAP,MAAqBC,GAArB,MACA,GAAkDpP,wBAAS2E,GAA3D,qBAAOsD,GAAP,MAA0BoH,GAA1B,MACA,GAAgErP,wBAAS2E,GAAzE,qBAAO2K,GAAP,MAAiCC,GAAjC,MACA,GAA4CvP,wBAAS2E,GAArD,qBAAO6K,GAAP,MAAuBC,GAAvB,MAEA,GAAgDzP,wBAAS2E,GAAzD,qBAAOyD,GAAP,MAAyBsH,GAAzB,MACA,GAA8C1P,wBAAS2E,GAAvD,qBAAO8D,GAAP,MAAwBkH,GAAxB,MACA,GAA4C3P,wBAAS2E,GAArD,qBAAOiD,GAAP,MAAuBgI,GAAvB,MACA,GAA0D5P,wBAAS2E,GAAnE,qBAAOkL,GAAP,MAA8BC,GAA9B,MACA,GAAgD9P,wBAAS2E,GAAzD,qBAAO2D,GAAP,MAAyByH,GAAzB,MAEA,GAAoC/P,wBAAS2E,GAA7C,qBAAOqL,GAAP,MAAmBC,GAAnB,MACA,GAA8CjQ,wBAAS2E,GAAvD,qBAAO+E,GAAP,MAAwBwG,GAAxB,MACA,GAAgDlQ,wBAAS2E,GAAzD,qBAAO+C,GAAP,MAAyByI,GAAzB,MACA,GAAgDnQ,wBAAS2E,GAAzD,qBAAOyL,GAAP,MAAyBC,GAAzB,MAKA,GAA+BrQ,wBAAS2E,GAAxC,qBAAO2L,GAAP,MAAgBC,GAAhB,MACA,GAAmCvQ,wBAAS2E,GAA5C,qBAAOoI,GAAP,MAAkByD,GAAlB,MACA,GAAqCxQ,wBAAS2E,GAA9C,qBAAOqE,GAAP,MAAmByH,GAAnB,MACA,GAAqDzQ,wBAAS2E,GAA9D,qBAAO+L,GAAP,MAA2BC,GAA3B,MACA,GAAuD3Q,wBAAS2E,GAAhE,qBAAOgI,GAAP,MAA4BiE,GAA5B,MACA,GAA+D5Q,wBAAS2E,GAAxE,qBAAO0I,GAAP,MAAgCwD,GAAhC,MACA,GAAuC7Q,wBAAS2E,GAAhD,qBAAOyE,GAAP,MAAoB0H,GAApB,MACA,GAAmC9Q,wBAAS2E,GAA5C,qBAAOyI,GAAP,MAAkB2D,GAAlB,MACA,GAAyD/Q,wBAAS2E,GAAlE,qBAAO6H,GAAP,MAA6BwE,GAA7B,MACA,GAAiDhR,wBAAS2E,GAA1D,qBAAO8H,GAAP,MAAyBwE,GAAzB,MACA,GAA+CjR,wBAAS2E,GAAxD,qBAAO2H,GAAP,MAAwB4E,GAAxB,MAEA,GAAqClR,wBAAS2E,GAA9C,qBAAO4H,GAAP,MAAmB4E,GAAnB,MACA,GAAmEnR,wBAAS2E,GAA5E,qBAAOyM,GAAP,MAAkCC,GAAlC,MACA,GAAsDrR,wBAAS2E,GAA/D,qBAAO+H,GAAP,MAA8B4E,GAA9B,MACA,GAAiDtR,wBAAS2E,GAA1D,qBAAO4M,GAAP,MAAyBC,GAAzB,MACA,GAAiExR,wBAAS2E,GAA1E,qBAAO2E,GAAP,MAAiCmI,GAAjC,MAEA,GAAmCzR,mBAAS,IAA5C,qBAAO4M,GAAP,MAAmB8E,GAAnB,MACA,GAA4D1R,oBAAS,GAArE,qBAAOkI,GAAP,MAA+ByJ,GAA/B,MAEA,GAAwD3R,mBAAS,GAAjE,qBAAOqJ,GAAP,MAA6BuI,GAA7B,MACA,GAAgD5R,wBAAS2E,GAAzD,qBACA,IADA,YACwC3E,wBAAS2E,IAAjD,qBAAOkN,GAAP,MAAqBC,GAArB,MACA,GAAkD9R,wBAAS2E,GAA3D,qBAAOqI,GAAP,MAA0B+E,GAA1B,MACA,GAAgE/R,wBAAS2E,GAAzE,qBAAOqN,GAAP,MAAiCC,GAAjC,MACA,GAA4CjS,wBAAS2E,GAArD,qBAAOuN,GAAP,MAAuBC,GAAvB,MAEA,GAAgDnS,wBAAS2E,GAAzD,qBAAOsI,GAAP,MAAyBmF,GAAzB,MACA,GAA8CpS,wBAAS2E,GAAvD,qBAAOwI,GAAP,MAAwBkF,GAAxB,MACA,GAA4CrS,wBAAS2E,GAArD,qBAAOmI,GAAP,MAAuBwF,GAAvB,MACA,GAA0DtS,wBAAS2E,GAAnE,qBAAO4N,GAAP,MAA8BC,GAA9B,MACA,GAAgDxS,wBAAS2E,GAAzD,qBAAOuI,GAAP,MAAyBuF,GAAzB,MAEA,GAAoCzS,wBAAS2E,GAA7C,qBAAO+N,GAAP,MAAmBC,GAAnB,MACA,GAA8C3S,wBAAS2E,GAAvD,qBAAOwD,GAAP,MAAwByK,GAAxB,MACA,GAAgD5S,wBAAS2E,GAAzD,qBAAOkI,GAAP,MAAyBgG,GAAzB,MACA,GAAgD7S,wBAAS2E,GAAzD,qBAAOmO,GAAP,MAAyBC,GAAzB,MACA,GAA4B/S,oBAAS,GAArC,iCAsUE,OA/TFK,qBAAU,YAGI,uCAAG,sFAAAnB,EAAA,sEAIQN,IAJR,cAILQ,EAJK,gBAMYA,EAAKkB,IAAIC,cANrB,cAMLC,EANK,OAQLwS,EAAMpR,EAAQ,KASd0B,EAAW,IAAIlE,EAAKkB,IAAI2S,SAASD,EAAyD,8CAjBrF,UAmBY1P,EAASE,QAAQ1B,WAAWoR,OAAOC,KAAK5T,QAAQC,IAAI,QAnBhE,eAmBLsC,EAnBK,iBAqBiBwB,EAASE,QAAQ4P,UAAU,8CAA8CF,OArB1F,eAqBLtK,EArBK,OA6BX4E,EAAQpO,GACRqO,EAAYjN,EAAS,IACrBkN,EAAYpK,GACZqK,EAAY7L,GACZ8L,EAAiBhF,GAjCN,UAqCStF,EAASE,QAAQ6P,MAAM,GAAGH,OArCnC,eAqCLI,EArCK,iBAuCYA,EAAM,GAvClB,eAuCLnH,EAvCK,iBAwCcmH,EAAM,GAxCpB,eAwCLtL,EAxCK,iBAyCesL,EAAM,GAzCrB,eAyCLzR,EAzCK,iBA0CuByR,EAAM,GA1C7B,eA0CLlH,EA1CK,iBA2CuBkH,EAAM,GA3C7B,eA2CLlO,EA3CK,iBA4C4BkO,EAAM,GA5ClC,eA4CL9J,EA5CK,iBA6CgB8J,EAAM,GA7CtB,eA6CL7Q,EA7CK,iBA8Cc6Q,EAAM,GA9CpB,eA8CL3Q,EA9CK,iBA+CyB2Q,EAAM,GA/C/B,eA+CLtP,EA/CK,iBAgDqBsP,EAAM,GAhD3B,eAgDL9O,EAhDK,iBAiDoB8O,EAAM,IAjD1B,eAiDLvR,EAjDK,OAmDX8L,EAAY1B,GACZ2B,EAAc9F,GACd+F,EAAelM,GACfmM,EAAuB5B,GACvB6B,EAAwB7I,GACxB8I,EAA4B1E,GAC5B2E,GAAgB1L,GAChB2L,GAAczL,GACd0L,GAAyBrK,GACzBsK,GAAqB9J,GACrB+J,GAAoBxM,GA7DT,UAgESuB,EAASE,QAAQ6P,MAAM,GAAGH,OAhEnC,eAgELK,EAhEK,iBAkEYA,EAAM,GAlElB,eAkELjD,EAlEK,iBAmEciD,EAAM,GAnEpB,eAmELxG,EAnEK,iBAoEewG,EAAM,GApErB,eAoELvK,EApEK,iBAqEuBuK,EAAM,GArE7B,eAqEL7C,EArEK,iBAsEuB6C,EAAM,GAtE7B,eAsEL5G,EAtEK,iBAuE4B4G,EAAM,GAvElC,eAuELlG,EAvEK,iBAwEgBkG,EAAM,GAxEtB,eAwELnK,EAxEK,iBAyEcmK,EAAM,GAzEpB,eAyELnG,EAzEK,iBA0EyBmG,EAAM,GA1E/B,eA0EL/G,EA1EK,iBA2EqB+G,EAAM,GA3E3B,eA2EL9G,EA3EK,kBA4EoB8G,EAAM,IA5E1B,SA4ELjH,EA5EK,OA8EXiE,GAAYD,GACZE,GAAczD,GACd0D,GAAezH,GACf2H,GAAuBD,GACvBE,GAAwBjE,GACxBkE,GAA4BxD,GAC5ByD,GAAgB1H,GAChB2H,GAAc3D,GACd4D,GAAyBxE,GACzByE,GAAqBxE,GACrByE,GAAoB5E,GAKNtN,OAAOwU,YAAP,sBAAoB,qEA0ErBC,EA1EqB,iEAAAvU,EAAA,6DA0ErBuU,EA1EqB,SA0EEC,EAAOC,GAErC,OADiBhJ,KAAKiJ,IAAID,EAAQD,GAChB,KA5EU,SAqEEA,EAAOC,GAErC,OADiBhJ,KAAKiJ,IAAID,EAAQD,GACnB,KAvEa,SAgEAA,EAAOC,GAEnC,OADiBhJ,KAAKiJ,IAAID,EAAQD,GACnB,MAlEa,SA2DDA,EAAOC,GAElC,OADiBhJ,KAAKiJ,IAAID,EAAQD,GACnB,OA5DJ9R,EAAQ,IADS,SAKP0B,EAASE,QAAQqQ,SAAS,GAAGX,OALtB,cAKxBY,EALwB,iBAMJA,EAAS,GANL,eAMxBpQ,EANwB,iBAOWoQ,EAAS,GAPpB,eAOxBrF,EAPwB,iBAQQqF,EAAS,GARjB,eAQxBhP,EARwB,iBASEgP,EAAS,GATX,eASxBlF,EATwB,iBAUUkF,EAAS,GAVnB,eAUxBrP,EAVwB,iBAYKnB,EAASE,QAAQuQ,gBAAgB,GAAGb,OAZzC,eAYxB3O,EAZwB,iBAcCjB,EAASE,QAAQwQ,YAAYxT,EAAS,GAAG,GAAG0S,OAd7C,eAcxBe,EAdwB,iBAeHA,EAAiB,GAfd,eAexB9E,EAfwB,iBAgBE8E,EAAiB,GAhBnB,eAgBxBhM,EAhBwB,iBAiBUgM,EAAiB,GAjB3B,eAiBxB3E,EAjBwB,iBAkBD2E,EAAiB,GAlBhB,eAkBxBzE,EAlBwB,iBAqBMlM,EAASE,QAAQ0Q,sBAAsB,GAAGhB,OArBhD,eAqBxBiB,EArBwB,iBAsBCA,EAAsB,GAtBvB,eAsBxB/L,EAtBwB,iBAuBA+L,EAAsB,GAvBtB,eAuBxB1L,EAvBwB,iBAwBA0L,EAAsB,GAxBtB,eAwBxBvM,EAxBwB,iBAyBMuM,EAAsB,GAzB5B,eAyBxBtE,EAzBwB,iBA0BCsE,EAAsB,GA1BvB,eA0BxB7L,EA1BwB,iBA4BUhF,EAASE,QAAQ4Q,yBAAyB,GAAGlB,OA5BvD,eA4BxBmB,EA5BwB,iBA6BLA,EAA0B,GA7BrB,eA6BxBrE,EA7BwB,iBA8BAqE,EAA0B,GA9B1B,eA8BxB3K,EA9BwB,iBA+BE2K,EAA0B,GA/B5B,eA+BxBjE,EA/BwB,iBAgCCiE,EAA0B,GAhC3B,eAgCxB3M,EAhCwB,OAyC1B4M,EAAmBvQ,OACnBwQ,EAAY,IAAIxQ,KAAKuQ,GASrBE,EAAe,IAAIzQ,KAA8B,IAAzBe,GAiCxB2P,EAAY9J,KAAKiJ,IAAIH,EAAuBc,EAAWC,IAG3DzF,GAAa0F,GACb1F,IAAa,SAAA2F,GAAQ,OAAIA,EAAW,KAEpClG,GAAe9K,GACfgL,GAA8BD,GAC9BE,GAAqB7J,GACrB+J,GAAqBD,GACrBrP,QAAQC,IAAI,kBAAmBoP,GAC/BE,GAA6BrK,GAG3BwK,GADEuF,EAAa,GAAKD,GAMtBrF,GAAwB3K,GAExB6K,GAAgBD,GAChBE,GAAqBpH,GACrBsH,GAA4BD,GAC5BG,GAAkBD,GAElBE,GAAoBtH,GACpBuH,GAAmBlH,GACnBmH,GAAkBhI,GAClBkI,GAAyBD,GACzBE,GAAoBzH,GAEpB2H,GAAcD,GACdE,GAAmBxG,GACnByG,GAAoBzI,GACpB2I,GAAoBD,GAvHU,WA8HT9M,EAASE,QAAQqQ,SAAS,GAAGX,OA9HpB,gBA8H1ByB,EA9H0B,kBA+HNA,EAAS,GA/HH,gBA+H1BpI,EA/H0B,kBAgISoI,EAAS,GAhIlB,gBAgI1BvD,EAhI0B,kBAiIMuD,EAAS,GAjIf,gBAiI1BjI,EAjI0B,kBAkIAiI,EAAS,GAlIT,gBAkI1BpD,EAlI0B,kBAmIQoD,EAAS,GAnIjB,gBAmI1BrL,EAnI0B,kBAqIGhG,EAASE,QAAQuQ,gBAAgB,GAAGb,OArIvC,gBAqI1B7J,EArI0B,kBAuID/F,EAASE,QAAQwQ,YAAYxT,EAAS,GAAG,GAAG0S,OAvI3C,gBAuI1B0B,EAvI0B,kBAwILA,EAAiB,GAxIZ,gBAwI1B/C,EAxI0B,kBAyIA+C,EAAiB,GAzIjB,gBAyI1B5H,EAzI0B,kBA0IQ4H,EAAiB,GA1IzB,gBA0I1B5C,EA1I0B,kBA2IH4C,EAAiB,GA3Id,gBA2I1B1C,EA3I0B,kBA8II5O,EAASE,QAAQ0Q,sBAAsB,GAAGhB,OA9I9C,gBA8I1B2B,EA9I0B,kBA+IDA,EAAsB,GA/IrB,gBA+I1B5H,EA/I0B,kBAgJF4H,EAAsB,GAhJpB,gBAgJ1B1H,EAhJ0B,kBAiJF0H,EAAsB,GAjJpB,gBAiJ1B/H,EAjJ0B,kBAkJI+H,EAAsB,GAlJ1B,gBAkJ1BtC,EAlJ0B,kBAmJDsC,EAAsB,GAnJrB,gBAmJ1B3H,EAnJ0B,kBAqJQ5J,EAASE,QAAQ4Q,yBAAyB,GAAGlB,OArJrD,gBAqJ1B4B,EArJ0B,kBAsJPA,EAA0B,GAtJnB,gBAsJ1BpC,EAtJ0B,kBAuJFoC,EAA0B,GAvJxB,gBAuJ1B3M,EAvJ0B,kBAwJA2M,EAA0B,GAxJ1B,gBAwJ1BhC,GAxJ0B,kBAyJDgC,EAA0B,GAzJzB,SAyJ1BjI,GAzJ0B,OA4J5ByH,EAAmBvQ,OACnBwQ,EAAY,IAAIxQ,KAAKuQ,GAGrBS,GAAe,IAAIhR,KAA8B,IAAzB2I,GAE5BnN,QAAQC,IAAIiU,EAAuBc,EAAWQ,KAE1CC,GAAYrK,KAAKiJ,IAAIH,EAAuBc,EAAWQ,KAE3DrD,GAAasD,IACbtD,IAAa,SAAAgD,GAAQ,OAAIA,EAAW,KAEpCvD,GAAe5E,GACf8E,GAA8BD,GAC9BE,GAAqB5E,GACrB8E,GAAqBD,GACrBE,GAA6BnI,GAG3BqI,GADEoD,GAAa,GAAKR,GAMtB3C,GAAwBvI,GAExByI,GAAgBD,GAChBE,GAAqB/E,GACrBiF,GAA4BD,GAC5BG,GAAkBD,GAElBE,GAAoBnF,GACpBoF,GAAmBlF,GACnBmF,GAAkBxF,GAClB0F,GAAyBD,GACzBE,GAAoBvF,GAEpByF,GAAcD,GACdE,GAAmBzK,GACnB0K,GAAoBhG,IACpBkG,GAAoBD,IArMY,6CAuM/B,KApSQ,6CAAH,qDA2SVjS,KAEA,CAACzB,EAAKoB,EAAS8C,EAASxB,EAAS8G,EAErCuD,EAASnE,EAAWnG,EAAYuK,EAAoBhH,EAAqBoE,EAAyB/G,GAAaE,GAC/Ge,GAAY+K,GAA2B3J,GAAuB8J,GAAkBnK,GAA0BoC,GAAWmI,GACrHhL,GAAsBQ,GAAkBzC,GAAiBwC,GAAqB4K,GAAalH,GAAkBqH,GAAyBE,GACtIpH,GAAiBK,GAAgBb,GAAeiI,GAAsBvH,GAAiB0H,GAAWtI,GAAiB0I,GAAiB1G,GAEpI4G,GAASvD,GAAW/D,GAAY0H,GAAoB/D,GAAqBU,GAAyBjE,GAAagE,GAC/Gb,GAAY6E,GAA2B1E,GAAuB6E,GAAkBjI,GAA0BsD,GAAW1E,GACrHsE,GAAsBC,GAAkBH,GAAiBjD,GAAqBwI,GAAa7E,GAAkBgF,GAAyBE,GACtIjF,GAAiBE,GAAgBL,GAAeyF,GAAsBrF,GAAiBwF,GAAW7F,GAAiBiG,GAAiB3K,KAO9H,qBAAK9G,UAAU,wBAAf,SAGA,eAAC,IAAD,WACA,cAAC,GAAD,CAAOb,SAAUA,IADjB,WAMA,eAAC,KAAD,WACQ,cAAC,KAAD,CAAOyU,KAAK,QAAZ,SAEE,cAAC,GAAD,CACA9I,SAAUA,EACVnE,WAAYA,EACZnG,YAAaA,EACbuK,oBAAqBA,EACrBhH,qBAAsBA,EACtBoE,yBAA0BA,EAC1B/G,aAAcA,GACdE,WAAYA,GACZqB,sBAAuBA,GACvBQ,kBAAmBA,GACnBzC,iBAAkBA,GAElB2B,YAAaA,GACbwR,4BAA6BzG,GAC7B3J,uBAAwBA,GACxB8J,kBAAmBA,GACnBnK,0BAA2BA,GAC3BoC,WAAYA,GACZmI,uBAAwBA,GACxBpG,cAAeA,EACfrE,qBAAsBA,GAEtB+L,SAAUA,GACVvD,WAAYA,GACZ/D,YAAaA,GACb0H,oBAAqBA,GACrB/D,qBAAsBA,GACtBU,yBAA0BA,GAC1BjE,aAAcA,GACdgE,WAAYA,GACZZ,sBAAuBA,GACvBC,kBAAmBA,GACnBH,iBAAkBA,GAClBC,YAAaA,GACb4I,4BAA6B/D,GAC7B1E,uBAAwBA,GACxB6E,kBAAmBA,GACnBjI,0BAA2BA,GAC3BsD,WAAYA,GACZ1E,uBAAwBA,GAExBmB,qBAAsBA,OAO1B,cAAC,KAAD,CAAO4L,KAAK,SAAZ,SAEE,cAAC,GAAD,CACA7V,KAAMA,EACN+M,SAAUA,EACVnE,WAAYA,EACZnG,YAAaA,EACbuK,oBAAqBA,EACrBhH,qBAAsBA,EACtBoE,yBAA0BA,EAC1B/G,aAAcA,GACdE,WAAYA,GACZqB,sBAAuBA,GACvBQ,kBAAmBA,GACnBzC,iBAAkBA,GAClB2B,YAAaA,GACbwR,4BAA6BzG,GAC7B3J,uBAAwBA,GACxB8J,kBAAmBA,GACnBnK,0BAA2BA,GAC3BoC,WAAYA,GACZmI,uBAAwBA,GACxBlN,SAAUA,EACV8G,cAAeA,EACftF,SAAUA,EACV9C,SAAUA,EACV+D,qBAAsBA,GACtB4K,aAAcA,GACdlH,kBAAmBA,GACnBqH,yBAA0BA,GAC1BE,eAAgBA,GAChBpH,iBAAkBA,GAClBK,gBAAiBA,GACjBb,eAAgBA,GAChBiI,sBAAuBA,GACvBvH,iBAAkBA,GAClB0H,WAAYA,GACZtG,gBAAiBA,GACjBhC,iBAAkBA,GAClB0I,iBAAkBA,OAMpB,cAAC,KAAD,CAAO6E,KAAK,SAAZ,SAEA,cAAC,GAAD,CACA7V,KAAMA,EACNkR,SAAUA,GACVvD,WAAYA,GACZ/D,YAAaA,GACb0H,oBAAqBA,GACrB/D,qBAAsBA,GACtBU,yBAA0BA,GAC1BjE,aAAcA,GACdgE,WAAYA,GACZZ,sBAAuBA,GACvBC,kBAAmBA,GACnBH,iBAAkBA,GAClBC,YAAaA,GACb6E,2BAA4BA,GAC5B1E,uBAAwBA,GACxB6E,kBAAmBA,GACnBjI,0BAA2BA,GAC3BsD,WAAYA,GACZ1E,uBAAwBA,GACxBpG,SAAUA,EACV8G,cAAeA,EACftF,SAAUA,EACV9C,SAAUA,EACV6I,qBAAsBA,GACtBwI,aAAcA,GACd7E,kBAAmBA,GACnBgF,yBAA0BA,GAC1BE,eAAgBA,GAChBjF,iBAAkBA,GAClBE,gBAAiBA,GACjBL,eAAgBA,GAChByF,sBAAuBA,GACvBrF,iBAAkBA,GAClBwF,WAAYA,GACZvK,gBAAiBA,GACjB0E,iBAAkBA,GAClBiG,iBAAkBA,UAQxB,cAAC,KAAD,CAAUhK,GAAG,gBC/kBNsM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,gCAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1b235847.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n\n        const provider = new Web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/');\n\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n  \n\nexport default getWeb3;\n","// App.js\n\nimport React, {useState, useEffect} from 'react'\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport { Button } from 'react-bootstrap';\n\nimport MyNav from \"./MyNav\";\nimport App from \"./App\";\nimport getWeb3 from \"./getWeb3\";\n\n\nconst Connection = (props) =>  {\n\n  const wallet = useWallet()\n  const [firstPartAddress, setFirstPartAddress] = useState('Connect Wallet');\n  const [secondPartAddress, setSecondPartAddress] = useState('');\n\n  useEffect(() => {\n     const init = async() => {\n       const web3 = await getWeb3();\n       const accounts = await web3.eth.getAccounts();\n       const usersAccount = accounts[0];\n       const stringOfUsersAccount = new String(usersAccount)\n       console.log(stringOfUsersAccount.slice(0, 4)); // \"01\"\n       setFirstPartAddress(stringOfUsersAccount.slice(0, 5));\n       setSecondPartAddress('____'+stringOfUsersAccount.slice(27, 32));\n\n\n     }\n     init()\n   });\n\n  const connectWallet = async(e) => {\n    await wallet.connect()\n    const usersAccount = props.accounts;\n    const stringOfUsersAccount = new String(usersAccount)\n    console.log(stringOfUsersAccount.slice(0, 4)); // \"01\"\n    setFirstPartAddress('Welcome');\n    setSecondPartAddress('');\n    window.location.reload();\n\n  }\n\n\n  return(\n    <div>\n      <Button onClick={connectWallet} className=\"customButton enableEthereumButton\">{firstPartAddress}{secondPartAddress}</Button>\n    </div>\n  )\n}\n\n// Wrap everything in <UseWalletProvider />\nexport default (props) => (\n  <UseWalletProvider\n    chainId={1337}\n    connectors={{\n      // This is how connectors get configured\n      provided: {provider: window.cleanEthereum},\n    }}>\n\n    <Connection accounts={props.accounts}/>\n\n\n\n  </UseWalletProvider>\n)\n","export default __webpack_public_path__ + \"static/media/Treasure-hunt.9b635ddd.jpeg\";","import React, {useState} from 'react';\nimport Iframe from 'react-iframe'\n\nimport img1 from '../images/Treasure-hunt.jpeg';\n\n\nimport { Modal,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown,Row,Col } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './SingleCard.css';\n\nconst SingleCard = (props) => {\n  const commaNumber = require('comma-number')\n\n\n  const decimals = props.decimals;\n\n\n  const game1_prize = commaNumber(props.game1_prize,',');\n  const game1_entry_cost = commaNumber(props.game1_entry_cost,',');\n\n\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n\n  return(\n\n    <Container className='mt-5' fluid=\"md\">\n\n    <Row >\n\n    <Col>\n    <div>\n      <Card className=\"customRoundedOne\">\n      <Card.Header >Prize</Card.Header>\n      <Card.Body className='customBodyTwo'>\n        <div className=\"gameMainTitle\">Total Treasure for Elon's Rocket</div>\n\n        <div className=\"gamePrize\">Prize {game1_prize} Blox</div>\n        <div className=\"postMainPrize\">Entry Cost {game1_entry_cost} Blox</div>\n        <br/>\n      </Card.Body >\n      </Card>\n    </div>\n\n    </Col>\n    <Col>\n    <div >\n      <Card className=\"customRoundedOne\">\n      <Card.Header >Riddle</Card.Header>\n      <Card.Body className='customBodyTwo'>\n        <div className=\"gameMainTitle\">{props.game1_riddle}</div>\n\n        <div className=\"gamePrize\"><p variant=\"primary\" onClick={handleShow}>{props.game1_clue}</p></div>\n        <div className=\"postMainPrize\">Best not go to Hawaii</div>\n        <br/>\n\n\n\n        <Modal show={show} onHide={handleClose} size=\"xl\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n\n\n          <div class=\"embed-responsive embed-responsive-16by9\">\n          <iframe class=\"embed-responsive-item\" src=\"https://www.youtube.com/embed/gPFqyLYf1DU?rel=0\" allowfullscreen></iframe>\n          </div>\n\n        </Modal>\n\n\n\n      </Card.Body >\n\n      </Card>\n    </div>\n\n    </Col>\n  </Row>\n\n\n\n\n\n    </Container>\n\n\n  );\n\n\n};\n\nexport default SingleCard;\n","export default __webpack_public_path__ + \"static/media/elons-rocket.d3d11b7b.jpg\";","export default __webpack_public_path__ + \"static/media/fortblox.27ed858b.png\";","export default __webpack_public_path__ + \"static/media/Blox.8b56a359.gif\";","export default __webpack_public_path__ + \"static/media/waiting.a2e6bae6.wav\";","import React, {useState} from 'react';\nimport Timer from './Timer';\n\n\nimport img1 from '../images/elons-rocket.jpg';\nimport img2 from '../images/fortblox.png';\nimport blox_loading from '../images/Blox.gif';\n\n\n\nimport waiting from '../Sounds/waiting.wav';\nimport ReactAudioPlayer from 'react-audio-player';\n\n\nimport {Spinner,Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Step1Card.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\nconst Step1Card = (props) => {\n\n\n  const commaNumber = require('comma-number')\n\n  const game1_entry_cost = commaNumber(props.game1_entry_cost,',');\n\n\n  const [loading,setloading] = useState(false);\n\n\n  const contract = props.contract\n  const accounts = props.accounts\n\n\n    const handleInputChange = (event) => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n    }\n\n\n    const handleSubmitEnter = async() => {\n      setloading(true);\n      await contract.methods.enterGame(props.allGame1_id).send({from: accounts});\n\n\n      setTimeout(function(){\n          setloading(false);\n      },30000);\n\n    }\n\n\n    const date = new Date(props.game1_head_start_time*1000);\n    var headStart = date.toLocaleDateString(\"en-US\");\n\n// check if a user has entered?\n\n\n\n\n  return(\n\n        <div>\n\n            { loading ? (\n              <div>\n              <br/>\n                <br/>\n                  Verifying Your Entry To Elons Rocket Quest!\n                  <br/>\n                  <br/>\n                  <img\n                    alt=\"Blox Loading\"\n                    src={blox_loading}\n                    width=\"75\"\n                    className=\"d-inline-block align-middle\"\n                  />\n                  <ReactAudioPlayer\n                    src={waiting}\n                    autoPlay\n                  />\n                <br/>\n              <br/>\n              </div>\n            ) : (\n              <div>\n                <div className=\"largeEnter\">Enter Here!</div>\n                <div className=\"gameTitleEnter\">Entry Cost {game1_entry_cost} Blox</div>\n                <div>Only those who have entered may participate in this quest. The Quest participant limit will increase 10x on {headStart} so enter now to gain a head start!\n                </div>\n\n                <br />\n                <div className=\"descriptionTitle\">Current Quest Participants {props.game1numberOfEntries} / {props.game1_entry_limit}</div>\n                <br />\n\n                <br />\n                <Button className=\"customButton\" onClick={handleSubmitEnter}>Enter Quest Now</Button>\n                <br/>\n                <br/>\n                <div>Game Attempts {props.allGame1_total_game_tries}</div>\n\n                <br />\n\n              </div>\n\n\n\n            )}\n        </div>\n\n\n\n  );\n\n\n};\n\nexport default Step1Card;\n","export default __webpack_public_path__ + \"static/media/enter.ba946b4c.wav\";","import React, {useState} from 'react';\nimport Timer from './Timer';\n\nimport img1 from '../images/elons-rocket.jpg';\nimport img2 from '../images/fortblox.png';\nimport blox_loading from '../images/Blox.gif';\n\nimport waiting from '../Sounds/waiting.wav';\nimport enter from '../Sounds/enter.wav';\n\n\nimport ReactAudioPlayer from 'react-audio-player';\n\n\nimport {Spinner,Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Step2Card.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst Step2Card = (props) => {\n\n  const commaNumber = require('comma-number')\n  const keccak256 = require('keccak256')\n\n  const [username,setUsername] = useState(undefined);\n  const [loading,setloading] = useState(false);\n\n\n\n  const allGame1_deadline_time = props.allGame1_deadline_time;\n  const contract = props.contract\n  const accounts = props.accounts\n\n\n    const handleInputChange = (event) => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      setUsername(value);\n\n    }\n    const handleSubmit = async() => {\n\n      setloading(true);\n      const result2 = await contract.methods.headStartTimeLock(username,props.allGame1_id).send({from: accounts});\n      setUsername(undefined);\n\n      console.log(\"Transaction confirmed\",result2)\n\n      props.updateLocalDeadLineTime(result2)\n\n      console.log(\"I am the first log\");\n\n      setTimeout(function(){\n          setloading(false);\n      },1000);\n\n\n    }\n\n\n  return(\n        <div>\n            { loading ? (\n              <div>\n              <br/>\n                <br/>\n                  Verifying Time Lock Please Wait!\n                  <br/>\n                  <br/>\n                  <img\n                    alt=\"Blox Loading\"\n                    src={blox_loading}\n                    width=\"75\"\n                    className=\"d-inline-block align-middle\"\n                  />\n                  <ReactAudioPlayer\n                    src={waiting}\n                    autoPlay\n                  />\n                <br/>\n              <br/>\n              </div>\n            ) : (\n              <div>\n                <ReactAudioPlayer\n                  src={enter}\n                  autoPlay\n                />\n                <div className=\"descriptionTitle\">YOU HAVE ENTERED!</div>\n                <div className=\"gameTitleEnter\">Use Time Lock Now!</div>\n                <div>Know the answer? Get a 90 second time lock where only you can answer the secret!\n                </div>\n                <br/>\n                <div className=\"descriptionTitle\">90 second Time Lock Cost {props.game1_time_lock_cost} Blox</div>\n\n                <br />\n                <div>Enter a username</div>\n\n                <Form.Control type=\"text\" placeholder=\"@Username\" name=\"username\" value={username} onChange={handleInputChange}/>\n\n                <br />\n                <Button className=\"customButton\" onClick={handleSubmit}>Lock Time Now</Button>\n                <br />\n                <br />\n                <div>Game Attempts {props.allGame1_total_game_tries}</div>\n              </div>\n\n            )}\n        </div>\n\n\n\n  );\n\n\n};\n\nexport default Step2Card;\n","export default __webpack_public_path__ + \"static/media/rocket_crash.6b5600b6.gif\";","export default __webpack_public_path__ + \"static/media/eyes.ab5d0976.gif\";","export default __webpack_public_path__ + \"static/media/music.b8a44913.wav\";","export default __webpack_public_path__ + \"static/media/fail.517994d6.wav\";","import React, {useState} from 'react';\nimport Timer from './Timer';\n\nimport img1 from '../images/elons-rocket.jpg';\nimport img2 from '../images/fortblox.png';\nimport rocketSmash from '../images/rocket_crash.gif';\nimport eyes from '../images/eyes.gif';\nimport blox_loading from '../images/Blox.gif';\n\nimport music from '../Sounds/music.wav';\nimport fail from '../Sounds/fail.wav';\nimport waiting from '../Sounds/waiting.wav';\nimport ReactAudioPlayer from 'react-audio-player';\n\n\nimport {Spinner,Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Step2Card.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst Step3Card = (props) => {\n\n\n  const commaNumber = require('comma-number')\n  const keccak256 = require('keccak256')\n  const BN = require('bn.js');\n\n  const [secret,setSecret] = useState(\"\");\n  const [message,setMessage] = useState(\"\");\n  const [hashedSecret,setHashedSecret] = useState(undefined);\n  const [unlucky,setunlucky] = useState(false);\n\n  const [loading,setloading] = useState(false);\n\n  const allGame1_deadline_time = props.allGame1_deadline_time;\n  const contract = props.contract\n  const accounts = props.accounts\n\n\n    const handleInputChangeSecret = (event) => {\n      const target = event.target;\n\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const secret = target.secret;\n      // console.log(\"hashed secret: \",\"0x\"+keccak256(value).toString('hex'));\n\n      // props.web3.solidityKeccak()\n      const userAccount = \"0x\"+keccak256(accounts).toString('hex');\n\n      const userSecret = \"0x\"+keccak256(value).toString('hex');\n\n      const confirmedSecret = props.web3.utils.soliditySha3(userAccount,userSecret).toString('hex');\n\n      setSecret(value);\n      setHashedSecret(confirmedSecret)\n\n\n\n\n\n    }\n\n    const handleInputChangeMessage = (event) => {\n      const target = event.target;\n\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const message = target.message;\n\n      setMessage(value);\n    }\n\n    const handleSubmit = async() => {\n\n      setloading(true);\n      const result = await contract.methods.SubmitSecret(hashedSecret,secret,props.allGame1_id,message).send({from: accounts});\n\n      if (result.events.submitSecretFailEvent.returnValues[2] == true){\n        // Block of code to try\n        // const incorrect = result.events.submitSecretFailEvent.returnValues[0]\n        setloading(false);\n        setunlucky(true)\n      } else {\n        setunlucky(false)\n      }\n\n      setSecret('');\n      setMessage('');\n\n      setTimeout(function(){\n          setloading(false);\n      },1000);\n\n    }\n\n    if (props.countGame1 === 0){\n      props.cancelLocalTime()\n    }\n\n\n\n\n  return(\n        <div>\n\n\n\n            { loading ? (\n              <div>\n\n\n                      <div>\n                        <br/>\n                          <br/>\n                            Verifying Your Answer Please Wait!\n                            <br/>\n                            <br/>\n                            <img\n                              alt=\"Blox Loading\"\n                              src={blox_loading}\n                              width=\"75\"\n                              className=\"d-inline-block align-middle\"\n                            />\n                            <ReactAudioPlayer\n                              src={waiting}\n                              autoPlay\n                            />\n                          <br/>\n                        <br/>\n                      </div>\n\n              </div>\n            ) : (\n              <div>\n                    <div>\n\n                        {unlucky?(\n\n\n\n                                  <div>\n                                    <div className=\"descriptionTitle\">Unlucky Try Again!</div>\n                                      <img\n                                        alt=\"bad luck\"\n                                        src={rocketSmash}\n                                        width=\"225\"\n                                        className=\"d-inline-block align-middle\"\n                                      />\n                                      <ReactAudioPlayer\n                                        src={fail}\n                                        autoPlay\n                                      />\n\n                                </div>\n\n                              ):(\n                              <div>\n\n\n\n                              </div>\n                              )}\n                      </div>\n\n                <div>\n                  <div className=\"descriptionTitle\">QUICKLY SUBMIT YOUR ANSWER</div>\n\n                  <ReactAudioPlayer\n                    src={music}\n                    autoPlay\n                  />\n\n                  <div className=\"gameTitleEnter\">TIME lEFT {props.countGame1}</div>\n\n                  <img\n                    alt=\"eyes\"\n                    src={eyes}\n                    width=\"225\"\n                    className=\"d-inline-block align-middle\"\n                  />\n\n                  <br />\n                  <div>Enter your guess</div>\n                  <Form.Control type=\"password\"  required placeholder=\"Enter The Secret\" name=\"secret\" value={secret} onChange={handleInputChangeSecret}/>\n\n                  <div>Enter a victory message!</div>\n                  <Form.Control type=\"text\" required placeholder=\"Enter A Winning Message\" name=\"message\" value={message} onChange={handleInputChangeMessage}/>\n                  <br />\n                  <Button className=\"customButton\" onClick={handleSubmit}>Submit Secret</Button>\n                  <br />\n                  <br />\n                  <div>Game Attempts {props.allGame1_total_game_tries}</div>\n                </div>\n\n            </div>\n\n            )}\n        </div>\n\n\n\n  );\n\n\n};\n\nexport default Step3Card;\n","import React, {useState} from 'react';\nimport Timer from './Timer';\n\nimport img1 from '../images/elons-rocket.jpg';\nimport img2 from '../images/fortblox.png';\n\n\nimport {Spinner,Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Step2Card.css';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst Step3Card = (props) => {\n\n  const commaNumber = require('comma-number')\n  const keccak256 = require('keccak256')\n  const BN = require('bn.js');\n\n  const [secret,setSecret] = useState(undefined);\n  const [message,setMessage] = useState(undefined);\n  const [hashedSecret,setHashedSecret] = useState(undefined);\n\n  const [loading,setloading] = useState(false);\n\n  const allGame1_deadline_time = props.allGame1_deadline_time;\n  const contract = props.contract\n  const accounts = props.accounts\n\n    const handleInputChangeSecret = (event) => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const secret = target.secret;\n      // console.log(\"hashed secret: \",\"0x\"+keccak256(value).toString('hex'));\n\n      // props.web3.solidityKeccak()\n      const userAccount = \"0x\"+keccak256(accounts).toString('hex');\n\n      const userSecret = \"0x\"+keccak256(value).toString('hex');\n\n      const confirmedSecret = props.web3.utils.soliditySha3(userAccount,userSecret).toString('hex');\n\n      setSecret(value);\n      setHashedSecret(confirmedSecret)\n\n    }\n\n\n    if (props.countGame1 === 0){\n      props.cancelLocalTime()\n    }\n\n  return(\n\n              <div>\n                <div className=\"descriptionTitle\">TIME LOCK ACTIVATED PLEASE WAIT!</div>\n\n                <br />\n                {props.attemptUsername1} has activated the time lock!\n\n                <br />\n                You can attempt the quest once the countdown has expired!\n\n                <br />\n                <div className=\"descriptionTitle\">Time Remaining {props.countGame1} Seconds</div>\n\n                <br />\n                <div>Game Attempts {props.allGame1_total_game_tries}</div>\n              </div>\n\n  );\n\n};\n\nexport default Step3Card;\n","export default __webpack_public_path__ + \"static/media/celebrate.696424d8.wav\";","import React, { Component, useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\nimport Countdown from 'react-countdown';\nimport moment from 'moment';\n\nimport { CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown,Row,Col } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Card.css';\n\nimport Step1Card from \"./Step1Card\";\nimport Step2Card from \"./Step2Card\";\nimport Step3Card from \"./Step3Card\";\nimport Step3CardNoEntry from \"./Step3CardNoEntry\";\n\nimport celebrate from '../Sounds/celebrate.wav';\n\nimport ReactAudioPlayer from 'react-audio-player';\n\n\nconst Timer = (props) => {\n  const commaNumber = require('comma-number')\n\n\n  const winning_prize1 = commaNumber(props.winning_prize1,',');\n\n  const [transactionConfirmed,setTransactionConfirmed] = useState(undefined);\n  const [timeLock,setTimelock] = useState(false);\n\n\n  // DO CHECKS WITH THE USER\n    // Check the game is live\n    const game1_live = props.game1_live;\n    // Enter Game\n    const enter = props.userEntered_game1;\n    // Head Start Time Lock\n\n\n  const updateLocalDeadLineTime = (bool) => {\n    if (bool){\n      setTransactionConfirmed(true);\n      console.log(\"pre timelock:\", timeLock)\n      setTimelock(true);\n      console.log(\"updated timelock:\", timeLock)\n    }\n  }\n  // setTimelock(props.countGame1DeadlineTrue);\n  // User Activated time Lock\n\n  const cancelLocalTime = () => {\n      setTimelock(false);\n  }\n\n\n\n\n  return(\n\n\n    // Enter Step 1\n<div>\n\n    {game1_live ?(\n\n      <div>\n\n\n      <div>\n\n        {enter ? (\n\n\n          <div>\n\n            <div>\n                    { timeLock || props.countGame2DeadlineTrue ? (\n                      <div>\n                        {setTransactionConfirmed || props.accounts == props.attemptAddress2 ?(\n                          <div>\n\n                            { props.accounts == props.winning_address1 ?(\n\n                                <div>\n                                  <ReactAudioPlayer\n                                    src={celebrate}\n                                    autoPlay\n                                  />\n                                  Congratulations you have solved the quest!\n                                  <div className=\"largeEnter\">WINNER</div>\n                                  <div className=\"gameTitleEnter\">Prize Won {winning_prize1} Blox</div>\n\n                                  <br/>\n                                  <div className=\"enterGameTitle\">Winning Message</div>\n                                  <div className=\"descriptionTitle\">{props.winning_message1}</div>\n\n                                  <br/><br/>\n                                  <div className=\"enterGameTitle\">Winning Address</div>\n                                  {props.winning_address1}\n\n                                </div>\n\n                            ):(\n\n\n                                <div className=\"descriptionTitle\">\n\n                                  <Step3Card\n                                  {...props} cancelLocalTime={cancelLocalTime}/>\n\n                                </div>\n                            )}\n\n                          </div>\n                        ):(\n                          <div>\n\n                            <Step3CardNoEntry\n                            {...props }cancelLocalTime={cancelLocalTime}/>\n\n                          </div>\n                        )}\n                        </div>\n\n                    ) : (\n\n                      <div>\n\n                        <Step2Card\n                        {...props} updateLocalDeadLineTime={updateLocalDeadLineTime}/>\n\n                      </div>\n\n                    )}\n            </div>\n\n          </div>\n\n\n\n        ) :\n        (\n            <div>\n              <Step1Card\n              {...props}/>\n            </div>\n\n        )}\n\n        </div>\n\n      </div>\n//\n    ):(\n\n          <div>\n            {props.treasure_found1?(\n                <div>\n                  <ReactAudioPlayer\n                    src={celebrate}\n                    autoPlay\n                  />\n                  Congratulations a treasure hunter helped Elon find his Rocket!\n                  <div className=\"largeEnter\">WINNER</div>\n                  <div className=\"gameTitleEnter\">Prize Won {winning_prize1} Blox</div>\n                  <br/>\n                  <div className=\"enterGameTitle\">Winning Message</div>\n                  <div className=\"descriptionTitle\">{props.winning_message1}</div>\n                  <br/>\n                  <br/>\n                  <div className=\"enterGameTitle\">Winning Address</div>\n                  {props.winning_address1}\n                </div>\n            ):(\n                <div>\n                We are launching this treasure quest very soon!\n                <div className=\"largeEnter\">WATCH THIS SPACE!</div>\n            </div>\n\n      )}\n\n\n\n      </div>\n\n\n    )}\n</div>\n\n\n\n  );\n\n};\n\nexport default Timer;\n","import React from 'react';\n\nimport img1 from './images/elons-rocket.jpg';\nimport img2 from './images/fortblox.png';\n\n\n\n\nimport {Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './HomeCard.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst HomeCards = (props) => {\n\n  const commaNumber = require('comma-number')\n\n  const allGame1_deadline_time = props.allGame1_deadline_time;\n  const treasure = commaNumber(props.totalTreasure,',');\n\n\n  // console.log(game1_id)s\n\n  const renderTooltip = (props) => (\n\n\n  <Tooltip id=\"button-tooltip\" {...props}>\n    Once you have purchased your Blox they buy you 30 seconds to enter your answer, no one else can answer in this time and this stops bots from beating you to it!\n  </Tooltip>\n);\n\n\n  return(\n\n\n    <div>\n          <Card className='cardRounded'>\n            <Card.Body className=\"customBodyThree\">\n              <Card.Title className=\"gameTitle\">How it works?</Card.Title>\n\n              <div className=\"descriptionTitle\">Step 1</div>\n              <div className=\"descriptionBody\">Purchase Blox, enter a treasure quest maybe even purchase a head start. All quests have different entry requirements. </div>\n              <div className=\"descriptionTitle\">Step 2</div>\n              <div className=\"descriptionBody\">Think you know the answer? Purchase a time lock for 90 seconds where you are the only player who can answer the secret.</div>\n              <div className=\"descriptionTitle\">Final Step</div>\n              <div className=\"descriptionBody\">Once the Time lock is purchased you can enter your secret. If you win so does the community as 10x the prize is burnt from the total token supply.</div>\n              <br/>\n              <Link to=\"/hunt1\">\n                <Button className=\"tinyCustomButtonDescription\" to=\"/hunt1\">Contract</Button>\n              </Link>\n\n              <Link to=\"/hunt1\">\n                <Button className=\"tinyCustomButtonDescription\" to=\"/hunt1\">White Paper</Button>\n              </Link>\n\n              <Link to=\"/hunt1\">\n                <Button className=\"tinyCustomButtonDescription\" to=\"/hunt1\">Telegram</Button>\n              </Link>\n\n            </Card.Body>\n          </Card>\n\n          <Card className='cardRounded'>\n            <Card.Body className=\"customBodyTwo\">\n              <Card.Title className=\"gameTitle\">Purchase Blox</Card.Title>\n              <div className=\"descriptionTitle\">Total Treasure Chest {treasure} Blox</div>\n              <div >Purchase your Blox to enter a quest </div>\n              <br/>\n              <Button className=\"customButton\" >Buy Blox</Button>\n\n              <br/>\n\n            </Card.Body>\n          </Card>\n\n    </div>\n\n\n\n\n\n  );\n\n\n};\n\nexport default HomeCards;\n","import React from 'react';\n\nimport img1 from './images/elons-rocket.jpg';\nimport img2 from './images/fortblox.png';\n\n\n\n\nimport {Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './HomeHuntCard.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst HuntWowCards = (props) => {\n\n  const commaNumber = require('comma-number')\n\n  const game1_prize = commaNumber(props.game1_prize,',');\n  const game2_prize = commaNumber(props.game2_prize,',');\n\n\n\n  // console.log(game1_id)s\n\n  const renderTooltip = (props) => (\n\n\n  <Tooltip id=\"button-tooltip\" {...props}>\n    Once you have purchased your Blox they buy you 30 seconds to enter your answer, no one else can answer in this time and this stops bots from beating you to it!\n  </Tooltip>\n);\n\n\n\n\n  return(\n\n\n    <div>\n    <Card className='cardRounded'>\n      <Card.Img variant=\"top\" src={img1} alt=\"Logo\" className='customRounded'/>\n      <Card.Body >\n        <Card.Title className=\"gameTitle\">Elon's lost his Rocket!</Card.Title>\n        <div>Riddle {props.game1_riddle}</div>\n        <div>Prize {game1_prize} Blox</div>\n        <div>Number of people entered {props.game1numberOfEntries}</div>\n        <br/>\n        <Link to=\"/hunt2\">\n          <Button className=\"customButton\" to=\"/hunt1\">View Elon's Quest</Button>\n        </Link>\n        <br/><br/>\n\n        <div className=\"postPrize\">{props.allGame1_total_game_tries} Attempts</div>\n      </Card.Body>\n    </Card>\n\n    <Card className='cardRounded'>\n      <Card.Img variant=\"top\" src={img2} alt=\"Logo\" className='customRounded'/>\n      <Card.Body >\n        <Card.Title className=\"gameTitle\">Fort Blox</Card.Title>\n        <div>Riddle {props.game2_riddle}</div>\n        <div>Prize {game2_prize} Blox</div>\n        <div>Number of people entered {props.game2numberOfEntries}</div>\n        <br/>\n        <Link to=\"/hunt2\">\n          <Button className=\"customButton\" to=\"/hunt2\">View Fort Blox Quest</Button>\n        </Link>\n        <br/><br/>\n        <div className=\"postPrize\">{props.allGame2_total_game_tries} Attempts</div>\n      </Card.Body>\n    </Card>\n\n    </div>\n\n\n\n  );\n\n\n};\n\nexport default HuntWowCards;\n","import React from 'react';\nimport Timer from './Timer';\n\nimport img1 from '../images/elons-rocket.jpg';\nimport img2 from '../images/fortblox.png';\n\n\n\nimport {Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Card.css';\n\n\nconst PageCard = (props) => {\n\n\n\n  // console.log(game1_id)s\n\n  const renderTooltip = (props) => (\n\n\n  <Tooltip id=\"button-tooltip\" {...props}>\n    Once you have purchased your Blox they buy you 30 seconds to enter your answer, no one else can answer in this time and this stops bots from beating you to it!\n  </Tooltip>\n);\n\n\n\n\n\n\n\n  return(\n\n\n\n\n    <div>\n\n    <Card className='cardRounded'>\n      <Card.Img variant=\"top\" src={img1} alt=\"Logo\" className='cardRounded'/>\n\n      </Card>\n\n\n\n    </div>\n\n\n  );\n\n\n};\n\nexport default PageCard;\n","import React from 'react';\nimport Timer from './Timer';\n\nimport img1 from '../images/elons-rocket.jpg';\nimport img2 from '../images/fortblox.png';\n\n\n\n\nimport {Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../HomeCard.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst HuntWowCards = (props) => {\n\n  const commaNumber = require('comma-number')\n\n  const renderTooltip = (props) => (\n\n\n  <Tooltip id=\"button-tooltip\" {...props}>\n    Once you have purchased your Blox they buy you 30 seconds to enter your answer, no one else can answer in this time and this stops bots from beating you to it!\n  </Tooltip>\n);\n\n\n  return(\n\n    <div>\n\n\n          <Card className='cardRounded'>\n            <Card.Body className=\"customBodyTwo\">\n              <Card.Title className=\"gameTitle\">Costs</Card.Title>\n              <div >Simply purchase Blox to enter this game. The entry fee is a one off purchase. You pay every time you use the time lock or submit a secret.</div>\n              <br/>\n              <div className=\"descriptionTitle\">Cost to Enter {props.game1_entry_cost} BLOX</div>\n              <div className=\"descriptionTitle\">90 second Time Lock Cost {props.game1_time_lock_cost} BLOX</div>\n              <div className=\"descriptionTitle\">Cost to submit Secret {props.game1_submit_secret_cost} BLOX</div>\n<br/>\n\n            </Card.Body>\n          </Card>\n\n    </div>\n\n\n\n  );\n\n\n};\n\nexport default HuntWowCards;\n","import React from 'react';\nimport Timer from './Timer';\n\nimport img1 from '../images/elons-rocket.jpg';\nimport img2 from '../images/fortblox.png';\n\n\n\n\nimport {Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './EnterHuntCards.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst EnterHuntCards = (props) => {\n\n  const commaNumber = require('comma-number')\n\n\n\n\n  const allGame1_deadline_time = props.allGame1_deadline_time;\n\nconsole.log(\"enter card.js: \",props.attemptAddress1)\n\n  // console.log(game1_id)s\n\n  const renderTooltip = (props) => (\n\n\n  <Tooltip id=\"button-tooltip\" {...props}>\n    Once you have purchased your Blox they buy you 90 seconds to enter your answer, no one else can answer in this time. The aim is to stop bots from beating you to it!\n  </Tooltip>\n);\n\n\n\n  return(\n\n\n\n    <div>\n          <Card className='cardRounded border border-danger'>\n            <Card.Body className=\"customBodyThree\">\n              <Card.Header className=\"enterGameTitle\">Elon's Wife lost his Rocket?</Card.Header>\n\n              <Timer\n              {...props}\n              />\n\n              <footer className=\"blockquote\">\n              </footer>\n\n              <br />\n\n\n            </Card.Body>\n          </Card>\n\n    </div>\n\n\n\n  );\n\n\n};\n\nexport default EnterHuntCards;\n","import {Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport MyNav from './MyNav';\nimport SingleCard from './components/Structure/Game1/SingleCard';\nimport moment from 'moment';\n\n// import img1 from './Treasure-hunt.jpeg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React, { Component, useState, useEffect } from 'react'\nimport Connection from \"./Connection\";\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport \"./App.css\";\n\nimport Timer from './components/Structure/Game1/Timer';\n\nimport HomeCards from './components/Structure/HomeCards';\nimport HomeHuntCards from './components/Structure/HomeHuntCards';\n\nimport PageCard from './components/Structure/Game1/PageCard';\nimport HuntWowCards from './components/Structure/Game1/HuntWowCards';\nimport EnterHuntCards from './components/Structure/Game1/EnterHuntCards';\n\nimport Confetti from 'react-confetti'\n\n// Hook\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n\nconst Hunt1 = (props) => {\n\n  const commaNumber = require('comma-number')\n  const { width, height } = useWindowSize();\n\n  const game1_prize = commaNumber(props.game1_prize,',');\n\n\n  const renderTooltip = (props) => (\n\n  <Tooltip id=\"button-tooltip\" {...props}>\n    Once you have purchased your Blox they buy you 30 seconds to enter your answer, no one else can answer in this time and this stops bots from beating you to it!\n  </Tooltip>\n);\n\n  const winner = props.treasure_found1;\n\n    return (\n\n      <div className=\"spaceTopHome\">\n      {winner? (\n        <div><Confetti\n          width={width}\n          height={height}\n\t        numberOfPieces={300}\n\n          drawShape={ctx => {\n            ctx.beginPath();\n            for (var i = 0; i < 6; i++) {\n              ctx.lineTo(10 + 20 * Math.cos(2 * Math.PI / 6 * i), 10 + 20 * Math.sin(2 * Math.PI / 6 * i));\n            }\n            ctx.closePath();\n            ctx.stroke();\n          }}\n        />\n\n        </div>\n\n      ):(\n        <div>\n\n        </div>\n      )}\n\n      <div>\n            <div className=\"siteTitle\">Welcome, Elon has lost his Rocket! Can you help him find it to win the prize?</div>\n      <SingleCard{...props}/>\n\n      <Container className='mt-5' fluid=\"md\">\n            <CardGroup className='mt-5'>\n              <CardColumns>\n\n                <EnterHuntCards {...props}/>\n                <br/>\n                <HuntWowCards {...props}/>\n\n                <PageCard {...props}/>\n\n                <HomeCards/>\n\n              </CardColumns>\n            </CardGroup>\n        </Container>\n\n      </div>\n\n\n\n</div>\n\n\n\n    );\n\n}\n\nexport default Hunt1;\n","export default __webpack_public_path__ + \"static/media/TreasureBlox_Logo.3f7bc1e0.png\";","import React, {useState} from 'react'\n\nimport { Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './MyNav.css';\nimport Connection from \"./Connection\";\nimport App from \"./App\";\n\nimport Hunt1 from \"./Hunt1\";\n\nimport logo from './TreasureBlox_Logo.png';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst MyNav = (props) => {\n\n  return(\n\n    <Navbar collapseOnSelect className=\"fixed-top MyBakground\" expand=\"lg\" variant=\"dark\">\n      <Container>\n\n      <Link className='customLinks' to=\"/home\">\n      <Navbar.Brand>\n       <img\n         alt=\"treasureblox_logo\"\n         src={logo}\n         width=\"225\"\n         className=\"d-inline-block align-middle\"\n       />\n     </Navbar.Brand>\n     </Link>\n\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"me-auto\">\n          <Link className='customLinks' to=\"/home\">\n          Home\n          </Link>\n          <Link className='customLinks' to=\"/hunt1\">\n          Elon's Rocket\n          </Link>\n          <Link className='customLinks' to=\"/hunt2\">\n          Fort Blox\n          </Link>\n          <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n          </NavDropdown>\n\n        </Nav>\n        <Nav className=\"ml-auto\">\n\n          <Connection accounts={props.accounts}/>\n\n        </Nav>\n      </Navbar.Collapse>\n      </Container>\n    </Navbar>\n\n\n\n  );\n\n\n};\n\nexport default MyNav;\n","import MyNav from './MyNav';\nimport SingleCard from './components/Structure/Game1/SingleCard';\nimport moment from 'moment';\n\n// import img1 from './Treasure-hunt.jpeg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './components/Structure/HomeCard.css';\n\nimport React, { Component, useState, useEffect } from 'react'\nimport Connection from \"./Connection\";\nimport { useWallet, UseWalletProvider } from 'use-wallet'\n\nimport Timer from './components/Structure/Game1/Timer';\n\nimport HomeCards from './components/Structure/HomeCards';\nimport HomeHuntCards from './components/Structure/HomeHuntCards';\n\nimport img1 from './components/Structure/images/elons-rocket.jpg';\nimport img2 from './components/Structure/images/fortblox.png';\n\n\nimport {Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\nconst Home = (props) => {\n\n  const commaNumber = require('comma-number')\n\n\n  const game1_id = props.game1_id;\n  const game1_live = props.game1_live;\n  const game1_prize = commaNumber(props.game1_prize,',');\n  const game1_question_hash = props.game1_question_hash;\n  const game1_time_lock_cost = props.game1_time_lock_cost;\n  const game1_submit_secret_cost = props.game1_submit_secret_cost;\n  const game1_clue = props.game1_clue;\n\n\n  const allGame1_deadline_time = props.allGame1_deadline_time;\n\n  // console.log(game1_id)s\n\n  const renderTooltip = (props) => (\n\n\n  <Tooltip id=\"button-tooltip\" {...props}>\n    Once you have purchased your Blox they buy you 30 seconds to enter your answer, no one else can answer in this time and this stops bots from beating you to it!\n  </Tooltip>\n);\n\n\n\n\n    return (\n\n      <div>\n      <Container className='mt-5' fluid=\"md\">\n\n  <div className=\"spaceTopHome\">\n\n        <div className=\"siteTitle\">TreasureBlox - The Worlds biggets internet and real world crypto treasure hunt.</div>\n        <CardGroup className='mt-5'>\n\n          <CardColumns >\n\n            <HomeCards {...props}/>\n\n            <HomeHuntCards {...props}/>\n\n\n            </CardColumns>\n        </CardGroup>\n\n      </div>\n      </Container>\n      </div>\n\n\n    );\n\n}\n\nexport default Home;\n","import React, {useState} from 'react';\nimport Timer from './Timer';\n\n\nimport img1 from '../images/elons-rocket.jpg';\nimport img2 from '../images/fortblox.png';\nimport blox_loading from '../images/Blox.gif';\n\n\nimport waiting from '../Sounds/waiting.wav';\nimport ReactAudioPlayer from 'react-audio-player';\n\n\nimport {Spinner,Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Step1Card.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\nconst Step1Card = (props) => {\n\n\n  const commaNumber = require('comma-number')\n\n  const game2_entry_cost = commaNumber(props.game2_entry_cost,',');\n\n  const [loading,setloading] = useState(false);\n\n  const contract = props.contract\n  const accounts = props.accounts\n\n    const handleInputChange = (event) => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n    }\n\n    const handleSubmitEnter = async() => {\n      setloading(true);\n      await contract.methods.enterGame(props.allGame2_id).send({from: accounts});\n\n      setTimeout(function(){\n          setloading(false);\n      },30000);\n\n    }\n\n    const date = new Date(props.game2_head_start_time*1000);\n    var headStart = date.toLocaleDateString(\"en-US\");\n\n\n  return(\n\n        <div>\n\n            { loading ? (\n              <div>\n              <br/>\n                <br/>\n                  Verifying Your Entry To Elons Rocket Quest!\n                  <br/>\n                  <br/>\n                  <img\n                    alt=\"Blox Loading\"\n                    src={blox_loading}\n                    width=\"75\"\n                    className=\"d-inline-block align-middle\"\n                  />\n                  <ReactAudioPlayer\n                    src={waiting}\n                    autoPlay\n                  />\n                <br/>\n              <br/>\n              </div>\n            ) : (\n              <div>\n                <div className=\"largeEnter\">Enter Here!</div>\n                <div className=\"gameTitleEnter\">Entry Cost {game2_entry_cost} Blox</div>\n                <div>Only those who have entered may participate in this quest. The Quest participant limit will increase 10x on {headStart} so enter now to gain a head start!\n                </div>\n\n                <br />\n                <div className=\"descriptionTitle\">Current Quest Participants {props.game2numberOfEntries} / {props.game2_entry_limit}</div>\n                <br />\n\n                <br />\n                <Button className=\"customButton\" onClick={handleSubmitEnter}>Enter Quest Now</Button>\n                <br/>\n                <br/>\n                <div>Game Attempts {props.allGame2_total_game_tries}</div>\n\n                <br />\n\n              </div>\n\n\n\n            )}\n        </div>\n\n\n\n  );\n\n\n};\n\nexport default Step1Card;\n","import React, {useState} from 'react';\nimport Timer from './Timer';\n\nimport img1 from '../images/elons-rocket.jpg';\nimport img2 from '../images/fortblox.png';\nimport blox_loading from '../images/Blox.gif';\n\n\nimport waiting from '../Sounds/waiting.wav';\nimport enter from '../Sounds/enter.wav';\n\nimport ReactAudioPlayer from 'react-audio-player';\n\n\n\nimport {Spinner,Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Step2Card.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst Step2Card = (props) => {\n\n  const commaNumber = require('comma-number')\n  const keccak256 = require('keccak256')\n\n  const [username,setUsername] = useState(undefined);\n  const [loading,setloading] = useState(false);\n\n\n\n  const allGame2_deadline_time = props.allGame2_deadline_time;\n  const contract = props.contract\n  const accounts = props.accounts\n\n  const handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    setUsername(value);\n\n    }\n\n    const handleSubmit = async() => {\n\n      setloading(true);\n      const result2 = await contract.methods.headStartTimeLock(username,props.allGame2_id).send({from: accounts});\n      setUsername(undefined);\n\n      console.log(\"Transaction confirmed\",result2)\n\n      props.updateLocalDeadLineTime(result2)\n\n      console.log(\"I am the first log\");\n\n      setTimeout(function(){\n          setloading(false);\n      },1000);\n\n\n    }\n\n\n  return(\n        <div>\n            { loading ? (\n              <div>\n              <br/>\n                <br/>\n                  Verifying Time Lock Please Wait!\n                  <br/>\n                  <br/>\n                  <img\n                    alt=\"Blox Loading\"\n                    src={blox_loading}\n                    width=\"75\"\n                    className=\"d-inline-block align-middle\"\n                  />\n                  <ReactAudioPlayer\n                    src={waiting}\n                    autoPlay\n                  />\n                <br/>\n              <br/>\n              </div>\n            ) : (\n              <div>\n                <ReactAudioPlayer\n                  src={enter}\n                  autoPlay\n                />\n                <div className=\"descriptionTitle\">YOU HAVE ENTERED!</div>\n                <div className=\"gameTitleEnter\">Use Time Lock Now!</div>\n                <div>Know the answer? Get a 90 second time lock where only you can answer the secret!\n                </div>\n                <br/>\n                <div className=\"descriptionTitle\">90 second Time Lock Cost {props.game2_time_lock_cost} Blox</div>\n\n                <br />\n                <div>Enter a username</div>\n\n                <Form.Control type=\"text\" placeholder=\"@Username\" name=\"username\" value={username} onChange={handleInputChange}/>\n                <br />\n                <Button className=\"customButton\" onClick={handleSubmit}>Lock Time Now</Button>\n                <br />\n                <br />\n                <div>Game Attempts {props.allGame2_total_game_tries}</div>\n              </div>\n\n            )}\n        </div>\n\n\n\n  );\n\n\n};\n\nexport default Step2Card;\n","import React, {useState} from 'react';\nimport Timer from './Timer';\n\nimport img1 from '../images/elons-rocket.jpg';\nimport img2 from '../images/fortblox.png';\nimport rocketSmash from '../images/rocket_crash.gif';\nimport eyes from '../images/eyes.gif';\nimport blox_loading from '../images/Blox.gif';\n\nimport music from '../Sounds/music.wav';\nimport fail from '../Sounds/fail.wav';\nimport waiting from '../Sounds/waiting.wav';\nimport ReactAudioPlayer from 'react-audio-player';\n\n\nimport {Spinner,Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Step2Card.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst Step3Card = (props) => {\n\n  const commaNumber = require('comma-number')\n  const keccak256 = require('keccak256')\n  const BN = require('bn.js');\n\n  const [secret,setSecret] = useState(\"\");\n  const [message,setMessage] = useState(\"\");\n  const [hashedSecret,setHashedSecret] = useState(undefined);\n  const [unlucky,setunlucky] = useState(false);\n  const [lucky,setlucky] = useState(false);\n\n\n  const [loading,setloading] = useState(false);\n\n  const allGame2_deadline_time = props.allGame2_deadline_time;\n  const contract = props.contract\n  const accounts = props.accounts\n\n\n    const handleInputChangeSecret = (event) => {\n      const target = event.target;\n\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const secret = target.secret;\n      // console.log(\"hashed secret: \",\"0x\"+keccak256(value).toString('hex'));\n\n      // props.web3.solidityKeccak()\n      const userAccount = \"0x\"+keccak256(accounts).toString('hex');\n\n      const userSecret = \"0x\"+keccak256(value).toString('hex');\n\n      const confirmedSecret = props.web3.utils.soliditySha3(userAccount,userSecret).toString('hex');\n\n      setSecret(value);\n      setHashedSecret(confirmedSecret)\n\n\n    }\n\n    const handleInputChangeMessage = (event) => {\n      const target = event.target;\n\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const message = target.message;\n\n      setMessage(value);\n    }\n\n\n\n\n    const handleSubmit = async() => {\n\n\n\n      setloading(true);\n      const result = await contract.methods.SubmitSecret(hashedSecret,secret,props.allGame2_id,message).send({from: accounts});\n\n      if (result.events.submitSecretFailEvent.returnValues[2]==true){\n        // Block of code to try\n        // const incorrect = result.events.submitSecretFailEvent.returnValues[0]\n        setloading(false);\n        setunlucky(true)\n\n      } else {\n        setunlucky(false)\n      }\n\n\n\n\n\n      setSecret('');\n      setMessage('');\n\n      setTimeout(function(){\n          setloading(false);\n      },30000);\n\n    }\n\n    if (props.countGame2 === 0){\n      props.cancelLocalTime()\n    }\n\n\n\n\n  return(\n        <div>\n\n            { loading ? (\n              <div>\n\n                      <div>\n                        <br/>\n                          <br/>\n                            Verifying Your Answer Please Wait!\n                            <br/>\n                            <br/>\n                            <img\n                              alt=\"Blox Loading\"\n                              src={blox_loading}\n                              width=\"75\"\n                              className=\"d-inline-block align-middle\"\n                            />\n                            <ReactAudioPlayer\n                              src={waiting}\n                              autoPlay\n                            />\n                          <br/>\n                        <br/>\n                      </div>\n\n              </div>\n            ) : (\n              <div>\n                    <div>\n\n                        {unlucky?(\n\n                                  <div>\n                                    <div className=\"descriptionTitle\">Unlucky Try Again!</div>\n                                      <img\n                                        alt=\"bad luck\"\n                                        src={rocketSmash}\n                                        width=\"225\"\n                                        className=\"d-inline-block align-middle\"\n                                      />\n                                      <ReactAudioPlayer\n                                        src={fail}\n                                        autoPlay\n                                      />\n                                </div>\n\n                              ):(\n                              <div>\n\n                              </div>\n                              )}\n                      </div>\n\n                <div>\n                  <div className=\"descriptionTitle\">QUICKLY SUBMIT YOUR ANSWER</div>\n\n                  <ReactAudioPlayer\n                    src={music}\n                    autoPlay\n                  />\n\n                  <div className=\"gameTitleEnter\">TIME lEFT {props.countGame2}</div>\n\n                  <img\n                    alt=\"bad luck\"\n                    src={eyes}\n                    width=\"225\"\n                    className=\"d-inline-block align-middle\"\n                  />\n\n                  <br />\n                  <div>Enter your guess</div>\n                  <Form.Control type=\"password\"  required placeholder=\"Enter The Secret\" name=\"secret\" value={secret} onChange={handleInputChangeSecret}/>\n\n                  <div>Enter a victory message!</div>\n                  <Form.Control type=\"text\" required placeholder=\"Enter A Winning Message\" name=\"message\" value={message} onChange={handleInputChangeMessage}/>\n                  <br />\n\n\n                  <Button className=\"customButton\" onClick={handleSubmit}>Submit Secret</Button>\n                  <br />\n                  <br />\n                  <div>Game Attempts {props.allGame2_total_game_tries}</div>\n                </div>\n\n            </div>\n\n            )}\n        </div>\n\n\n\n  );\n\n\n};\n\nexport default Step3Card;\n","import React, {useState} from 'react';\nimport Timer from './Timer';\n\nimport img1 from '../images/elons-rocket.jpg';\nimport img2 from '../images/fortblox.png';\n\n\nimport {Spinner,Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Step2Card.css';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst Step3Card = (props) => {\n\n  const commaNumber = require('comma-number')\n  const keccak256 = require('keccak256')\n  const BN = require('bn.js');\n\n  const [secret,setSecret] = useState(undefined);\n  const [message,setMessage] = useState(undefined);\n  const [hashedSecret,setHashedSecret] = useState(undefined);\n\n  const [loading,setloading] = useState(false);\n\n  const allGame1_deadline_time = props.allGame2_deadline_time;\n  const contract = props.contract\n  const accounts = props.accounts\n\n    const handleInputChangeSecret = (event) => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const secret = target.secret;\n      // console.log(\"hashed secret: \",\"0x\"+keccak256(value).toString('hex'));\n\n      // props.web3.solidityKeccak()\n      const userAccount = \"0x\"+keccak256(accounts).toString('hex');\n\n      const userSecret = \"0x\"+keccak256(value).toString('hex');\n\n      const confirmedSecret = props.web3.utils.soliditySha3(userAccount,userSecret).toString('hex');\n\n      setSecret(value);\n      setHashedSecret(confirmedSecret)\n\n    }\n\n    if (props.countGame2 === 0){\n      props.cancelLocalTime()\n    }\n\n\n\n  return(\n\n              <div>\n                <div className=\"descriptionTitle\">TIME LOCK ACTIVATED PLEASE WAIT!</div>\n\n                <br />\n                {props.attemptUsername2} has activated the time lock!\n\n                <br />\n                You can attempt the quest once the countdown has expired!\n\n                <br />\n                <div className=\"descriptionTitle\">Time Remaining {props.countGame2} Seconds</div>\n\n                <br />\n                <div>Game Attempts {props.allGame2_total_game_tries}</div>\n              </div>\n\n  );\n\n};\n\nexport default Step3Card;\n","import React, { Component, useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\nimport Countdown from 'react-countdown';\nimport moment from 'moment';\n\nimport { CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown,Row,Col } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Card.css';\n\nimport Step1Card from \"./Step1Card\";\nimport Step2Card from \"./Step2Card\";\nimport Step3Card from \"./Step3Card\";\nimport Step3CardNoEntry from \"./Step3CardNoEntry\";\n\nimport celebrate from '../Sounds/celebrate.wav';\n\n\n\nimport ReactAudioPlayer from 'react-audio-player';\n\n\nconst Timer = (props) => {\n  const commaNumber = require('comma-number')\n\n\n  const winning_prize2 = commaNumber(props.winning_prize2,',');\n\n  const [transactionConfirmed,setTransactionConfirmed] = useState(undefined);\n  const [timeLock,setTimelock] = useState(false);\n\n\n  // DO CHECKS WITH THE USER\n    // Check the game is live\n    const game2_live = props.game2_live;\n    // Enter Game\n    const enter = props.userEntered_game2;\n    // Head Start Time Lock\n\n\n  const updateLocalDeadLineTime = (bool) => {\n    if (bool){\n      setTransactionConfirmed(true);\n      console.log(\"pre timelock:\", timeLock)\n      setTimelock(true);\n      console.log(\"updated timelock:\", timeLock)\n    }\n  }\n  // setTimelock(props.countGame1DeadlineTrue);\n  // User Activated time Lock\n\n  const cancelLocalTime = () => {\n      setTimelock(false);\n  }\n\n\n\n\n\n\n\n  return(\n\n\n    // Enter Step 1\n<div>\n\n    {game2_live ?(\n\n      <div>\n\n\n      <div>\n\n        {enter ? (\n\n\n          <div>\n\n            <div>\n\n                    { timeLock || props.countGame2DeadlineTrue ? (\n                      <div>\n                        {setTransactionConfirmed || props.accounts == props.attemptAddress2 ?(\n                          <div>\n\n                            { props.accounts == props.winning_address2 ?(\n\n                                <div>\n                                  <ReactAudioPlayer\n                                    src={celebrate}\n                                    autoPlay\n                                  />\n                                  Congratulations you have solved the quest!\n                                  <div className=\"largeEnter\">WINNER</div>\n                                  <div className=\"gameTitleEnter\">Prize Won {winning_prize2} Blox</div>\n\n                                  <br/>\n                                  <div className=\"enterGameTitle\">Winning Message</div>\n                                  <div className=\"descriptionTitle\">{props.winning_message2}</div>\n\n                                  <br/><br/>\n                                  <div className=\"enterGameTitle\">Winning Address</div>\n                                  {props.winning_address1}\n\n                                </div>\n\n                            ):(\n\n\n                                <div className=\"descriptionTitle\">\n\n                                  <Step3Card\n                                  {...props} cancelLocalTime={cancelLocalTime}/>\n\n                                </div>\n                            )}\n\n                          </div>\n                        ):(\n                          <div>\n\n                            <Step3CardNoEntry\n                            {...props }cancelLocalTime={cancelLocalTime}/>\n\n                          </div>\n                        )}\n                        </div>\n\n                    ) : (\n\n                      <div>\n\n                        <Step2Card\n                        {...props} updateLocalDeadLineTime={updateLocalDeadLineTime}/>\n\n                      </div>\n\n                    )}\n            </div>\n\n          </div>\n\n\n\n        ) :\n        (\n            <div>\n              <Step1Card\n              {...props}/>\n            </div>\n\n        )}\n\n        </div>\n\n      </div>\n//\n    ):(\n\n          <div>\n            {props.treasure_found2?(\n                <div>\n                  <ReactAudioPlayer\n                    src={celebrate}\n                    autoPlay\n                  />\n                  Congratulations a treasure hunter helped Elon find his Rocket!\n                  <div className=\"largeEnter\">WINNER</div>\n                  <div className=\"gameTitleEnter\">Prize Won {winning_prize2} Blox</div>\n                  <br/>\n                  <div className=\"enterGameTitle\">Winning Message</div>\n                  <div className=\"descriptionTitle\">{props.winning_message2}</div>\n                  <br/>\n                  <br/>\n                  <div className=\"enterGameTitle\">Winning Address</div>\n                  {props.winning_address2}\n                </div>\n            ):(\n                <div>\n                We are launching this treasure quest very soon!\n                <div className=\"largeEnter\">WATCH THIS SPACE!</div>\n            </div>\n\n      )}\n\n\n\n      </div>\n\n\n    )}\n</div>\n\n\n\n  );\n\n};\n\nexport default Timer;\n","import React from 'react';\n\nimport img1 from '../images/Treasure-hunt.jpeg';\n\n\nimport { CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown,Row,Col } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './SingleCard.css';\n\nconst SingleCard = (props) => {\n  const commaNumber = require('comma-number')\n\n\n  const decimals = props.decimals;\n\n\n  const game2_prize = commaNumber(props.game2_prize,',');\n  const game2_entry_cost = commaNumber(props.game2_entry_cost,',');\n\n\n\n\n  return(\n\n    <Container className='mt-5' fluid=\"md\">\n\n    <Row >\n\n    <Col>\n    <div>\n      <Card className=\"customRoundedOne\">\n      <Card.Header >Prize</Card.Header>\n      <Card.Body className='customBodyTwo'>\n        <div className=\"gameMainTitle\">Total Treasure for Fort Blox</div>\n\n        <div className=\"gamePrize\">Prize {game2_prize} Blox</div>\n        <div className=\"postMainPrize\">Entry Cost {game2_entry_cost} Blox</div>\n        <br/>\n\n      </Card.Body >\n\n      </Card>\n    </div>\n\n    </Col>\n    <Col>\n    <div >\n      <Card className=\"customRoundedOne\">\n      <Card.Header >Riddle</Card.Header>\n      <Card.Body className='customBodyTwo'>\n        <div className=\"gameMainTitle\">{props.game2_riddle}</div>\n\n        <div className=\"gamePrize\">{props.game2_clue}</div>\n        <div className=\"postMainPrize\">Part of me is out of this world!</div>\n        <br/>\n\n\n\n      </Card.Body >\n\n      </Card>\n    </div>\n\n    </Col>\n  </Row>\n\n\n    </Container>\n\n\n  );\n\n\n};\n\nexport default SingleCard;\n","import React from 'react';\nimport Timer from './Timer';\n\nimport img1 from '../images/elons-rocket.jpg';\nimport img2 from '../images/fortblox.png';\n\n\n\nimport {Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Card.css';\n\nconst PageCard = (props) => {\n\n  const renderTooltip = (props) => (\n\n  <Tooltip id=\"button-tooltip\" {...props}>\n    Once you have purchased your Blox they buy you 30 seconds to enter your answer, no one else can answer in this time and this stops bots from beating you to it!\n  </Tooltip>\n);\n\n  return(\n\n\n\n\n    <div>\n\n    <Card className='cardRounded'>\n      <Card.Img variant=\"top\" src={img2} alt=\"Logo\" className='cardRounded'/>\n\n      </Card>\n\n\n\n    </div>\n\n\n  );\n\n\n};\n\nexport default PageCard;\n","import React from 'react';\nimport Timer from './Timer';\n\nimport img1 from '../images/elons-rocket.jpg';\nimport img2 from '../images/fortblox.png';\n\n\n\n\nimport {Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../HomeCard.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst HuntWowCards = (props) => {\n\n  const commaNumber = require('comma-number')\n\n  const renderTooltip = (props) => (\n\n\n  <Tooltip id=\"button-tooltip\" {...props}>\n    Once you have purchased your Blox they buy you 30 seconds to enter your answer, no one else can answer in this time and this stops bots from beating you to it!\n  </Tooltip>\n);\n\n  return(\n\n    <div>\n\n          <Card className='cardRounded'>\n            <Card.Body className=\"customBodyTwo\">\n              <Card.Title className=\"gameTitle\">Costs</Card.Title>\n              <div >Simply purchase Blox to enter this game. The entry fee is a one off purchase. You pay every time you use the time lock or submit a secret.</div>\n              <br/>\n              <div className=\"descriptionTitle\">Cost to Enter {props.game2_entry_cost} BLOX</div>\n              <div className=\"descriptionTitle\">90 second Time Lock Cost {props.game2_time_lock_cost} BLOX</div>\n              <div className=\"descriptionTitle\">Cost to submit Secret {props.game2_submit_secret_cost} BLOX</div>\n              <br/>\n            </Card.Body>\n          </Card>\n\n    </div>\n\n\n\n  );\n\n\n};\n\nexport default HuntWowCards;\n","import React from 'react';\nimport Timer from './Timer';\n\nimport img1 from '../images/elons-rocket.jpg';\nimport img2 from '../images/fortblox.png';\n\n\nimport {Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './EnterHuntCards.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst EnterHuntCards = (props) => {\n\n  const commaNumber = require('comma-number')\n\n  const allGame1_deadline_time = props.allGame2_deadline_time;\n\nconsole.log(\"enter card.js: \",props.attemptAddress2)\n\n  const renderTooltip = (props) => (\n\n\n  <Tooltip id=\"button-tooltip\" {...props}>\n    Once you have purchased your Blox they buy you 90 seconds to enter your answer, no one else can answer in this time. The aim is to stop bots from beating you to it!\n  </Tooltip>\n);\n\n\n\n  return(\n\n\n\n    <div>\n          <Card className='cardRounded border border-danger'>\n            <Card.Body className=\"customBodyThree\">\n              <Card.Header className=\"enterGameTitle\">Can you break into Fort Blox?</Card.Header>\n\n              <Timer\n              {...props}\n              />\n\n              <footer className=\"blockquote\">\n              </footer>\n\n              <br />\n\n\n            </Card.Body>\n          </Card>\n\n    </div>\n\n\n\n  );\n\n\n};\n\nexport default EnterHuntCards;\n","import {Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport MyNav from './MyNav';\nimport moment from 'moment';\n\n// import img1 from './Treasure-hunt.jpeg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React, { Component, useState, useEffect } from 'react'\nimport Connection from \"./Connection\";\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport \"./App.css\";\n\nimport Timer from './components/Structure/Game2/Timer';\n\nimport HomeCards from './components/Structure/HomeCards';\nimport HomeHuntCards from './components/Structure/HomeHuntCards';\nimport SingleCard from './components/Structure/Game2/SingleCard';\n\n\nimport PageCard from './components/Structure/Game2/PageCard';\nimport HuntWowCards from './components/Structure/Game2/HuntWowCards';\nimport EnterHuntCards from './components/Structure/Game2/EnterHuntCards';\n\nimport Confetti from 'react-confetti'\n\n// Hook\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n\nconst Hunt2 = (props) => {\n\n  const commaNumber = require('comma-number')\n  const { width, height } = useWindowSize();\n\n\n  const game2_prize = commaNumber(props.game1_prize,',');\n\n\n  const renderTooltip = (props) => (\n\n  <Tooltip id=\"button-tooltip\" {...props}>\n    Once you have purchased your Blox they buy you 30 seconds to enter your answer, no one else can answer in this time and this stops bots from beating you to it!\n  </Tooltip>\n);\n\n  const winner = props.treasure_found2;\n\n    return (\n\n      <div className=\"spaceTopHome\">\n      {winner? (\n        <div><Confetti\n          width={width}\n          height={height}\n\t        numberOfPieces={300}\n\n          drawShape={ctx => {\n            ctx.beginPath();\n            for (var i = 0; i < 6; i++) {\n              ctx.lineTo(10 + 20 * Math.cos(2 * Math.PI / 6 * i), 10 + 20 * Math.sin(2 * Math.PI / 6 * i));\n            }\n            ctx.closePath();\n            ctx.stroke();\n          }}\n        />\n\n        </div>\n\n      ):(\n        <div>\n\n        </div>\n      )}\n\n      <div>\n            <div className=\"siteTitle\">Welcome to Fort Blox, can you break into the facility and steal the prize?</div>\n      <SingleCard{...props}/>\n\n      <Container className='mt-5' fluid=\"md\">\n            <CardGroup className='mt-5'>\n              <CardColumns>\n\n                <EnterHuntCards {...props}/>\n                <br/>\n                <HuntWowCards {...props}/>\n\n                <PageCard {...props}/>\n\n                <HomeCards/>\n\n              </CardColumns>\n            </CardGroup>\n        </Container>\n\n      </div>\n\n\n\n</div>\n\n\n\n    );\n\n}\n\nexport default Hunt2;\n","import { Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport MyNav from './MyNav';\nimport SingleCard from './components/Structure/Game1/SingleCard';\nimport moment from 'moment';\n\n// import img1 from './Treasure-hunt.jpeg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport React, { Component, useState, useEffect } from 'react'\nimport getWeb3 from \"./getWeb3\";\nimport Connection from \"./Connection\";\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport \"./App.css\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\n\nimport Home from \"./Home\";\nimport Hunt1 from \"./Hunt1\";\nimport Hunt2 from \"./Hunt2\";\n\n\n\n\nconst App = () => {\n\n\n  const [web3,setWeb3] = useState(null)\n  const [accounts,setAccounts] = useState(null)\n  const [contract,setContract] = useState(null)\n  const [decimals,setDecimals] = useState(null)\n  const [totalTreasure,setTotalTreasure] = useState(null)\n\n// GAME 1\n  const [game1_id,setGame1_id] = useState(undefined)\n  const [game1_live,setGame1_live] = useState(undefined)\n  const [game1_prize,setGame1_prize] = useState(undefined)\n  const [game1_question_hash,setGame1_question_hash] = useState(undefined)\n  const [game1_time_lock_cost,setgame1_time_lock_cost] = useState(undefined)\n  const [game1_submit_secret_cost,setGame1_submit_secret_cost] = useState(undefined)\n  const [game1_riddle,setGame1_riddle] = useState(undefined)\n  const [game1_clue,setGame1_clue] = useState(undefined)\n  const [game1_head_start_time,setGame1_head_start_time] = useState(undefined)\n  const [game1_entry_limit,setGame1_entry_limit] = useState(undefined)\n  const [game1_entry_cost,setGame1_entry_cost] = useState(undefined)\n\n  const [allGame1_id,setallGame1_id] = useState(undefined)\n  const [allGame1_user_front_of_que,setallGame1_user_front_of_que] = useState(undefined)\n  const [allGame1_deadline_time,setallGame1_deadline] = useState(undefined)\n  const [allGame1_username,setallGame1_username] = useState(undefined)\n  const [allGame1_total_game_tries,setallGame1_total_game_tries] = useState(undefined)\n\n  const [countGame1, setTimeGame1] = useState(60);\n  const [countGame1DeadlineTrue, setcountGame1DeadlineTrue] = useState(false);\n\n  const [game1numberOfEntries, setGame1numberOfEntries] = useState(0);\n  const [game1huntEntries, setGame1huntEntries] = useState(undefined);\n  const [userGame1_id, setUserGame1_id] = useState(undefined);\n  const [userEntered_game1, setUserEntered_game1] = useState(undefined);\n  const [userGame1_headstart_time, setUserGame1_headstart_time] = useState(undefined);\n  const [userGame1_live, setUserGame1_live] = useState(undefined);\n\n  const [winning_address1, setWinning_address1] = useState(undefined);\n  const [treasure_found1, setTreasure_found1] = useState(undefined);\n  const [winning_prize1, setWinning_prize1] = useState(undefined);\n  const [question_hash_solved1, setQuestion_hash_solved1] = useState(undefined);\n  const [winning_message1, setWinning_message1] = useState(undefined);\n\n  const [attemptId1, setAttemptId1] = useState(undefined);\n  const [attemptAddress1, setAttemptAddress1] = useState(undefined);\n  const [attemptUsername1, setAttemptUsername1] = useState(undefined);\n  const [attemptDeadline1, setAttemptDeadline1] = useState(undefined);\n\n\n// GAME 2\n\n  const [game2_id,setGame2_id] = useState(undefined)\n  const [game2_live,setGame2_live] = useState(undefined)\n  const [game2_prize,setGame2_prize] = useState(undefined)\n  const [game2_question_hash,setGame2_question_hash] = useState(undefined)\n  const [game2_time_lock_cost,setgame2_time_lock_cost] = useState(undefined)\n  const [game2_submit_secret_cost,setGame2_submit_secret_cost] = useState(undefined)\n  const [game2_riddle,setGame2_riddle] = useState(undefined)\n  const [game2_clue,setGame2_clue] = useState(undefined)\n  const [game2_head_start_time,setGame2_head_start_time] = useState(undefined)\n  const [game2_entry_limit,setGame2_entry_limit] = useState(undefined)\n  const [game2_entry_cost,setGame2_entry_cost] = useState(undefined)\n\n  const [allGame2_id,setallGame2_id] = useState(undefined)\n  const [allGame2_user_front_of_que,setallGame2_user_front_of_que] = useState(undefined)\n  const [allGame2_deadline_time,setallGame2_deadline] = useState(undefined)\n  const [allGame2_username,setallGame2_username] = useState(undefined)\n  const [allGame2_total_game_tries,setallGame2_total_game_tries] = useState(undefined)\n\n  const [countGame2, setTimeGame2] = useState(60);\n  const [countGame2DeadlineTrue, setcountGame2DeadlineTrue] = useState(false);\n\n  const [game2numberOfEntries, setGame2numberOfEntries] = useState(0);\n  const [game2huntEntries, setGame2huntEntries] = useState(undefined);\n  const [userGame2_id, setUserGame2_id] = useState(undefined);\n  const [userEntered_game2, setUserEntered_game2] = useState(undefined);\n  const [userGame2_headstart_time, setUserGame2_headstart_time] = useState(undefined);\n  const [userGame2_live, setUserGame2_live] = useState(undefined);\n\n  const [winning_address2, setWinning_address2] = useState(undefined);\n  const [treasure_found2, setTreasure_found2] = useState(undefined);\n  const [winning_prize2, setWinning_prize2] = useState(undefined);\n  const [question_hash_solved2, setQuestion_hash_solved2] = useState(undefined);\n  const [winning_message2, setWinning_message2] = useState(undefined);\n\n  const [attemptId2, setAttemptId2] = useState(undefined);\n  const [attemptAddress2, setAttemptAddress2] = useState(undefined);\n  const [attemptUsername2, setAttemptUsername2] = useState(undefined);\n  const [attemptDeadline2, setAttemptDeadline2] = useState(undefined);\n  const [loaded, setloaded] = useState(false);\n\n\n\n\n\n\n  useEffect(() => {\n\n\n      const init = async() => {\n\n\n\n        const web3 = await getWeb3();\n\n        const accounts = await web3.eth.getAccounts();\n\n        const abi = require('./TreasureBlox.abi.json');\n        // Set the provider\n        // web3.setProvider(new web3.providers.WebsocketProvider('ws://localhost:8545'));\n        // this.web3.setProvider(new this.web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/'));\n\n        // LOCAL\n        // const contract = new web3.eth.Contract(abi,\"localhost:8545\" && \"0x9987602E9e9A76CbA7e9DB9217A0962BA8F9e605\");\n\n        // TestNet\n        const contract = new web3.eth.Contract(abi,\"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0x54Dace4d39CA9762fc842Ce968C02C47CB021b45\");\n        // Sstart Data Calls\n        const decimals = await contract.methods.decimals().call().then(console.log('Yes'));\n\n        const totalTreasure = await contract.methods.balanceOf(\"0xe3bAD75D329c7C238C8DEbf6b0FDed1786C16Cf1\").call();\n\n\n        // const owner = await contract.methods._owner().call();\n        // const marketingWallet = await contract.methods.marketingWallet().call().then(console.log('marketing Wallet Complete'));\n        //\n        // const total_supply = await contract.methods.totalSupply().call();\n        // const treasure_chest = await contract.methods.treasureChest().call();\n        setWeb3(web3)\n        setAccounts(accounts[0])\n        setContract(contract)\n        setDecimals(decimals)\n        setTotalTreasure(totalTreasure)\n\n// GET GAMES\n// GAME 1\n        const game1 = await contract.methods.Games(1).call();\n\n        const game1_id = await game1[0];\n        const game1_live = await game1[1];\n        const game1_prize = await game1[2];\n        const game1_question_hash = await game1[3];\n        const game1_time_lock_cost= await game1[4];\n        const game1_submit_secret_cost = await game1[5];\n        const game1_riddle = await game1[6];\n        const game1_clue = await game1[7];\n        const game1_head_start_time = await game1[8];\n        const game1_entry_limit = await game1[9];\n        const game1_entry_cost = await game1[10];\n\n        setGame1_id(game1_id)\n        setGame1_live(game1_live)\n        setGame1_prize(game1_prize)\n        setGame1_question_hash(game1_question_hash)\n        setgame1_time_lock_cost(game1_time_lock_cost)\n        setGame1_submit_secret_cost(game1_submit_secret_cost)\n        setGame1_riddle(game1_riddle)\n        setGame1_clue(game1_clue)\n        setGame1_head_start_time(game1_head_start_time)\n        setGame1_entry_limit(game1_entry_limit)\n        setGame1_entry_cost(game1_entry_cost)\n\n// GAME 2\n        const game2 = await contract.methods.Games(2).call();\n\n        const game2_id = await game2[0];\n        const game2_live = await game2[1];\n        const game2_prize = await game2[2];\n        const game2_question_hash = await game2[3];\n        const game2_time_lock_cost= await game2[4];\n        const game2_submit_secret_cost = await game2[5];\n        const game2_riddle = await game2[6];\n        const game2_clue = await game2[7];\n        const game2_head_start_time = await game2[8];\n        const game2_entry_limit = await game2[9];\n        const game2_entry_cost = await game2[10];\n\n        setGame2_id(game2_id)\n        setGame2_live(game2_live)\n        setGame2_prize(game2_prize)\n        setGame2_question_hash(game2_question_hash)\n        setgame2_time_lock_cost(game2_time_lock_cost)\n        setGame2_submit_secret_cost(game2_submit_secret_cost)\n        setGame2_riddle(game2_riddle)\n        setGame2_clue(game2_clue)\n        setGame2_head_start_time(game2_head_start_time)\n        setGame2_entry_limit(game2_entry_limit)\n        setGame2_entry_cost(game2_entry_cost)\n\n\n\n// This Handels the countdown time and collecting information every 1 second so the counter goes down\n        const timer = window.setInterval( async() => {\n            var moment = require('moment'); // require\n\n        // GET ALL GAME TIMELINES AND gamesTriess\n        // GAME 1\n            const allGame1 = await contract.methods.allGames(1).call();\n            const allGame1_id = await allGame1[0];\n            const allGame1_user_front_of_que = await allGame1[1];\n            const allGame1_deadline_time =  await allGame1[2];\n            const allGame1_username = await allGame1[3];\n            const allGame1_total_game_tries = await allGame1[4];\n\n            const game1numberOfEntries = await contract.methods.numberOfEntries(1).call();\n\n            const game1huntEntries = await contract.methods.huntEntries(accounts[0],1).call();\n            const userGame1_id = await game1huntEntries[0];\n            const userEntered_game1 = await game1huntEntries[1];\n            const userGame1_headstart_time =  await game1huntEntries[2];\n            const userGame1_live = await game1huntEntries[3];\n\n\n            const pot1AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(1).call();\n            const winning_address1 = await pot1AnsweredCorrectly[0];\n            const treasure_found1 = await pot1AnsweredCorrectly[1];\n            const winning_prize1 =  await pot1AnsweredCorrectly[2];\n            const question_hash_solved1 = await pot1AnsweredCorrectly[3];\n            const winning_message1 = await pot1AnsweredCorrectly[4];\n\n            const getAllLatestGameAttempts1 = await contract.methods.getAllLatestGameAttempts(1).call();\n            const attemptId1 = await getAllLatestGameAttempts1[0];\n            const attemptAddress1 = await getAllLatestGameAttempts1[1];\n            const attemptDeadline1 =  await getAllLatestGameAttempts1[2];\n            const attemptUsername1 = await getAllLatestGameAttempts1[3];\n\n            // Fetches New Games if required\n            // const item = await contract.getPastEvents('setGameEvent',{});\n            // console.log(item[0].returnValues[0])\n            // console.log(item[0].returnValues[1])\n            // console.log(item[0].returnValues[2])\n\n\n            var currentStartDate = Date();\n            var startDate = new Date(currentStartDate);\n            // // Hours part from the timestamp\n            // var startDateHours = startDate.getHours();\n            // // Minutes part from the timestamp\n            // var startDateMinutes = startDate.getMinutes();\n            // // Seconds part from the timestamp\n            // var startDateSeconds = startDate.getSeconds();\n\n            // Do\n            var endDateGame1 = new Date(allGame1_deadline_time * 1000);\n            // // Hours part from the timestamp\n            // var endDateHours = endDate.getHours();\n            // // Minutes part from the timestamp\n            // var endDateMinutes = endDate.getMinutes();\n            // // Seconds part from the timestamp\n            // var endDateSeconds = endDate.getSeconds();\n\n            function getDifferenceInDays(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / (1000 * 60 * 60 * 24);\n              }\n\n            function getDifferenceInHours(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / (1000 * 60 * 60);\n              }\n\n            function getDifferenceInMinutes(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / (1000 * 60);\n              }\n\n            function getDifferenceInSeconds(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / 1000;\n              }\n            // console.log(getDifferenceInDays(endDate, startDate));\n            // console.log(getDifferenceInHours(endDate, startDate));\n            // console.log(getDifferenceInMinutes(endDate, startDate));\n\n            // console.log(getDifferenceInSeconds(startDate, endDateGame1));\n\n            var timeGame1 = Math.abs(getDifferenceInSeconds(startDate, endDateGame1));\n\n\n            setTimeGame1(timeGame1)\n            setTimeGame1(prevTime => prevTime - 1); // <-- Change this line!\n\n            setallGame1_id(allGame1_id)\n            setallGame1_user_front_of_que(allGame1_user_front_of_que)\n            setallGame1_deadline(allGame1_deadline_time)\n            setallGame1_username(allGame1_username)\n            console.log(\"username past: \", allGame1_username)\n            setallGame1_total_game_tries(allGame1_total_game_tries)\n\n            if (endDateGame1-1 >= startDate){\n              setcountGame1DeadlineTrue(true);\n            } else {\n              setcountGame1DeadlineTrue(false);\n            }\n\n            setGame1numberOfEntries(game1numberOfEntries)\n\n            setUserGame1_id(userGame1_id)\n            setUserEntered_game1(userEntered_game1)\n            setUserGame1_headstart_time(userGame1_headstart_time)\n            setUserGame1_live(userGame1_live)\n\n            setWinning_address1(winning_address1)\n            setTreasure_found1(treasure_found1)\n            setWinning_prize1(winning_prize1)\n            setQuestion_hash_solved1(question_hash_solved1)\n            setWinning_message1(winning_message1)\n\n            setAttemptId1(attemptId1)\n            setAttemptAddress1(attemptAddress1)\n            setAttemptUsername1(attemptUsername1)\n            setAttemptDeadline1(attemptDeadline1)\n\n\n\n\n          // GAME 2\n\n          const allGame2 = await contract.methods.allGames(2).call();\n          const allGame2_id = await allGame2[0];\n          const allGame2_user_front_of_que = await allGame2[1];\n          const allGame2_deadline_time =  await allGame2[2];\n          const allGame2_username = await allGame2[3];\n          const allGame2_total_game_tries = await allGame2[4];\n\n          const game2numberOfEntries = await contract.methods.numberOfEntries(2).call();\n\n          const game2huntEntries = await contract.methods.huntEntries(accounts[0],2).call();\n          const userGame2_id = await game2huntEntries[0];\n          const userEntered_game2 = await game2huntEntries[1];\n          const userGame2_headstart_time =  await game2huntEntries[2];\n          const userGame2_live = await game2huntEntries[3];\n\n\n          const pot2AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(2).call();\n          const winning_address2 = await pot2AnsweredCorrectly[0];\n          const treasure_found2 = await pot2AnsweredCorrectly[1];\n          const winning_prize2 =  await pot2AnsweredCorrectly[2];\n          const question_hash_solved2 = await pot2AnsweredCorrectly[3];\n          const winning_message2 = await pot2AnsweredCorrectly[4];\n\n          const getAllLatestGameAttempts2 = await contract.methods.getAllLatestGameAttempts(2).call();\n          const attemptId2 = await getAllLatestGameAttempts2[0];\n          const attemptAddress2 = await getAllLatestGameAttempts2[1];\n          const attemptDeadline2 =  await getAllLatestGameAttempts2[2];\n          const attemptUsername2 = await getAllLatestGameAttempts2[3];\n\n\n          var currentStartDate = Date();\n          var startDate = new Date(currentStartDate);\n\n          // Do\n          var endDateGame2 = new Date(allGame2_deadline_time * 1000);\n\n          console.log(getDifferenceInSeconds(startDate, endDateGame2));\n\n          var timeGame2 = Math.abs(getDifferenceInSeconds(startDate, endDateGame2));\n\n          setTimeGame2(timeGame2)\n          setTimeGame2(prevTime => prevTime - 1); // <-- Change this line!\n\n          setallGame2_id(allGame2_id)\n          setallGame2_user_front_of_que(allGame2_user_front_of_que)\n          setallGame2_deadline(allGame2_deadline_time)\n          setallGame2_username(allGame2_username)\n          setallGame2_total_game_tries(allGame2_total_game_tries)\n\n          if (endDateGame2-1 >= startDate){\n            setcountGame2DeadlineTrue(true);\n          } else {\n            setcountGame2DeadlineTrue(false);\n          }\n\n          setGame2numberOfEntries(game2numberOfEntries)\n\n          setUserGame2_id(userGame2_id)\n          setUserEntered_game2(userEntered_game2)\n          setUserGame2_headstart_time(userGame2_headstart_time)\n          setUserGame2_live(userGame2_live)\n\n          setWinning_address2(winning_address2)\n          setTreasure_found2(treasure_found2)\n          setWinning_prize2(winning_prize2)\n          setQuestion_hash_solved2(question_hash_solved2)\n          setWinning_message2(winning_message2)\n\n          setAttemptId2(attemptId2)\n          setAttemptAddress2(attemptAddress2)\n          setAttemptUsername2(attemptUsername2)\n          setAttemptDeadline2(attemptDeadline2)\n\n        }, 1000);\n        // End of Game timer code\n\n\n\n\n      }\n      init()\n\n    },[web3,accounts,contract,decimals,totalTreasure,\n      // GAME1\n  game1_id,game1_live,game1_prize,game1_question_hash,game1_time_lock_cost,game1_submit_secret_cost,game1_riddle,game1_clue,\n  allGame1_id,allGame1_user_front_of_que,allGame1_deadline_time,allGame1_username,allGame1_total_game_tries,countGame1,countGame1DeadlineTrue,\n  game1_head_start_time,game1_entry_limit,game1_entry_cost,game1numberOfEntries,userGame1_id,userEntered_game1,userGame1_headstart_time,userGame1_live,\n  winning_address1,treasure_found1,winning_prize1,question_hash_solved1,winning_message1,attemptId1,attemptUsername1,attemptDeadline1,attemptAddress1,\n      // GAME2\n  game2_id,game2_live,game2_prize,game2_question_hash,game2_time_lock_cost,game2_submit_secret_cost,game2_riddle,game2_clue,\n  allGame2_id,allGame2_user_front_of_que,allGame2_deadline_time,allGame2_username,allGame2_total_game_tries,countGame2,countGame2DeadlineTrue,\n  game2_head_start_time,game2_entry_limit,game2_entry_cost,game2numberOfEntries,userGame2_id,userEntered_game2,userGame2_headstart_time,userGame2_live,\n  winning_address2,treasure_found2,winning_prize2,question_hash_solved2,winning_message2,attemptId2,attemptUsername2,attemptDeadline2,attemptAddress2\n])\n\n\n\n    return (\n\n        <div className=\"background customFont\">\n\n\n        <Router>\n        <MyNav accounts={accounts}/>\n\n\n// Pages\n\n        <Switch>\n                <Route path=\"/home\">\n\n                  <Home\n                  game1_id={game1_id}\n                  game1_live={game1_live}\n                  game1_prize={game1_prize}\n                  game1_question_hash={game1_question_hash}\n                  game1_time_lock_cost={game1_time_lock_cost}\n                  game1_submit_secret_cost={game1_submit_secret_cost}\n                  game1_riddle={game1_riddle}\n                  game1_clue={game1_clue}\n                  game1_head_start_time={game1_head_start_time}\n                  game1_entry_limit={game1_entry_limit}\n                  game1_entry_cost={game1_entry_cost}\n\n                  allGame1_id={allGame1_id}\n                  allGasme1_user_front_of_que={allGame1_user_front_of_que}\n                  allGame1_deadline_time={allGame1_deadline_time}\n                  allGame1_username={allGame1_username}\n                  allGame1_total_game_tries={allGame1_total_game_tries}\n                  countGame1={countGame1}\n                  countGame1DeadlineTrue={countGame1DeadlineTrue}\n                  totalTreasure={totalTreasure}\n                  game1numberOfEntries={game1numberOfEntries}\n\n                  game2_id={game2_id}\n                  game2_live={game2_live}\n                  game2_prize={game2_prize}\n                  game2_question_hash={game2_question_hash}\n                  game2_time_lock_cost={game2_time_lock_cost}\n                  game2_submit_secret_cost={game2_submit_secret_cost}\n                  game2_riddle={game2_riddle}\n                  game2_clue={game2_clue}\n                  game2_head_start_time={game2_head_start_time}\n                  game2_entry_limit={game2_entry_limit}\n                  game2_entry_cost={game2_entry_cost}\n                  allGame2_id={allGame2_id}\n                  allGasme2_user_front_of_que={allGame2_user_front_of_que}\n                  allGame2_deadline_time={allGame2_deadline_time}\n                  allGame2_username={allGame2_username}\n                  allGame2_total_game_tries={allGame2_total_game_tries}\n                  countGame2={countGame2}\n                  countGame2DeadlineTrue={countGame2DeadlineTrue}\n\n                  game2numberOfEntries={game2numberOfEntries}\n\n\n\n                  />\n                </Route>\n\n              <Route path=\"/hunt1\">\n\n                <Hunt1\n                web3={web3}\n                game1_id={game1_id}\n                game1_live={game1_live}\n                game1_prize={game1_prize}\n                game1_question_hash={game1_question_hash}\n                game1_time_lock_cost={game1_time_lock_cost}\n                game1_submit_secret_cost={game1_submit_secret_cost}\n                game1_riddle={game1_riddle}\n                game1_clue={game1_clue}\n                game1_head_start_time={game1_head_start_time}\n                game1_entry_limit={game1_entry_limit}\n                game1_entry_cost={game1_entry_cost}\n                allGame1_id={allGame1_id}\n                allGasme1_user_front_of_que={allGame1_user_front_of_que}\n                allGame1_deadline_time={allGame1_deadline_time}\n                allGame1_username={allGame1_username}\n                allGame1_total_game_tries={allGame1_total_game_tries}\n                countGame1={countGame1}\n                countGame1DeadlineTrue={countGame1DeadlineTrue}\n                decimals={decimals}\n                totalTreasure={totalTreasure}\n                contract={contract}\n                accounts={accounts}\n                game1numberOfEntries={game1numberOfEntries}\n                userGame1_id={userGame1_id}\n                userEntered_game1={userEntered_game1}\n                userGame1_headstart_time={userGame1_headstart_time}\n                userGame1_live={userGame1_live}\n                winning_address1={winning_address1}\n                treasure_found1={treasure_found1}\n                winning_prize1={winning_prize1}\n                question_hash_solved1={question_hash_solved1}\n                winning_message1={winning_message1}\n                attemptId1={attemptId1}\n                attemptAddress1={attemptAddress1}\n                attemptUsername1={attemptUsername1}\n                attemptDeadline1={attemptDeadline1}\n\n                />\n\n              </Route>\n\n              <Route path=\"/hunt2\">\n\n              <Hunt2\n              web3={web3}\n              game2_id={game2_id}\n              game2_live={game2_live}\n              game2_prize={game2_prize}\n              game2_question_hash={game2_question_hash}\n              game2_time_lock_cost={game2_time_lock_cost}\n              game2_submit_secret_cost={game2_submit_secret_cost}\n              game2_riddle={game2_riddle}\n              game2_clue={game2_clue}\n              game2_head_start_time={game2_head_start_time}\n              game2_entry_limit={game2_entry_limit}\n              game2_entry_cost={game2_entry_cost}\n              allGame2_id={allGame2_id}\n              allGame2_user_front_of_que={allGame2_user_front_of_que}\n              allGame2_deadline_time={allGame2_deadline_time}\n              allGame2_username={allGame2_username}\n              allGame2_total_game_tries={allGame2_total_game_tries}\n              countGame2={countGame2}\n              countGame2DeadlineTrue={countGame2DeadlineTrue}\n              decimals={decimals}\n              totalTreasure={totalTreasure}\n              contract={contract}\n              accounts={accounts}\n              game2numberOfEntries={game2numberOfEntries}\n              userGame2_id={userGame2_id}\n              userEntered_game2={userEntered_game2}\n              userGame2_headstart_time={userGame2_headstart_time}\n              userGame2_live={userGame2_live}\n              winning_address2={winning_address2}\n              treasure_found2={treasure_found2}\n              winning_prize2={winning_prize2}\n              question_hash_solved2={question_hash_solved2}\n              winning_message2={winning_message2}\n              attemptId2={attemptId2}\n              attemptAddress2={attemptAddress2}\n              attemptUsername2={attemptUsername2}\n              attemptDeadline2={attemptDeadline2}\n\n              />\n\n              </Route>\n\n        </Switch>\n\n        <Redirect to=\"/home\" />\n</Router>\n\n\n      </div>\n    );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}