{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst rlp_1 = require(\"./rlp\");\n\nconst bignumber_js_1 = require(\"bignumber.js\");\n\nconst blake = require('blakejs');\n\nvar ScriptEngine;\n\n(function (ScriptEngine) {\n  ScriptEngine.SCRIPT_ENGINE_PREFIX = Buffer.from('ffffffff', 'hex');\n  ScriptEngine.SCRIPT_ENGINE_VERSION = 0;\n  ScriptEngine.SCRIPT_DATA_PREFIX = Buffer.from('deadbeef', 'hex');\n  ScriptEngine.STAKING_VERSION = 0;\n  ScriptEngine.AUCTION_VERSION = 0;\n  ScriptEngine.EMPTY_ADDRESS = '0x0000000000000000000000000000000000000000';\n  ScriptEngine.EMPTY_BYTE32 = '0x0000000000000000000000000000000000000000000000000000000000000000';\n  let ModuleID;\n\n  (function (ModuleID) {\n    ModuleID[ModuleID[\"Staking\"] = 1000] = \"Staking\";\n    ModuleID[ModuleID[\"Auction\"] = 1001] = \"Auction\";\n    ModuleID[ModuleID[\"AccountLock\"] = 1002] = \"AccountLock\";\n  })(ModuleID = ScriptEngine.ModuleID || (ScriptEngine.ModuleID = {}));\n\n  let Token;\n\n  (function (Token) {\n    Token[Token[\"Meter\"] = 0] = \"Meter\";\n    Token[Token[\"MeterGov\"] = 1] = \"MeterGov\";\n  })(Token = ScriptEngine.Token || (ScriptEngine.Token = {}));\n\n  let StakingOpCode;\n\n  (function (StakingOpCode) {\n    StakingOpCode[StakingOpCode[\"Bound\"] = 1] = \"Bound\";\n    StakingOpCode[StakingOpCode[\"Unbound\"] = 2] = \"Unbound\";\n    StakingOpCode[StakingOpCode[\"Candidate\"] = 3] = \"Candidate\";\n    StakingOpCode[StakingOpCode[\"Uncandidate\"] = 4] = \"Uncandidate\";\n    StakingOpCode[StakingOpCode[\"Delegate\"] = 5] = \"Delegate\";\n    StakingOpCode[StakingOpCode[\"Undelegate\"] = 6] = \"Undelegate\";\n    StakingOpCode[StakingOpCode[\"CandidateUpdate\"] = 7] = \"CandidateUpdate\";\n    StakingOpCode[StakingOpCode[\"BucketUpdate\"] = 8] = \"BucketUpdate\";\n    StakingOpCode[StakingOpCode[\"DelegateStats\"] = 101] = \"DelegateStats\";\n    StakingOpCode[StakingOpCode[\"BailOut\"] = 102] = \"BailOut\";\n    StakingOpCode[StakingOpCode[\"FlushAllStats\"] = 103] = \"FlushAllStats\";\n    StakingOpCode[StakingOpCode[\"Governing\"] = 10001] = \"Governing\";\n  })(StakingOpCode = ScriptEngine.StakingOpCode || (ScriptEngine.StakingOpCode = {}));\n\n  ScriptEngine.explainStakingOpCode = opCode => {\n    switch (opCode) {\n      case StakingOpCode.Bound:\n        return 'staking bound';\n\n      case StakingOpCode.Unbound:\n        return 'staking unbound';\n\n      case StakingOpCode.Candidate:\n        return 'staking candidate';\n\n      case StakingOpCode.Uncandidate:\n        return 'staking uncandidate';\n\n      case StakingOpCode.Delegate:\n        return 'staking delegate';\n\n      case StakingOpCode.Undelegate:\n        return 'staking undelegate';\n\n      case StakingOpCode.CandidateUpdate:\n        return 'staking candidate update';\n\n      case StakingOpCode.BucketUpdate:\n        return 'staking bucket update';\n\n      case StakingOpCode.DelegateStats:\n        return 'staking delegate stats';\n\n      case StakingOpCode.BailOut:\n        return 'staking bailout';\n\n      case StakingOpCode.FlushAllStats:\n        return 'staking clean stats';\n\n      case StakingOpCode.Governing:\n        return 'staking governing';\n    }\n  };\n\n  let StakingOption;\n\n  (function (StakingOption) {\n    StakingOption[StakingOption[\"Empty\"] = 0] = \"Empty\"; // staking bound\n\n    StakingOption[StakingOption[\"OneWeekLock\"] = 1] = \"OneWeekLock\";\n    StakingOption[StakingOption[\"TwoWeekLock\"] = 2] = \"TwoWeekLock\";\n    StakingOption[StakingOption[\"ThreeWeekLock\"] = 3] = \"ThreeWeekLock\";\n    StakingOption[StakingOption[\"FourWeekLock\"] = 4] = \"FourWeekLock\";\n  })(StakingOption = ScriptEngine.StakingOption || (ScriptEngine.StakingOption = {}));\n\n  let AuctionOpCode;\n\n  (function (AuctionOpCode) {\n    AuctionOpCode[AuctionOpCode[\"Start\"] = 1] = \"Start\";\n    AuctionOpCode[AuctionOpCode[\"End\"] = 2] = \"End\";\n    AuctionOpCode[AuctionOpCode[\"Bid\"] = 3] = \"Bid\";\n  })(AuctionOpCode = ScriptEngine.AuctionOpCode || (ScriptEngine.AuctionOpCode = {}));\n\n  let AuctionOption;\n\n  (function (AuctionOption) {\n    AuctionOption[AuctionOption[\"Userbid\"] = 0] = \"Userbid\";\n    AuctionOption[AuctionOption[\"Autobid\"] = 1] = \"Autobid\";\n  })(AuctionOption = ScriptEngine.AuctionOption || (ScriptEngine.AuctionOption = {}));\n\n  ScriptEngine.explainAuctionOpCode = (opCode, option) => {\n    switch (opCode) {\n      case AuctionOpCode.Start:\n        return 'auction start';\n\n      case AuctionOpCode.End:\n        return 'auction end';\n\n      case AuctionOpCode.Bid:\n        if (option === AuctionOption.Userbid) {\n          return 'auction userbid';\n        } else if (option === AuctionOption.Autobid) {\n          return 'auction autobid';\n        } else {\n          return 'auction bid';\n        }\n\n    }\n  };\n\n  let AccountLockOpCode;\n\n  (function (AccountLockOpCode) {\n    // account lock\n    AccountLockOpCode[AccountLockOpCode[\"Add\"] = 1] = \"Add\";\n    AccountLockOpCode[AccountLockOpCode[\"Remove\"] = 2] = \"Remove\";\n    AccountLockOpCode[AccountLockOpCode[\"Transfer\"] = 3] = \"Transfer\";\n    AccountLockOpCode[AccountLockOpCode[\"Governing\"] = 4] = \"Governing\";\n  })(AccountLockOpCode = ScriptEngine.AccountLockOpCode || (ScriptEngine.AccountLockOpCode = {}));\n\n  ScriptEngine.explainAccountLockOpCode = opCode => {\n    switch (opCode) {\n      case AccountLockOpCode.Add:\n        return 'account lock add';\n\n      case AccountLockOpCode.Remove:\n        return 'account lock remove';\n\n      case AccountLockOpCode.Transfer:\n        return 'account lock transfer';\n\n      case AccountLockOpCode.Governing:\n        return 'account lock governing';\n    }\n  };\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  function getRandomInt64() {\n    return getRandomInt(9007199254740992);\n  }\n\n  class DecodeError extends Error {\n    constructor(message) {\n      super(message); // 'Error' breaks prototype chain here\n\n      Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n    }\n\n  }\n\n  class EncodeError extends Error {\n    constructor(message) {\n      super(message); // 'Error' breaks prototype chain here\n\n      Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n    }\n\n  }\n\n  function IsScriptEngineData(hexStr) {\n    let str = hexStr;\n\n    if (hexStr.startsWith('0x')) {\n      str = hexStr.replace('0x', '');\n    }\n\n    const enginePrefix = ScriptEngine.SCRIPT_ENGINE_PREFIX.toString('hex');\n    const dataPrefix = ScriptEngine.SCRIPT_DATA_PREFIX.toString('hex');\n    return str.startsWith(enginePrefix + dataPrefix);\n  }\n\n  ScriptEngine.IsScriptEngineData = IsScriptEngineData; // ScriptData encode/decode\n\n  function encodeScriptData(moduleID, body) {\n    switch (moduleID) {\n      case ModuleID.Staking:\n        if (!(body instanceof StakingBody)) {\n          throw new EncodeError('module is set to staking, but no staking body is provided');\n        }\n\n        return new ScriptData(moduleID, body.encode()).encode();\n\n      case ModuleID.Auction:\n        if (!(body instanceof AuctionBody)) {\n          throw new EncodeError('module is set to auction, but no auction body is provided');\n        }\n\n        return new ScriptData(moduleID, body.encode()).encode();\n\n      default:\n        throw new EncodeError(`unrecognized moduleID: ${moduleID}`);\n    }\n  }\n\n  ScriptEngine.encodeScriptData = encodeScriptData;\n\n  function decodeScriptData(input) {\n    let buf;\n\n    if (typeof input === 'string') {\n      buf = Buffer.from(input.replace('0x', ''), 'hex');\n    } else {\n      buf = input;\n    }\n\n    let hexStr = buf.toString('hex');\n    const sePrefixStr = ScriptEngine.SCRIPT_ENGINE_PREFIX.toString('hex');\n    const sdPrefixStr = ScriptEngine.SCRIPT_DATA_PREFIX.toString('hex');\n\n    if (hexStr.startsWith(sePrefixStr)) {\n      hexStr = hexStr.substring(sePrefixStr.length);\n    }\n\n    if (!hexStr.startsWith(sdPrefixStr)) {\n      throw new DecodeError('could not decode script data: 0x' + buf.toString('hex'));\n    }\n\n    const truncated = Buffer.from(hexStr.substring(sdPrefixStr.length), 'hex');\n    return new rlp_1.RLP(ScriptEngine.ScriptDataProfile).decode(truncated);\n  } // end of Script Data encode/decode\n\n\n  ScriptEngine.decodeScriptData = decodeScriptData; // Staking Body decode\n\n  function decodeStakingBody(input) {\n    let buf;\n\n    if (typeof input === 'string') {\n      buf = Buffer.from(input.replace('0x', ''), 'hex');\n    } else {\n      buf = input;\n    }\n\n    return new rlp_1.RLP(ScriptEngine.StakingBodyProfile).decode(buf);\n  }\n\n  ScriptEngine.decodeStakingBody = decodeStakingBody; // Auction Body decode\n\n  function decodeAuctionBody(input) {\n    let buf;\n\n    if (typeof input === 'string') {\n      buf = Buffer.from(input.replace('0x', ''), 'hex');\n    } else {\n      buf = input;\n    }\n\n    return new rlp_1.RLP(ScriptEngine.AuctionBodyProfile).decode(buf);\n  }\n\n  ScriptEngine.decodeAuctionBody = decodeAuctionBody; // Account Lock Body decode\n\n  function decodeAccountLockBody(input) {\n    let buf;\n\n    if (typeof input === 'string') {\n      buf = Buffer.from(input.replace('0x', ''), 'hex');\n    } else {\n      buf = input;\n    }\n\n    return new rlp_1.RLP(ScriptEngine.AccountLockBodyProfile).decode(buf);\n  }\n\n  ScriptEngine.decodeAccountLockBody = decodeAccountLockBody; // Staking Governing Extra decode\n\n  function decodeStakingGoverningExtra(input) {\n    let buf;\n\n    if (typeof input === 'string') {\n      buf = Buffer.from(input.replace('0x', ''), 'hex');\n    } else {\n      buf = input;\n    }\n\n    return new rlp_1.RLP(ScriptEngine.StakingGoverningExtraProfile).decode(buf);\n  }\n\n  ScriptEngine.decodeStakingGoverningExtra = decodeStakingGoverningExtra; // Auction Tx decode\n\n  function getAuctionTxFromAuctionBody(body) {\n    if (body.opCode === AuctionOpCode.Bid) {\n      return new AuctionTx('0x' + body.bidder.toString('hex'), body.amount, body.option, body.timestamp, body.nonce);\n    }\n\n    return undefined;\n  }\n\n  ScriptEngine.getAuctionTxFromAuctionBody = getAuctionTxFromAuctionBody; // ------------------------------------------------\n  //                 SCRIPT DATA\n  // ------------------------------------------------\n\n  ScriptEngine.ScriptDataProfile = {\n    name: 'scriptDataProfile',\n    kind: [{\n      name: 'header',\n      kind: [{\n        name: 'version',\n        kind: new rlp_1.RLP.NumericKind()\n      }, {\n        name: 'modId',\n        kind: new rlp_1.RLP.NumericKind()\n      }]\n    }, {\n      name: 'payload',\n      kind: new rlp_1.RLP.BufferKind()\n    }]\n  };\n\n  class ScriptDataHeader {\n    constructor(version, modId) {\n      this.version = version;\n      this.modId = modId;\n    }\n\n  }\n\n  ScriptEngine.ScriptDataHeader = ScriptDataHeader;\n\n  class ScriptData {\n    constructor(modId, payload) {\n      this.header = new ScriptDataHeader(ScriptEngine.SCRIPT_ENGINE_VERSION, modId);\n      this.payload = payload;\n    }\n\n    encode() {\n      return Buffer.concat([ScriptEngine.SCRIPT_ENGINE_PREFIX, ScriptEngine.SCRIPT_DATA_PREFIX, new rlp_1.RLP(ScriptEngine.ScriptDataProfile).encode(this)]);\n    }\n\n  }\n\n  ScriptEngine.ScriptData = ScriptData; // ------------------------------------------\n  //                STAKING\n  // ------------------------------------------\n\n  ScriptEngine.StakingGoverningExtraProfile = {\n    name: 'stakingGoverningExtraProfile',\n    kind: {\n      item: [{\n        name: 'address',\n        kind: new rlp_1.RLP.BufferKind()\n      }, {\n        name: 'amount',\n        kind: new rlp_1.RLP.NumericKind()\n      }]\n    }\n  };\n\n  class RewardInfo {\n    constructor(address, amount) {\n      this.address = address;\n      this.amount = amount;\n    }\n\n  }\n\n  ScriptEngine.RewardInfo = RewardInfo;\n  ScriptEngine.StakingBodyProfile = {\n    name: 'stakingBodyProfile',\n    kind: [{\n      name: 'opCode',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'version',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'option',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'holderAddr',\n      kind: new rlp_1.RLP.BufferKind()\n    }, {\n      name: 'candidateAddr',\n      kind: new rlp_1.RLP.BufferKind()\n    }, {\n      name: 'candidateName',\n      kind: new rlp_1.RLP.BufferKind()\n    }, {\n      name: 'candidateDescription',\n      kind: new rlp_1.RLP.BufferKind()\n    }, {\n      name: 'candidatePubKey',\n      kind: new rlp_1.RLP.BufferKind()\n    }, {\n      name: 'candidateIP',\n      kind: new rlp_1.RLP.BufferKind()\n    }, {\n      name: 'candidatePort',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'bucketID',\n      kind: new rlp_1.RLP.BufferKind()\n    }, {\n      name: 'amount',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'token',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'autobid',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'timestamp',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'nonce',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'extra',\n      kind: new rlp_1.RLP.BufferKind()\n    }]\n  };\n  ScriptEngine.BucketIDProfile = {\n    name: 'bucketID',\n    kind: [{\n      name: 'owner',\n      kind: new rlp_1.RLP.BufferKind()\n    }, {\n      name: 'nonce',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'timestamp',\n      kind: new rlp_1.RLP.NumericKind()\n    }]\n  };\n\n  class StakingBody {\n    constructor(op, option, holderAddr, candidateAddr, candidateName, candidateDescription, candidatePubKey, candidateIP, candidatePort, bucketID, amount, token, autobid, timestamp = 0, nonce = 0) {\n      this.opCode = op;\n      this.version = ScriptEngine.STAKING_VERSION;\n      this.option = option; // set autobid to be in range [0,100]\n\n      let autobidVal = autobid;\n\n      if (autobid > 100) {\n        autobidVal = 100;\n      }\n\n      if (autobid < 0) {\n        autobidVal = 0;\n      }\n\n      this.autobid = autobidVal;\n      let holderAddrStr = holderAddr;\n      let candidateAddrStr = candidateAddr;\n      let bucketIDStr = bucketID;\n\n      if (holderAddrStr === '' || holderAddrStr === '0x') {\n        holderAddrStr = ScriptEngine.EMPTY_ADDRESS;\n      }\n\n      if (candidateAddrStr === '' || candidateAddrStr === '0x') {\n        candidateAddrStr = ScriptEngine.EMPTY_ADDRESS;\n      }\n\n      if (bucketIDStr === '' || bucketIDStr === '0x') {\n        bucketIDStr = ScriptEngine.EMPTY_BYTE32;\n      } // remove 0x prefix\n\n\n      if (holderAddrStr.startsWith('0x')) {\n        holderAddrStr = holderAddrStr.replace('0x', '');\n      }\n\n      if (candidateAddrStr.startsWith('0x')) {\n        candidateAddrStr = candidateAddrStr.replace('0x', '');\n      }\n\n      if (bucketIDStr.toString().startsWith('0x')) {\n        bucketIDStr = bucketIDStr.replace('0x', '');\n      }\n\n      this.holderAddr = Buffer.from(holderAddrStr, 'hex');\n      this.candidateAddr = Buffer.from(candidateAddrStr, 'hex');\n      this.candidateName = Buffer.from(candidateName);\n      this.candidateDescription = Buffer.from(candidateDescription);\n      this.candidatePubKey = Buffer.from(candidatePubKey);\n      this.candidateIP = Buffer.from(candidateIP);\n      this.candidatePort = candidatePort;\n      this.bucketID = Buffer.from(bucketIDStr, 'hex');\n      this.amount = amount.toString();\n      this.token = token;\n\n      if (timestamp != 0) {\n        this.timestamp = timestamp;\n      } else {\n        this.timestamp = Math.ceil(new Date().getTime() / 1000);\n      }\n\n      if (nonce != 0) {\n        this.nonce = nonce;\n      } else {\n        this.nonce = getRandomInt64();\n      }\n\n      this.extra = Buffer.from('', 'hex');\n    }\n\n    encode() {\n      return new rlp_1.RLP(ScriptEngine.StakingBodyProfile).encode(this);\n    }\n\n  }\n\n  ScriptEngine.StakingBody = StakingBody;\n\n  function jsonFromStakingBody(sb) {\n    return Object.assign(Object.assign({}, sb), {\n      bucketID: '0x' + sb.bucketID.toString('hex'),\n      holderAddr: '0x' + sb.holderAddr.toString('hex'),\n      candidateAddr: '0x' + sb.candidateAddr.toString('hex'),\n      candidateDescription: sb.candidateDescription.toString(),\n      candidateIP: sb.candidateIP.toString(),\n      candidateName: sb.candidateName.toString(),\n      candidatePubKey: sb.candidatePubKey.toString(),\n      extra: sb.extra.toString('hex'),\n      amount: new bignumber_js_1.default(sb.amount).toFixed()\n    });\n  }\n\n  ScriptEngine.jsonFromStakingBody = jsonFromStakingBody;\n\n  function getBoundData(option, holderAddr, candidateAddr, amount, timestamp = 0, nonce = 0, autobid = 0) {\n    const body = new StakingBody(StakingOpCode.Bound, option, holderAddr, candidateAddr, '', // name\n    '', // desc\n    '', // pubkey\n    '', // ip\n    0, // port\n    '', // bucket id\n    amount, Token.MeterGov, autobid, // autobid\n    timestamp, nonce);\n    return new ScriptData(ModuleID.Staking, body.encode()).encode();\n  }\n\n  ScriptEngine.getBoundData = getBoundData;\n\n  function getUnboundData(holderAddr, stakingIDStr, amount, timestamp = 0, nonce = 0) {\n    const body = new StakingBody(StakingOpCode.Unbound, StakingOption.Empty, holderAddr, '', // candidate addr\n    '', // name\n    '', // desc\n    '', // pubkey\n    '', // ip\n    0, // port\n    stakingIDStr, // bucket id\n    amount, Token.MeterGov, 0, // autobid\n    timestamp, nonce);\n    return new ScriptData(ModuleID.Staking, body.encode()).encode();\n  }\n\n  ScriptEngine.getUnboundData = getUnboundData;\n\n  function getBucketUpdateData(holderAddr, bucketID, amount, timestamp = 0, nonce = 0) {\n    const body = new StakingBody(StakingOpCode.BucketUpdate, 0, holderAddr, holderAddr, '', // name\n    '', // desc\n    '', //\n    '', // ip\n    0, // port\n    bucketID, amount.toString(), Token.MeterGov, 0, // autobid\n    timestamp, nonce);\n    return new ScriptData(ModuleID.Staking, body.encode()).encode();\n  }\n\n  ScriptEngine.getBucketUpdateData = getBucketUpdateData;\n\n  function getCandidateData( // omitted option, every bucket is forever\n  holderAddr, candidateName, candidateDescription, candidatePubKey, candidateIP, candidatePort, amount, commission, timestamp = 0, nonce = 0, autobid = 0) {\n    let option = 0;\n\n    if (commission >= 100 && commission <= 1000) {\n      option = commission * 1e5;\n    }\n\n    const body = new StakingBody(StakingOpCode.Candidate, option, holderAddr, holderAddr, candidateName, candidateDescription, candidatePubKey, candidateIP, candidatePort, '', amount.toString(), Token.MeterGov, autobid, // autobid\n    timestamp, nonce);\n    return new ScriptData(ModuleID.Staking, body.encode()).encode(); // return body.encode();\n  }\n\n  ScriptEngine.getCandidateData = getCandidateData;\n\n  function getUncandidateData(candidateAddr, timestamp = 0, nonce = 0) {\n    const body = new StakingBody(StakingOpCode.Uncandidate, StakingOption.Empty, ScriptEngine.EMPTY_ADDRESS, candidateAddr, // candidate addr\n    '', // name\n    '', // desc\n    '', // pubkey\n    '', // ip\n    0, // port\n    '', // bucket id\n    0, // amount\n    Token.MeterGov, // token\n    0, // autobid\n    timestamp, nonce);\n    return new ScriptData(ModuleID.Staking, body.encode()).encode();\n  }\n\n  ScriptEngine.getUncandidateData = getUncandidateData;\n\n  function getDelegateData(holderAddr, candidateAddr, bucketID, amount, timestamp = 0, nonce = 0, autobid = 0) {\n    const body = new StakingBody(StakingOpCode.Delegate, StakingOption.Empty, holderAddr, candidateAddr, '', // name\n    '', // desc\n    '', // pubkey\n    '', // ip\n    0, // port\n    bucketID, // bucket id\n    amount.toString(), Token.MeterGov, autobid, timestamp, nonce);\n    return new ScriptData(ModuleID.Staking, body.encode()).encode(); // return body.encode();\n  }\n\n  ScriptEngine.getDelegateData = getDelegateData;\n\n  function getUndelegateData(holderAddr, stakingIDStr, amount, timestamp = 0, nonce = 0) {\n    const body = new StakingBody(StakingOpCode.Undelegate, StakingOption.Empty, holderAddr, '', // candidate addr\n    '', // name\n    '', // desc\n    '', // pubkey\n    '', // ip\n    0, // port\n    stakingIDStr, amount.toString(), Token.MeterGov, 0, // autobid\n    timestamp, nonce);\n    return new ScriptData(ModuleID.Staking, body.encode()).encode(); // return body.encode();\n  }\n\n  ScriptEngine.getUndelegateData = getUndelegateData;\n\n  function getCandidateUpdateData(holderAddr, candidateName, candidateDescription, candidatePubKey, candidateIP, candidatePort, commission, timestamp = 0, nonce = 0, autobid = 0) {\n    let option = 0;\n\n    if (commission >= 100 && commission <= 1000) {\n      option = commission * 1e5;\n    }\n\n    const body = new StakingBody(StakingOpCode.CandidateUpdate, option, holderAddr, holderAddr, candidateName, candidateDescription, candidatePubKey, candidateIP, candidatePort, '', 0, Token.MeterGov, autobid, // autobid\n    timestamp, nonce);\n    return new ScriptData(ModuleID.Staking, body.encode()).encode(); // return body.encode();\n  }\n\n  ScriptEngine.getCandidateUpdateData = getCandidateUpdateData;\n\n  function getBailOutData(holderAddr, timestamp = 0, nonce = 0) {\n    const body = new StakingBody(StakingOpCode.BailOut, StakingOption.Empty, holderAddr, holderAddr, '', // name\n    '', // desc\n    '', // pubkey\n    '', // ip\n    0, // port\n    '', // bucket id\n    '0', // amount\n    Token.MeterGov, 0, // autobid\n    timestamp, nonce);\n    return new ScriptData(ModuleID.Staking, body.encode()).encode(); // return body.encode();\n  }\n\n  ScriptEngine.getBailOutData = getBailOutData; // ------------------------------------------\n  //                AUCTION\n  // ------------------------------------------\n\n  ScriptEngine.AuctionControlBlockProfile = {\n    name: 'auctionControlBlock',\n    kind: [{\n      name: 'startHeight',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'startEpoch',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'endHeight',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'endEpoch',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'rlsdMTRG',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'rsvdMTRG',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'rsvdPrice',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'createTime',\n      kind: new rlp_1.RLP.NumericKind()\n    }]\n  };\n\n  class AuctionControlBlock {\n    constructor(startHeight, startEpoch, endHeight, endEpoch, rlsdMTRG, rsvdMTRG, rsvdPrice, createTime) {\n      this.startHeight = startHeight;\n      this.startEpoch = startEpoch;\n      this.endHeight = endHeight;\n      this.endEpoch = endEpoch;\n      this.rlsdMTRG = rlsdMTRG.toString();\n      this.rsvdMTRG = rsvdMTRG.toString();\n      this.rsvdPrice = rsvdPrice.toString();\n      this.createTime = createTime;\n    }\n\n    ID() {\n      const bytes = new rlp_1.RLP(ScriptEngine.AuctionControlBlockProfile).encode(this);\n      const idBuf = blake.blake2bHex(bytes, null, 32);\n      return '0x' + idBuf.toString('hex');\n    }\n\n  }\n\n  ScriptEngine.AuctionControlBlock = AuctionControlBlock;\n  ScriptEngine.AuctionTxProfile = {\n    name: 'acutionTx',\n    kind: [{\n      name: 'address',\n      kind: new rlp_1.RLP.BufferKind()\n    }, {\n      name: 'amount',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'type',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'timestamp',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'nonce',\n      kind: new rlp_1.RLP.NumericKind()\n    }]\n  };\n\n  class AuctionTx {\n    constructor(address, amount, type, timestamp, nonce) {\n      this.address = Buffer.from(address.replace('0x', ''), 'hex');\n      this.amount = amount.toString();\n      this.type = type;\n      this.timestamp = timestamp;\n      this.nonce = nonce.toString();\n    }\n\n    ID() {\n      const bytes = new rlp_1.RLP(ScriptEngine.AuctionTxProfile).encode(this);\n      const idBuf = blake.blake2bHex(bytes, null, 32);\n      return '0x' + idBuf.toString('hex');\n    }\n\n  }\n\n  ScriptEngine.AuctionTx = AuctionTx;\n  ScriptEngine.AuctionBodyProfile = {\n    name: 'auctionBody',\n    kind: [{\n      name: 'opCode',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'version',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'option',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'startHeight',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'startEpoch',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'endHeight',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'endEpoch',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'sequence',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'auctionID',\n      kind: new rlp_1.RLP.BufferKind()\n    }, {\n      name: 'bidder',\n      kind: new rlp_1.RLP.BufferKind()\n    }, {\n      name: 'amount',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'reserveAmount',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'token',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'timestamp',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'nonce',\n      kind: new rlp_1.RLP.NumericKind()\n    }]\n  };\n\n  class AuctionBody {\n    constructor(opCode, option, auctionID, bidder, amount, timestamp = 0, nonce = 0) {\n      let bidderStr = bidder;\n      let auctionIDStr = auctionID;\n\n      if (bidderStr === '' || bidderStr === '0x') {\n        bidderStr = ScriptEngine.EMPTY_ADDRESS;\n      }\n\n      if (auctionIDStr === '' || auctionIDStr === '0x') {\n        auctionIDStr = ScriptEngine.EMPTY_BYTE32;\n      }\n\n      if (bidderStr.startsWith('0x')) {\n        bidderStr = bidderStr.replace('0x', '');\n      }\n\n      if (auctionIDStr.startsWith('0x')) {\n        auctionIDStr = auctionIDStr.replace('0x', '');\n      }\n\n      this.opCode = opCode;\n      this.version = ScriptEngine.AUCTION_VERSION;\n      this.option = option;\n      this.startHeight = 0;\n      this.startEpoch = 0;\n      this.endHeight = 0;\n      this.endEpoch = 0;\n      this.sequence = 0;\n      this.auctionID = Buffer.from(auctionIDStr, 'hex');\n      this.bidder = Buffer.from(bidderStr, 'hex');\n      this.amount = amount.toString();\n      this.reserveAmount = '0';\n      this.token = Token.Meter;\n\n      if (timestamp != 0) {\n        this.timestamp = timestamp;\n      } else {\n        this.timestamp = Math.ceil(new Date().getTime() / 1000);\n      }\n\n      if (nonce != 0) {\n        this.nonce = nonce;\n      } else {\n        this.nonce = getRandomInt64();\n      }\n    }\n\n    encode() {\n      return new rlp_1.RLP(ScriptEngine.AuctionBodyProfile).encode(this);\n    }\n\n  }\n\n  ScriptEngine.AuctionBody = AuctionBody;\n\n  function jsonFromAuctionBody(ab) {\n    return Object.assign(Object.assign({}, ab), {\n      auctionID: '0x' + ab.auctionID.toString('hex'),\n      bidder: '0x' + ab.bidder.toString('hex'),\n      amount: new bignumber_js_1.default(ab.amount).toFixed(),\n      reserveAmount: new bignumber_js_1.default(ab.reserveAmount).toFixed()\n    });\n  }\n\n  ScriptEngine.jsonFromAuctionBody = jsonFromAuctionBody;\n\n  function getBidData(bidder, amount, timestamp = 0, nonce = 0) {\n    const body = new AuctionBody(AuctionOpCode.Bid, AuctionOption.Userbid, ScriptEngine.EMPTY_BYTE32, bidder, amount, timestamp, nonce);\n    return new ScriptData(ModuleID.Auction, body.encode()).encode();\n  }\n\n  ScriptEngine.getBidData = getBidData; // ------------------------------------------\n  //                ACCOUNT LOCK\n  // ------------------------------------------\n\n  ScriptEngine.AccountLockBodyProfile = {\n    name: 'accountLockBodyProfile',\n    kind: [{\n      name: 'opCode',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'version',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'option',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'lockEpoch',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'releaseEpoch',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'fromAddr',\n      kind: new rlp_1.RLP.BufferKind()\n    }, {\n      name: 'toAddr',\n      kind: new rlp_1.RLP.BufferKind()\n    }, {\n      name: 'meterAmount',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'meterGovAmount',\n      kind: new rlp_1.RLP.NumericKind()\n    }, {\n      name: 'memo',\n      kind: new rlp_1.RLP.BufferKind()\n    }]\n  };\n\n  class AccountLockBody {\n    constructor(op, lockEpoch, releaseEpoch, fromAddr, toAddr, meterAmount, meterGovAmount, memo) {\n      this.opCode = op;\n      this.version = ScriptEngine.STAKING_VERSION;\n      this.option = 0;\n      let fromAddrStr = fromAddr;\n      let toAddrStr = toAddr;\n\n      if (fromAddrStr === '' || fromAddrStr === '0x') {\n        fromAddrStr = ScriptEngine.EMPTY_ADDRESS;\n      }\n\n      if (toAddrStr === '' || toAddrStr === '0x') {\n        toAddrStr = ScriptEngine.EMPTY_ADDRESS;\n      }\n\n      if (fromAddrStr.startsWith('0x')) {\n        fromAddrStr = fromAddrStr.replace('0x', '');\n      }\n\n      if (toAddrStr.startsWith('0x')) {\n        toAddrStr = toAddrStr.replace('0x', '');\n      }\n\n      this.fromAddr = Buffer.from(fromAddrStr, 'hex');\n      this.toAddr = Buffer.from(toAddrStr, 'hex');\n      this.lockEpoch = lockEpoch;\n      this.releaseEpoch = releaseEpoch;\n      this.meterAmount = meterAmount.toString();\n      this.meterGovAmount = meterGovAmount.toString();\n      this.memo = Buffer.from(memo, 'utf-8');\n    }\n\n    encode() {\n      return new rlp_1.RLP(ScriptEngine.AccountLockBodyProfile).encode(this);\n    }\n\n  }\n\n  ScriptEngine.AccountLockBody = AccountLockBody;\n\n  function jsonFromAccountLockBody(alb) {\n    return Object.assign(Object.assign({}, alb), {\n      fromAddr: '0x' + alb.fromAddr.toString('hex'),\n      toAddr: '0x' + alb.toAddr.toString('hex'),\n      meterAmount: new bignumber_js_1.default(alb.meterAmount).toFixed(),\n      meterGovAmount: new bignumber_js_1.default(alb.meterGovAmount).toFixed(),\n      memo: alb.memo.toString()\n    });\n  }\n\n  ScriptEngine.jsonFromAccountLockBody = jsonFromAccountLockBody;\n\n  function getLockedTransferData(lockEpoch, releaseEpoch, fromAddr, toAddr, meterAmount, meterGovAmount, memo) {\n    const body = new AccountLockBody(AccountLockOpCode.Transfer, lockEpoch, releaseEpoch, fromAddr, toAddr, meterAmount, meterGovAmount, memo);\n    return new ScriptData(ModuleID.AccountLock, body.encode()).encode();\n  }\n\n  ScriptEngine.getLockedTransferData = getLockedTransferData;\n\n  function getBucketID(owner, nonce, timestamp) {\n    const bytes = new rlp_1.RLP(ScriptEngine.BucketIDProfile).encode({\n      owner,\n      nonce,\n      timestamp\n    });\n    const idBuf = blake.blake2bHex(bytes, null, 32);\n    return '0x' + idBuf.toString('hex');\n  }\n\n  ScriptEngine.getBucketID = getBucketID;\n})(ScriptEngine = exports.ScriptEngine || (exports.ScriptEngine = {}));","map":{"version":3,"sources":["../src/scriptEngine.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst rlp_1 = require(\"./rlp\");\nconst bignumber_js_1 = require(\"bignumber.js\");\nconst blake = require('blakejs');\nvar ScriptEngine;\n(function (ScriptEngine) {\n    ScriptEngine.SCRIPT_ENGINE_PREFIX = Buffer.from('ffffffff', 'hex');\n    ScriptEngine.SCRIPT_ENGINE_VERSION = 0;\n    ScriptEngine.SCRIPT_DATA_PREFIX = Buffer.from('deadbeef', 'hex');\n    ScriptEngine.STAKING_VERSION = 0;\n    ScriptEngine.AUCTION_VERSION = 0;\n    ScriptEngine.EMPTY_ADDRESS = '0x0000000000000000000000000000000000000000';\n    ScriptEngine.EMPTY_BYTE32 = '0x0000000000000000000000000000000000000000000000000000000000000000';\n    let ModuleID;\n    (function (ModuleID) {\n        ModuleID[ModuleID[\"Staking\"] = 1000] = \"Staking\";\n        ModuleID[ModuleID[\"Auction\"] = 1001] = \"Auction\";\n        ModuleID[ModuleID[\"AccountLock\"] = 1002] = \"AccountLock\";\n    })(ModuleID = ScriptEngine.ModuleID || (ScriptEngine.ModuleID = {}));\n    let Token;\n    (function (Token) {\n        Token[Token[\"Meter\"] = 0] = \"Meter\";\n        Token[Token[\"MeterGov\"] = 1] = \"MeterGov\";\n    })(Token = ScriptEngine.Token || (ScriptEngine.Token = {}));\n    let StakingOpCode;\n    (function (StakingOpCode) {\n        StakingOpCode[StakingOpCode[\"Bound\"] = 1] = \"Bound\";\n        StakingOpCode[StakingOpCode[\"Unbound\"] = 2] = \"Unbound\";\n        StakingOpCode[StakingOpCode[\"Candidate\"] = 3] = \"Candidate\";\n        StakingOpCode[StakingOpCode[\"Uncandidate\"] = 4] = \"Uncandidate\";\n        StakingOpCode[StakingOpCode[\"Delegate\"] = 5] = \"Delegate\";\n        StakingOpCode[StakingOpCode[\"Undelegate\"] = 6] = \"Undelegate\";\n        StakingOpCode[StakingOpCode[\"CandidateUpdate\"] = 7] = \"CandidateUpdate\";\n        StakingOpCode[StakingOpCode[\"BucketUpdate\"] = 8] = \"BucketUpdate\";\n        StakingOpCode[StakingOpCode[\"DelegateStats\"] = 101] = \"DelegateStats\";\n        StakingOpCode[StakingOpCode[\"BailOut\"] = 102] = \"BailOut\";\n        StakingOpCode[StakingOpCode[\"FlushAllStats\"] = 103] = \"FlushAllStats\";\n        StakingOpCode[StakingOpCode[\"Governing\"] = 10001] = \"Governing\";\n    })(StakingOpCode = ScriptEngine.StakingOpCode || (ScriptEngine.StakingOpCode = {}));\n    ScriptEngine.explainStakingOpCode = (opCode) => {\n        switch (opCode) {\n            case StakingOpCode.Bound:\n                return 'staking bound';\n            case StakingOpCode.Unbound:\n                return 'staking unbound';\n            case StakingOpCode.Candidate:\n                return 'staking candidate';\n            case StakingOpCode.Uncandidate:\n                return 'staking uncandidate';\n            case StakingOpCode.Delegate:\n                return 'staking delegate';\n            case StakingOpCode.Undelegate:\n                return 'staking undelegate';\n            case StakingOpCode.CandidateUpdate:\n                return 'staking candidate update';\n            case StakingOpCode.BucketUpdate:\n                return 'staking bucket update';\n            case StakingOpCode.DelegateStats:\n                return 'staking delegate stats';\n            case StakingOpCode.BailOut:\n                return 'staking bailout';\n            case StakingOpCode.FlushAllStats:\n                return 'staking clean stats';\n            case StakingOpCode.Governing:\n                return 'staking governing';\n        }\n    };\n    let StakingOption;\n    (function (StakingOption) {\n        StakingOption[StakingOption[\"Empty\"] = 0] = \"Empty\";\n        // staking bound\n        StakingOption[StakingOption[\"OneWeekLock\"] = 1] = \"OneWeekLock\";\n        StakingOption[StakingOption[\"TwoWeekLock\"] = 2] = \"TwoWeekLock\";\n        StakingOption[StakingOption[\"ThreeWeekLock\"] = 3] = \"ThreeWeekLock\";\n        StakingOption[StakingOption[\"FourWeekLock\"] = 4] = \"FourWeekLock\";\n    })(StakingOption = ScriptEngine.StakingOption || (ScriptEngine.StakingOption = {}));\n    let AuctionOpCode;\n    (function (AuctionOpCode) {\n        AuctionOpCode[AuctionOpCode[\"Start\"] = 1] = \"Start\";\n        AuctionOpCode[AuctionOpCode[\"End\"] = 2] = \"End\";\n        AuctionOpCode[AuctionOpCode[\"Bid\"] = 3] = \"Bid\";\n    })(AuctionOpCode = ScriptEngine.AuctionOpCode || (ScriptEngine.AuctionOpCode = {}));\n    let AuctionOption;\n    (function (AuctionOption) {\n        AuctionOption[AuctionOption[\"Userbid\"] = 0] = \"Userbid\";\n        AuctionOption[AuctionOption[\"Autobid\"] = 1] = \"Autobid\";\n    })(AuctionOption = ScriptEngine.AuctionOption || (ScriptEngine.AuctionOption = {}));\n    ScriptEngine.explainAuctionOpCode = (opCode, option) => {\n        switch (opCode) {\n            case AuctionOpCode.Start:\n                return 'auction start';\n            case AuctionOpCode.End:\n                return 'auction end';\n            case AuctionOpCode.Bid:\n                if (option === AuctionOption.Userbid) {\n                    return 'auction userbid';\n                }\n                else if (option === AuctionOption.Autobid) {\n                    return 'auction autobid';\n                }\n                else {\n                    return 'auction bid';\n                }\n        }\n    };\n    let AccountLockOpCode;\n    (function (AccountLockOpCode) {\n        // account lock\n        AccountLockOpCode[AccountLockOpCode[\"Add\"] = 1] = \"Add\";\n        AccountLockOpCode[AccountLockOpCode[\"Remove\"] = 2] = \"Remove\";\n        AccountLockOpCode[AccountLockOpCode[\"Transfer\"] = 3] = \"Transfer\";\n        AccountLockOpCode[AccountLockOpCode[\"Governing\"] = 4] = \"Governing\";\n    })(AccountLockOpCode = ScriptEngine.AccountLockOpCode || (ScriptEngine.AccountLockOpCode = {}));\n    ScriptEngine.explainAccountLockOpCode = (opCode) => {\n        switch (opCode) {\n            case AccountLockOpCode.Add:\n                return 'account lock add';\n            case AccountLockOpCode.Remove:\n                return 'account lock remove';\n            case AccountLockOpCode.Transfer:\n                return 'account lock transfer';\n            case AccountLockOpCode.Governing:\n                return 'account lock governing';\n        }\n    };\n    function getRandomInt(max) {\n        return Math.floor(Math.random() * Math.floor(max));\n    }\n    function getRandomInt64() {\n        return getRandomInt(9007199254740992);\n    }\n    class DecodeError extends Error {\n        constructor(message) {\n            super(message); // 'Error' breaks prototype chain here\n            Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n        }\n    }\n    class EncodeError extends Error {\n        constructor(message) {\n            super(message); // 'Error' breaks prototype chain here\n            Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n        }\n    }\n    function IsScriptEngineData(hexStr) {\n        let str = hexStr;\n        if (hexStr.startsWith('0x')) {\n            str = hexStr.replace('0x', '');\n        }\n        const enginePrefix = ScriptEngine.SCRIPT_ENGINE_PREFIX.toString('hex');\n        const dataPrefix = ScriptEngine.SCRIPT_DATA_PREFIX.toString('hex');\n        return str.startsWith(enginePrefix + dataPrefix);\n    }\n    ScriptEngine.IsScriptEngineData = IsScriptEngineData;\n    // ScriptData encode/decode\n    function encodeScriptData(moduleID, body) {\n        switch (moduleID) {\n            case ModuleID.Staking:\n                if (!(body instanceof StakingBody)) {\n                    throw new EncodeError('module is set to staking, but no staking body is provided');\n                }\n                return new ScriptData(moduleID, body.encode()).encode();\n            case ModuleID.Auction:\n                if (!(body instanceof AuctionBody)) {\n                    throw new EncodeError('module is set to auction, but no auction body is provided');\n                }\n                return new ScriptData(moduleID, body.encode()).encode();\n            default:\n                throw new EncodeError(`unrecognized moduleID: ${moduleID}`);\n        }\n    }\n    ScriptEngine.encodeScriptData = encodeScriptData;\n    function decodeScriptData(input) {\n        let buf;\n        if (typeof input === 'string') {\n            buf = Buffer.from(input.replace('0x', ''), 'hex');\n        }\n        else {\n            buf = input;\n        }\n        let hexStr = buf.toString('hex');\n        const sePrefixStr = ScriptEngine.SCRIPT_ENGINE_PREFIX.toString('hex');\n        const sdPrefixStr = ScriptEngine.SCRIPT_DATA_PREFIX.toString('hex');\n        if (hexStr.startsWith(sePrefixStr)) {\n            hexStr = hexStr.substring(sePrefixStr.length);\n        }\n        if (!hexStr.startsWith(sdPrefixStr)) {\n            throw new DecodeError('could not decode script data: 0x' + buf.toString('hex'));\n        }\n        const truncated = Buffer.from(hexStr.substring(sdPrefixStr.length), 'hex');\n        return new rlp_1.RLP(ScriptEngine.ScriptDataProfile).decode(truncated);\n    } // end of Script Data encode/decode\n    ScriptEngine.decodeScriptData = decodeScriptData;\n    // Staking Body decode\n    function decodeStakingBody(input) {\n        let buf;\n        if (typeof input === 'string') {\n            buf = Buffer.from(input.replace('0x', ''), 'hex');\n        }\n        else {\n            buf = input;\n        }\n        return new rlp_1.RLP(ScriptEngine.StakingBodyProfile).decode(buf);\n    }\n    ScriptEngine.decodeStakingBody = decodeStakingBody;\n    // Auction Body decode\n    function decodeAuctionBody(input) {\n        let buf;\n        if (typeof input === 'string') {\n            buf = Buffer.from(input.replace('0x', ''), 'hex');\n        }\n        else {\n            buf = input;\n        }\n        return new rlp_1.RLP(ScriptEngine.AuctionBodyProfile).decode(buf);\n    }\n    ScriptEngine.decodeAuctionBody = decodeAuctionBody;\n    // Account Lock Body decode\n    function decodeAccountLockBody(input) {\n        let buf;\n        if (typeof input === 'string') {\n            buf = Buffer.from(input.replace('0x', ''), 'hex');\n        }\n        else {\n            buf = input;\n        }\n        return new rlp_1.RLP(ScriptEngine.AccountLockBodyProfile).decode(buf);\n    }\n    ScriptEngine.decodeAccountLockBody = decodeAccountLockBody;\n    // Staking Governing Extra decode\n    function decodeStakingGoverningExtra(input) {\n        let buf;\n        if (typeof input === 'string') {\n            buf = Buffer.from(input.replace('0x', ''), 'hex');\n        }\n        else {\n            buf = input;\n        }\n        return new rlp_1.RLP(ScriptEngine.StakingGoverningExtraProfile).decode(buf);\n    }\n    ScriptEngine.decodeStakingGoverningExtra = decodeStakingGoverningExtra;\n    // Auction Tx decode\n    function getAuctionTxFromAuctionBody(body) {\n        if (body.opCode === AuctionOpCode.Bid) {\n            return new AuctionTx('0x' + body.bidder.toString('hex'), body.amount, body.option, body.timestamp, body.nonce);\n        }\n        return undefined;\n    }\n    ScriptEngine.getAuctionTxFromAuctionBody = getAuctionTxFromAuctionBody;\n    // ------------------------------------------------\n    //                 SCRIPT DATA\n    // ------------------------------------------------\n    ScriptEngine.ScriptDataProfile = {\n        name: 'scriptDataProfile',\n        kind: [\n            {\n                name: 'header',\n                kind: [\n                    { name: 'version', kind: new rlp_1.RLP.NumericKind() },\n                    { name: 'modId', kind: new rlp_1.RLP.NumericKind() },\n                ],\n            },\n            { name: 'payload', kind: new rlp_1.RLP.BufferKind() },\n        ],\n    };\n    class ScriptDataHeader {\n        constructor(version, modId) {\n            this.version = version;\n            this.modId = modId;\n        }\n    }\n    ScriptEngine.ScriptDataHeader = ScriptDataHeader;\n    class ScriptData {\n        constructor(modId, payload) {\n            this.header = new ScriptDataHeader(ScriptEngine.SCRIPT_ENGINE_VERSION, modId);\n            this.payload = payload;\n        }\n        encode() {\n            return Buffer.concat([\n                ScriptEngine.SCRIPT_ENGINE_PREFIX,\n                ScriptEngine.SCRIPT_DATA_PREFIX,\n                new rlp_1.RLP(ScriptEngine.ScriptDataProfile).encode(this),\n            ]);\n        }\n    }\n    ScriptEngine.ScriptData = ScriptData;\n    // ------------------------------------------\n    //                STAKING\n    // ------------------------------------------\n    ScriptEngine.StakingGoverningExtraProfile = {\n        name: 'stakingGoverningExtraProfile',\n        kind: {\n            item: [\n                { name: 'address', kind: new rlp_1.RLP.BufferKind() },\n                { name: 'amount', kind: new rlp_1.RLP.NumericKind() },\n            ],\n        },\n    };\n    class RewardInfo {\n        constructor(address, amount) {\n            this.address = address;\n            this.amount = amount;\n        }\n    }\n    ScriptEngine.RewardInfo = RewardInfo;\n    ScriptEngine.StakingBodyProfile = {\n        name: 'stakingBodyProfile',\n        kind: [\n            { name: 'opCode', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'version', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'option', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'holderAddr', kind: new rlp_1.RLP.BufferKind() },\n            { name: 'candidateAddr', kind: new rlp_1.RLP.BufferKind() },\n            { name: 'candidateName', kind: new rlp_1.RLP.BufferKind() },\n            { name: 'candidateDescription', kind: new rlp_1.RLP.BufferKind() },\n            { name: 'candidatePubKey', kind: new rlp_1.RLP.BufferKind() },\n            { name: 'candidateIP', kind: new rlp_1.RLP.BufferKind() },\n            { name: 'candidatePort', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'bucketID', kind: new rlp_1.RLP.BufferKind() },\n            { name: 'amount', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'token', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'autobid', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'timestamp', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'nonce', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'extra', kind: new rlp_1.RLP.BufferKind() },\n        ],\n    };\n    ScriptEngine.BucketIDProfile = {\n        name: 'bucketID',\n        kind: [\n            { name: 'owner', kind: new rlp_1.RLP.BufferKind() },\n            { name: 'nonce', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'timestamp', kind: new rlp_1.RLP.NumericKind() },\n        ],\n    };\n    class StakingBody {\n        constructor(op, option, holderAddr, candidateAddr, candidateName, candidateDescription, candidatePubKey, candidateIP, candidatePort, bucketID, amount, token, autobid, timestamp = 0, nonce = 0) {\n            this.opCode = op;\n            this.version = ScriptEngine.STAKING_VERSION;\n            this.option = option;\n            // set autobid to be in range [0,100]\n            let autobidVal = autobid;\n            if (autobid > 100) {\n                autobidVal = 100;\n            }\n            if (autobid < 0) {\n                autobidVal = 0;\n            }\n            this.autobid = autobidVal;\n            let holderAddrStr = holderAddr;\n            let candidateAddrStr = candidateAddr;\n            let bucketIDStr = bucketID;\n            if (holderAddrStr === '' || holderAddrStr === '0x') {\n                holderAddrStr = ScriptEngine.EMPTY_ADDRESS;\n            }\n            if (candidateAddrStr === '' || candidateAddrStr === '0x') {\n                candidateAddrStr = ScriptEngine.EMPTY_ADDRESS;\n            }\n            if (bucketIDStr === '' || bucketIDStr === '0x') {\n                bucketIDStr = ScriptEngine.EMPTY_BYTE32;\n            }\n            // remove 0x prefix\n            if (holderAddrStr.startsWith('0x')) {\n                holderAddrStr = holderAddrStr.replace('0x', '');\n            }\n            if (candidateAddrStr.startsWith('0x')) {\n                candidateAddrStr = candidateAddrStr.replace('0x', '');\n            }\n            if (bucketIDStr.toString().startsWith('0x')) {\n                bucketIDStr = bucketIDStr.replace('0x', '');\n            }\n            this.holderAddr = Buffer.from(holderAddrStr, 'hex');\n            this.candidateAddr = Buffer.from(candidateAddrStr, 'hex');\n            this.candidateName = Buffer.from(candidateName);\n            this.candidateDescription = Buffer.from(candidateDescription);\n            this.candidatePubKey = Buffer.from(candidatePubKey);\n            this.candidateIP = Buffer.from(candidateIP);\n            this.candidatePort = candidatePort;\n            this.bucketID = Buffer.from(bucketIDStr, 'hex');\n            this.amount = amount.toString();\n            this.token = token;\n            if (timestamp != 0) {\n                this.timestamp = timestamp;\n            }\n            else {\n                this.timestamp = Math.ceil(new Date().getTime() / 1000);\n            }\n            if (nonce != 0) {\n                this.nonce = nonce;\n            }\n            else {\n                this.nonce = getRandomInt64();\n            }\n            this.extra = Buffer.from('', 'hex');\n        }\n        encode() {\n            return new rlp_1.RLP(ScriptEngine.StakingBodyProfile).encode(this);\n        }\n    }\n    ScriptEngine.StakingBody = StakingBody;\n    function jsonFromStakingBody(sb) {\n        return Object.assign(Object.assign({}, sb), { bucketID: '0x' + sb.bucketID.toString('hex'), holderAddr: '0x' + sb.holderAddr.toString('hex'), candidateAddr: '0x' + sb.candidateAddr.toString('hex'), candidateDescription: sb.candidateDescription.toString(), candidateIP: sb.candidateIP.toString(), candidateName: sb.candidateName.toString(), candidatePubKey: sb.candidatePubKey.toString(), extra: sb.extra.toString('hex'), amount: new bignumber_js_1.default(sb.amount).toFixed() });\n    }\n    ScriptEngine.jsonFromStakingBody = jsonFromStakingBody;\n    function getBoundData(option, holderAddr, candidateAddr, amount, timestamp = 0, nonce = 0, autobid = 0) {\n        const body = new StakingBody(StakingOpCode.Bound, option, holderAddr, candidateAddr, '', // name\n        '', // desc\n        '', // pubkey\n        '', // ip\n        0, // port\n        '', // bucket id\n        amount, Token.MeterGov, autobid, // autobid\n        timestamp, nonce);\n        return new ScriptData(ModuleID.Staking, body.encode()).encode();\n    }\n    ScriptEngine.getBoundData = getBoundData;\n    function getUnboundData(holderAddr, stakingIDStr, amount, timestamp = 0, nonce = 0) {\n        const body = new StakingBody(StakingOpCode.Unbound, StakingOption.Empty, holderAddr, '', // candidate addr\n        '', // name\n        '', // desc\n        '', // pubkey\n        '', // ip\n        0, // port\n        stakingIDStr, // bucket id\n        amount, Token.MeterGov, 0, // autobid\n        timestamp, nonce);\n        return new ScriptData(ModuleID.Staking, body.encode()).encode();\n    }\n    ScriptEngine.getUnboundData = getUnboundData;\n    function getBucketUpdateData(holderAddr, bucketID, amount, timestamp = 0, nonce = 0) {\n        const body = new StakingBody(StakingOpCode.BucketUpdate, 0, holderAddr, holderAddr, '', // name\n        '', // desc\n        '', //\n        '', // ip\n        0, // port\n        bucketID, amount.toString(), Token.MeterGov, 0, // autobid\n        timestamp, nonce);\n        return new ScriptData(ModuleID.Staking, body.encode()).encode();\n    }\n    ScriptEngine.getBucketUpdateData = getBucketUpdateData;\n    function getCandidateData(\n    // omitted option, every bucket is forever\n    holderAddr, candidateName, candidateDescription, candidatePubKey, candidateIP, candidatePort, amount, commission, timestamp = 0, nonce = 0, autobid = 0) {\n        let option = 0;\n        if (commission >= 100 && commission <= 1000) {\n            option = commission * 1e5;\n        }\n        const body = new StakingBody(StakingOpCode.Candidate, option, holderAddr, holderAddr, candidateName, candidateDescription, candidatePubKey, candidateIP, candidatePort, '', amount.toString(), Token.MeterGov, autobid, // autobid\n        timestamp, nonce);\n        return new ScriptData(ModuleID.Staking, body.encode()).encode();\n        // return body.encode();\n    }\n    ScriptEngine.getCandidateData = getCandidateData;\n    function getUncandidateData(candidateAddr, timestamp = 0, nonce = 0) {\n        const body = new StakingBody(StakingOpCode.Uncandidate, StakingOption.Empty, ScriptEngine.EMPTY_ADDRESS, candidateAddr, // candidate addr\n        '', // name\n        '', // desc\n        '', // pubkey\n        '', // ip\n        0, // port\n        '', // bucket id\n        0, // amount\n        Token.MeterGov, // token\n        0, // autobid\n        timestamp, nonce);\n        return new ScriptData(ModuleID.Staking, body.encode()).encode();\n    }\n    ScriptEngine.getUncandidateData = getUncandidateData;\n    function getDelegateData(holderAddr, candidateAddr, bucketID, amount, timestamp = 0, nonce = 0, autobid = 0) {\n        const body = new StakingBody(StakingOpCode.Delegate, StakingOption.Empty, holderAddr, candidateAddr, '', // name\n        '', // desc\n        '', // pubkey\n        '', // ip\n        0, // port\n        bucketID, // bucket id\n        amount.toString(), Token.MeterGov, autobid, timestamp, nonce);\n        return new ScriptData(ModuleID.Staking, body.encode()).encode();\n        // return body.encode();\n    }\n    ScriptEngine.getDelegateData = getDelegateData;\n    function getUndelegateData(holderAddr, stakingIDStr, amount, timestamp = 0, nonce = 0) {\n        const body = new StakingBody(StakingOpCode.Undelegate, StakingOption.Empty, holderAddr, '', // candidate addr\n        '', // name\n        '', // desc\n        '', // pubkey\n        '', // ip\n        0, // port\n        stakingIDStr, amount.toString(), Token.MeterGov, 0, // autobid\n        timestamp, nonce);\n        return new ScriptData(ModuleID.Staking, body.encode()).encode();\n        // return body.encode();\n    }\n    ScriptEngine.getUndelegateData = getUndelegateData;\n    function getCandidateUpdateData(holderAddr, candidateName, candidateDescription, candidatePubKey, candidateIP, candidatePort, commission, timestamp = 0, nonce = 0, autobid = 0) {\n        let option = 0;\n        if (commission >= 100 && commission <= 1000) {\n            option = commission * 1e5;\n        }\n        const body = new StakingBody(StakingOpCode.CandidateUpdate, option, holderAddr, holderAddr, candidateName, candidateDescription, candidatePubKey, candidateIP, candidatePort, '', 0, Token.MeterGov, autobid, // autobid\n        timestamp, nonce);\n        return new ScriptData(ModuleID.Staking, body.encode()).encode();\n        // return body.encode();\n    }\n    ScriptEngine.getCandidateUpdateData = getCandidateUpdateData;\n    function getBailOutData(holderAddr, timestamp = 0, nonce = 0) {\n        const body = new StakingBody(StakingOpCode.BailOut, StakingOption.Empty, holderAddr, holderAddr, '', // name\n        '', // desc\n        '', // pubkey\n        '', // ip\n        0, // port\n        '', // bucket id\n        '0', // amount\n        Token.MeterGov, 0, // autobid\n        timestamp, nonce);\n        return new ScriptData(ModuleID.Staking, body.encode()).encode();\n        // return body.encode();\n    }\n    ScriptEngine.getBailOutData = getBailOutData;\n    // ------------------------------------------\n    //                AUCTION\n    // ------------------------------------------\n    ScriptEngine.AuctionControlBlockProfile = {\n        name: 'auctionControlBlock',\n        kind: [\n            { name: 'startHeight', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'startEpoch', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'endHeight', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'endEpoch', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'rlsdMTRG', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'rsvdMTRG', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'rsvdPrice', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'createTime', kind: new rlp_1.RLP.NumericKind() },\n        ],\n    };\n    class AuctionControlBlock {\n        constructor(startHeight, startEpoch, endHeight, endEpoch, rlsdMTRG, rsvdMTRG, rsvdPrice, createTime) {\n            this.startHeight = startHeight;\n            this.startEpoch = startEpoch;\n            this.endHeight = endHeight;\n            this.endEpoch = endEpoch;\n            this.rlsdMTRG = rlsdMTRG.toString();\n            this.rsvdMTRG = rsvdMTRG.toString();\n            this.rsvdPrice = rsvdPrice.toString();\n            this.createTime = createTime;\n        }\n        ID() {\n            const bytes = new rlp_1.RLP(ScriptEngine.AuctionControlBlockProfile).encode(this);\n            const idBuf = blake.blake2bHex(bytes, null, 32);\n            return '0x' + idBuf.toString('hex');\n        }\n    }\n    ScriptEngine.AuctionControlBlock = AuctionControlBlock;\n    ScriptEngine.AuctionTxProfile = {\n        name: 'acutionTx',\n        kind: [\n            { name: 'address', kind: new rlp_1.RLP.BufferKind() },\n            { name: 'amount', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'type', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'timestamp', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'nonce', kind: new rlp_1.RLP.NumericKind() },\n        ],\n    };\n    class AuctionTx {\n        constructor(address, amount, type, timestamp, nonce) {\n            this.address = Buffer.from(address.replace('0x', ''), 'hex');\n            this.amount = amount.toString();\n            this.type = type;\n            this.timestamp = timestamp;\n            this.nonce = nonce.toString();\n        }\n        ID() {\n            const bytes = new rlp_1.RLP(ScriptEngine.AuctionTxProfile).encode(this);\n            const idBuf = blake.blake2bHex(bytes, null, 32);\n            return '0x' + idBuf.toString('hex');\n        }\n    }\n    ScriptEngine.AuctionTx = AuctionTx;\n    ScriptEngine.AuctionBodyProfile = {\n        name: 'auctionBody',\n        kind: [\n            { name: 'opCode', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'version', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'option', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'startHeight', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'startEpoch', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'endHeight', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'endEpoch', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'sequence', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'auctionID', kind: new rlp_1.RLP.BufferKind() },\n            { name: 'bidder', kind: new rlp_1.RLP.BufferKind() },\n            { name: 'amount', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'reserveAmount', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'token', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'timestamp', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'nonce', kind: new rlp_1.RLP.NumericKind() },\n        ],\n    };\n    class AuctionBody {\n        constructor(opCode, option, auctionID, bidder, amount, timestamp = 0, nonce = 0) {\n            let bidderStr = bidder;\n            let auctionIDStr = auctionID;\n            if (bidderStr === '' || bidderStr === '0x') {\n                bidderStr = ScriptEngine.EMPTY_ADDRESS;\n            }\n            if (auctionIDStr === '' || auctionIDStr === '0x') {\n                auctionIDStr = ScriptEngine.EMPTY_BYTE32;\n            }\n            if (bidderStr.startsWith('0x')) {\n                bidderStr = bidderStr.replace('0x', '');\n            }\n            if (auctionIDStr.startsWith('0x')) {\n                auctionIDStr = auctionIDStr.replace('0x', '');\n            }\n            this.opCode = opCode;\n            this.version = ScriptEngine.AUCTION_VERSION;\n            this.option = option;\n            this.startHeight = 0;\n            this.startEpoch = 0;\n            this.endHeight = 0;\n            this.endEpoch = 0;\n            this.sequence = 0;\n            this.auctionID = Buffer.from(auctionIDStr, 'hex');\n            this.bidder = Buffer.from(bidderStr, 'hex');\n            this.amount = amount.toString();\n            this.reserveAmount = '0';\n            this.token = Token.Meter;\n            if (timestamp != 0) {\n                this.timestamp = timestamp;\n            }\n            else {\n                this.timestamp = Math.ceil(new Date().getTime() / 1000);\n            }\n            if (nonce != 0) {\n                this.nonce = nonce;\n            }\n            else {\n                this.nonce = getRandomInt64();\n            }\n        }\n        encode() {\n            return new rlp_1.RLP(ScriptEngine.AuctionBodyProfile).encode(this);\n        }\n    }\n    ScriptEngine.AuctionBody = AuctionBody;\n    function jsonFromAuctionBody(ab) {\n        return Object.assign(Object.assign({}, ab), { auctionID: '0x' + ab.auctionID.toString('hex'), bidder: '0x' + ab.bidder.toString('hex'), amount: new bignumber_js_1.default(ab.amount).toFixed(), reserveAmount: new bignumber_js_1.default(ab.reserveAmount).toFixed() });\n    }\n    ScriptEngine.jsonFromAuctionBody = jsonFromAuctionBody;\n    function getBidData(bidder, amount, timestamp = 0, nonce = 0) {\n        const body = new AuctionBody(AuctionOpCode.Bid, AuctionOption.Userbid, ScriptEngine.EMPTY_BYTE32, bidder, amount, timestamp, nonce);\n        return new ScriptData(ModuleID.Auction, body.encode()).encode();\n    }\n    ScriptEngine.getBidData = getBidData;\n    // ------------------------------------------\n    //                ACCOUNT LOCK\n    // ------------------------------------------\n    ScriptEngine.AccountLockBodyProfile = {\n        name: 'accountLockBodyProfile',\n        kind: [\n            { name: 'opCode', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'version', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'option', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'lockEpoch', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'releaseEpoch', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'fromAddr', kind: new rlp_1.RLP.BufferKind() },\n            { name: 'toAddr', kind: new rlp_1.RLP.BufferKind() },\n            { name: 'meterAmount', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'meterGovAmount', kind: new rlp_1.RLP.NumericKind() },\n            { name: 'memo', kind: new rlp_1.RLP.BufferKind() },\n        ],\n    };\n    class AccountLockBody {\n        constructor(op, lockEpoch, releaseEpoch, fromAddr, toAddr, meterAmount, meterGovAmount, memo) {\n            this.opCode = op;\n            this.version = ScriptEngine.STAKING_VERSION;\n            this.option = 0;\n            let fromAddrStr = fromAddr;\n            let toAddrStr = toAddr;\n            if (fromAddrStr === '' || fromAddrStr === '0x') {\n                fromAddrStr = ScriptEngine.EMPTY_ADDRESS;\n            }\n            if (toAddrStr === '' || toAddrStr === '0x') {\n                toAddrStr = ScriptEngine.EMPTY_ADDRESS;\n            }\n            if (fromAddrStr.startsWith('0x')) {\n                fromAddrStr = fromAddrStr.replace('0x', '');\n            }\n            if (toAddrStr.startsWith('0x')) {\n                toAddrStr = toAddrStr.replace('0x', '');\n            }\n            this.fromAddr = Buffer.from(fromAddrStr, 'hex');\n            this.toAddr = Buffer.from(toAddrStr, 'hex');\n            this.lockEpoch = lockEpoch;\n            this.releaseEpoch = releaseEpoch;\n            this.meterAmount = meterAmount.toString();\n            this.meterGovAmount = meterGovAmount.toString();\n            this.memo = Buffer.from(memo, 'utf-8');\n        }\n        encode() {\n            return new rlp_1.RLP(ScriptEngine.AccountLockBodyProfile).encode(this);\n        }\n    }\n    ScriptEngine.AccountLockBody = AccountLockBody;\n    function jsonFromAccountLockBody(alb) {\n        return Object.assign(Object.assign({}, alb), { fromAddr: '0x' + alb.fromAddr.toString('hex'), toAddr: '0x' + alb.toAddr.toString('hex'), meterAmount: new bignumber_js_1.default(alb.meterAmount).toFixed(), meterGovAmount: new bignumber_js_1.default(alb.meterGovAmount).toFixed(), memo: alb.memo.toString() });\n    }\n    ScriptEngine.jsonFromAccountLockBody = jsonFromAccountLockBody;\n    function getLockedTransferData(lockEpoch, releaseEpoch, fromAddr, toAddr, meterAmount, meterGovAmount, memo) {\n        const body = new AccountLockBody(AccountLockOpCode.Transfer, lockEpoch, releaseEpoch, fromAddr, toAddr, meterAmount, meterGovAmount, memo);\n        return new ScriptData(ModuleID.AccountLock, body.encode()).encode();\n    }\n    ScriptEngine.getLockedTransferData = getLockedTransferData;\n    function getBucketID(owner, nonce, timestamp) {\n        const bytes = new rlp_1.RLP(ScriptEngine.BucketIDProfile).encode({\n            owner,\n            nonce,\n            timestamp,\n        });\n        const idBuf = blake.blake2bHex(bytes, null, 32);\n        return '0x' + idBuf.toString('hex');\n    }\n    ScriptEngine.getBucketID = getBucketID;\n})(ScriptEngine = exports.ScriptEngine || (exports.ScriptEngine = {}));\n//# sourceMappingURL=data:application/json;base64,"]},"metadata":{},"sourceType":"script"}