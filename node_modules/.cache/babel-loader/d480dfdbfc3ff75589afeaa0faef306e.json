{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/BloxEscape/Screen.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Bird from './components/Bird';\nimport Obstacles from './components/Obstacles';\nimport './App.css'; // Hook\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useWindowSize() {\n  _s();\n\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    } // Add event listener\n\n\n    window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n_s(useWindowSize, \"WMqaMVAPr0u8CJVTsAIdEuYrbbM=\");\n\nconst Screen = props => {\n  _s2();\n\n  const {\n    width,\n    height\n  } = useWindowSize();\n  console.log(useWindowSize().width, \"width\");\n  console.log(useWindowSize().height, \"width\");\n  console.log(height, \"height\");\n  const screenWidth = useWindowSize().width;\n  const screenHeight = useWindowSize().height;\n  const birdLeft = screenWidth / 2;\n  const [birdBottom, setBirdBottom] = useState(500);\n  console.log(birdBottom, \"birdBottom\");\n  const [obstaclesLeft, setObstaclesLeft] = useState(useWindowSize().width + 1);\n  console.log(obstaclesLeft, \"first item\");\n  const [obstaclesLeftTwo, setObstaclesLeftTwo] = useState(useWindowSize().width + useWindowSize().width / 2 + 30);\n  console.log(obstaclesLeftTwo, \"second item\");\n  const [obstaclesNegHeight, setObstaclesNegHeight] = useState(0);\n  const [obstaclesNegHeightTwo, setObstaclesNegHeightTwo] = useState(0);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const gravity = 3;\n  let obstacleWidth = 60;\n  let obstacleHeight = 300;\n  let gap = 200;\n  let gameTimerId;\n  let obstaclesTimerId;\n  let obstaclesTimerIdTwo; //start bird falling\n\n  useEffect(() => {\n    if (birdBottom > 0) {\n      gameTimerId = setInterval(() => {\n        setBirdBottom(birdBottom => birdBottom - gravity);\n      }, 30);\n      return () => {\n        clearInterval(gameTimerId);\n      };\n    } //if i dont have birdBottom as a dependecy, it wont stop\n\n  }, [birdBottom]);\n  console.log(birdBottom);\n\n  const jump = () => {\n    if (!isGameOver && birdBottom < screenHeight) {\n      setBirdBottom(birdBottom => birdBottom + 50);\n      console.log('jumped');\n    }\n  }; //start first obstacle\n\n\n  useEffect(() => {\n    if (obstaclesLeft > -60) {\n      obstaclesTimerId = setInterval(() => {\n        setObstaclesLeft(obstaclesLeft => obstaclesLeft - 5);\n      }, 20);\n      return () => {\n        clearInterval(obstaclesTimerId);\n      };\n    } else {\n      setScore(score => score + 1);\n      setObstaclesLeft(screenWidth);\n      setObstaclesNegHeight(-Math.random() * 100);\n    }\n  }, [obstaclesLeft]); //start second obstacle\n\n  useEffect(() => {\n    if (obstaclesLeftTwo > -60) {\n      obstaclesTimerIdTwo = setInterval(() => {\n        setObstaclesLeftTwo(obstaclesLeftTwo => obstaclesLeftTwo - 5);\n      }, 30);\n      return () => {\n        clearInterval(obstaclesTimerIdTwo);\n      };\n    } else {\n      setScore(score => score + 1);\n      setObstaclesLeftTwo(screenWidth);\n      setObstaclesNegHeightTwo(-Math.random() * 100);\n    }\n  }, [obstaclesLeftTwo]); //check for collisions\n\n  useEffect(() => {\n    console.log(obstaclesLeft);\n    console.log(screenWidth / 2);\n    console.log(obstaclesLeft > screenWidth / 2);\n\n    if ((birdBottom < obstaclesNegHeight + obstacleHeight + 30 || birdBottom > obstaclesNegHeight + obstacleHeight + gap - 30) && obstaclesLeft > screenWidth / 2 - 30 && obstaclesLeft < screenWidth / 2 + 30 || (birdBottom < obstaclesNegHeightTwo + obstacleHeight + 30 || birdBottom > obstaclesNegHeightTwo + obstacleHeight + gap - 30) && obstaclesLeftTwo > screenWidth / 2 - 30 && obstaclesLeftTwo < screenWidth / 2 + 30) {\n      console.log('game over');\n      gameOver();\n    }\n  });\n\n  const gameOver = () => {\n    clearInterval(gameTimerId);\n    clearInterval(obstaclesTimerId);\n    clearInterval(obstaclesTimerIdTwo);\n    setIsGameOver(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '30px'\n        },\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(Bird, {\n        birdBottom: birdBottom,\n        birdLeft: birdLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Obstacles, {\n        color: 'yellow',\n        obstacleWidth: obstacleWidth,\n        obstacleHeight: obstacleHeight,\n        randomBottom: obstaclesNegHeight,\n        gap: gap,\n        obstaclesLeft: obstaclesLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Obstacles, {\n        color: 'green',\n        obstacleWidth: obstacleWidth,\n        obstacleHeight: obstacleHeight,\n        randomBottom: obstaclesNegHeightTwo,\n        gap: gap,\n        obstaclesLeft: obstaclesLeftTwo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Screen, \"3itGgJZSLl8xpYGjrbg1BR+d284=\", false, function () {\n  return [useWindowSize, useWindowSize, useWindowSize, useWindowSize, useWindowSize, useWindowSize, useWindowSize, useWindowSize];\n});\n\n_c = Screen;\nexport default Screen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/BloxEscape/Screen.js"],"names":["React","useEffect","useState","Bird","Obstacles","useWindowSize","windowSize","setWindowSize","width","undefined","height","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Screen","props","console","log","screenWidth","screenHeight","birdLeft","birdBottom","setBirdBottom","obstaclesLeft","setObstaclesLeft","obstaclesLeftTwo","setObstaclesLeftTwo","obstaclesNegHeight","setObstaclesNegHeight","obstaclesNegHeightTwo","setObstaclesNegHeightTwo","isGameOver","setIsGameOver","score","setScore","gravity","obstacleWidth","obstacleHeight","gap","gameTimerId","obstaclesTimerId","obstaclesTimerIdTwo","setInterval","clearInterval","jump","Math","random","gameOver","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react';\nimport Bird from './components/Bird'\nimport Obstacles from './components/Obstacles'\nimport './App.css';\n\n// Hook\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n\n\n\n\nconst Screen = (props) =>{\n  const { width, height } = useWindowSize();\nconsole.log(useWindowSize().width,\"width\")\nconsole.log(useWindowSize().height,\"width\")\n\nconsole.log(height,\"height\")\n\n  const screenWidth = useWindowSize().width;\n  const screenHeight = useWindowSize().height;\n  const birdLeft = screenWidth / 2\n\n  const [birdBottom, setBirdBottom]= useState(500)\n\n\n  console.log(birdBottom,\"birdBottom\")\n  const [obstaclesLeft, setObstaclesLeft]= useState(useWindowSize().width+1)\n\n  console.log(obstaclesLeft,\"first item\")\n  const [obstaclesLeftTwo, setObstaclesLeftTwo]= useState(useWindowSize().width + useWindowSize().width/2 + 30)\n  console.log(obstaclesLeftTwo,\"second item\")\n\n\n  const [obstaclesNegHeight, setObstaclesNegHeight]= useState(0)\n  const [obstaclesNegHeightTwo, setObstaclesNegHeightTwo]= useState(0)\n\n  const [isGameOver, setIsGameOver]= useState(false)\n  const [score, setScore]= useState(0)\n\n  const gravity = 3\n  let obstacleWidth = 60\n  let obstacleHeight = 300\n  let gap = 200\n  let gameTimerId\n  let obstaclesTimerId\n  let obstaclesTimerIdTwo\n\n\n\n//start bird falling\n  useEffect(() => {\n\n    if (birdBottom > 0) {\n      gameTimerId = setInterval(() => {\n        setBirdBottom(birdBottom => birdBottom - gravity)\n      },30)\n\n      return () => {\n        clearInterval(gameTimerId)\n      }\n    }\n    //if i dont have birdBottom as a dependecy, it wont stop\n  }, [birdBottom])\n  console.log(birdBottom)\n\n  const jump = () => {\n    if (!isGameOver && (birdBottom < screenHeight)) {\n      setBirdBottom(birdBottom => birdBottom + 50)\n      console.log('jumped')\n    }\n  }\n\n  //start first obstacle\n  useEffect(() => {\n    if (obstaclesLeft > -60) {\n      obstaclesTimerId = setInterval(() => {\n        setObstaclesLeft(obstaclesLeft => obstaclesLeft - 5)\n      }, 20)\n      return () => {\n        clearInterval(obstaclesTimerId)\n      }\n    } else {\n      setScore(score => score +1)\n      setObstaclesLeft(screenWidth)\n      setObstaclesNegHeight( - Math.random() * 100)\n    }\n  }, [obstaclesLeft])\n\n  //start second obstacle\n  useEffect(() => {\n    if (obstaclesLeftTwo > -60) {\n      obstaclesTimerIdTwo = setInterval(() => {\n        setObstaclesLeftTwo(obstaclesLeftTwo => obstaclesLeftTwo - 5)\n      }, 30)\n        return () => {\n          clearInterval(obstaclesTimerIdTwo)\n        }\n      } else {\n          setScore(score => score +1)\n          setObstaclesLeftTwo(screenWidth)\n          setObstaclesNegHeightTwo( - Math.random() * 100)\n        }\n  }, [obstaclesLeftTwo])\n\n    //check for collisions\n    useEffect(() => {\n      console.log(obstaclesLeft)\n      console.log(screenWidth/2)\n      console.log(obstaclesLeft > screenWidth/2)\n      if (\n        ((birdBottom < (obstaclesNegHeight + obstacleHeight + 30) ||\n        birdBottom > (obstaclesNegHeight + obstacleHeight + gap -30)) &&\n        (obstaclesLeft > screenWidth/2 -30 && obstaclesLeft < screenWidth/2 + 30 )\n        )\n        ||\n        ((birdBottom < (obstaclesNegHeightTwo + obstacleHeight + 30) ||\n        birdBottom > (obstaclesNegHeightTwo + obstacleHeight + gap -30)) &&\n        (obstaclesLeftTwo > screenWidth/2 -30 && obstaclesLeftTwo < screenWidth/2 + 30 )\n        )\n        )\n        {\n        console.log('game over')\n        gameOver()\n      }\n    })\n\n    const gameOver = () => {\n      clearInterval(gameTimerId)\n      clearInterval(obstaclesTimerId)\n      clearInterval(obstaclesTimerIdTwo)\n      setIsGameOver(true)\n    }\n\n\n  return (\n    <div >\n      <div >\n        {isGameOver && <div style={{fontSize: '30px'}}>{score}</div>}\n        <Bird\n          birdBottom = {birdBottom}\n          birdLeft = {birdLeft}\n        />\n        \n        <Obstacles\n          color={'yellow'}\n          obstacleWidth = {obstacleWidth}\n          obstacleHeight = {obstacleHeight}\n          randomBottom = {obstaclesNegHeight}\n          gap = {gap}\n          obstaclesLeft = {obstaclesLeft}\n        />\n\n        <Obstacles\n          color={'green'}\n          obstacleWidth = {obstacleWidth}\n          obstacleHeight = {obstacleHeight}\n          randomBottom = {obstaclesNegHeightTwo}\n          gap = {gap}\n          obstaclesLeft = {obstaclesLeftTwo}\n        />\n\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default Screen;\n"]},"metadata":{},"sourceType":"module"}