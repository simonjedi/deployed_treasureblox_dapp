{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pipeToFuture = exports.toFuture = exports.Future = void 0; // A Future is like an exernally fulfillable (resolvable) promise\n\nvar Future = function () {\n  function Future() {\n    var _this = this;\n\n    this._finished = false;\n    this._error = null;\n    this.promise = new Promise(function (resolve, reject) {\n      _this._resolve = resolve;\n      _this._reject = reject;\n    });\n  }\n\n  Object.defineProperty(Future.prototype, \"finished\", {\n    get: function () {\n      return this._finished;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Future.prototype, \"error\", {\n    get: function () {\n      return this._error;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Future.prototype.resolve = function (value) {\n    this._finished = true;\n    this._error = null;\n\n    this._resolve(value);\n  };\n\n  Future.prototype.reject = function (error) {\n    this._finished = true;\n    this._error = error;\n\n    this._reject(error);\n  };\n\n  Future.prototype.wait = function () {\n    return this.promise;\n  };\n\n  Future.prototype.asPromise = function () {\n    return this.promise;\n  };\n\n  return Future;\n}();\n\nexports.Future = Future;\n\nfunction toFuture(p) {\n  var future = new Future();\n  return pipeToFuture(p, future);\n}\n\nexports.toFuture = toFuture;\n\nfunction pipeToFuture(p, future) {\n  p.then(future.resolve.bind(future)).catch(future.reject.bind(future));\n  return future;\n}\n\nexports.pipeToFuture = pipeToFuture;","map":{"version":3,"sources":["../src/future.ts"],"names":[],"mappings":";;;;;mEAAA;;AACA,IAAA,MAAA,GAAA,YAAA;AAOE,WAAA,MAAA,GAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AALQ,SAAA,SAAA,GAAY,KAAZ;AACA,SAAA,MAAA,GAAc,IAAd;AAKN,SAAK,OAAL,GAAe,IAAI,OAAJ,CAAe,UAAC,OAAD,EAAU,MAAV,EAAgB;AAC5C,MAAA,KAAI,CAAC,QAAL,GAAgB,OAAhB;AACA,MAAA,KAAI,CAAC,OAAL,GAAe,MAAf;AACD,KAHc,CAAf;AAID;;AAED,EAAA,MAAA,CAAA,cAAA,CAAI,MAAA,CAAA,SAAJ,EAAI,UAAJ,EAAY;SAAZ,YAAA;AACE,aAAO,KAAK,SAAZ;AACD,KAFW;qBAAA;;AAAA,GAAZ;AAIA,EAAA,MAAA,CAAA,cAAA,CAAI,MAAA,CAAA,SAAJ,EAAI,OAAJ,EAAS;SAAT,YAAA;AACE,aAAO,KAAK,MAAZ;AACD,KAFQ;qBAAA;;AAAA,GAAT;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,KAAR,EAAgB;AACd,SAAK,SAAL,GAAiB,IAAjB;AACA,SAAK,MAAL,GAAc,IAAd;;AACA,SAAK,QAAL,CAAc,KAAd;AACD,GAJD;;AAMA,EAAA,MAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,KAAP,EAAiB;AACf,SAAK,SAAL,GAAiB,IAAjB;AACA,SAAK,MAAL,GAAc,KAAd;;AACA,SAAK,OAAL,CAAa,KAAb;AACD,GAJD;;AAMA,EAAA,MAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AACE,WAAO,KAAK,OAAZ;AACD,GAFD;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AACE,WAAO,KAAK,OAAZ;AACD,GAFD;;AAGF,SAAA,MAAA;AAAC,CAzCD,EAAA;;AAAa,OAAA,CAAA,MAAA,GAAA,MAAA;;AA2Cb,SAAgB,QAAhB,CAA4B,CAA5B,EAAyC;AACvC,MAAM,MAAM,GAAG,IAAI,MAAJ,EAAf;AACA,SAAO,YAAY,CAAC,CAAD,EAAI,MAAJ,CAAnB;AACD;;AAHD,OAAA,CAAA,QAAA,GAAA,QAAA;;AAKA,SAAgB,YAAhB,CAAgC,CAAhC,EAA+C,MAA/C,EAAgE;AAC9D,EAAA,CAAC,CAAC,IAAF,CAAO,MAAM,CAAC,OAAP,CAAe,IAAf,CAAoB,MAApB,CAAP,EAAoC,KAApC,CAA0C,MAAM,CAAC,MAAP,CAAc,IAAd,CAAmB,MAAnB,CAA1C;AACA,SAAO,MAAP;AACD;;AAHD,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pipeToFuture = exports.toFuture = exports.Future = void 0;\n// A Future is like an exernally fulfillable (resolvable) promise\nvar Future = /** @class */ (function () {\n    function Future() {\n        var _this = this;\n        this._finished = false;\n        this._error = null;\n        this.promise = new Promise(function (resolve, reject) {\n            _this._resolve = resolve;\n            _this._reject = reject;\n        });\n    }\n    Object.defineProperty(Future.prototype, \"finished\", {\n        get: function () {\n            return this._finished;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Future.prototype, \"error\", {\n        get: function () {\n            return this._error;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Future.prototype.resolve = function (value) {\n        this._finished = true;\n        this._error = null;\n        this._resolve(value);\n    };\n    Future.prototype.reject = function (error) {\n        this._finished = true;\n        this._error = error;\n        this._reject(error);\n    };\n    Future.prototype.wait = function () {\n        return this.promise;\n    };\n    Future.prototype.asPromise = function () {\n        return this.promise;\n    };\n    return Future;\n}());\nexports.Future = Future;\nfunction toFuture(p) {\n    var future = new Future();\n    return pipeToFuture(p, future);\n}\nexports.toFuture = toFuture;\nfunction pipeToFuture(p, future) {\n    p.then(future.resolve.bind(future)).catch(future.reject.bind(future));\n    return future;\n}\nexports.pipeToFuture = pipeToFuture;\n//# sourceMappingURL=future.js.map"]},"metadata":{},"sourceType":"script"}