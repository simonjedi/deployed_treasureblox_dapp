{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getContactNameHash = exports.isContact = exports.getContactPhoneNumber = void 0;\n\nvar Web3Utils = __importStar(require(\"web3-utils\")); // Exports moved to @celo/base, forwarding them\n// here for backwards compatibility\n\n\nvar contacts_1 = require(\"@celo/base/lib/contacts\");\n\nObject.defineProperty(exports, \"getContactPhoneNumber\", {\n  enumerable: true,\n  get: function () {\n    return contacts_1.getContactPhoneNumber;\n  }\n});\nObject.defineProperty(exports, \"isContact\", {\n  enumerable: true,\n  get: function () {\n    return contacts_1.isContact;\n  }\n});\n\nvar getContactNameHash = function (contact) {\n  if (!contact) {\n    throw new Error('Invalid contact');\n  }\n\n  return Web3Utils.keccak256(contact.displayName || '');\n};\n\nexports.getContactNameHash = getContactNameHash;","map":{"version":3,"sources":["../src/contacts.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,SAAA,GAAA,YAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,C,CAEA;AACA;;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAEE,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,uBAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,UAAA,CAAA,qBAAA;AAAqB;AAArB,CAAA;AACA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,WAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,UAAA,CAAA,SAAA;AAAS;AAAT,CAAA;;AAIK,IAAM,kBAAkB,GAAG,UAAC,OAAD,EAAwB;AACxD,MAAI,CAAC,OAAL,EAAc;AACZ,UAAM,IAAI,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,SAAO,SAAS,CAAC,SAAV,CAAoB,OAAO,CAAC,WAAR,IAAuB,EAA3C,CAAP;AACD,CANM;;AAAM,OAAA,CAAA,kBAAA,GAAkB,kBAAlB","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getContactNameHash = exports.isContact = exports.getContactPhoneNumber = void 0;\nvar Web3Utils = __importStar(require(\"web3-utils\"));\n// Exports moved to @celo/base, forwarding them\n// here for backwards compatibility\nvar contacts_1 = require(\"@celo/base/lib/contacts\");\nObject.defineProperty(exports, \"getContactPhoneNumber\", { enumerable: true, get: function () { return contacts_1.getContactPhoneNumber; } });\nObject.defineProperty(exports, \"isContact\", { enumerable: true, get: function () { return contacts_1.isContact; } });\nvar getContactNameHash = function (contact) {\n    if (!contact) {\n        throw new Error('Invalid contact');\n    }\n    return Web3Utils.keccak256(contact.displayName || '');\n};\nexports.getContactNameHash = getContactNameHash;\n//# sourceMappingURL=contacts.js.map"]},"metadata":{},"sourceType":"script"}