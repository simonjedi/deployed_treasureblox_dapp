{"ast":null,"code":"import { capitalize, enumify, fromMiliseconds } from \"./misc\";\nexport const ERROR_TYPE = enumify({\n  GENERIC: \"GENERIC\",\n  MISSING_OR_INVALID: \"MISSING_OR_INVALID\",\n  MISSING_RESPONSE: \"MISSING_RESPONSE\",\n  MISSING_DECRYPT_PARAMS: \"MISSING_DECRYPT_PARAMS\",\n  INVALID_UPDATE_REQUEST: \"INVALID_UPDATE_REQUEST\",\n  INVALID_UPGRADE_REQUEST: \"INVALID_UPGRADE_REQUEST\",\n  INVALID_STORAGE_KEY_NAME: \"INVALID_STORAGE_KEY_NAME\",\n  RECORD_ALREADY_EXISTS: \"RECORD_ALREADY_EXISTS\",\n  RESTORE_WILL_OVERRIDE: \"RESTORE_WILL_OVERRIDE\",\n  NO_MATCHING_ID: \"NO_MATCHING_ID\",\n  NO_MATCHING_TOPIC: \"NO_MATCHING_TOPIC\",\n  NO_MATCHING_RESPONSE: \"NO_MATCHING_RESPONSE\",\n  NO_MATCHING_KEY: \"NO_MATCHING_KEY\",\n  UNKNOWN_JSONRPC_METHOD: \"UNKNOWN_JSONRPC_METHOD\",\n  MISMATCHED_TOPIC: \"MISMATCHED_TOPIC\",\n  MISMATCHED_ACCOUNTS: \"MISMATCHED_ACCOUNTS\",\n  SETTLED: \"SETTLED\",\n  NOT_APPROVED: \"NOT_APPROVED\",\n  PROPOSAL_RESPONDED: \"PROPOSAL_RESPONDED\",\n  RESPONSE_ACKNOWLEDGED: \"RESPONSE_ACKNOWLEDGED\",\n  EXPIRED: \"EXPIRED\",\n  DELETED: \"DELETED\",\n  RESUBSCRIBED: \"RESUBSCRIBED\",\n  SETTLE_TIMEOUT: \"SETTLE_TIMEOUT\",\n  JSONRPC_REQUEST_TIMEOUT: \"JSONRPC_REQUEST_TIMEOUT\",\n  UNAUTHORIZED_TARGET_CHAIN: \"UNAUTHORIZED_TARGET_CHAIN\",\n  UNAUTHORIZED_JSON_RPC_METHOD: \"UNAUTHORIZED_JSON_RPC_METHOD\",\n  UNAUTHORIZED_NOTIFICATION_TYPE: \"UNAUTHORIZED_NOTIFICATION_TYPE\",\n  UNAUTHORIZED_UPDATE_REQUEST: \"UNAUTHORIZED_UPDATE_REQUEST\",\n  UNAUTHORIZED_UPGRADE_REQUEST: \"UNAUTHORIZED_UPGRADE_REQUEST\",\n  UNAUTHORIZED_MATCHING_CONTROLLER: \"UNAUTHORIZED_MATCHING_CONTROLLER\",\n  JSONRPC_REQUEST_METHOD_REJECTED: \"JSONRPC_REQUEST_METHOD_REJECTED\",\n  JSONRPC_REQUEST_METHOD_UNAUTHORIZED: \"JSONRPC_REQUEST_METHOD_UNAUTHORIZED\",\n  JSONRPC_REQUEST_METHOD_UNSUPPORTED: \"JSONRPC_REQUEST_METHOD_UNSUPPORTED\",\n  DISCONNECTED_ALL_CHAINS: \"DISCONNECTED_ALL_CHAINS\",\n  DISCONNECTED_TARGET_CHAIN: \"DISCONNECTED_TARGET_CHAIN\",\n  DISAPPROVED_CHAINS: \"DISAPPROVED_CHAINS\",\n  DISAPPROVED_JSONRPC: \"DISAPPROVED_JSONRPC\",\n  DISAPPROVED_NOTIFICATION: \"DISAPPROVED_NOTIFICATION\",\n  UNSUPPORTED_CHAINS: \"UNSUPPORTED_CHAINS\",\n  UNSUPPORTED_JSONRPC: \"UNSUPPORTED_JSONRPC\",\n  UNSUPPORTED_NOTIFICATION: \"UNSUPPORTED_NOTIFICATION\",\n  UNSUPPORTED_SIGNAL: \"UNSUPPORTED_SIGNAL\",\n  USER_DISCONNECTED: \"USER_DISCONNECTED\",\n  UNKNOWN: \"UNKNOWN\"\n});\nconst defaultParams = {\n  topic: \"undefined\",\n  message: \"Something went wrong\",\n  name: \"parameter\",\n  context: \"session\",\n  blockchain: \"Ethereum\"\n};\nexport const ERROR = {\n  [ERROR_TYPE.GENERIC]: {\n    type: ERROR_TYPE.GENERIC,\n    code: 0,\n    stringify: params => (params === null || params === void 0 ? void 0 : params.message) || defaultParams.message,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.GENERIC].code,\n      message: ERROR[ERROR_TYPE.GENERIC].stringify(params)\n    })\n  },\n  [ERROR_TYPE.MISSING_OR_INVALID]: {\n    type: ERROR_TYPE.MISSING_OR_INVALID,\n    code: 1000,\n    stringify: params => `Missing or invalid ${(params === null || params === void 0 ? void 0 : params.name) || defaultParams.name}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.MISSING_OR_INVALID].code,\n      message: ERROR[ERROR_TYPE.MISSING_OR_INVALID].stringify(params)\n    })\n  },\n  [ERROR_TYPE.MISSING_RESPONSE]: {\n    type: ERROR_TYPE.MISSING_RESPONSE,\n    code: 1001,\n    stringify: params => `Response is required for approved ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} proposals`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.MISSING_RESPONSE].code,\n      message: ERROR[ERROR_TYPE.MISSING_RESPONSE].stringify(params)\n    })\n  },\n  [ERROR_TYPE.MISSING_DECRYPT_PARAMS]: {\n    type: ERROR_TYPE.MISSING_DECRYPT_PARAMS,\n    code: 1002,\n    stringify: params => `Decrypt params required for ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.MISSING_DECRYPT_PARAMS].code,\n      message: ERROR[ERROR_TYPE.MISSING_DECRYPT_PARAMS].stringify(params)\n    })\n  },\n  [ERROR_TYPE.INVALID_UPDATE_REQUEST]: {\n    type: ERROR_TYPE.INVALID_UPDATE_REQUEST,\n    code: 1003,\n    stringify: params => `Invalid ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} update request`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.INVALID_UPDATE_REQUEST].code,\n      message: ERROR[ERROR_TYPE.INVALID_UPDATE_REQUEST].stringify(params)\n    })\n  },\n  [ERROR_TYPE.INVALID_UPGRADE_REQUEST]: {\n    type: ERROR_TYPE.INVALID_UPGRADE_REQUEST,\n    code: 1004,\n    stringify: params => `Invalid ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} upgrade request`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.INVALID_UPGRADE_REQUEST].code,\n      message: ERROR[ERROR_TYPE.INVALID_UPGRADE_REQUEST].stringify(params)\n    })\n  },\n  [ERROR_TYPE.INVALID_STORAGE_KEY_NAME]: {\n    type: ERROR_TYPE.INVALID_STORAGE_KEY_NAME,\n    code: 1005,\n    stringify: params => `Invalid storage key name: ${(params === null || params === void 0 ? void 0 : params.name) || defaultParams.name}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.INVALID_STORAGE_KEY_NAME].code,\n      message: ERROR[ERROR_TYPE.INVALID_STORAGE_KEY_NAME].stringify(params)\n    })\n  },\n  [ERROR_TYPE.RECORD_ALREADY_EXISTS]: {\n    type: ERROR_TYPE.RECORD_ALREADY_EXISTS,\n    code: 1100,\n    stringify: params => `Record already exists for ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} matching id: ${params === null || params === void 0 ? void 0 : params.id}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.RECORD_ALREADY_EXISTS].code,\n      message: ERROR[ERROR_TYPE.RECORD_ALREADY_EXISTS].stringify(params)\n    })\n  },\n  [ERROR_TYPE.RESTORE_WILL_OVERRIDE]: {\n    type: ERROR_TYPE.RESTORE_WILL_OVERRIDE,\n    code: 1200,\n    stringify: params => `Restore will override already set ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.RESTORE_WILL_OVERRIDE].code,\n      message: ERROR[ERROR_TYPE.RESTORE_WILL_OVERRIDE].stringify(params)\n    })\n  },\n  [ERROR_TYPE.NO_MATCHING_ID]: {\n    type: ERROR_TYPE.NO_MATCHING_ID,\n    code: 1300,\n    stringify: params => `No matching ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} with id: ${params === null || params === void 0 ? void 0 : params.id}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.NO_MATCHING_ID].code,\n      message: ERROR[ERROR_TYPE.NO_MATCHING_ID].stringify(params)\n    })\n  },\n  [ERROR_TYPE.NO_MATCHING_TOPIC]: {\n    type: ERROR_TYPE.NO_MATCHING_TOPIC,\n    code: 1301,\n    stringify: params => `No matching ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} with topic: ${params === null || params === void 0 ? void 0 : params.topic}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.NO_MATCHING_TOPIC].code,\n      message: ERROR[ERROR_TYPE.NO_MATCHING_TOPIC].stringify(params)\n    })\n  },\n  [ERROR_TYPE.NO_MATCHING_RESPONSE]: {\n    type: ERROR_TYPE.NO_MATCHING_RESPONSE,\n    code: 1302,\n    stringify: params => `No response found in pending ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} proposal`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.NO_MATCHING_RESPONSE].code,\n      message: ERROR[ERROR_TYPE.NO_MATCHING_RESPONSE].stringify(params)\n    })\n  },\n  [ERROR_TYPE.NO_MATCHING_KEY]: {\n    type: ERROR_TYPE.NO_MATCHING_KEY,\n    code: 1303,\n    stringify: params => `No matching key with tag: ${params === null || params === void 0 ? void 0 : params.tag}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.NO_MATCHING_KEY].code,\n      message: ERROR[ERROR_TYPE.NO_MATCHING_KEY].stringify(params)\n    })\n  },\n  [ERROR_TYPE.UNKNOWN_JSONRPC_METHOD]: {\n    type: ERROR_TYPE.UNKNOWN_JSONRPC_METHOD,\n    code: 1400,\n    stringify: params => `Unknown JSON-RPC Method Requested: ${params === null || params === void 0 ? void 0 : params.method}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.UNKNOWN_JSONRPC_METHOD].code,\n      message: ERROR[ERROR_TYPE.UNKNOWN_JSONRPC_METHOD].stringify(params)\n    })\n  },\n  [ERROR_TYPE.MISMATCHED_TOPIC]: {\n    type: ERROR_TYPE.MISMATCHED_TOPIC,\n    code: 1500,\n    stringify: params => `Mismatched topic for ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} with id: ${params === null || params === void 0 ? void 0 : params.id}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.MISMATCHED_TOPIC].code,\n      message: ERROR[ERROR_TYPE.MISMATCHED_TOPIC].stringify(params)\n    })\n  },\n  [ERROR_TYPE.MISMATCHED_ACCOUNTS]: {\n    type: ERROR_TYPE.MISMATCHED_ACCOUNTS,\n    code: 1501,\n    stringify: params => `Invalid accounts with mismatched chains: ${params === null || params === void 0 ? void 0 : params.mismatched.toString()}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.MISMATCHED_ACCOUNTS].code,\n      message: ERROR[ERROR_TYPE.MISMATCHED_ACCOUNTS].stringify(params)\n    })\n  },\n  [ERROR_TYPE.SETTLED]: {\n    type: ERROR_TYPE.SETTLED,\n    code: 1600,\n    stringify: params => `${capitalize((params === null || params === void 0 ? void 0 : params.context) || defaultParams.context)} settled`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.SETTLED].code,\n      message: ERROR[ERROR_TYPE.SETTLED].stringify(params)\n    })\n  },\n  [ERROR_TYPE.NOT_APPROVED]: {\n    type: ERROR_TYPE.NOT_APPROVED,\n    code: 1601,\n    stringify: params => `${capitalize((params === null || params === void 0 ? void 0 : params.context) || defaultParams.context)} not approved`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.NOT_APPROVED].code,\n      message: ERROR[ERROR_TYPE.NOT_APPROVED].stringify(params)\n    })\n  },\n  [ERROR_TYPE.PROPOSAL_RESPONDED]: {\n    type: ERROR_TYPE.PROPOSAL_RESPONDED,\n    code: 1602,\n    stringify: params => `${capitalize((params === null || params === void 0 ? void 0 : params.context) || defaultParams.context)} proposal responded`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.PROPOSAL_RESPONDED].code,\n      message: ERROR[ERROR_TYPE.PROPOSAL_RESPONDED].stringify(params)\n    })\n  },\n  [ERROR_TYPE.RESPONSE_ACKNOWLEDGED]: {\n    type: ERROR_TYPE.RESPONSE_ACKNOWLEDGED,\n    code: 1603,\n    stringify: params => `${capitalize((params === null || params === void 0 ? void 0 : params.context) || defaultParams.context)} response acknowledge`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.RESPONSE_ACKNOWLEDGED].code,\n      message: ERROR[ERROR_TYPE.RESPONSE_ACKNOWLEDGED].stringify(params)\n    })\n  },\n  [ERROR_TYPE.EXPIRED]: {\n    type: ERROR_TYPE.EXPIRED,\n    code: 1604,\n    stringify: params => `${capitalize((params === null || params === void 0 ? void 0 : params.context) || defaultParams.context)} expired`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.EXPIRED].code,\n      message: ERROR[ERROR_TYPE.EXPIRED].stringify(params)\n    })\n  },\n  [ERROR_TYPE.DELETED]: {\n    type: ERROR_TYPE.DELETED,\n    code: 1605,\n    stringify: params => `${capitalize((params === null || params === void 0 ? void 0 : params.context) || defaultParams.context)} deleted`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.DELETED].code,\n      message: ERROR[ERROR_TYPE.DELETED].stringify(params)\n    })\n  },\n  [ERROR_TYPE.RESUBSCRIBED]: {\n    type: ERROR_TYPE.RESUBSCRIBED,\n    code: 1606,\n    stringify: params => `Subscription resubscribed with topic: ${params.topic || defaultParams.topic}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.RESUBSCRIBED].code,\n      message: ERROR[ERROR_TYPE.RESUBSCRIBED].stringify(params)\n    })\n  },\n  [ERROR_TYPE.SETTLE_TIMEOUT]: {\n    type: ERROR_TYPE.SETTLE_TIMEOUT,\n    code: 2000,\n    stringify: params => `${capitalize((params === null || params === void 0 ? void 0 : params.context) || defaultParams.context)} failed to settle after ${fromMiliseconds(params === null || params === void 0 ? void 0 : params.timeout)} seconds`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.SETTLE_TIMEOUT].code,\n      message: ERROR[ERROR_TYPE.SETTLE_TIMEOUT].stringify(params)\n    })\n  },\n  [ERROR_TYPE.JSONRPC_REQUEST_TIMEOUT]: {\n    type: ERROR_TYPE.JSONRPC_REQUEST_TIMEOUT,\n    code: 2001,\n    stringify: params => `JSON-RPC Request timeout after ${fromMiliseconds(params === null || params === void 0 ? void 0 : params.timeout)} seconds: ${params === null || params === void 0 ? void 0 : params.method}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.JSONRPC_REQUEST_TIMEOUT].code,\n      message: ERROR[ERROR_TYPE.JSONRPC_REQUEST_TIMEOUT].stringify(params)\n    })\n  },\n  [ERROR_TYPE.UNAUTHORIZED_TARGET_CHAIN]: {\n    type: ERROR_TYPE.UNAUTHORIZED_TARGET_CHAIN,\n    code: 3000,\n    stringify: params => `Unauthorized Target ChainId Requested: ${params === null || params === void 0 ? void 0 : params.chainId}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.UNAUTHORIZED_TARGET_CHAIN].code,\n      message: ERROR[ERROR_TYPE.UNAUTHORIZED_TARGET_CHAIN].stringify(params)\n    })\n  },\n  [ERROR_TYPE.UNAUTHORIZED_JSON_RPC_METHOD]: {\n    type: ERROR_TYPE.UNAUTHORIZED_JSON_RPC_METHOD,\n    code: 3001,\n    stringify: params => `Unauthorized JSON-RPC Method Requested: ${params === null || params === void 0 ? void 0 : params.method}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.UNAUTHORIZED_JSON_RPC_METHOD].code,\n      message: ERROR[ERROR_TYPE.UNAUTHORIZED_JSON_RPC_METHOD].stringify(params)\n    })\n  },\n  [ERROR_TYPE.UNAUTHORIZED_NOTIFICATION_TYPE]: {\n    type: ERROR_TYPE.UNAUTHORIZED_NOTIFICATION_TYPE,\n    code: 3002,\n    stringify: params => `Unauthorized Notification Type Requested: ${params === null || params === void 0 ? void 0 : params.type}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.UNAUTHORIZED_NOTIFICATION_TYPE].code,\n      message: ERROR[ERROR_TYPE.UNAUTHORIZED_NOTIFICATION_TYPE].stringify(params)\n    })\n  },\n  [ERROR_TYPE.UNAUTHORIZED_UPDATE_REQUEST]: {\n    type: ERROR_TYPE.UNAUTHORIZED_UPDATE_REQUEST,\n    code: 3003,\n    stringify: params => `Unauthorized ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} update request`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.UNAUTHORIZED_UPDATE_REQUEST].code,\n      message: ERROR[ERROR_TYPE.UNAUTHORIZED_UPDATE_REQUEST].stringify(params)\n    })\n  },\n  [ERROR_TYPE.UNAUTHORIZED_UPGRADE_REQUEST]: {\n    type: ERROR_TYPE.UNAUTHORIZED_UPGRADE_REQUEST,\n    code: 3004,\n    stringify: params => `Unauthorized ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} upgrade request`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.UNAUTHORIZED_UPGRADE_REQUEST].code,\n      message: ERROR[ERROR_TYPE.UNAUTHORIZED_UPGRADE_REQUEST].stringify(params)\n    })\n  },\n  [ERROR_TYPE.UNAUTHORIZED_MATCHING_CONTROLLER]: {\n    type: ERROR_TYPE.UNAUTHORIZED_MATCHING_CONTROLLER,\n    code: 3005,\n    stringify: params => `Unauthorized: peer is also ${(params === null || params === void 0 ? void 0 : params.controller) ? \"\" : \"not \"}controller`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.UNAUTHORIZED_MATCHING_CONTROLLER].code,\n      message: ERROR[ERROR_TYPE.UNAUTHORIZED_MATCHING_CONTROLLER].stringify(params)\n    })\n  },\n  [ERROR_TYPE.JSONRPC_REQUEST_METHOD_REJECTED]: {\n    type: ERROR_TYPE.JSONRPC_REQUEST_METHOD_REJECTED,\n    code: 4001,\n    stringify: params => \"User rejected the request.\",\n    format: params => ({\n      code: ERROR[ERROR_TYPE.JSONRPC_REQUEST_METHOD_REJECTED].code,\n      message: ERROR[ERROR_TYPE.JSONRPC_REQUEST_METHOD_REJECTED].stringify(params)\n    })\n  },\n  [ERROR_TYPE.JSONRPC_REQUEST_METHOD_UNAUTHORIZED]: {\n    type: ERROR_TYPE.JSONRPC_REQUEST_METHOD_UNAUTHORIZED,\n    code: 4100,\n    stringify: params => \"The requested account and/or method has not been authorized by the user.\",\n    format: params => ({\n      code: ERROR[ERROR_TYPE.JSONRPC_REQUEST_METHOD_UNAUTHORIZED].code,\n      message: ERROR[ERROR_TYPE.JSONRPC_REQUEST_METHOD_UNAUTHORIZED].stringify(params)\n    })\n  },\n  [ERROR_TYPE.JSONRPC_REQUEST_METHOD_UNSUPPORTED]: {\n    type: ERROR_TYPE.JSONRPC_REQUEST_METHOD_UNSUPPORTED,\n    code: 4200,\n    stringify: params => `The requested method is not supported by this ${(params === null || params === void 0 ? void 0 : params.blockhain) || defaultParams.blockchain} provider.`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.JSONRPC_REQUEST_METHOD_UNSUPPORTED].code,\n      message: ERROR[ERROR_TYPE.JSONRPC_REQUEST_METHOD_UNSUPPORTED].stringify(params)\n    })\n  },\n  [ERROR_TYPE.DISCONNECTED_ALL_CHAINS]: {\n    type: ERROR_TYPE.DISCONNECTED_ALL_CHAINS,\n    code: 4900,\n    stringify: params => \"The provider is disconnected from all chains.\",\n    format: params => ({\n      code: ERROR[ERROR_TYPE.DISCONNECTED_ALL_CHAINS].code,\n      message: ERROR[ERROR_TYPE.DISCONNECTED_ALL_CHAINS].stringify(params)\n    })\n  },\n  [ERROR_TYPE.DISCONNECTED_TARGET_CHAIN]: {\n    type: ERROR_TYPE.DISCONNECTED_TARGET_CHAIN,\n    code: 4901,\n    stringify: params => \"The provider is disconnected from the specified chain.\",\n    format: params => ({\n      code: ERROR[ERROR_TYPE.DISCONNECTED_TARGET_CHAIN].code,\n      message: ERROR[ERROR_TYPE.DISCONNECTED_TARGET_CHAIN].stringify(params)\n    })\n  },\n  [ERROR_TYPE.DISAPPROVED_CHAINS]: {\n    type: ERROR_TYPE.DISAPPROVED_CHAINS,\n    code: 5000,\n    stringify: params => `User disapproved requested chains`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.DISAPPROVED_CHAINS].code,\n      message: ERROR[ERROR_TYPE.DISAPPROVED_CHAINS].stringify(params)\n    })\n  },\n  [ERROR_TYPE.DISAPPROVED_JSONRPC]: {\n    type: ERROR_TYPE.DISAPPROVED_JSONRPC,\n    code: 5001,\n    stringify: params => `User disapproved requested json-rpc methods`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.DISAPPROVED_JSONRPC].code,\n      message: ERROR[ERROR_TYPE.DISAPPROVED_JSONRPC].stringify(params)\n    })\n  },\n  [ERROR_TYPE.DISAPPROVED_NOTIFICATION]: {\n    type: ERROR_TYPE.DISAPPROVED_NOTIFICATION,\n    code: 5002,\n    stringify: params => `User disapproved requested notification types`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.DISAPPROVED_NOTIFICATION].code,\n      message: ERROR[ERROR_TYPE.DISAPPROVED_NOTIFICATION].stringify(params)\n    })\n  },\n  [ERROR_TYPE.UNSUPPORTED_CHAINS]: {\n    type: ERROR_TYPE.UNSUPPORTED_CHAINS,\n    code: 5100,\n    stringify: params => `Requested chains are not supported: ${params === null || params === void 0 ? void 0 : params.chains.toString()}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.UNSUPPORTED_CHAINS].code,\n      message: ERROR[ERROR_TYPE.UNSUPPORTED_CHAINS].stringify(params)\n    })\n  },\n  [ERROR_TYPE.UNSUPPORTED_JSONRPC]: {\n    type: ERROR_TYPE.UNSUPPORTED_JSONRPC,\n    code: 5101,\n    stringify: params => `Requested json-rpc methods are not supported: ${params === null || params === void 0 ? void 0 : params.methods.toString()}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.UNSUPPORTED_JSONRPC].code,\n      message: ERROR[ERROR_TYPE.UNSUPPORTED_JSONRPC].stringify(params)\n    })\n  },\n  [ERROR_TYPE.UNSUPPORTED_NOTIFICATION]: {\n    type: ERROR_TYPE.UNSUPPORTED_NOTIFICATION,\n    code: 5102,\n    stringify: params => `Requested notification types are not supported: ${params === null || params === void 0 ? void 0 : params.types.toString()}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.UNSUPPORTED_NOTIFICATION].code,\n      message: ERROR[ERROR_TYPE.UNSUPPORTED_NOTIFICATION].stringify(params)\n    })\n  },\n  [ERROR_TYPE.UNSUPPORTED_SIGNAL]: {\n    type: ERROR_TYPE.UNSUPPORTED_SIGNAL,\n    code: 5103,\n    stringify: params => `Proposed ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} signal is unsupported`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.UNSUPPORTED_SIGNAL].code,\n      message: ERROR[ERROR_TYPE.UNSUPPORTED_SIGNAL].stringify(params)\n    })\n  },\n  [ERROR_TYPE.USER_DISCONNECTED]: {\n    type: ERROR_TYPE.USER_DISCONNECTED,\n    code: 5900,\n    stringify: params => `User disconnected ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.USER_DISCONNECTED].code,\n      message: ERROR[ERROR_TYPE.USER_DISCONNECTED].stringify(params)\n    })\n  },\n  [ERROR_TYPE.UNKNOWN]: {\n    type: ERROR_TYPE.UNKNOWN,\n    code: 9000,\n    stringify: params => `Unknown error${params ? `: ${params === null || params === void 0 ? void 0 : params.toString()}` : \"\"}`,\n    format: params => ({\n      code: ERROR[ERROR_TYPE.UNKNOWN].code,\n      message: ERROR[ERROR_TYPE.UNKNOWN].stringify(params)\n    })\n  }\n};","map":{"version":3,"sources":["../../src/error.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { capitalize, enumify, fromMiliseconds } from \"./misc\";\nexport const ERROR_TYPE = enumify({\n    GENERIC: \"GENERIC\",\n    MISSING_OR_INVALID: \"MISSING_OR_INVALID\",\n    MISSING_RESPONSE: \"MISSING_RESPONSE\",\n    MISSING_DECRYPT_PARAMS: \"MISSING_DECRYPT_PARAMS\",\n    INVALID_UPDATE_REQUEST: \"INVALID_UPDATE_REQUEST\",\n    INVALID_UPGRADE_REQUEST: \"INVALID_UPGRADE_REQUEST\",\n    INVALID_STORAGE_KEY_NAME: \"INVALID_STORAGE_KEY_NAME\",\n    RECORD_ALREADY_EXISTS: \"RECORD_ALREADY_EXISTS\",\n    RESTORE_WILL_OVERRIDE: \"RESTORE_WILL_OVERRIDE\",\n    NO_MATCHING_ID: \"NO_MATCHING_ID\",\n    NO_MATCHING_TOPIC: \"NO_MATCHING_TOPIC\",\n    NO_MATCHING_RESPONSE: \"NO_MATCHING_RESPONSE\",\n    NO_MATCHING_KEY: \"NO_MATCHING_KEY\",\n    UNKNOWN_JSONRPC_METHOD: \"UNKNOWN_JSONRPC_METHOD\",\n    MISMATCHED_TOPIC: \"MISMATCHED_TOPIC\",\n    MISMATCHED_ACCOUNTS: \"MISMATCHED_ACCOUNTS\",\n    SETTLED: \"SETTLED\",\n    NOT_APPROVED: \"NOT_APPROVED\",\n    PROPOSAL_RESPONDED: \"PROPOSAL_RESPONDED\",\n    RESPONSE_ACKNOWLEDGED: \"RESPONSE_ACKNOWLEDGED\",\n    EXPIRED: \"EXPIRED\",\n    DELETED: \"DELETED\",\n    RESUBSCRIBED: \"RESUBSCRIBED\",\n    SETTLE_TIMEOUT: \"SETTLE_TIMEOUT\",\n    JSONRPC_REQUEST_TIMEOUT: \"JSONRPC_REQUEST_TIMEOUT\",\n    UNAUTHORIZED_TARGET_CHAIN: \"UNAUTHORIZED_TARGET_CHAIN\",\n    UNAUTHORIZED_JSON_RPC_METHOD: \"UNAUTHORIZED_JSON_RPC_METHOD\",\n    UNAUTHORIZED_NOTIFICATION_TYPE: \"UNAUTHORIZED_NOTIFICATION_TYPE\",\n    UNAUTHORIZED_UPDATE_REQUEST: \"UNAUTHORIZED_UPDATE_REQUEST\",\n    UNAUTHORIZED_UPGRADE_REQUEST: \"UNAUTHORIZED_UPGRADE_REQUEST\",\n    UNAUTHORIZED_MATCHING_CONTROLLER: \"UNAUTHORIZED_MATCHING_CONTROLLER\",\n    JSONRPC_REQUEST_METHOD_REJECTED: \"JSONRPC_REQUEST_METHOD_REJECTED\",\n    JSONRPC_REQUEST_METHOD_UNAUTHORIZED: \"JSONRPC_REQUEST_METHOD_UNAUTHORIZED\",\n    JSONRPC_REQUEST_METHOD_UNSUPPORTED: \"JSONRPC_REQUEST_METHOD_UNSUPPORTED\",\n    DISCONNECTED_ALL_CHAINS: \"DISCONNECTED_ALL_CHAINS\",\n    DISCONNECTED_TARGET_CHAIN: \"DISCONNECTED_TARGET_CHAIN\",\n    DISAPPROVED_CHAINS: \"DISAPPROVED_CHAINS\",\n    DISAPPROVED_JSONRPC: \"DISAPPROVED_JSONRPC\",\n    DISAPPROVED_NOTIFICATION: \"DISAPPROVED_NOTIFICATION\",\n    UNSUPPORTED_CHAINS: \"UNSUPPORTED_CHAINS\",\n    UNSUPPORTED_JSONRPC: \"UNSUPPORTED_JSONRPC\",\n    UNSUPPORTED_NOTIFICATION: \"UNSUPPORTED_NOTIFICATION\",\n    UNSUPPORTED_SIGNAL: \"UNSUPPORTED_SIGNAL\",\n    USER_DISCONNECTED: \"USER_DISCONNECTED\",\n    UNKNOWN: \"UNKNOWN\",\n});\nconst defaultParams = {\n    topic: \"undefined\",\n    message: \"Something went wrong\",\n    name: \"parameter\",\n    context: \"session\",\n    blockchain: \"Ethereum\",\n};\nexport const ERROR = {\n    [ERROR_TYPE.GENERIC]: {\n        type: ERROR_TYPE.GENERIC,\n        code: 0,\n        stringify: (params) => (params === null || params === void 0 ? void 0 : params.message) || defaultParams.message,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.GENERIC].code,\n            message: ERROR[ERROR_TYPE.GENERIC].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.MISSING_OR_INVALID]: {\n        type: ERROR_TYPE.MISSING_OR_INVALID,\n        code: 1000,\n        stringify: (params) => `Missing or invalid ${(params === null || params === void 0 ? void 0 : params.name) || defaultParams.name}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.MISSING_OR_INVALID].code,\n            message: ERROR[ERROR_TYPE.MISSING_OR_INVALID].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.MISSING_RESPONSE]: {\n        type: ERROR_TYPE.MISSING_RESPONSE,\n        code: 1001,\n        stringify: (params) => `Response is required for approved ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} proposals`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.MISSING_RESPONSE].code,\n            message: ERROR[ERROR_TYPE.MISSING_RESPONSE].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.MISSING_DECRYPT_PARAMS]: {\n        type: ERROR_TYPE.MISSING_DECRYPT_PARAMS,\n        code: 1002,\n        stringify: (params) => `Decrypt params required for ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.MISSING_DECRYPT_PARAMS].code,\n            message: ERROR[ERROR_TYPE.MISSING_DECRYPT_PARAMS].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.INVALID_UPDATE_REQUEST]: {\n        type: ERROR_TYPE.INVALID_UPDATE_REQUEST,\n        code: 1003,\n        stringify: (params) => `Invalid ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} update request`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.INVALID_UPDATE_REQUEST].code,\n            message: ERROR[ERROR_TYPE.INVALID_UPDATE_REQUEST].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.INVALID_UPGRADE_REQUEST]: {\n        type: ERROR_TYPE.INVALID_UPGRADE_REQUEST,\n        code: 1004,\n        stringify: (params) => `Invalid ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} upgrade request`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.INVALID_UPGRADE_REQUEST].code,\n            message: ERROR[ERROR_TYPE.INVALID_UPGRADE_REQUEST].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.INVALID_STORAGE_KEY_NAME]: {\n        type: ERROR_TYPE.INVALID_STORAGE_KEY_NAME,\n        code: 1005,\n        stringify: (params) => `Invalid storage key name: ${(params === null || params === void 0 ? void 0 : params.name) || defaultParams.name}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.INVALID_STORAGE_KEY_NAME].code,\n            message: ERROR[ERROR_TYPE.INVALID_STORAGE_KEY_NAME].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.RECORD_ALREADY_EXISTS]: {\n        type: ERROR_TYPE.RECORD_ALREADY_EXISTS,\n        code: 1100,\n        stringify: (params) => `Record already exists for ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} matching id: ${params === null || params === void 0 ? void 0 : params.id}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.RECORD_ALREADY_EXISTS].code,\n            message: ERROR[ERROR_TYPE.RECORD_ALREADY_EXISTS].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.RESTORE_WILL_OVERRIDE]: {\n        type: ERROR_TYPE.RESTORE_WILL_OVERRIDE,\n        code: 1200,\n        stringify: (params) => `Restore will override already set ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.RESTORE_WILL_OVERRIDE].code,\n            message: ERROR[ERROR_TYPE.RESTORE_WILL_OVERRIDE].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.NO_MATCHING_ID]: {\n        type: ERROR_TYPE.NO_MATCHING_ID,\n        code: 1300,\n        stringify: (params) => `No matching ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} with id: ${params === null || params === void 0 ? void 0 : params.id}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.NO_MATCHING_ID].code,\n            message: ERROR[ERROR_TYPE.NO_MATCHING_ID].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.NO_MATCHING_TOPIC]: {\n        type: ERROR_TYPE.NO_MATCHING_TOPIC,\n        code: 1301,\n        stringify: (params) => `No matching ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} with topic: ${params === null || params === void 0 ? void 0 : params.topic}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.NO_MATCHING_TOPIC].code,\n            message: ERROR[ERROR_TYPE.NO_MATCHING_TOPIC].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.NO_MATCHING_RESPONSE]: {\n        type: ERROR_TYPE.NO_MATCHING_RESPONSE,\n        code: 1302,\n        stringify: (params) => `No response found in pending ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} proposal`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.NO_MATCHING_RESPONSE].code,\n            message: ERROR[ERROR_TYPE.NO_MATCHING_RESPONSE].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.NO_MATCHING_KEY]: {\n        type: ERROR_TYPE.NO_MATCHING_KEY,\n        code: 1303,\n        stringify: (params) => `No matching key with tag: ${params === null || params === void 0 ? void 0 : params.tag}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.NO_MATCHING_KEY].code,\n            message: ERROR[ERROR_TYPE.NO_MATCHING_KEY].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.UNKNOWN_JSONRPC_METHOD]: {\n        type: ERROR_TYPE.UNKNOWN_JSONRPC_METHOD,\n        code: 1400,\n        stringify: (params) => `Unknown JSON-RPC Method Requested: ${params === null || params === void 0 ? void 0 : params.method}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.UNKNOWN_JSONRPC_METHOD].code,\n            message: ERROR[ERROR_TYPE.UNKNOWN_JSONRPC_METHOD].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.MISMATCHED_TOPIC]: {\n        type: ERROR_TYPE.MISMATCHED_TOPIC,\n        code: 1500,\n        stringify: (params) => `Mismatched topic for ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} with id: ${params === null || params === void 0 ? void 0 : params.id}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.MISMATCHED_TOPIC].code,\n            message: ERROR[ERROR_TYPE.MISMATCHED_TOPIC].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.MISMATCHED_ACCOUNTS]: {\n        type: ERROR_TYPE.MISMATCHED_ACCOUNTS,\n        code: 1501,\n        stringify: (params) => `Invalid accounts with mismatched chains: ${params === null || params === void 0 ? void 0 : params.mismatched.toString()}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.MISMATCHED_ACCOUNTS].code,\n            message: ERROR[ERROR_TYPE.MISMATCHED_ACCOUNTS].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.SETTLED]: {\n        type: ERROR_TYPE.SETTLED,\n        code: 1600,\n        stringify: (params) => `${capitalize((params === null || params === void 0 ? void 0 : params.context) || defaultParams.context)} settled`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.SETTLED].code,\n            message: ERROR[ERROR_TYPE.SETTLED].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.NOT_APPROVED]: {\n        type: ERROR_TYPE.NOT_APPROVED,\n        code: 1601,\n        stringify: (params) => `${capitalize((params === null || params === void 0 ? void 0 : params.context) || defaultParams.context)} not approved`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.NOT_APPROVED].code,\n            message: ERROR[ERROR_TYPE.NOT_APPROVED].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.PROPOSAL_RESPONDED]: {\n        type: ERROR_TYPE.PROPOSAL_RESPONDED,\n        code: 1602,\n        stringify: (params) => `${capitalize((params === null || params === void 0 ? void 0 : params.context) || defaultParams.context)} proposal responded`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.PROPOSAL_RESPONDED].code,\n            message: ERROR[ERROR_TYPE.PROPOSAL_RESPONDED].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.RESPONSE_ACKNOWLEDGED]: {\n        type: ERROR_TYPE.RESPONSE_ACKNOWLEDGED,\n        code: 1603,\n        stringify: (params) => `${capitalize((params === null || params === void 0 ? void 0 : params.context) || defaultParams.context)} response acknowledge`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.RESPONSE_ACKNOWLEDGED].code,\n            message: ERROR[ERROR_TYPE.RESPONSE_ACKNOWLEDGED].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.EXPIRED]: {\n        type: ERROR_TYPE.EXPIRED,\n        code: 1604,\n        stringify: (params) => `${capitalize((params === null || params === void 0 ? void 0 : params.context) || defaultParams.context)} expired`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.EXPIRED].code,\n            message: ERROR[ERROR_TYPE.EXPIRED].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.DELETED]: {\n        type: ERROR_TYPE.DELETED,\n        code: 1605,\n        stringify: (params) => `${capitalize((params === null || params === void 0 ? void 0 : params.context) || defaultParams.context)} deleted`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.DELETED].code,\n            message: ERROR[ERROR_TYPE.DELETED].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.RESUBSCRIBED]: {\n        type: ERROR_TYPE.RESUBSCRIBED,\n        code: 1606,\n        stringify: (params) => `Subscription resubscribed with topic: ${params.topic || defaultParams.topic}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.RESUBSCRIBED].code,\n            message: ERROR[ERROR_TYPE.RESUBSCRIBED].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.SETTLE_TIMEOUT]: {\n        type: ERROR_TYPE.SETTLE_TIMEOUT,\n        code: 2000,\n        stringify: (params) => `${capitalize((params === null || params === void 0 ? void 0 : params.context) || defaultParams.context)} failed to settle after ${fromMiliseconds(params === null || params === void 0 ? void 0 : params.timeout)} seconds`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.SETTLE_TIMEOUT].code,\n            message: ERROR[ERROR_TYPE.SETTLE_TIMEOUT].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.JSONRPC_REQUEST_TIMEOUT]: {\n        type: ERROR_TYPE.JSONRPC_REQUEST_TIMEOUT,\n        code: 2001,\n        stringify: (params) => `JSON-RPC Request timeout after ${fromMiliseconds(params === null || params === void 0 ? void 0 : params.timeout)} seconds: ${params === null || params === void 0 ? void 0 : params.method}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.JSONRPC_REQUEST_TIMEOUT].code,\n            message: ERROR[ERROR_TYPE.JSONRPC_REQUEST_TIMEOUT].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.UNAUTHORIZED_TARGET_CHAIN]: {\n        type: ERROR_TYPE.UNAUTHORIZED_TARGET_CHAIN,\n        code: 3000,\n        stringify: (params) => `Unauthorized Target ChainId Requested: ${params === null || params === void 0 ? void 0 : params.chainId}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.UNAUTHORIZED_TARGET_CHAIN].code,\n            message: ERROR[ERROR_TYPE.UNAUTHORIZED_TARGET_CHAIN].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.UNAUTHORIZED_JSON_RPC_METHOD]: {\n        type: ERROR_TYPE.UNAUTHORIZED_JSON_RPC_METHOD,\n        code: 3001,\n        stringify: (params) => `Unauthorized JSON-RPC Method Requested: ${params === null || params === void 0 ? void 0 : params.method}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.UNAUTHORIZED_JSON_RPC_METHOD].code,\n            message: ERROR[ERROR_TYPE.UNAUTHORIZED_JSON_RPC_METHOD].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.UNAUTHORIZED_NOTIFICATION_TYPE]: {\n        type: ERROR_TYPE.UNAUTHORIZED_NOTIFICATION_TYPE,\n        code: 3002,\n        stringify: (params) => `Unauthorized Notification Type Requested: ${params === null || params === void 0 ? void 0 : params.type}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.UNAUTHORIZED_NOTIFICATION_TYPE].code,\n            message: ERROR[ERROR_TYPE.UNAUTHORIZED_NOTIFICATION_TYPE].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.UNAUTHORIZED_UPDATE_REQUEST]: {\n        type: ERROR_TYPE.UNAUTHORIZED_UPDATE_REQUEST,\n        code: 3003,\n        stringify: (params) => `Unauthorized ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} update request`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.UNAUTHORIZED_UPDATE_REQUEST].code,\n            message: ERROR[ERROR_TYPE.UNAUTHORIZED_UPDATE_REQUEST].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.UNAUTHORIZED_UPGRADE_REQUEST]: {\n        type: ERROR_TYPE.UNAUTHORIZED_UPGRADE_REQUEST,\n        code: 3004,\n        stringify: (params) => `Unauthorized ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} upgrade request`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.UNAUTHORIZED_UPGRADE_REQUEST].code,\n            message: ERROR[ERROR_TYPE.UNAUTHORIZED_UPGRADE_REQUEST].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.UNAUTHORIZED_MATCHING_CONTROLLER]: {\n        type: ERROR_TYPE.UNAUTHORIZED_MATCHING_CONTROLLER,\n        code: 3005,\n        stringify: (params) => `Unauthorized: peer is also ${(params === null || params === void 0 ? void 0 : params.controller) ? \"\" : \"not \"}controller`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.UNAUTHORIZED_MATCHING_CONTROLLER].code,\n            message: ERROR[ERROR_TYPE.UNAUTHORIZED_MATCHING_CONTROLLER].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.JSONRPC_REQUEST_METHOD_REJECTED]: {\n        type: ERROR_TYPE.JSONRPC_REQUEST_METHOD_REJECTED,\n        code: 4001,\n        stringify: (params) => \"User rejected the request.\",\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.JSONRPC_REQUEST_METHOD_REJECTED].code,\n            message: ERROR[ERROR_TYPE.JSONRPC_REQUEST_METHOD_REJECTED].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.JSONRPC_REQUEST_METHOD_UNAUTHORIZED]: {\n        type: ERROR_TYPE.JSONRPC_REQUEST_METHOD_UNAUTHORIZED,\n        code: 4100,\n        stringify: (params) => \"The requested account and/or method has not been authorized by the user.\",\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.JSONRPC_REQUEST_METHOD_UNAUTHORIZED].code,\n            message: ERROR[ERROR_TYPE.JSONRPC_REQUEST_METHOD_UNAUTHORIZED].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.JSONRPC_REQUEST_METHOD_UNSUPPORTED]: {\n        type: ERROR_TYPE.JSONRPC_REQUEST_METHOD_UNSUPPORTED,\n        code: 4200,\n        stringify: (params) => `The requested method is not supported by this ${(params === null || params === void 0 ? void 0 : params.blockhain) ||\n            defaultParams.blockchain} provider.`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.JSONRPC_REQUEST_METHOD_UNSUPPORTED].code,\n            message: ERROR[ERROR_TYPE.JSONRPC_REQUEST_METHOD_UNSUPPORTED].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.DISCONNECTED_ALL_CHAINS]: {\n        type: ERROR_TYPE.DISCONNECTED_ALL_CHAINS,\n        code: 4900,\n        stringify: (params) => \"The provider is disconnected from all chains.\",\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.DISCONNECTED_ALL_CHAINS].code,\n            message: ERROR[ERROR_TYPE.DISCONNECTED_ALL_CHAINS].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.DISCONNECTED_TARGET_CHAIN]: {\n        type: ERROR_TYPE.DISCONNECTED_TARGET_CHAIN,\n        code: 4901,\n        stringify: (params) => \"The provider is disconnected from the specified chain.\",\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.DISCONNECTED_TARGET_CHAIN].code,\n            message: ERROR[ERROR_TYPE.DISCONNECTED_TARGET_CHAIN].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.DISAPPROVED_CHAINS]: {\n        type: ERROR_TYPE.DISAPPROVED_CHAINS,\n        code: 5000,\n        stringify: (params) => `User disapproved requested chains`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.DISAPPROVED_CHAINS].code,\n            message: ERROR[ERROR_TYPE.DISAPPROVED_CHAINS].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.DISAPPROVED_JSONRPC]: {\n        type: ERROR_TYPE.DISAPPROVED_JSONRPC,\n        code: 5001,\n        stringify: (params) => `User disapproved requested json-rpc methods`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.DISAPPROVED_JSONRPC].code,\n            message: ERROR[ERROR_TYPE.DISAPPROVED_JSONRPC].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.DISAPPROVED_NOTIFICATION]: {\n        type: ERROR_TYPE.DISAPPROVED_NOTIFICATION,\n        code: 5002,\n        stringify: (params) => `User disapproved requested notification types`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.DISAPPROVED_NOTIFICATION].code,\n            message: ERROR[ERROR_TYPE.DISAPPROVED_NOTIFICATION].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.UNSUPPORTED_CHAINS]: {\n        type: ERROR_TYPE.UNSUPPORTED_CHAINS,\n        code: 5100,\n        stringify: (params) => `Requested chains are not supported: ${params === null || params === void 0 ? void 0 : params.chains.toString()}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.UNSUPPORTED_CHAINS].code,\n            message: ERROR[ERROR_TYPE.UNSUPPORTED_CHAINS].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.UNSUPPORTED_JSONRPC]: {\n        type: ERROR_TYPE.UNSUPPORTED_JSONRPC,\n        code: 5101,\n        stringify: (params) => `Requested json-rpc methods are not supported: ${params === null || params === void 0 ? void 0 : params.methods.toString()}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.UNSUPPORTED_JSONRPC].code,\n            message: ERROR[ERROR_TYPE.UNSUPPORTED_JSONRPC].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.UNSUPPORTED_NOTIFICATION]: {\n        type: ERROR_TYPE.UNSUPPORTED_NOTIFICATION,\n        code: 5102,\n        stringify: (params) => `Requested notification types are not supported: ${params === null || params === void 0 ? void 0 : params.types.toString()}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.UNSUPPORTED_NOTIFICATION].code,\n            message: ERROR[ERROR_TYPE.UNSUPPORTED_NOTIFICATION].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.UNSUPPORTED_SIGNAL]: {\n        type: ERROR_TYPE.UNSUPPORTED_SIGNAL,\n        code: 5103,\n        stringify: (params) => `Proposed ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context} signal is unsupported`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.UNSUPPORTED_SIGNAL].code,\n            message: ERROR[ERROR_TYPE.UNSUPPORTED_SIGNAL].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.USER_DISCONNECTED]: {\n        type: ERROR_TYPE.USER_DISCONNECTED,\n        code: 5900,\n        stringify: (params) => `User disconnected ${(params === null || params === void 0 ? void 0 : params.context) || defaultParams.context}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.USER_DISCONNECTED].code,\n            message: ERROR[ERROR_TYPE.USER_DISCONNECTED].stringify(params),\n        }),\n    },\n    [ERROR_TYPE.UNKNOWN]: {\n        type: ERROR_TYPE.UNKNOWN,\n        code: 9000,\n        stringify: (params) => `Unknown error${params ? `: ${params === null || params === void 0 ? void 0 : params.toString()}` : \"\"}`,\n        format: (params) => ({\n            code: ERROR[ERROR_TYPE.UNKNOWN].code,\n            message: ERROR[ERROR_TYPE.UNKNOWN].stringify(params),\n        }),\n    },\n};\n//# sourceMappingURL=error.js.map"]},"metadata":{},"sourceType":"module"}