{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/treasure-blox/src/App.js\";\nimport { Button, Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport MyNav from './components/Structure/Nav';\nimport MyCards from './components/Structure/Cards';\nimport SingleCard from './components/Structure/SingleCard'; // import img1 from './Treasure-hunt.jpeg';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react';\nimport getWeb3 from \"./getWeb3\"; // Get network provider and web3 instance.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\nconst accounts = await web3.eth.getAccounts(); // Set the provider\n\nweb3.setProvider(new web3.providers.WebsocketProvider('ws://localhost:8545'));\n\nconst abi = require('./TreasureBlox.abi.json');\n\nconst mepAddress = '0xd9145CCE52D386f254917e481eB44e9943F39138';\nlet instance = new web3.eth.Contract(abi, mepAddress);\n\nrunExample = async () => {\n  const {\n    accounts,\n    contract\n  } = this.state;\n  const decimals = await contract.methods.decimals().call().then(console.log('Yes'));\n  const bal = await contract.methods.balanceOf(accounts[0]).call();\n  const owner = await contract.methods._owner().call();\n  const marketingWallet = await contract.methods.marketingWallet().call().then(console.log('marketing Wallet Complete'));\n  const games = await contract.methods.Games(1).call().then(console.log('games check complete')); // const games = await contract.methods.Games(1).call();\n  // Update state with the result.\n\n  this.setState({\n    account: accounts[0],\n    decimals: decimals,\n    bal: bal,\n    owner: owner,\n    marketingWallet: marketingWallet,\n    games: games\n  });\n};\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background customFont\",\n      children: [/*#__PURE__*/_jsxDEV(MyNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SingleCard, {\n        decimals: this.state.storageValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"The balance value is: \", this.state.bal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"The owner value is: \", this.state.owner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"The marketingWallet value is: \", this.state.marketingWallet]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"The games values are: \", this.state.games[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MyCards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MyCards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/treasure-blox/src/App.js"],"names":["Button","Container","Nav","Navbar","NavDropdown","MyNav","MyCards","SingleCard","React","Component","getWeb3","web3","accounts","eth","getAccounts","setProvider","providers","WebsocketProvider","abi","require","mepAddress","instance","Contract","runExample","contract","state","decimals","methods","call","then","console","log","bal","balanceOf","owner","_owner","marketingWallet","games","Games","setState","account","App","render","storageValue"],"mappings":";AAAA,SAASA,MAAT,EAAgBC,SAAhB,EAA0BC,GAA1B,EAA8BC,MAA9B,EAAqCC,WAArC,QAAwD,iBAAxD;AAEA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,UAAP,MAAuB,mCAAvB,C,CAEA;;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;AAGA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;;AACA,MAAMC,IAAI,GAAG,MAAMD,OAAO,EAA1B,C,CAEA;;AACA,MAAME,QAAQ,GAAG,MAAMD,IAAI,CAACE,GAAL,CAASC,WAAT,EAAvB,C,CAGA;;AACAH,IAAI,CAACI,WAAL,CAAiB,IAAIJ,IAAI,CAACK,SAAL,CAAeC,iBAAnB,CAAqC,qBAArC,CAAjB;;AAGA,MAAMC,GAAG,GAAGC,OAAO,CAAC,yBAAD,CAAnB;;AACA,MAAMC,UAAU,GAAG,4CAAnB;AAEA,IAAIC,QAAQ,GAAG,IAAIV,IAAI,CAACE,GAAL,CAASS,QAAb,CAAsBJ,GAAtB,EAA0BE,UAA1B,CAAf;;AAGEG,UAAU,GAAG,YAAY;AACvB,QAAM;AAAEX,IAAAA,QAAF;AAAYY,IAAAA;AAAZ,MAAyB,KAAKC,KAApC;AAIA,QAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,OAAT,CAAiBD,QAAjB,GAA4BE,IAA5B,GAAmCC,IAAnC,CAAwCC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAxC,CAAvB;AAEA,QAAMC,GAAG,GAAG,MAAMR,QAAQ,CAACG,OAAT,CAAiBM,SAAjB,CAA2BrB,QAAQ,CAAC,CAAD,CAAnC,EAAwCgB,IAAxC,EAAlB;AAEA,QAAMM,KAAK,GAAG,MAAMV,QAAQ,CAACG,OAAT,CAAiBQ,MAAjB,GAA0BP,IAA1B,EAApB;AAEA,QAAMQ,eAAe,GAAG,MAAMZ,QAAQ,CAACG,OAAT,CAAiBS,eAAjB,GAAmCR,IAAnC,GAA0CC,IAA1C,CAA+CC,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAA/C,CAA9B;AAEA,QAAMM,KAAK,GAAG,MAAMb,QAAQ,CAACG,OAAT,CAAiBW,KAAjB,CAAuB,CAAvB,EAA0BV,IAA1B,GAAiCC,IAAjC,CAAsCC,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAtC,CAApB,CAbuB,CAevB;AAGA;;AACA,OAAKQ,QAAL,CAAc;AACZC,IAAAA,OAAO,EAAE5B,QAAQ,CAAC,CAAD,CADL;AAEZc,IAAAA,QAAQ,EAACA,QAFG;AAGZM,IAAAA,GAAG,EAACA,GAHQ;AAIZE,IAAAA,KAAK,EAACA,KAJM;AAKZE,IAAAA,eAAe,EAACA,eALJ;AAMZC,IAAAA,KAAK,EAACA;AANM,GAAd;AAOD,CA1BD;;AAkCF,MAAMI,GAAN,SAAkBhC,SAAlB,CAA4B;AAI1BiC,EAAAA,MAAM,GAAG;AAEP,wBACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKjB,KAAL,CAAWkB;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,6CAA4B,KAAKlB,KAAL,CAAWO,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAA,2CAA0B,KAAKP,KAAL,CAAWS,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAA,qDAAoC,KAAKT,KAAL,CAAWW,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAA,6CAA4B,KAAKX,KAAL,CAAWY,KAAX,CAAiB,CAAjB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAA;AAAA;AAAA;AAAA,cAVF,eAgBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBD;;AA3ByB;;AA8B5B,eAAeI,GAAf","sourcesContent":["import { Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport MyNav from './components/Structure/Nav';\nimport MyCards from './components/Structure/Cards';\nimport SingleCard from './components/Structure/SingleCard';\n\n// import img1 from './Treasure-hunt.jpeg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport React, { Component } from 'react'\nimport getWeb3 from \"./getWeb3\";\n\n// Get network provider and web3 instance.\nconst web3 = await getWeb3();\n\n// Use web3 to get the user's accounts.\nconst accounts = await web3.eth.getAccounts();\n\n\n// Set the provider\nweb3.setProvider(new web3.providers.WebsocketProvider('ws://localhost:8545')\n);\n\nconst abi = require('./TreasureBlox.abi.json');\nconst mepAddress = '0xd9145CCE52D386f254917e481eB44e9943F39138'\n\nlet instance = new web3.eth.Contract(abi,mepAddress);\n\n\n  runExample = async () => {\n    const { accounts, contract } = this.state;\n\n\n\n    const decimals = await contract.methods.decimals().call().then(console.log('Yes'));\n\n    const bal = await contract.methods.balanceOf(accounts[0]).call();\n\n    const owner = await contract.methods._owner().call();\n\n    const marketingWallet = await contract.methods.marketingWallet().call().then(console.log('marketing Wallet Complete'));\n\n    const games = await contract.methods.Games(1).call().then(console.log('games check complete'));\n\n    // const games = await contract.methods.Games(1).call();\n\n\n    // Update state with the result.\n    this.setState({\n      account: accounts[0],\n      decimals:decimals,\n      bal:bal,\n      owner:owner,\n      marketingWallet:marketingWallet,\n      games:games});\n  };\n\n\n\n\n\n\n\nclass App extends Component {\n\n\n\n  render() {\n\n    return (\n        <div className=\"background customFont\">\n\n          <MyNav />\n          <SingleCard decimals={this.state.storageValue}/>\n\n          <br/>\n          <div>The balance value is: {this.state.bal}</div>\n          <div>The owner value is: {this.state.owner}</div>\n          <div>The marketingWallet value is: {this.state.marketingWallet}</div>\n          <div>The games values are: {this.state.games[0]}</div>\n          <br/>\n\n\n\n\n\n          <MyCards/>\n          <MyCards/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}