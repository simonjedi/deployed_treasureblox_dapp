{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/BloxEscape/src/containers/BirdContainer.js\";\nimport React from \"react\";\nimport $ from \"jquery\";\nimport Bird from \"../components/Bird\";\nimport \"../css/main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar oldPillar;\nexport default class BirdContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.score = 0; // Current height of the document minus the offset\n\n    this.height = $(window).height() - 100; // Tracks when the space bar is clicked so as to make the bird fly\n\n    this.isSpaceBarClicked = false; // In JavaScript, class methods are not bound by default.\n    // If you forget to bind this.fallDown and pass it to onClick, this will be undefined when the function\n    // is actually called. \n\n    this.fallDown = this.fallDown.bind(this); // Call the 'fallDown()' function every 109ms\n\n    this.intervalID = setInterval(this.fallDown, 109);\n  }\n\n  componentDidMount() {\n    // No need to bind the handleKeyPress() in constructor as we are using arrow function\n    $(\"body\").keypress(e => this.handleKeyPress(e));\n  }\n\n  handleKeyPress(e) {\n    let self = this;\n\n    if (e.keyCode === 32 && !this.props.isGameOver) {\n      // Spacebar clicked and game is not yet over\n      this.isSpaceBarClicked = true;\n      let birdHeight = $(\"#bird\").position().top;\n\n      if (birdHeight > 40) {\n        // Bird is below roof\n        $(\"#bird\").animate({\n          top: \"-=50px\" // Subtract from the top on the click of spacebar to elevate the bird\n\n        }, 120, // Perform the animation every 120ms\n        \"linear\", // For smooth transition of animation\n        () => {\n          // After animation is completed\n          self.isSpaceBarClicked = false;\n          let elements = document.getElementsByClassName(\"pillar\");\n\n          if (self.collisionOccurred($(\"#bird\"), $(elements[0]), $(elements[1]))) {\n            // self.isGameOver = true;\n            self.props.handleGameOver(true);\n          } else {\n            let rect = elements[0].getBoundingClientRect();\n\n            if (oldPillar !== elements[0] && $(\"#bird\").position().left > rect.left) {\n              self.score++;\n              self.props.handleScore(self.score);\n              oldPillar = elements[0];\n            } // console.log(rect.left + \" \" + Math.round(rect.width));\n\n          }\n        });\n      } else {\n        // this.isGameOver = true; \n        self.props.handleGameOver(true); // The bird touched the roof, game over!\n\n        this.isSpaceBarClicked = false;\n      }\n    }\n  } // Function that keeps the bird falling\n\n\n  fallDown() {\n    let self = this;\n\n    if (!this.isSpaceBarClicked) {\n      let birdHeight = $(\"#bird\").position().top; // Current height of the bird\n\n      if (birdHeight < this.height) {\n        // Bird is above the ground\n        $(\"#bird\").animate({\n          top: \"+=25px\" // Add to the current 'top' attribute value of the bird\n\n        }, 110, // Perform the animation every 110ms\n        \"linear\", // For smooth transition of animation\n        () => {\n          let elements = document.getElementsByClassName(\"pillar\");\n\n          if (self.collisionOccurred($(\"#bird\"), $(elements[0]), $(elements[1]))) {\n            // this.isGameOver = true;\n            self.props.handleGameOver(true); // console.log(\"collided....\");\n          }\n        });\n        this.isSpaceBarClicked = false;\n      } else {\n        // this.isGameOver = true; \n        self.props.handleGameOver(true); // The bird touched the ground, game over!\n\n        clearInterval(this.intervalID); // Stop the timer set for 'fallDown()' calling\n      }\n    }\n  }\n\n  collisionOccurred(bird, upperDiv, lowerDiv) {\n    // width\n    var x1 = bird.offset().left;\n    var w1 = bird.width(); // height\n\n    var y1 = bird.offset().top;\n    var h1 = bird.height();\n    var finalHeight = y1 + h1;\n    var finalWidth = x1 + w1;\n    var x2 = upperDiv.offset().left;\n    var w2 = upperDiv.width();\n    var y2 = upperDiv.offset().top;\n    var h2 = upperDiv.height();\n    var finalHeight2 = y2 + h2;\n    var finalWidth2 = x2 + w2;\n    var x3 = lowerDiv.offset().left;\n    var w3 = lowerDiv.width();\n    var finalHeight3 = lowerDiv.offset().top;\n    var finalWidth3 = x3 + w3;\n    if ((y1 > finalHeight2 || finalWidth < x2 || x1 > finalWidth2) && (finalHeight < finalHeight3 || y1 < finalHeight3 || finalWidth < x3 || x1 > finalWidth3)) return false;\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Bird, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 10\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/BloxEscape/src/containers/BirdContainer.js"],"names":["React","$","Bird","oldPillar","BirdContainer","Component","constructor","props","score","height","window","isSpaceBarClicked","fallDown","bind","intervalID","setInterval","componentDidMount","keypress","e","handleKeyPress","self","keyCode","isGameOver","birdHeight","position","top","animate","elements","document","getElementsByClassName","collisionOccurred","handleGameOver","rect","getBoundingClientRect","left","handleScore","clearInterval","bird","upperDiv","lowerDiv","x1","offset","w1","width","y1","h1","finalHeight","finalWidth","x2","w2","y2","h2","finalHeight2","finalWidth2","x3","w3","finalHeight3","finalWidth3","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport $ from \"jquery\";\n\nimport Bird from \"../components/Bird\";\nimport \"../css/main.css\";\n\nvar oldPillar;\n\nexport default class BirdContainer extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.score = 0;\n\n\t\t// Current height of the document minus the offset\n\t\tthis.height = $(window).height() - 100;\n\n\t\t// Tracks when the space bar is clicked so as to make the bird fly\n\t\tthis.isSpaceBarClicked = false;\n\n\t\t// In JavaScript, class methods are not bound by default.\n\t\t// If you forget to bind this.fallDown and pass it to onClick, this will be undefined when the function\n\t\t// is actually called. \n\t\tthis.fallDown = this.fallDown.bind(this);\n\n\t\t// Call the 'fallDown()' function every 109ms\n\t\tthis.intervalID = setInterval(this.fallDown, 109);\n\t}\n\n\tcomponentDidMount() {\n\t\t// No need to bind the handleKeyPress() in constructor as we are using arrow function\n\t\t$(\"body\").keypress((e) => this.handleKeyPress(e));\n\t}\n\n\thandleKeyPress(e) {\n\t\tlet self = this;\n\t\tif (e.keyCode === 32 && !this.props.isGameOver) {\n\t\t\t// Spacebar clicked and game is not yet over\n\t\t\tthis.isSpaceBarClicked = true;\n\t\t\tlet birdHeight = $(\"#bird\").position().top;\n\t\t\tif (birdHeight > 40) {\n\t\t\t\t// Bird is below roof\n\t\t\t\t$(\"#bird\").animate(\n\t\t\t\t\t{\n\t\t\t\t\t\ttop: \"-=50px\" // Subtract from the top on the click of spacebar to elevate the bird\n\t\t\t\t\t},\n\t\t\t\t\t120, \t\t// Perform the animation every 120ms\n\t\t\t\t\t\"linear\", \t// For smooth transition of animation\n\t\t\t\t\t() => {\n\t\t\t\t\t\t// After animation is completed\n\t\t\t\t\t\tself.isSpaceBarClicked = false;\n\t\t\t\t\t\tlet elements = document.getElementsByClassName(\"pillar\");\n\t\t\t\t\t\tif (self.collisionOccurred($(\"#bird\"), $(elements[0]), $(elements[1]))) {\n\t\t\t\t\t\t\t// self.isGameOver = true;\n\t\t\t\t\t\t\tself.props.handleGameOver(true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet rect = elements[0].getBoundingClientRect();\n\t\t\t\t\t\t\tif ((oldPillar !== elements[0]) && $(\"#bird\").position().left > rect.left) {\n\t\t\t\t\t\t\t\tself.score++;\n\t\t\t\t\t\t\t\tself.props.handleScore(self.score);\n\t\t\t\t\t\t\t\toldPillar = elements[0];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// console.log(rect.left + \" \" + Math.round(rect.width));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// this.isGameOver = true; \n\t\t\t\tself.props.handleGameOver(true);\t// The bird touched the roof, game over!\n\t\t\t\tthis.isSpaceBarClicked = false;\n\t\t\t}\n\t\t}\n\t}\n\t// Function that keeps the bird falling\n\tfallDown() {\n\t\tlet self = this;\n\t\tif (!this.isSpaceBarClicked) {\n\t\t\tlet birdHeight = $(\"#bird\").position().top; // Current height of the bird\n\t\t\tif (birdHeight < this.height) {\n\t\t\t\t// Bird is above the ground\n\t\t\t\t$(\"#bird\").animate(\n\t\t\t\t\t{\n\t\t\t\t\t\ttop: \"+=25px\" // Add to the current 'top' attribute value of the bird\n\t\t\t\t\t},\n\t\t\t\t\t110, // Perform the animation every 110ms\n\t\t\t\t\t\"linear\", // For smooth transition of animation\n\t\t\t\t\t() => {\n\t\t\t\t\t\tlet elements = document.getElementsByClassName(\"pillar\");\n\t\t\t\t\t\tif (self.collisionOccurred($(\"#bird\"), $(elements[0]), $(elements[1]))) {\n\t\t\t\t\t\t\t// this.isGameOver = true;\n\t\t\t\t\t\t\tself.props.handleGameOver(true);\n\t\t\t\t\t\t\t// console.log(\"collided....\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.isSpaceBarClicked = false;\n\t\t\t} else {\n\t\t\t\t// this.isGameOver = true; \n\t\t\t\tself.props.handleGameOver(true);\t// The bird touched the ground, game over!\n\t\t\t\tclearInterval(this.intervalID); // Stop the timer set for 'fallDown()' calling\n\t\t\t}\n\t\t}\n\t}\n\n\tcollisionOccurred(bird, upperDiv, lowerDiv) {\n\t\t// width\n\t\tvar x1 = bird.offset().left;\n\t\tvar w1 = bird.width();\n\t\t// height\n\t\tvar y1 = bird.offset().top;\n\t\tvar h1 = bird.height();\n\n\t\tvar finalHeight = y1 + h1;\n\t\tvar finalWidth = x1 + w1;\n\n\t\tvar x2 = upperDiv.offset().left;\n\t\tvar w2 = upperDiv.width();\n\n\t\tvar y2 = upperDiv.offset().top;\n\t\tvar h2 = upperDiv.height();\n\n\t\tvar finalHeight2 = y2 + h2;\n\t\tvar finalWidth2 = x2 + w2;\n\n\t\tvar x3 = lowerDiv.offset().left;\n\t\tvar w3 = lowerDiv.width();\n\n\t\tvar finalHeight3 = lowerDiv.offset().top;\n\t\tvar finalWidth3 = x3 + w3;\n\n\t\tif ((y1 > finalHeight2 || finalWidth < x2 || x1 > finalWidth2) &&\n\t\t\t(finalHeight < finalHeight3 || y1 < finalHeight3 || finalWidth < x3 || x1 > finalWidth3)) return false;\n\t\treturn true;\n\t}\n\n\trender() {\n\t\treturn <Bird />;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}