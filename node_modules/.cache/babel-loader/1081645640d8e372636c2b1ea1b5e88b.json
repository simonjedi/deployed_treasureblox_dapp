{"ast":null,"code":"import { SEVEN_DAYS } from \"./time\";\nexport const SESSION_JSONRPC = {\n  propose: \"wc_sessionPropose\",\n  approve: \"wc_sessionApprove\",\n  reject: \"wc_sessionReject\",\n  update: \"wc_sessionUpdate\",\n  upgrade: \"wc_sessionUpgrade\",\n  delete: \"wc_sessionDelete\",\n  payload: \"wc_sessionPayload\",\n  ping: \"wc_sessionPing\",\n  notification: \"wc_sessionNotification\"\n};\nexport const SESSION_CONTEXT = \"session\";\nexport const SESSION_DEFAULT_TTL = SEVEN_DAYS;\nexport const SESSION_SIGNAL_METHOD_PAIRING = \"pairing\";\nexport const SESSION_STATUS = {\n  proposed: \"proposed\",\n  responded: \"responded\",\n  pending: \"pending\",\n  settled: \"settled\"\n};\nexport const SESSION_EVENTS = {\n  proposed: \"session_proposed\",\n  responded: \"session_responded\",\n  settled: \"session_settled\",\n  updated: \"session_updated\",\n  deleted: \"session_deleted\",\n  request: \"session_request\",\n  response: \"session_response\",\n  sync: \"session_sync\",\n  notification: \"session_notification\"\n};\nexport const SESSION_EMPTY_PERMISSIONS = {\n  jsonrpc: {\n    methods: []\n  },\n  blockchain: {\n    chains: []\n  },\n  notifications: {\n    types: []\n  }\n};\nexport const SESSION_EMPTY_STATE = {\n  accounts: []\n};\nexport const SESSION_EMPTY_METADATA = {\n  name: \"\",\n  description: \"\",\n  url: \"\",\n  icons: []\n};\nexport const SESSION_EMPTY_RESPONSE = {\n  metadata: SESSION_EMPTY_METADATA,\n  state: SESSION_EMPTY_STATE\n};","map":{"version":3,"sources":["../../../src/constants/session.ts"],"names":[],"mappings":"AAEA,SAAS,UAAT,QAA2B,QAA3B;AAEA,OAAO,MAAM,eAAe,GAAyB;AACnD,EAAA,OAAO,EAAE,mBAD0C;AAEnD,EAAA,OAAO,EAAE,mBAF0C;AAGnD,EAAA,MAAM,EAAE,kBAH2C;AAInD,EAAA,MAAM,EAAE,kBAJ2C;AAKnD,EAAA,OAAO,EAAE,mBAL0C;AAMnD,EAAA,MAAM,EAAE,kBAN2C;AAOnD,EAAA,OAAO,EAAE,mBAP0C;AAQnD,EAAA,IAAI,EAAE,gBAR6C;AASnD,EAAA,YAAY,EAAE;AATqC,CAA9C;AAYP,OAAO,MAAM,eAAe,GAAG,SAAxB;AAEP,OAAO,MAAM,mBAAmB,GAAG,UAA5B;AAEP,OAAO,MAAM,6BAA6B,GAAG,SAAtC;AAEP,OAAO,MAAM,cAAc,GAAG;AAC5B,EAAA,QAAQ,EAAE,UADkB;AAE5B,EAAA,SAAS,EAAE,WAFiB;AAG5B,EAAA,OAAO,EAAE,SAHmB;AAI5B,EAAA,OAAO,EAAE;AAJmB,CAAvB;AAOP,OAAO,MAAM,cAAc,GAAwB;AACjD,EAAA,QAAQ,EAAE,kBADuC;AAEjD,EAAA,SAAS,EAAE,mBAFsC;AAGjD,EAAA,OAAO,EAAE,iBAHwC;AAIjD,EAAA,OAAO,EAAE,iBAJwC;AAKjD,EAAA,OAAO,EAAE,iBALwC;AAMjD,EAAA,OAAO,EAAE,iBANwC;AAOjD,EAAA,QAAQ,EAAE,kBAPuC;AAQjD,EAAA,IAAI,EAAE,cAR2C;AASjD,EAAA,YAAY,EAAE;AATmC,CAA5C;AAYP,OAAO,MAAM,yBAAyB,GAAG;AACvC,EAAA,OAAO,EAAE;AACP,IAAA,OAAO,EAAE;AADF,GAD8B;AAIvC,EAAA,UAAU,EAAE;AACV,IAAA,MAAM,EAAE;AADE,GAJ2B;AAOvC,EAAA,aAAa,EAAE;AACb,IAAA,KAAK,EAAE;AADM;AAPwB,CAAlC;AAYP,OAAO,MAAM,mBAAmB,GAAG;AACjC,EAAA,QAAQ,EAAE;AADuB,CAA5B;AAIP,OAAO,MAAM,sBAAsB,GAAG;AACpC,EAAA,IAAI,EAAE,EAD8B;AAEpC,EAAA,WAAW,EAAE,EAFuB;AAGpC,EAAA,GAAG,EAAE,EAH+B;AAIpC,EAAA,KAAK,EAAE;AAJ6B,CAA/B;AAOP,OAAO,MAAM,sBAAsB,GAAG;AACpC,EAAA,QAAQ,EAAE,sBAD0B;AAEpC,EAAA,KAAK,EAAE;AAF6B,CAA/B","sourceRoot":"","sourcesContent":["import { SEVEN_DAYS } from \"./time\";\nexport const SESSION_JSONRPC = {\n    propose: \"wc_sessionPropose\",\n    approve: \"wc_sessionApprove\",\n    reject: \"wc_sessionReject\",\n    update: \"wc_sessionUpdate\",\n    upgrade: \"wc_sessionUpgrade\",\n    delete: \"wc_sessionDelete\",\n    payload: \"wc_sessionPayload\",\n    ping: \"wc_sessionPing\",\n    notification: \"wc_sessionNotification\",\n};\nexport const SESSION_CONTEXT = \"session\";\nexport const SESSION_DEFAULT_TTL = SEVEN_DAYS;\nexport const SESSION_SIGNAL_METHOD_PAIRING = \"pairing\";\nexport const SESSION_STATUS = {\n    proposed: \"proposed\",\n    responded: \"responded\",\n    pending: \"pending\",\n    settled: \"settled\",\n};\nexport const SESSION_EVENTS = {\n    proposed: \"session_proposed\",\n    responded: \"session_responded\",\n    settled: \"session_settled\",\n    updated: \"session_updated\",\n    deleted: \"session_deleted\",\n    request: \"session_request\",\n    response: \"session_response\",\n    sync: \"session_sync\",\n    notification: \"session_notification\",\n};\nexport const SESSION_EMPTY_PERMISSIONS = {\n    jsonrpc: {\n        methods: [],\n    },\n    blockchain: {\n        chains: [],\n    },\n    notifications: {\n        types: [],\n    },\n};\nexport const SESSION_EMPTY_STATE = {\n    accounts: [],\n};\nexport const SESSION_EMPTY_METADATA = {\n    name: \"\",\n    description: \"\",\n    url: \"\",\n    icons: [],\n};\nexport const SESSION_EMPTY_RESPONSE = {\n    metadata: SESSION_EMPTY_METADATA,\n    state: SESSION_EMPTY_STATE,\n};\n//# sourceMappingURL=session.js.map"]},"metadata":{},"sourceType":"module"}