{"ast":null,"code":"var _classCallCheck = require(\"/Users/jedi/Desktop/Education/REACT/TreasureHuntDAPP_React/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/Users/jedi/Desktop/Education/REACT/TreasureHuntDAPP_React/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/jedi/Desktop/Education/REACT/TreasureHuntDAPP_React/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar EventEmitter = require('events');\n\nvar UnavailableConnection = /*#__PURE__*/function (_EventEmitter) {\n  \"use strict\";\n\n  _inherits(UnavailableConnection, _EventEmitter);\n\n  var _super = _createSuper(UnavailableConnection);\n\n  function UnavailableConnection(message) {\n    var _this;\n\n    _classCallCheck(this, UnavailableConnection);\n\n    _this = _super.call(this);\n    setTimeout(function () {\n      return _this.emit('error', new Error(message));\n    }, 0);\n    return _this;\n  }\n\n  return UnavailableConnection;\n}(EventEmitter);\n\nmodule.exports = function (message) {\n  return function () {\n    return new UnavailableConnection(message);\n  };\n};","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/TreasureHuntDAPP_React/node_modules/eth-provider/connections/unavailable.js"],"names":["EventEmitter","require","UnavailableConnection","message","setTimeout","emit","Error","module","exports"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAGC,OAAO,CAAC,QAAD,CAA5B;;IAEMC,qB;;;;;;;AACJ,iCAAaC,OAAb,EAAsB;AAAA;;AAAA;;AACpB;AACAC,IAAAA,UAAU,CAAC;AAAA,aAAM,MAAKC,IAAL,CAAU,OAAV,EAAmB,IAAIC,KAAJ,CAAUH,OAAV,CAAnB,CAAN;AAAA,KAAD,EAA+C,CAA/C,CAAV;AAFoB;AAGrB;;;EAJiCH,Y;;AAOpCO,MAAM,CAACC,OAAP,GAAiB,UAAAL,OAAO;AAAA,SAAI;AAAA,WAAM,IAAID,qBAAJ,CAA0BC,OAA1B,CAAN;AAAA,GAAJ;AAAA,CAAxB","sourcesContent":["const EventEmitter = require('events')\n\nclass UnavailableConnection extends EventEmitter {\n  constructor (message) {\n    super()\n    setTimeout(() => this.emit('error', new Error(message)), 0)\n  }\n}\n\nmodule.exports = message => () => new UnavailableConnection(message)\n"]},"metadata":{},"sourceType":"script"}