{"ast":null,"code":"'use strict';\n\nvar _ = require('underscore');\n\nvar continents = require('./data/continents');\n\nvar regions = require('./data/regions');\n\nvar countriesAll = require('./data/countries.json');\n\nvar currenciesAll = require('./data/currencies.json');\n\nvar languagesAll = require('./data/languages.json');\n\nvar lookup = require('./lookup');\n\nvar getSymbol = require('currency-symbol-map');\n\nexports.continents = continents;\nexports.regions = regions;\nexports.countries = {\n  all: countriesAll\n};\n\n_.each(countriesAll, function (country) {\n  // prefer assigned country codes over inactive ones\n  var exportedAlpha2 = exports.countries[country.alpha2];\n\n  if (!exportedAlpha2 || exportedAlpha2.status === 'deleted') {\n    exports.countries[country.alpha2] = country;\n  }\n\n  var exportedAlpha3 = exports.countries[country.alpha3];\n\n  if (!exportedAlpha3 || exportedAlpha3.status === 'deleted') {\n    exports.countries[country.alpha3] = country;\n  }\n});\n\nexports.currencies = {\n  all: currenciesAll\n};\n\n_.each(currenciesAll, function (currency) {\n  //If the symbol isn't available, default to the currency code\n  var symbol = getSymbol(currency.code);\n\n  if (symbol == '?') {\n    symbol = currency.code;\n  }\n\n  currency.symbol = symbol;\n  exports.currencies[currency.code] = currency;\n});\n\nexports.languages = {\n  all: languagesAll\n}; // Note that for the languages there are several entries with the same alpha3 -\n// eg Dutch and Flemish. Not sure how to best deal with that - here whichever\n// comes last wins.\n\n_.each(languagesAll, function (language) {\n  exports.languages[language.alpha2] = language;\n  exports.languages[language.bibliographic] = language;\n  exports.languages[language.alpha3] = language;\n});\n\nexports.lookup = lookup({\n  countries: countriesAll,\n  currencies: currenciesAll,\n  languages: languagesAll\n});\nvar callingCountries = {\n  all: []\n};\n\nvar callingCodesAll = _.reduce(countriesAll, function (codes, country) {\n  if (country.countryCallingCodes && country.countryCallingCodes.length) {\n    callingCountries.all.push(country);\n    callingCountries[country.alpha2] = country;\n    callingCountries[country.alpha3] = country;\n\n    _.each(country.countryCallingCodes, function (code) {\n      if (codes.indexOf(code) == -1) {\n        codes.push(code);\n      }\n    });\n  }\n\n  return codes;\n}, []);\n\ndelete callingCountries['']; // remove empty alpha3s\n\nexports.callingCountries = callingCountries;\ncallingCodesAll.sort(function (a, b) {\n  var parse = function (str) {\n    return parseInt(str);\n  };\n\n  var splitA = _.map(a.split(' '), parse);\n\n  var splitB = _.map(b.split(' '), parse);\n\n  if (splitA[0] < splitB[0]) {\n    return -1;\n  } else if (splitA[0] > splitB[0]) {\n    return 1;\n  } else {\n    // Same - check split[1]\n    if (splitA[1] === undefined && splitB[1] !== undefined) {\n      return -1;\n    } else if (splitA[1] !== undefined && splitB[1] === undefined) {\n      return 1;\n    } else if (splitA[1] < splitB[1]) {\n      return -1;\n    } else if (splitA[1] > splitB[1]) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n});\nexports.callingCodes = {\n  all: callingCodesAll\n};","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/node_modules/country-data/index.js"],"names":["_","require","continents","regions","countriesAll","currenciesAll","languagesAll","lookup","getSymbol","exports","countries","all","each","country","exportedAlpha2","alpha2","status","exportedAlpha3","alpha3","currencies","currency","symbol","code","languages","language","bibliographic","callingCountries","callingCodesAll","reduce","codes","countryCallingCodes","length","push","indexOf","sort","a","b","parse","str","parseInt","splitA","map","split","splitB","undefined","callingCodes"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _ = require('underscore');\nvar continents = require('./data/continents');\nvar regions = require('./data/regions');\nvar countriesAll = require('./data/countries.json');\nvar currenciesAll = require('./data/currencies.json');\nvar languagesAll = require('./data/languages.json');\nvar lookup = require('./lookup');\n\nvar getSymbol = require('currency-symbol-map')\n\nexports.continents = continents;\nexports.regions = regions;\n\nexports.countries = {\n  all: countriesAll,\n};\n\n_.each(countriesAll, function (country) {\n  // prefer assigned country codes over inactive ones\n  var exportedAlpha2 = exports.countries[country.alpha2];\n  if (!exportedAlpha2 || exportedAlpha2.status === 'deleted') {\n    exports.countries[country.alpha2] = country;\n  }\n\n  var exportedAlpha3 = exports.countries[country.alpha3];\n  if (!exportedAlpha3 || exportedAlpha3.status === 'deleted') {\n    exports.countries[country.alpha3] = country;\n  }\n});\n\nexports.currencies = {\n  all: currenciesAll,\n};\n\n_.each(currenciesAll, function (currency) {\n  //If the symbol isn't available, default to the currency code\n  var symbol = getSymbol(currency.code);\n  if (symbol == '?') {\n    symbol = currency.code;\n  }\n\n  currency.symbol = symbol;\n  exports.currencies[currency.code] = currency;\n});\n\nexports.languages = {\n  all: languagesAll,\n};\n\n// Note that for the languages there are several entries with the same alpha3 -\n// eg Dutch and Flemish. Not sure how to best deal with that - here whichever\n// comes last wins.\n_.each(languagesAll, function (language) {\n  exports.languages[language.alpha2] = language;\n  exports.languages[language.bibliographic] = language;\n  exports.languages[language.alpha3] = language;\n});\n\nexports.lookup = lookup({\n    countries: countriesAll,\n    currencies: currenciesAll,\n    languages: languagesAll\n});\n\nvar callingCountries = {all: []};\n\nvar callingCodesAll = _.reduce(countriesAll, function (codes, country) {\n  if (country.countryCallingCodes && country.countryCallingCodes.length) {\n    callingCountries.all.push(country);\n\n    callingCountries[country.alpha2] = country;\n    callingCountries[country.alpha3] = country;\n\n    _.each(country.countryCallingCodes, function (code) {\n      if (codes.indexOf(code) == -1) {\n        codes.push(code);\n      }\n    });\n  }\n  return codes;\n}, []);\n\ndelete callingCountries['']; // remove empty alpha3s\nexports.callingCountries = callingCountries;\n\ncallingCodesAll.sort(function (a, b) {\n  var parse = function (str) { return parseInt(str) };\n  var splitA = _.map(a.split(' '), parse);\n  var splitB = _.map(b.split(' '), parse);\n\n  if (splitA[0] < splitB[0]) {\n    return -1;\n  } else if (splitA[0] > splitB[0]) {\n    return 1;\n  } else {\n    // Same - check split[1]\n    if (splitA[1] === undefined && splitB[1] !== undefined) {\n      return -1;\n    } else if (splitA[1] !== undefined && splitB[1] === undefined) {\n      return 1;\n    } else if (splitA[1] < splitB[1]) {\n      return -1;\n    } else if (splitA[1] > splitB[1]) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n});\n\nexports.callingCodes = {\n  all: callingCodesAll\n};\n"]},"metadata":{},"sourceType":"script"}