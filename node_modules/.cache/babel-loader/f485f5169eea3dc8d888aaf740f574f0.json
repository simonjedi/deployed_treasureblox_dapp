{"ast":null,"code":"import { ERROR } from \"./error\";\nexport function isSignalTypePairing(signal) {\n  return signal.method === \"pairing\";\n}\nexport function isSignalTypeUri(signal) {\n  return signal.method === \"uri\";\n}\nexport function isSequenceRespondedStatus(status) {\n  return status === \"responded\";\n}\nexport function isSequenceResponded(pending) {\n  return isSequenceRespondedStatus(pending.status) && \"outcome\" in pending;\n}\nexport function isSequenceRejected(response) {\n  return \"reason\" in response;\n}\nexport function isSequenceFailed(outcome) {\n  return \"reason\" in outcome;\n}\nexport function isPairingRespondedStatus(status) {\n  return status === \"responded\";\n}\nexport function isPairingResponded(pending) {\n  return isPairingRespondedStatus(pending.status) && \"outcome\" in pending;\n}\nexport function isPairingRejected(response) {\n  return \"reason\" in response;\n}\nexport function isPairingFailed(outcome) {\n  return \"reason\" in outcome;\n}\nexport function isSessionRespondedStatus(status) {\n  return status === \"responded\";\n}\nexport function isSessionResponded(pending) {\n  return isPairingRespondedStatus(pending.status) && \"outcome\" in pending;\n}\nexport function isSessionRejected(response) {\n  return \"reason\" in response;\n}\nexport function isSessionFailed(outcome) {\n  return \"reason\" in outcome;\n}\nexport function isStateUpdatedEvent(event) {\n  return \"update\" in event;\n}\nexport function validateSessionProposeParamsPermissions(permissions) {\n  const blockchainPermissionsValidation = validateBlockchainPermissions(permissions.blockchain);\n\n  if (isValidationInvalid(blockchainPermissionsValidation)) {\n    return blockchainPermissionsValidation;\n  }\n\n  const jsonRpcPermissionsValidation = validateJsonRpcPermissions(permissions.jsonrpc);\n\n  if (isValidationInvalid(jsonRpcPermissionsValidation)) {\n    return jsonRpcPermissionsValidation;\n  }\n\n  const notificationPermissionsValidation = validateNotificationPermissions(permissions.notifications);\n\n  if (isValidationInvalid(notificationPermissionsValidation)) {\n    return notificationPermissionsValidation;\n  }\n\n  return formatValidResult();\n}\nexport function validateSessionProposeParamsMetadata(metadata) {\n  if (!isValidString(metadata.name)) {\n    return formatInvalidResult(ERROR.MISSING_OR_INVALID.format({\n      name: \"metadata name\"\n    }));\n  }\n\n  if (!isValidString(metadata.description)) {\n    return formatInvalidResult(ERROR.MISSING_OR_INVALID.format({\n      name: \"metadata description\"\n    }));\n  }\n\n  if (typeof metadata.url === \"undefined\" || !isValidUrl(metadata.url)) {\n    return formatInvalidResult(ERROR.MISSING_OR_INVALID.format({\n      name: \"metadata url\"\n    }));\n  }\n\n  if (typeof metadata.icons === \"undefined\" || !isValidArray(metadata.icons, isValidUrl)) {\n    return formatInvalidResult(ERROR.MISSING_OR_INVALID.format({\n      name: \"metadata icons\"\n    }));\n  }\n\n  return formatValidResult();\n}\nexport function validateSessionProposeParams(params) {\n  const permissionsValidation = validateSessionProposeParamsPermissions(params.permissions);\n\n  if (isValidationInvalid(permissionsValidation)) {\n    return permissionsValidation;\n  }\n\n  const metadataValidation = validateSessionProposeParamsMetadata(params.metadata);\n\n  if (isValidationInvalid(metadataValidation)) {\n    return metadataValidation;\n  }\n\n  return formatValidResult();\n}\nexport function validateSessionRespondParams(params) {\n  if (params.approved) {\n    if (typeof params.response === \"undefined\") {\n      return formatInvalidResult(ERROR.MISSING_RESPONSE.format({\n        context: \"session\"\n      }));\n    }\n\n    const stateValidation = validateBlockchainState(params.response.state, params.proposal.permissions.blockchain);\n\n    if (isValidationInvalid(stateValidation)) {\n      return stateValidation;\n    }\n\n    const metadataValidation = validateSessionProposeParamsMetadata(params.response.metadata);\n\n    if (isValidationInvalid(metadataValidation)) {\n      return metadataValidation;\n    }\n  }\n\n  return formatValidResult();\n}\nexport function validateBlockchainPermissions(blockchain) {\n  if (typeof blockchain === \"undefined\" || typeof blockchain.chains === \"undefined\" || !isValidArray(blockchain.chains, isValidChainId)) {\n    return formatInvalidResult(ERROR.MISSING_OR_INVALID.format({\n      name: \"blockchain permissions\"\n    }));\n  }\n\n  return formatValidResult();\n}\nexport function validateJsonRpcPermissions(jsonrpc) {\n  if (typeof jsonrpc === \"undefined\" || typeof jsonrpc.methods === \"undefined\" || !isValidArray(jsonrpc.methods, isValidString)) {\n    return formatInvalidResult(ERROR.MISSING_OR_INVALID.format({\n      name: \"jsonrpc permissions\"\n    }));\n  }\n\n  return formatValidResult();\n}\nexport function validateNotificationPermissions(notifications) {\n  if (typeof notifications === \"undefined\" || typeof notifications.types === \"undefined\" || !isValidArray(notifications.types, isValidString)) {\n    return formatInvalidResult(ERROR.MISSING_OR_INVALID.format({\n      name: \"notification permissions\"\n    }));\n  }\n\n  return formatValidResult();\n}\nexport function validateBlockchainState(state, blockchain) {\n  if (typeof blockchain === \"undefined\" || typeof blockchain.chains === \"undefined\" || !isValidArray(blockchain.chains, isValidChainId)) {\n    return formatInvalidResult(ERROR.MISSING_OR_INVALID.format({\n      name: \"blockchain permissions\"\n    }));\n  }\n\n  if (typeof state === \"undefined\" || typeof state.accounts === \"undefined\" || !isValidArray(state.accounts, isValidAccountId)) {\n    return formatInvalidResult(ERROR.MISSING_OR_INVALID.format({\n      name: \"state accounts\"\n    }));\n  }\n\n  const mismatched = state.accounts.filter(accountId => {\n    const [namespace, reference] = accountId.split(\":\");\n    const chainId = `${namespace}:${reference}`;\n    return !blockchain.chains.includes(chainId);\n  });\n\n  if (mismatched.length) {\n    return formatInvalidResult(ERROR.MISMATCHED_ACCOUNTS.format({\n      mismatched\n    }));\n  }\n\n  return formatValidResult();\n}\nexport function isValidArray(arr, itemCondition) {\n  if (Array.isArray(arr)) {\n    if (typeof itemCondition !== \"undefined\" && arr.length) {\n      const matches = arr.filter(itemCondition);\n      return matches.length === arr.length;\n    } else {\n      return true;\n    }\n  }\n\n  return false;\n}\nexport function isValidString(value) {\n  return typeof value === \"string\" && !!value.trim();\n}\nexport function isValidChainId(value) {\n  if (isValidString(value) && value.includes(\":\")) {\n    const split = value.split(\":\");\n    return split.length === 2;\n  }\n\n  return false;\n}\nexport function isValidAccountId(value) {\n  if (isValidString(value) && value.includes(\":\")) {\n    const split = value.split(\":\");\n\n    if (split.length === 3) {\n      const chainId = split[0] + \":\" + split[1];\n      return !!split[2] && isValidChainId(chainId);\n    }\n  }\n\n  return false;\n}\nexport function isValidUrl(value) {\n  if (isValidString(value)) {\n    try {\n      const url = new URL(value);\n      return typeof url !== \"undefined\";\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return false;\n}\nexport function isValidationInvalid(validation) {\n  return \"valid\" in validation && validation.valid === false && \"error\" in validation && typeof validation.error.code === \"number\" && typeof validation.error.message === \"string\";\n}\nexport function formatValidResult() {\n  return {\n    valid: true\n  };\n}\nexport function formatInvalidResult(error) {\n  return {\n    valid: false,\n    error\n  };\n}","map":{"version":3,"sources":["../../src/validators.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { ERROR } from \"./error\";\nexport function isSignalTypePairing(signal) {\n    return signal.method === \"pairing\";\n}\nexport function isSignalTypeUri(signal) {\n    return signal.method === \"uri\";\n}\nexport function isSequenceRespondedStatus(status) {\n    return status === \"responded\";\n}\nexport function isSequenceResponded(pending) {\n    return isSequenceRespondedStatus(pending.status) && \"outcome\" in pending;\n}\nexport function isSequenceRejected(response) {\n    return \"reason\" in response;\n}\nexport function isSequenceFailed(outcome) {\n    return \"reason\" in outcome;\n}\nexport function isPairingRespondedStatus(status) {\n    return status === \"responded\";\n}\nexport function isPairingResponded(pending) {\n    return isPairingRespondedStatus(pending.status) && \"outcome\" in pending;\n}\nexport function isPairingRejected(response) {\n    return \"reason\" in response;\n}\nexport function isPairingFailed(outcome) {\n    return \"reason\" in outcome;\n}\nexport function isSessionRespondedStatus(status) {\n    return status === \"responded\";\n}\nexport function isSessionResponded(pending) {\n    return isPairingRespondedStatus(pending.status) && \"outcome\" in pending;\n}\nexport function isSessionRejected(response) {\n    return \"reason\" in response;\n}\nexport function isSessionFailed(outcome) {\n    return \"reason\" in outcome;\n}\nexport function isStateUpdatedEvent(event) {\n    return \"update\" in event;\n}\nexport function validateSessionProposeParamsPermissions(permissions) {\n    const blockchainPermissionsValidation = validateBlockchainPermissions(permissions.blockchain);\n    if (isValidationInvalid(blockchainPermissionsValidation)) {\n        return blockchainPermissionsValidation;\n    }\n    const jsonRpcPermissionsValidation = validateJsonRpcPermissions(permissions.jsonrpc);\n    if (isValidationInvalid(jsonRpcPermissionsValidation)) {\n        return jsonRpcPermissionsValidation;\n    }\n    const notificationPermissionsValidation = validateNotificationPermissions(permissions.notifications);\n    if (isValidationInvalid(notificationPermissionsValidation)) {\n        return notificationPermissionsValidation;\n    }\n    return formatValidResult();\n}\nexport function validateSessionProposeParamsMetadata(metadata) {\n    if (!isValidString(metadata.name)) {\n        return formatInvalidResult(ERROR.MISSING_OR_INVALID.format({ name: \"metadata name\" }));\n    }\n    if (!isValidString(metadata.description)) {\n        return formatInvalidResult(ERROR.MISSING_OR_INVALID.format({ name: \"metadata description\" }));\n    }\n    if (typeof metadata.url === \"undefined\" || !isValidUrl(metadata.url)) {\n        return formatInvalidResult(ERROR.MISSING_OR_INVALID.format({ name: \"metadata url\" }));\n    }\n    if (typeof metadata.icons === \"undefined\" || !isValidArray(metadata.icons, isValidUrl)) {\n        return formatInvalidResult(ERROR.MISSING_OR_INVALID.format({ name: \"metadata icons\" }));\n    }\n    return formatValidResult();\n}\nexport function validateSessionProposeParams(params) {\n    const permissionsValidation = validateSessionProposeParamsPermissions(params.permissions);\n    if (isValidationInvalid(permissionsValidation)) {\n        return permissionsValidation;\n    }\n    const metadataValidation = validateSessionProposeParamsMetadata(params.metadata);\n    if (isValidationInvalid(metadataValidation)) {\n        return metadataValidation;\n    }\n    return formatValidResult();\n}\nexport function validateSessionRespondParams(params) {\n    if (params.approved) {\n        if (typeof params.response === \"undefined\") {\n            return formatInvalidResult(ERROR.MISSING_RESPONSE.format({ context: \"session\" }));\n        }\n        const stateValidation = validateBlockchainState(params.response.state, params.proposal.permissions.blockchain);\n        if (isValidationInvalid(stateValidation)) {\n            return stateValidation;\n        }\n        const metadataValidation = validateSessionProposeParamsMetadata(params.response.metadata);\n        if (isValidationInvalid(metadataValidation)) {\n            return metadataValidation;\n        }\n    }\n    return formatValidResult();\n}\nexport function validateBlockchainPermissions(blockchain) {\n    if (typeof blockchain === \"undefined\" ||\n        typeof blockchain.chains === \"undefined\" ||\n        !isValidArray(blockchain.chains, isValidChainId)) {\n        return formatInvalidResult(ERROR.MISSING_OR_INVALID.format({ name: \"blockchain permissions\" }));\n    }\n    return formatValidResult();\n}\nexport function validateJsonRpcPermissions(jsonrpc) {\n    if (typeof jsonrpc === \"undefined\" ||\n        typeof jsonrpc.methods === \"undefined\" ||\n        !isValidArray(jsonrpc.methods, isValidString)) {\n        return formatInvalidResult(ERROR.MISSING_OR_INVALID.format({ name: \"jsonrpc permissions\" }));\n    }\n    return formatValidResult();\n}\nexport function validateNotificationPermissions(notifications) {\n    if (typeof notifications === \"undefined\" ||\n        typeof notifications.types === \"undefined\" ||\n        !isValidArray(notifications.types, isValidString)) {\n        return formatInvalidResult(ERROR.MISSING_OR_INVALID.format({ name: \"notification permissions\" }));\n    }\n    return formatValidResult();\n}\nexport function validateBlockchainState(state, blockchain) {\n    if (typeof blockchain === \"undefined\" ||\n        typeof blockchain.chains === \"undefined\" ||\n        !isValidArray(blockchain.chains, isValidChainId)) {\n        return formatInvalidResult(ERROR.MISSING_OR_INVALID.format({ name: \"blockchain permissions\" }));\n    }\n    if (typeof state === \"undefined\" ||\n        typeof state.accounts === \"undefined\" ||\n        !isValidArray(state.accounts, isValidAccountId)) {\n        return formatInvalidResult(ERROR.MISSING_OR_INVALID.format({ name: \"state accounts\" }));\n    }\n    const mismatched = state.accounts.filter(accountId => {\n        const [namespace, reference] = accountId.split(\":\");\n        const chainId = `${namespace}:${reference}`;\n        return !blockchain.chains.includes(chainId);\n    });\n    if (mismatched.length) {\n        return formatInvalidResult(ERROR.MISMATCHED_ACCOUNTS.format({ mismatched }));\n    }\n    return formatValidResult();\n}\nexport function isValidArray(arr, itemCondition) {\n    if (Array.isArray(arr)) {\n        if (typeof itemCondition !== \"undefined\" && arr.length) {\n            const matches = arr.filter(itemCondition);\n            return matches.length === arr.length;\n        }\n        else {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isValidString(value) {\n    return typeof value === \"string\" && !!value.trim();\n}\nexport function isValidChainId(value) {\n    if (isValidString(value) && value.includes(\":\")) {\n        const split = value.split(\":\");\n        return split.length === 2;\n    }\n    return false;\n}\nexport function isValidAccountId(value) {\n    if (isValidString(value) && value.includes(\":\")) {\n        const split = value.split(\":\");\n        if (split.length === 3) {\n            const chainId = split[0] + \":\" + split[1];\n            return !!split[2] && isValidChainId(chainId);\n        }\n    }\n    return false;\n}\nexport function isValidUrl(value) {\n    if (isValidString(value)) {\n        try {\n            const url = new URL(value);\n            return typeof url !== \"undefined\";\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    return false;\n}\nexport function isValidationInvalid(validation) {\n    return (\"valid\" in validation &&\n        validation.valid === false &&\n        \"error\" in validation &&\n        typeof validation.error.code === \"number\" &&\n        typeof validation.error.message === \"string\");\n}\nexport function formatValidResult() {\n    return { valid: true };\n}\nexport function formatInvalidResult(error) {\n    return { valid: false, error };\n}\n//# sourceMappingURL=validators.js.map"]},"metadata":{},"sourceType":"module"}