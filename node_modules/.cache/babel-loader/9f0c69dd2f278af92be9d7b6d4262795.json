{"ast":null,"code":"import * as qs from \"query-string\";\nimport { safeJsonParse, safeJsonStringify } from \"@walletconnect/safe-json\";\nexport function formatUri(params) {\n  return `${params.protocol}:${params.topic}@${params.version}?` + qs.stringify({\n    publicKey: params.publicKey,\n    controller: params.controller,\n    relay: safeJsonStringify(params.relay)\n  });\n}\nexport function parseUri(str) {\n  const pathStart = str.indexOf(\":\");\n  const pathEnd = str.indexOf(\"?\") !== -1 ? str.indexOf(\"?\") : undefined;\n  const protocol = str.substring(0, pathStart);\n  const path = str.substring(pathStart + 1, pathEnd);\n  const requiredValues = path.split(\"@\");\n  const queryString = typeof pathEnd !== \"undefined\" ? str.substr(pathEnd) : \"\";\n  const queryParams = qs.parse(queryString);\n  const result = {\n    protocol,\n    topic: requiredValues[0],\n    version: parseInt(requiredValues[1], 10),\n    publicKey: queryParams.publicKey,\n    controller: queryParams.controller === \"true\",\n    relay: safeJsonParse(queryParams.relay)\n  };\n  return result;\n}","map":{"version":3,"sources":["../../src/uri.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAZ,MAAoB,cAApB;AAEA,SAAS,aAAT,EAAwB,iBAAxB,QAAiD,0BAAjD;AAIA,OAAM,SAAU,SAAV,CAAoB,MAApB,EAAyC;AAC7C,SACE,GAAG,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,GAApD,GACA,EAAE,CAAC,SAAH,CAAa;AACX,IAAA,SAAS,EAAE,MAAM,CAAC,SADP;AAEX,IAAA,UAAU,EAAE,MAAM,CAAC,UAFR;AAGX,IAAA,KAAK,EAAE,iBAAiB,CAAC,MAAM,CAAC,KAAR;AAHb,GAAb,CAFF;AAQD;AAED,OAAM,SAAU,QAAV,CAAmB,GAAnB,EAA8B;AAClC,QAAM,SAAS,GAAW,GAAG,CAAC,OAAJ,CAAY,GAAZ,CAA1B;AACA,QAAM,OAAO,GAAuB,GAAG,CAAC,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAAtB,GAA0B,GAAG,CAAC,OAAJ,CAAY,GAAZ,CAA1B,GAA6C,SAAjF;AACA,QAAM,QAAQ,GAAW,GAAG,CAAC,SAAJ,CAAc,CAAd,EAAiB,SAAjB,CAAzB;AACA,QAAM,IAAI,GAAW,GAAG,CAAC,SAAJ,CAAc,SAAS,GAAG,CAA1B,EAA6B,OAA7B,CAArB;AACA,QAAM,cAAc,GAAG,IAAI,CAAC,KAAL,CAAW,GAAX,CAAvB;AACA,QAAM,WAAW,GAAW,OAAO,OAAP,KAAmB,WAAnB,GAAiC,GAAG,CAAC,MAAJ,CAAW,OAAX,CAAjC,GAAuD,EAAnF;AACA,QAAM,WAAW,GAAG,EAAE,CAAC,KAAH,CAAS,WAAT,CAApB;AACA,QAAM,MAAM,GAAG;AACb,IAAA,QADa;AAEb,IAAA,KAAK,EAAE,cAAc,CAAC,CAAD,CAFR;AAGb,IAAA,OAAO,EAAE,QAAQ,CAAC,cAAc,CAAC,CAAD,CAAf,EAAoB,EAApB,CAHJ;AAIb,IAAA,SAAS,EAAE,WAAW,CAAC,SAJV;AAKb,IAAA,UAAU,EAAE,WAAW,CAAC,UAAZ,KAA2B,MAL1B;AAMb,IAAA,KAAK,EAAE,aAAa,CAAC,WAAW,CAAC,KAAb;AANP,GAAf;AAQA,SAAO,MAAP;AACD","sourceRoot":"","sourcesContent":["import * as qs from \"query-string\";\nimport { safeJsonParse, safeJsonStringify } from \"@walletconnect/safe-json\";\nexport function formatUri(params) {\n    return (`${params.protocol}:${params.topic}@${params.version}?` +\n        qs.stringify({\n            publicKey: params.publicKey,\n            controller: params.controller,\n            relay: safeJsonStringify(params.relay),\n        }));\n}\nexport function parseUri(str) {\n    const pathStart = str.indexOf(\":\");\n    const pathEnd = str.indexOf(\"?\") !== -1 ? str.indexOf(\"?\") : undefined;\n    const protocol = str.substring(0, pathStart);\n    const path = str.substring(pathStart + 1, pathEnd);\n    const requiredValues = path.split(\"@\");\n    const queryString = typeof pathEnd !== \"undefined\" ? str.substr(pathEnd) : \"\";\n    const queryParams = qs.parse(queryString);\n    const result = {\n        protocol,\n        topic: requiredValues[0],\n        version: parseInt(requiredValues[1], 10),\n        publicKey: queryParams.publicKey,\n        controller: queryParams.controller === \"true\",\n        relay: safeJsonParse(queryParams.relay),\n    };\n    return result;\n}\n//# sourceMappingURL=uri.js.map"]},"metadata":{},"sourceType":"module"}