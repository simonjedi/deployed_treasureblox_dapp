{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/treasure-blox/src/Connection.js\",\n    _s = $RefreshSig$();\n\n// App.js\nimport Reacts from 'react';\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Connection(props) {\n  _s();\n\n  const wallet = useWallet();\n  state = {\n    isToggleOn: false\n  };\n\n  const connectWallet = async e => {\n    e.preventDefault();\n    await wallet.connect();\n  };\n\n  const handleClick = async e => {\n    e.preventDefault();\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  };\n\n  this.handleClick = this.handleClick.bind(this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: connectWallet,\n      className: \"customButton enableEthereumButton\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleClick,\n      children: \"click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.isToggleOn ? 'ON' : 'OFF'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n} // Wrap everything in <UseWalletProvider />\n\n\n_s(Connection, \"i+/qxb0flJRE8MgvazOGMkNRtsk=\", false, function () {\n  return [useWallet];\n});\n\n_c = Connection;\nexport default (() => /*#__PURE__*/_jsxDEV(UseWalletProvider, {\n  chainId: 1337,\n  connectors: {\n    // This is how connectors get configured\n    provided: {\n      provider: window.cleanEthereum\n    }\n  },\n  children: /*#__PURE__*/_jsxDEV(Connection, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 3\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"Connection\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/treasure-blox/src/Connection.js"],"names":["Reacts","useWallet","UseWalletProvider","Button","Connection","props","wallet","state","isToggleOn","connectWallet","e","preventDefault","connect","handleClick","setState","prevState","bind","provided","provider","window","cleanEthereum"],"mappings":";;;AAAA;AAEA,OAAOA,MAAP,MAAmB,OAAnB;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,YAA7C;AACA,SAASC,MAAT,QAAuB,iBAAvB;;;AAMA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEAM,EAAAA,KAAK,GAAG;AAACC,IAAAA,UAAU,EAAE;AAAb,GAAR;;AAGA,QAAMC,aAAa,GAAG,MAAMC,CAAN,IAAY;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAML,MAAM,CAACM,OAAP,EAAN;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAG,MAAMH,CAAN,IAAY;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACA,SAAKG,QAAL,CAAcC,SAAS,KAAK;AAC1BP,MAAAA,UAAU,EAAE,CAACO,SAAS,CAACP;AADG,KAAL,CAAvB;AAGD,GALD;;AAQA,OAAKK,WAAL,GAAmB,KAAKA,WAAL,CAAiBG,IAAjB,CAAsB,IAAtB,CAAnB;AAGA,sBAEE;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEP,aAAjB;AAAgC,MAAA,SAAS,EAAC,mCAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAKA;AAAQ,MAAA,OAAO,EAAE,KAAKI,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,eASA;AAAA,gBAAM,KAAKN,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B;AAArC;AAAA;AAAA;AAAA;AAAA,YATA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAiBD,C,CAGD;;;GA1CSJ,U;UACQH,S;;;KADRG,U;AA2CT,gBAAe,mBACb,QAAC,iBAAD;AACE,EAAA,OAAO,EAAE,IADX;AAEE,EAAA,UAAU,EAAE;AACV;AACAa,IAAAA,QAAQ,EAAE;AAACC,MAAAA,QAAQ,EAAEC,MAAM,CAACC;AAAlB;AAFA,GAFd;AAAA,yBAQE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,QADF","sourcesContent":["// App.js\n\nimport Reacts from 'react'\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport { Button } from 'react-bootstrap';\n\n\n\n\n\nfunction Connection(props) {\n  const wallet = useWallet()\n\n  state = {isToggleOn: false}\n\n\n  const connectWallet = async(e) => {\n    e.preventDefault()\n    await wallet.connect()\n  }\n\n  const handleClick = async(e) => {\n    e.preventDefault()\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  };\n\n\n  this.handleClick = this.handleClick.bind(this);\n\n\n  return (\n\n    <div>\n    <Button onClick={connectWallet} className=\"customButton enableEthereumButton\">Connect Wallet</Button>\n\n\n\n    <button onClick={this.handleClick}>click me\n\n  </button>\n\n    <div>{this.state.isToggleOn ? 'ON' : 'OFF'}\n\n    </div>\n    </div>\n\n  )\n}\n\n\n// Wrap everything in <UseWalletProvider />\nexport default () => (\n  <UseWalletProvider\n    chainId={1337}\n    connectors={{\n      // This is how connectors get configured\n      provided: {provider: window.cleanEthereum},\n    }}\n\n  >\n    <Connection />\n  </UseWalletProvider>\n)\n"]},"metadata":{},"sourceType":"module"}