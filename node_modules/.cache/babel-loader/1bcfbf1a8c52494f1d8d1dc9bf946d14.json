{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst address_1 = require(\"./cry/address\");\n\nconst blake2b_1 = require(\"./cry/blake2b\");\n\nconst secp256k1_1 = require(\"./cry/secp256k1\");\n\nconst fastJsonStableStringify = require('fast-json-stable-stringify');\n\nvar Certificate;\n\n(function (Certificate) {\n  function safeToLowerCase(str) {\n    return typeof str === 'string' ? str.toLowerCase() : str;\n  }\n  /**\n   * deterministically encode cert into JSON\n   * @param cert cert object\n   */\n\n\n  function encode(cert) {\n    return fastJsonStableStringify(Object.assign(Object.assign({}, cert), {\n      signer: safeToLowerCase(cert.signer),\n      signature: cert.signature ? safeToLowerCase(cert.signature) : cert.signature\n    }));\n  }\n\n  Certificate.encode = encode;\n  /**\n   * verify the cert\n   * @param cert cert object with signature\n   */\n\n  function verify(cert) {\n    if (!cert.signature) {\n      throw new Error('signature missing');\n    }\n\n    const {\n      signature\n    } = cert;\n\n    if (!/^0x[0-9a-f]+$/i.test(signature) || signature.length % 2 !== 0) {\n      throw new Error('invalid signature');\n    }\n\n    const encoded = encode(Object.assign(Object.assign({}, cert), {\n      signature: undefined\n    }));\n    const signingHash = blake2b_1.blake2b256(encoded);\n    const pubKey = secp256k1_1.secp256k1.recover(signingHash, Buffer.from(signature.slice(2), 'hex'));\n\n    if (`0x${address_1.publicKeyToAddress(pubKey).toString('hex')}` !== safeToLowerCase(cert.signer)) {\n      throw new Error('signature does not match with signer');\n    }\n  }\n\n  Certificate.verify = verify;\n})(Certificate = exports.Certificate || (exports.Certificate = {}));","map":{"version":3,"sources":["../src/certificate.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,MAAA,WAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEA,MAAM,uBAAuB,GAAG,OAAO,CAAC,4BAAD,CAAvC;;AAmBA,IAAiB,WAAjB;;AAAA,CAAA,UAAiB,WAAjB,EAA4B;AAC1B,WAAS,eAAT,CAAyB,GAAzB,EAAoC;AAClC,WAAO,OAAO,GAAP,KAAe,QAAf,GAA0B,GAAG,CAAC,WAAJ,EAA1B,GAA8C,GAArD;AACD;AACD;;;AAGG;;;AACH,WAAgB,MAAhB,CAAuB,IAAvB,EAAwC;AACtC,WAAO,uBAAuB,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACzB,IADyB,CAAA,EACrB;AACP,MAAA,MAAM,EAAE,eAAe,CAAC,IAAI,CAAC,MAAN,CADhB;AAEP,MAAA,SAAS,EAAE,IAAI,CAAC,SAAL,GAAiB,eAAe,CAAC,IAAI,CAAC,SAAN,CAAhC,GAAmD,IAAI,CAAC;AAF5D,KADqB,CAAA,CAA9B;AAKD;;AANe,EAAA,WAAA,CAAA,MAAA,GAAM,MAAN;AAQhB;;;AAGG;;AACH,WAAgB,MAAhB,CAAuB,IAAvB,EAAwC;AACtC,QAAI,CAAC,IAAI,CAAC,SAAV,EAAqB;AACnB,YAAM,IAAI,KAAJ,CAAU,mBAAV,CAAN;AACD;;AACD,UAAM;AAAE,MAAA;AAAF,QAAgB,IAAtB;;AACA,QAAI,CAAC,iBAAiB,IAAjB,CAAsB,SAAtB,CAAD,IAAqC,SAAS,CAAC,MAAV,GAAmB,CAAnB,KAAyB,CAAlE,EAAqE;AACnE,YAAM,IAAI,KAAJ,CAAU,mBAAV,CAAN;AACD;;AAED,UAAM,OAAO,GAAG,MAAM,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,IAAN,CAAA,EAAU;AAAE,MAAA,SAAS,EAAE;AAAb,KAAV,CAAA,CAAtB;AACA,UAAM,WAAW,GAAG,SAAA,CAAA,UAAA,CAAW,OAAX,CAApB;AAEA,UAAM,MAAM,GAAG,WAAA,CAAA,SAAA,CAAU,OAAV,CAAkB,WAAlB,EAA+B,MAAM,CAAC,IAAP,CAAY,SAAS,CAAC,KAAV,CAAgB,CAAhB,CAAZ,EAAgC,KAAhC,CAA/B,CAAf;;AAEA,QAAI,KAAK,SAAA,CAAA,kBAAA,CAAmB,MAAnB,EAA2B,QAA3B,CAAoC,KAApC,CAA0C,EAA/C,KAAsD,eAAe,CAAC,IAAI,CAAC,MAAN,CAAzE,EAAwF;AACtF,YAAM,IAAI,KAAJ,CAAU,sCAAV,CAAN;AACD;AACF;;AAjBe,EAAA,WAAA,CAAA,MAAA,GAAM,MAAN;AAkBjB,CAtCD,EAAiB,WAAW,GAAX,OAAA,CAAA,WAAA,KAAA,OAAA,CAAA,WAAA,GAAW,EAAX,CAAjB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst address_1 = require(\"./cry/address\");\nconst blake2b_1 = require(\"./cry/blake2b\");\nconst secp256k1_1 = require(\"./cry/secp256k1\");\nconst fastJsonStableStringify = require('fast-json-stable-stringify');\nvar Certificate;\n(function (Certificate) {\n    function safeToLowerCase(str) {\n        return typeof str === 'string' ? str.toLowerCase() : str;\n    }\n    /**\n     * deterministically encode cert into JSON\n     * @param cert cert object\n     */\n    function encode(cert) {\n        return fastJsonStableStringify(Object.assign(Object.assign({}, cert), { signer: safeToLowerCase(cert.signer), signature: cert.signature ? safeToLowerCase(cert.signature) : cert.signature }));\n    }\n    Certificate.encode = encode;\n    /**\n     * verify the cert\n     * @param cert cert object with signature\n     */\n    function verify(cert) {\n        if (!cert.signature) {\n            throw new Error('signature missing');\n        }\n        const { signature } = cert;\n        if (!/^0x[0-9a-f]+$/i.test(signature) || signature.length % 2 !== 0) {\n            throw new Error('invalid signature');\n        }\n        const encoded = encode(Object.assign(Object.assign({}, cert), { signature: undefined }));\n        const signingHash = blake2b_1.blake2b256(encoded);\n        const pubKey = secp256k1_1.secp256k1.recover(signingHash, Buffer.from(signature.slice(2), 'hex'));\n        if (`0x${address_1.publicKeyToAddress(pubKey).toString('hex')}` !== safeToLowerCase(cert.signer)) {\n            throw new Error('signature does not match with signer');\n        }\n    }\n    Certificate.verify = verify;\n})(Certificate = exports.Certificate || (exports.Certificate = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2VydGlmaWNhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvY2VydGlmaWNhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyQ0FBbUQ7QUFDbkQsMkNBQTJDO0FBQzNDLCtDQUE0QztBQUU1QyxNQUFNLHVCQUF1QixHQUFHLE9BQU8sQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO0FBbUJ0RSxJQUFpQixXQUFXLENBc0MzQjtBQXRDRCxXQUFpQixXQUFXO0lBQzFCLFNBQVMsZUFBZSxDQUFDLEdBQVc7UUFDbEMsT0FBTyxPQUFPLEdBQUcsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO0lBQzNELENBQUM7SUFDRDs7O09BR0c7SUFDSCxTQUFnQixNQUFNLENBQUMsSUFBaUI7UUFDdEMsT0FBTyx1QkFBdUIsaUNBQ3pCLElBQUksS0FDUCxNQUFNLEVBQUUsZUFBZSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFDcEMsU0FBUyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLElBQ2xFLENBQUM7SUFDZixDQUFDO0lBTmUsa0JBQU0sU0FNckIsQ0FBQTtJQUVEOzs7T0FHRztJQUNILFNBQWdCLE1BQU0sQ0FBQyxJQUFpQjtRQUN0QyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNuQixNQUFNLElBQUksS0FBSyxDQUFDLG1CQUFtQixDQUFDLENBQUM7U0FDdEM7UUFDRCxNQUFNLEVBQUUsU0FBUyxFQUFFLEdBQUcsSUFBSSxDQUFDO1FBQzNCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ25FLE1BQU0sSUFBSSxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztTQUN0QztRQUVELE1BQU0sT0FBTyxHQUFHLE1BQU0saUNBQU0sSUFBSSxLQUFFLFNBQVMsRUFBRSxTQUFTLElBQUcsQ0FBQztRQUMxRCxNQUFNLFdBQVcsR0FBRyxvQkFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRXhDLE1BQU0sTUFBTSxHQUFHLHFCQUFTLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUV0RixJQUFJLEtBQUssNEJBQWtCLENBQUMsTUFBTSxDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssZUFBZSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUN0RixNQUFNLElBQUksS0FBSyxDQUFDLHNDQUFzQyxDQUFDLENBQUM7U0FDekQ7SUFDSCxDQUFDO0lBakJlLGtCQUFNLFNBaUJyQixDQUFBO0FBQ0gsQ0FBQyxFQXRDZ0IsV0FBVyxHQUFYLG1CQUFXLEtBQVgsbUJBQVcsUUFzQzNCIn0="]},"metadata":{},"sourceType":"script"}