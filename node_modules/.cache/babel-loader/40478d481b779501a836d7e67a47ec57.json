{"ast":null,"code":"import _slicedToArray from\"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import Cell from\"./Cell\";import'./Board.css';import lightsmusic from'./assets/lightsmusic.mp4';import ReactAudioPlayer from'react-audio-player';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Board=/*#__PURE__*/function(_Component){_inherits(Board,_Component);var _super=_createSuper(Board);function Board(props){var _this;_classCallCheck(this,Board);_this=_super.call(this,props);_this.state={hasWon:false,board:_this.createBoard()};return _this;}/* creates a board nrows high/ncols wide, each cell randomly lit or unlit */_createClass(Board,[{key:\"createBoard\",value:function createBoard(){var board=[];// creates an array-of-arrays of true/false values\nfor(var y=0;y<this.props.nrows;y++){var row=[];for(var x=0;x<this.props.ncols;x++){row.push(Math.random()<this.props.chanceLightStartsOn);}board.push(row);}return board;}/* handles changing a cell: update board & determine if winner */},{key:\"flipCellsAround\",value:function flipCellsAround(coord){var _this$props=this.props,ncols=_this$props.ncols,nrows=_this$props.nrows;var board=this.state.board;var _coord$split$map=coord.split(\"-\").map(Number),_coord$split$map2=_slicedToArray(_coord$split$map,2),y=_coord$split$map2[0],x=_coord$split$map2[1];function flipCell(y,x){// if this coord is actually on board, flip it\nif(x>=0&&x<ncols&&y>=0&&y<nrows){board[y][x]=!board[y][x];}}// flips this cell and the cells around it\nflipCell(y,x);flipCell(y,x-1);flipCell(y,x+1);flipCell(y-1,x);flipCell(y+1,x);// wins when every cell is turned off\n// determines is the game has been won\nvar hasWon=board.every(function(row){return row.every(function(cell){return!cell;});});this.setState({board:board,hasWon:hasWon});}/* Renders game board or winning message. */},{key:\"render\",value:function render(){var _this2=this;// if the game is won, shows a winning msg & render nothing else\nif(this.state.hasWon){return/*#__PURE__*/_jsx(\"div\",{className:\"Board-title\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"winner\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"neon-orange\",children:\"YOU\"}),/*#__PURE__*/_jsx(\"span\",{className:\"neon-blue\",children:\"WON!\"})]})});}// makes table board\nvar tblBoard=[];for(var y=0;y<this.props.nrows;y++){var row=[];var _loop=function _loop(x){var c=\"\".concat(y,\"-\").concat(x);row.push(/*#__PURE__*/_jsx(Cell,{isLit:_this2.state.board[y][x],flipCellsAroundMe:function flipCellsAroundMe(){return _this2.flipCellsAround(c);}},c));};for(var x=0;x<this.props.ncols;x++){_loop(x);}tblBoard.push(/*#__PURE__*/_jsx(\"tr\",{children:row},y));}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Board-title\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"neon-orange\",children:\"Blox\"}),/*#__PURE__*/_jsx(\"div\",{className:\"neon-blue\",children:\" Lights Out\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"siteTitle\",children:\"Simply turn out the launch lights!\"}),/*#__PURE__*/_jsx(\"table\",{className:\"Board\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),tblBoard]})})]});}}]);return Board;}(Component);Board.defaultProps={nrows:5,ncols:5,chanceLightStartsOn:0.25};export default Board;","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/PartnershipExample/GamesSelection/LightsOut/Board.js"],"names":["React","Component","Cell","lightsmusic","ReactAudioPlayer","Board","props","state","hasWon","board","createBoard","y","nrows","row","x","ncols","push","Math","random","chanceLightStartsOn","coord","split","map","Number","flipCell","every","cell","setState","tblBoard","c","flipCellsAround","defaultProps"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport Cell from \"./Cell\";\nimport './Board.css';\nimport lightsmusic from './assets/lightsmusic.mp4';\nimport ReactAudioPlayer from 'react-audio-player';\n\n\n\nclass Board extends Component {\n\n  static defaultProps = {\n    nrows: 5,\n    ncols: 5,\n    chanceLightStartsOn: 0.25\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasWon: false,\n      board: this.createBoard()\n    };\n  }\n\n  /* creates a board nrows high/ncols wide, each cell randomly lit or unlit */\n  createBoard() {\n    let board = [];\n    // creates an array-of-arrays of true/false values\n    for(let y = 0; y < this.props.nrows; y++){\n      let row = [];\n      for(let x = 0; x < this.props.ncols; x++){\n        row.push(Math.random() < this.props.chanceLightStartsOn);\n      }\n      board.push(row);\n    }\n    return board\n  }\n\n  /* handles changing a cell: update board & determine if winner */\n  flipCellsAround(coord) {\n    let {ncols, nrows} = this.props;\n    let board = this.state.board;\n    let [y, x] = coord.split(\"-\").map(Number);\n\n\n    function flipCell(y, x) {\n      // if this coord is actually on board, flip it\n      if (x >= 0 && x < ncols && y >= 0 && y < nrows) {\n        board[y][x] = !board[y][x];\n      }\n    }\n\n    // flips this cell and the cells around it\n    flipCell(y, x);\n    flipCell(y, x - 1);\n    flipCell(y, x + 1);\n    flipCell(y - 1, x);\n    flipCell(y + 1, x);\n\n    // wins when every cell is turned off\n    // determines is the game has been won\n    let hasWon = board.every(row => row.every(cell => !cell));\n    this.setState({board: board, hasWon: hasWon});\n  }\n\n\n  /* Renders game board or winning message. */\n  render() {\n\n    // if the game is won, shows a winning msg & render nothing else\n    if(this.state.hasWon){\n      return(\n        <div className='Board-title'>\n          <div className='winner'>\n            <span className='neon-orange'>YOU</span>\n            <span className='neon-blue'>WON!</span>\n          </div>\n        </div>\n      )\n    }\n\n    // makes table board\n    let tblBoard = [];\n    for(let y = 0; y < this.props.nrows; y++){\n      let row = [];\n      for(let x = 0; x < this.props.ncols; x++){\n        let c = `${y}-${x}`;\n        row.push(<Cell\n            key={c}\n            isLit={this.state.board[y][x]}\n            flipCellsAroundMe={() => this.flipCellsAround(c)}\n        />)\n      }\n      tblBoard.push(<tr key={y}>{row}</tr>)\n    }\n\n\n    return(\n      <div>\n\n        <div className='Board-title'>\n          <div className='neon-orange'>Blox</div>\n          <div className='neon-blue'> Lights Out</div>\n        </div>\n        <br/><br/>\n        <div className=\"siteTitle\">Simply turn out the launch lights!</div>\n\n\n        <table className='Board'>\n\n          <tbody>\n\n          <br/><br/>\n\n            {tblBoard}\n          </tbody>\n        </table>\n      </div>\n\n    )\n  }\n}\n\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}