{"ast":null,"code":"\"use strict\";\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.linkedListChanges = exports.linkedListChange = exports.intersection = exports.notEmpty = exports.zeroRange = exports.zip3 = exports.zip = void 0;\n\nvar address_1 = require(\"./address\");\n\nfunction zip(fn, as, bs) {\n  var len = Math.min(as.length, bs.length);\n  var res = [];\n\n  for (var i = 0; i < len; i++) {\n    res.push(fn(as[i], bs[i]));\n  }\n\n  return res;\n}\n\nexports.zip = zip;\n\nfunction zip3(as, bs, cs) {\n  var len = Math.min(as.length, bs.length, cs.length);\n  var res = [];\n\n  for (var i = 0; i < len; i++) {\n    res.push([as[i], bs[i], cs[i]]);\n  }\n\n  return res;\n}\n\nexports.zip3 = zip3;\n\nfunction zeroRange(to) {\n  return Array.from(Array(to).keys());\n}\n\nexports.zeroRange = zeroRange; // https://stackoverflow.com/questions/43118692/typescript-filter-out-nulls-from-an-array\n\nfunction notEmpty(value) {\n  return value !== null && value !== undefined;\n}\n\nexports.notEmpty = notEmpty;\n\nfunction intersection(arrays) {\n  if (arrays.length === 0) {\n    return [];\n  }\n\n  var sets = arrays.map(function (array) {\n    return new Set(array);\n  });\n  var res = [];\n\n  var _loop_1 = function (elem) {\n    if (sets.every(function (set) {\n      return set.has(elem);\n    })) {\n      res.push(elem);\n    }\n  };\n\n  for (var _i = 0, _a = arrays[0]; _i < _a.length; _i++) {\n    var elem = _a[_i];\n\n    _loop_1(elem);\n  }\n\n  return res;\n}\n\nexports.intersection = intersection;\n\nfunction upsert(sortedList, change, comparator) {\n  var oldIdx = sortedList.findIndex(function (a) {\n    return (0, address_1.eqAddress)(a.address, change.address);\n  });\n\n  if (oldIdx === -1) {\n    throw new Error('');\n  }\n\n  sortedList.splice(oldIdx, 1);\n  var newIdx = sortedList.findIndex(function (a) {\n    return comparator(a.value, change.value);\n  });\n\n  if (newIdx === -1) {\n    sortedList.push(change);\n    return sortedList.length - 1;\n  } else {\n    sortedList.splice(newIdx, 0, change);\n    return newIdx;\n  }\n} // Warning: sortedList is modified\n\n\nfunction _linkedListChange(sortedList, change, comparator) {\n  var idx = upsert(sortedList, change, comparator);\n  var greater = idx === 0 ? address_1.NULL_ADDRESS : sortedList[idx - 1].address;\n  var lesser = idx === sortedList.length - 1 ? address_1.NULL_ADDRESS : sortedList[idx + 1].address;\n  return {\n    lesser: lesser,\n    greater: greater\n  };\n}\n\nfunction linkedListChange(sortedList, change, comparator) {\n  var list = sortedList.concat();\n\n  var _a = _linkedListChange(list, change, comparator),\n      lesser = _a.lesser,\n      greater = _a.greater;\n\n  return {\n    lesser: lesser,\n    greater: greater,\n    list: list\n  };\n}\n\nexports.linkedListChange = linkedListChange;\n\nfunction linkedListChanges(sortedList, changeList, comparator) {\n  var listClone = __spreadArray([], sortedList, true);\n\n  var lessers = [];\n  var greaters = [];\n\n  for (var _i = 0, changeList_1 = changeList; _i < changeList_1.length; _i++) {\n    var it_1 = changeList_1[_i];\n\n    var _a = _linkedListChange(listClone, it_1, comparator),\n        lesser = _a.lesser,\n        greater = _a.greater;\n\n    lessers.push(lesser);\n    greaters.push(greater);\n  }\n\n  return {\n    lessers: lessers,\n    greaters: greaters,\n    list: listClone\n  };\n}\n\nexports.linkedListChanges = linkedListChanges;","map":{"version":3,"sources":["../src/collections.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.linkedListChanges = exports.linkedListChange = exports.intersection = exports.notEmpty = exports.zeroRange = exports.zip3 = exports.zip = void 0;\nvar address_1 = require(\"./address\");\nfunction zip(fn, as, bs) {\n    var len = Math.min(as.length, bs.length);\n    var res = [];\n    for (var i = 0; i < len; i++) {\n        res.push(fn(as[i], bs[i]));\n    }\n    return res;\n}\nexports.zip = zip;\nfunction zip3(as, bs, cs) {\n    var len = Math.min(as.length, bs.length, cs.length);\n    var res = [];\n    for (var i = 0; i < len; i++) {\n        res.push([as[i], bs[i], cs[i]]);\n    }\n    return res;\n}\nexports.zip3 = zip3;\nfunction zeroRange(to) {\n    return Array.from(Array(to).keys());\n}\nexports.zeroRange = zeroRange;\n// https://stackoverflow.com/questions/43118692/typescript-filter-out-nulls-from-an-array\nfunction notEmpty(value) {\n    return value !== null && value !== undefined;\n}\nexports.notEmpty = notEmpty;\nfunction intersection(arrays) {\n    if (arrays.length === 0) {\n        return [];\n    }\n    var sets = arrays.map(function (array) { return new Set(array); });\n    var res = [];\n    var _loop_1 = function (elem) {\n        if (sets.every(function (set) { return set.has(elem); })) {\n            res.push(elem);\n        }\n    };\n    for (var _i = 0, _a = arrays[0]; _i < _a.length; _i++) {\n        var elem = _a[_i];\n        _loop_1(elem);\n    }\n    return res;\n}\nexports.intersection = intersection;\nfunction upsert(sortedList, change, comparator) {\n    var oldIdx = sortedList.findIndex(function (a) { return (0, address_1.eqAddress)(a.address, change.address); });\n    if (oldIdx === -1) {\n        throw new Error('');\n    }\n    sortedList.splice(oldIdx, 1);\n    var newIdx = sortedList.findIndex(function (a) { return comparator(a.value, change.value); });\n    if (newIdx === -1) {\n        sortedList.push(change);\n        return sortedList.length - 1;\n    }\n    else {\n        sortedList.splice(newIdx, 0, change);\n        return newIdx;\n    }\n}\n// Warning: sortedList is modified\nfunction _linkedListChange(sortedList, change, comparator) {\n    var idx = upsert(sortedList, change, comparator);\n    var greater = idx === 0 ? address_1.NULL_ADDRESS : sortedList[idx - 1].address;\n    var lesser = idx === sortedList.length - 1 ? address_1.NULL_ADDRESS : sortedList[idx + 1].address;\n    return { lesser: lesser, greater: greater };\n}\nfunction linkedListChange(sortedList, change, comparator) {\n    var list = sortedList.concat();\n    var _a = _linkedListChange(list, change, comparator), lesser = _a.lesser, greater = _a.greater;\n    return { lesser: lesser, greater: greater, list: list };\n}\nexports.linkedListChange = linkedListChange;\nfunction linkedListChanges(sortedList, changeList, comparator) {\n    var listClone = __spreadArray([], sortedList, true);\n    var lessers = [];\n    var greaters = [];\n    for (var _i = 0, changeList_1 = changeList; _i < changeList_1.length; _i++) {\n        var it_1 = changeList_1[_i];\n        var _a = _linkedListChange(listClone, it_1, comparator), lesser = _a.lesser, greater = _a.greater;\n        lessers.push(lesser);\n        greaters.push(greater);\n    }\n    return { lessers: lessers, greaters: greaters, list: listClone };\n}\nexports.linkedListChanges = linkedListChanges;\n//# sourceMappingURL=collections.js.map"]},"metadata":{},"sourceType":"script"}