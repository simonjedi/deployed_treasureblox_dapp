{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/treasure-blox/src/components/Structure/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Countdown from 'react-countdown';\nimport moment from 'moment';\nimport { CardColumns, CardGroup, Card, Button, Container, Nav, Navbar, NavDropdown, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = props => {\n  _s();\n\n  var moment = require('moment'); // require\n  //\n  //\n  // const currentStartDate = Date();\n  // var startDate = new Date(currentStartDate);\n  // // // Hours part from the timestamp\n  // // var startDateHours = startDate.getHours();\n  // // // Minutes part from the timestamp\n  // // var startDateMinutes = startDate.getMinutes();\n  // // // Seconds part from the timestamp\n  // // var startDateSeconds = startDate.getSeconds();\n  //\n  // // Do\n  // var endDate = new Date(props.allGame1_deadline_time * 1000);\n  // // // Hours part from the timestamp\n  // // var endDateHours = endDate.getHours();\n  // // // Minutes part from the timestamp\n  // // var endDateMinutes = endDate.getMinutes();\n  // // // Seconds part from the timestamp\n  // // var endDateSeconds = endDate.getSeconds();\n  //\n  //\n  // function getDifferenceInDays(date1, date2) {\n  //   const diffInMs = Math.abs(date2 - date1);\n  //   return diffInMs / (1000 * 60 * 60 * 24);\n  //   }\n  //\n  // function getDifferenceInHours(date1, date2) {\n  //   const diffInMs = Math.abs(date2 - date1);\n  //   return diffInMs / (1000 * 60 * 60);\n  //   }\n  //\n  // function getDifferenceInMinutes(date1, date2) {\n  //   const diffInMs = Math.abs(date2 - date1);\n  //   return diffInMs / (1000 * 60);\n  //   }\n  //\n  // function getDifferenceInSeconds(date1, date2) {\n  //   const diffInMs = Math.abs(date2 - date1);\n  //   return diffInMs / 1000;\n  //   }\n  //\n  // // console.log(getDifferenceInDays(endDate, startDate));\n  // // console.log(getDifferenceInHours(endDate, startDate));\n  // // console.log(getDifferenceInMinutes(endDate, startDate));\n  //\n  // console.log(getDifferenceInSeconds(startDate, endDate));\n  //\n  // const time = getDifferenceInSeconds(startDate, endDate);\n\n\n  const time = props.allGame1_deadline_time;\n  const [count, setTime] = useState(time);\n  useEffect(props => {\n    const timer = window.setInterval(() => {\n      setTime(prevTime => prevTime - 1); // <-- Change this line!\n    }, 1000);\n    return () => {\n      window.clearInterval(timer);\n    };\n    console.log('test');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attemptPrize\",\n      children: [\"This time slot will expire in \", count, \" seconds!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"pI+uJzMcLiEGodoxy0CkjXo9Upk=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/treasure-blox/src/components/Structure/Timer.js"],"names":["React","Component","useState","useEffect","ReactDOM","Countdown","moment","CardColumns","CardGroup","Card","Button","Container","Nav","Navbar","NavDropdown","Row","Col","Timer","props","require","time","allGame1_deadline_time","count","setTime","timer","window","setInterval","prevTime","clearInterval","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAGA,SAASC,WAAT,EAAqBC,SAArB,EAA+BC,IAA/B,EAAoCC,MAApC,EAA2CC,SAA3C,EAAqDC,GAArD,EAAyDC,MAAzD,EAAgEC,WAAhE,EAA4EC,GAA5E,EAAgFC,GAAhF,QAA2F,iBAA3F;AAEA,OAAO,sCAAP;AACA,OAAO,YAAP;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAQvB,MAAIZ,MAAM,GAAGa,OAAO,CAAC,QAAD,CAApB,CARuB,CAQS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAMC,IAAI,GAAGF,KAAK,CAACG,sBAAnB;AAGA,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBrB,QAAQ,CAACkB,IAAD,CAAjC;AAEAjB,EAAAA,SAAS,CAAEe,KAAD,IAAW;AACnB,UAAMM,KAAK,GAAGC,MAAM,CAACC,WAAP,CAAmB,MAAM;AACrCH,MAAAA,OAAO,CAACI,QAAQ,IAAIA,QAAQ,GAAG,CAAxB,CAAP,CADqC,CACF;AACpC,KAFa,EAEX,IAFW,CAAd;AAGA,WAAO,MAAM;AACXF,MAAAA,MAAM,CAACG,aAAP,CAAqBJ,KAArB;AACD,KAFD;AAGFK,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,GARU,EAQR,EARQ,CAAT;AAiBA,sBAEE;AAAA,2BAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,mDAA6DR,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UAFF;AAUD,CAzFD;;GAAML,K;;KAAAA,K;AA2FN,eAAeA,KAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\nimport Countdown from 'react-countdown';\nimport moment from 'moment';\n\n\nimport { CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown,Row,Col } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Card.css';\n\nconst Timer = (props) => {\n\n\n\n\n\n\n\n  var moment = require('moment'); // require\n  //\n  //\n  // const currentStartDate = Date();\n  // var startDate = new Date(currentStartDate);\n  // // // Hours part from the timestamp\n  // // var startDateHours = startDate.getHours();\n  // // // Minutes part from the timestamp\n  // // var startDateMinutes = startDate.getMinutes();\n  // // // Seconds part from the timestamp\n  // // var startDateSeconds = startDate.getSeconds();\n  //\n  // // Do\n  // var endDate = new Date(props.allGame1_deadline_time * 1000);\n  // // // Hours part from the timestamp\n  // // var endDateHours = endDate.getHours();\n  // // // Minutes part from the timestamp\n  // // var endDateMinutes = endDate.getMinutes();\n  // // // Seconds part from the timestamp\n  // // var endDateSeconds = endDate.getSeconds();\n  //\n  //\n  // function getDifferenceInDays(date1, date2) {\n  //   const diffInMs = Math.abs(date2 - date1);\n  //   return diffInMs / (1000 * 60 * 60 * 24);\n  //   }\n  //\n  // function getDifferenceInHours(date1, date2) {\n  //   const diffInMs = Math.abs(date2 - date1);\n  //   return diffInMs / (1000 * 60 * 60);\n  //   }\n  //\n  // function getDifferenceInMinutes(date1, date2) {\n  //   const diffInMs = Math.abs(date2 - date1);\n  //   return diffInMs / (1000 * 60);\n  //   }\n  //\n  // function getDifferenceInSeconds(date1, date2) {\n  //   const diffInMs = Math.abs(date2 - date1);\n  //   return diffInMs / 1000;\n  //   }\n  //\n  // // console.log(getDifferenceInDays(endDate, startDate));\n  // // console.log(getDifferenceInHours(endDate, startDate));\n  // // console.log(getDifferenceInMinutes(endDate, startDate));\n  //\n  // console.log(getDifferenceInSeconds(startDate, endDate));\n  //\n  // const time = getDifferenceInSeconds(startDate, endDate);\n  const time = props.allGame1_deadline_time;\n\n\n  const [count, setTime] = useState(time);\n\n  useEffect((props) => {\n    const timer = window.setInterval(() => {\n      setTime(prevTime => prevTime - 1); // <-- Change this line!\n    }, 1000);\n    return () => {\n      window.clearInterval(timer);\n    };\n  console.log('test');\n}, []);\n\n\n\n\n\n\n\n\n  return(\n\n    <div>\n\n      <div className=\"attemptPrize\">This time slot will expire in {count} seconds!</div>\n\n    </div>\n\n  );\n\n};\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}