{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/treasure-blox/src/Connection.js\",\n    _s = $RefreshSig$();\n\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport { Button } from 'react-bootstrap';\nimport MyNav from \"./MyNav\";\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Connection = props => {\n  _s();\n\n  const wallet = useWallet(); // const [address, setAddress] = useState('Connect Wallet');\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    const init = async () => {\n      const usersAccount = props.accounts;\n      const stringOfUsersAccount = new String(usersAccount);\n      console.log(stringOfUsersAccount.slice(0, 5)); // \"01\"\n\n      setAddress(stringOfUsersAccount.slice(0, 5));\n    };\n\n    init();\n  });\n\n  const connectWallet = async e => {\n    e.preventDefault();\n    await wallet.connect();\n    const usersAccount = props.accounts;\n    const stringOfUsersAccount = new String(usersAccount);\n    console.log(stringOfUsersAccount.slice(0, 5)); // \"01\"\n\n    setAddress(stringOfUsersAccount.slice(0, 5));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: connectWallet,\n      className: \"customButton enableEthereumButton\",\n      children: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}; // Wrap everything in <UseWalletProvider />\n\n\n_s(Connection, \"Op0/wBxK9c7Ln+hGs0edgZQ9zC0=\", false, function () {\n  return [useWallet];\n});\n\n_c = Connection;\nexport default (props => /*#__PURE__*/_jsxDEV(UseWalletProvider, {\n  chainId: 1337,\n  connectors: {\n    // This is how connectors get configured\n    provided: {\n      provider: window.cleanEthereum\n    }\n  },\n  children: /*#__PURE__*/_jsxDEV(Connection, {\n    accounts: props.accounts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 3\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"Connection\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/treasure-blox/src/Connection.js"],"names":["React","useState","useEffect","useWallet","UseWalletProvider","Button","MyNav","App","Connection","props","wallet","init","usersAccount","accounts","stringOfUsersAccount","String","console","log","slice","setAddress","connectWallet","e","preventDefault","connect","address","provided","provider","window","cleanEthereum"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,YAA7C;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAY;AAAA;;AAE7B,QAAMC,MAAM,GAAGP,SAAS,EAAxB,CAF6B,CAG7B;;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACb;AAGA,UAAMS,IAAI,GAAG,YAAW;AAEtB,YAAMC,YAAY,GAAGH,KAAK,CAACI,QAA3B;AACA,YAAMC,oBAAoB,GAAG,IAAIC,MAAJ,CAAWH,YAAX,CAA7B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,oBAAoB,CAACI,KAArB,CAA2B,CAA3B,EAA8B,CAA9B,CAAZ,EAJsB,CAIyB;;AAC/CC,MAAAA,UAAU,CAACL,oBAAoB,CAACI,KAArB,CAA2B,CAA3B,EAA8B,CAA9B,CAAD,CAAV;AAED,KAPD;;AAQAP,IAAAA,IAAI;AAEL,GAdO,CAAT;;AAkBA,QAAMS,aAAa,GAAG,MAAMC,CAAN,IAAY;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMZ,MAAM,CAACa,OAAP,EAAN;AACA,UAAMX,YAAY,GAAGH,KAAK,CAACI,QAA3B;AACA,UAAMC,oBAAoB,GAAG,IAAIC,MAAJ,CAAWH,YAAX,CAA7B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,oBAAoB,CAACI,KAArB,CAA2B,CAA3B,EAA8B,CAA9B,CAAZ,EALgC,CAKe;;AAC/CC,IAAAA,UAAU,CAACL,oBAAoB,CAACI,KAArB,CAA2B,CAA3B,EAA8B,CAA9B,CAAD,CAAV;AACD,GAPD;;AAkBA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEE,aAAjB;AAAgC,MAAA,SAAS,EAAC,mCAA1C;AAAA,gBAA+EI;AAA/E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA/CD,C,CAiDA;;;GAjDMhB,U;UAEWL,S;;;KAFXK,U;AAkDN,gBAAgBC,KAAD,iBACb,QAAC,iBAAD;AACE,EAAA,OAAO,EAAE,IADX;AAEE,EAAA,UAAU,EAAE;AACV;AACAgB,IAAAA,QAAQ,EAAE;AAACC,MAAAA,QAAQ,EAAEC,MAAM,CAACC;AAAlB;AAFA,GAFd;AAAA,yBAOE,QAAC,UAAD;AAAY,IAAA,QAAQ,EAAEnB,KAAK,CAACI;AAA5B;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,QADF","sourcesContent":["// App.js\n\nimport React, {useState, useEffect} from 'react'\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport { Button } from 'react-bootstrap';\n\nimport MyNav from \"./MyNav\";\nimport App from \"./App\";\n\n\nconst Connection = (props) =>  {\n\n  const wallet = useWallet()\n  // const [address, setAddress] = useState('Connect Wallet');\n\n\n  useEffect(() => {\n     // Update the document title using the browser API\n\n\n     const init = async() => {\n\n       const usersAccount = props.accounts;\n       const stringOfUsersAccount = new String(usersAccount)\n       console.log(stringOfUsersAccount.slice(0, 5)); // \"01\"\n       setAddress(stringOfUsersAccount.slice(0, 5));\n\n     }\n     init()\n\n   });\n\n\n\n  const connectWallet = async(e) => {\n    e.preventDefault()\n    await wallet.connect()\n    const usersAccount = props.accounts;\n    const stringOfUsersAccount = new String(usersAccount)\n    console.log(stringOfUsersAccount.slice(0, 5)); // \"01\"\n    setAddress(stringOfUsersAccount.slice(0, 5));\n  }\n\n\n\n\n\n\n\n\n\n\n  return(\n    <div>\n      <Button onClick={connectWallet} className=\"customButton enableEthereumButton\">{address}</Button>\n    </div>\n  )\n}\n\n// Wrap everything in <UseWalletProvider />\nexport default (props) => (\n  <UseWalletProvider\n    chainId={1337}\n    connectors={{\n      // This is how connectors get configured\n      provided: {provider: window.cleanEthereum},\n    }}>\n\n    <Connection accounts={props.accounts}/>\n\n\n\n  </UseWalletProvider>\n)\n"]},"metadata":{},"sourceType":"module"}