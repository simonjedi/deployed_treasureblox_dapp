{"ast":null,"code":"import { hasParamsLength, methodEndsWith } from \"./misc\";\nexport function isSubscribeRequest(request) {\n  return isSubscribeMethod(request.method) && isSubscribeParams(request.params);\n}\nexport function isSubscribeMethod(method) {\n  return methodEndsWith(method, \"subscribe\");\n}\nexport function isSubscribeParams(params) {\n  return hasParamsLength(params, 1) && \"topic\" in params;\n}\nexport function isPublishRequest(request) {\n  return isPublishMethod(request.method) && isPublishParams(request.params);\n}\nexport function isPublishMethod(method) {\n  return methodEndsWith(method, \"publish\");\n}\nexport function isPublishParams(params) {\n  return hasParamsLength(params, 3) && \"message\" in params && \"topic\" in params && \"ttl\" in params;\n}\nexport function isUnsubscribeRequest(request) {\n  return isUnsubscribeMethod(request.method) && isUnsubscribeParams(request.params);\n}\nexport function isUnsubscribeMethod(method) {\n  return methodEndsWith(method, \"unsubscribe\");\n}\nexport function isUnsubscribeParams(params) {\n  return hasParamsLength(params, 2) && \"id\" in params && \"topic\" in params;\n}\nexport function isSubscriptionRequest(request) {\n  return isSubscriptionMethod(request.method) && isSubscriptionParams(request.params);\n}\nexport function isSubscriptionMethod(method) {\n  return methodEndsWith(method, \"subscription\");\n}\nexport function isSubscriptionParams(params) {\n  return hasParamsLength(params, 2) && \"id\" in params && \"data\" in params;\n}","map":{"version":3,"sources":["../../src/validators.ts"],"names":[],"mappings":"AAEA,SAAS,eAAT,EAA0B,cAA1B,QAAgD,QAAhD;AAKA,OAAM,SAAU,kBAAV,CACJ,OADI,EACmB;AAEvB,SAAO,iBAAiB,CAAC,OAAO,CAAC,MAAT,CAAjB,IAAqC,iBAAiB,CAAC,OAAO,CAAC,MAAT,CAA7D;AACD;AAED,OAAM,SAAU,iBAAV,CAA4B,MAA5B,EAA0C;AAC9C,SAAO,cAAc,CAAC,MAAD,EAAS,WAAT,CAArB;AACD;AAED,OAAM,SAAU,iBAAV,CACJ,MADI,EACO;AAEX,SAAO,eAAe,CAAC,MAAD,EAAS,CAAT,CAAf,IAA8B,WAAW,MAAhD;AACD;AAID,OAAM,SAAU,gBAAV,CACJ,OADI,EACmB;AAEvB,SAAO,eAAe,CAAC,OAAO,CAAC,MAAT,CAAf,IAAmC,eAAe,CAAC,OAAO,CAAC,MAAT,CAAzD;AACD;AAED,OAAM,SAAU,eAAV,CAA0B,MAA1B,EAAwC;AAC5C,SAAO,cAAc,CAAC,MAAD,EAAS,SAAT,CAArB;AACD;AAED,OAAM,SAAU,eAAV,CACJ,MADI,EACO;AAEX,SACE,eAAe,CAAC,MAAD,EAAS,CAAT,CAAf,IACA,aAAa,MADb,IAEA,WAAW,MAFX,IAGA,SAAS,MAJX;AAMD;AAID,OAAM,SAAU,oBAAV,CACJ,OADI,EACmB;AAEvB,SACE,mBAAmB,CAAC,OAAO,CAAC,MAAT,CAAnB,IAAuC,mBAAmB,CAAC,OAAO,CAAC,MAAT,CAD5D;AAGD;AAED,OAAM,SAAU,mBAAV,CAA8B,MAA9B,EAA4C;AAChD,SAAO,cAAc,CAAC,MAAD,EAAS,aAAT,CAArB;AACD;AAED,OAAM,SAAU,mBAAV,CACJ,MADI,EACO;AAEX,SAAO,eAAe,CAAC,MAAD,EAAS,CAAT,CAAf,IAA8B,QAAQ,MAAtC,IAAgD,WAAW,MAAlE;AACD;AAID,OAAM,SAAU,qBAAV,CACJ,OADI,EACmB;AAEvB,SACE,oBAAoB,CAAC,OAAO,CAAC,MAAT,CAApB,IAAwC,oBAAoB,CAAC,OAAO,CAAC,MAAT,CAD9D;AAGD;AAED,OAAM,SAAU,oBAAV,CAA+B,MAA/B,EAA6C;AACjD,SAAO,cAAc,CAAC,MAAD,EAAS,cAAT,CAArB;AACD;AAED,OAAM,SAAU,oBAAV,CACJ,MADI,EACO;AAEX,SAAO,eAAe,CAAC,MAAD,EAAS,CAAT,CAAf,IAA8B,QAAQ,MAAtC,IAAgD,UAAU,MAAjE;AACD","sourceRoot":"","sourcesContent":["import { hasParamsLength, methodEndsWith } from \"./misc\";\nexport function isSubscribeRequest(request) {\n    return isSubscribeMethod(request.method) && isSubscribeParams(request.params);\n}\nexport function isSubscribeMethod(method) {\n    return methodEndsWith(method, \"subscribe\");\n}\nexport function isSubscribeParams(params) {\n    return hasParamsLength(params, 1) && \"topic\" in params;\n}\nexport function isPublishRequest(request) {\n    return isPublishMethod(request.method) && isPublishParams(request.params);\n}\nexport function isPublishMethod(method) {\n    return methodEndsWith(method, \"publish\");\n}\nexport function isPublishParams(params) {\n    return (hasParamsLength(params, 3) &&\n        \"message\" in params &&\n        \"topic\" in params &&\n        \"ttl\" in params);\n}\nexport function isUnsubscribeRequest(request) {\n    return (isUnsubscribeMethod(request.method) && isUnsubscribeParams(request.params));\n}\nexport function isUnsubscribeMethod(method) {\n    return methodEndsWith(method, \"unsubscribe\");\n}\nexport function isUnsubscribeParams(params) {\n    return hasParamsLength(params, 2) && \"id\" in params && \"topic\" in params;\n}\nexport function isSubscriptionRequest(request) {\n    return (isSubscriptionMethod(request.method) && isSubscriptionParams(request.params));\n}\nexport function isSubscriptionMethod(method) {\n    return methodEndsWith(method, \"subscription\");\n}\nexport function isSubscriptionParams(params) {\n    return hasParamsLength(params, 2) && \"id\" in params && \"data\" in params;\n}\n//# sourceMappingURL=validators.js.map"]},"metadata":{},"sourceType":"module"}