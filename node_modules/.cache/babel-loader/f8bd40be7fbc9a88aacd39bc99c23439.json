{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/BloxEscape/Screen.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Bird from './components/Bird';\nimport Obstacles from './components/Obstacles';\nimport { Button, Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport useSound from 'use-sound';\nimport lazer from './assets/Lazer.wav'; // Hook\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useWindowSize() {\n  _s();\n\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    } // Add event listener\n\n\n    window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n_s(useWindowSize, \"WMqaMVAPr0u8CJVTsAIdEuYrbbM=\");\n\nconst Screen = props => {\n  _s2();\n\n  const [playOne] = useSound(lazer, {\n    volume: 5.6\n  });\n  const [play, setPlay] = useState(false);\n\n  const handlePlay = async () => {\n    setPlay(true);\n    setTimeout(function () {}, 1);\n  };\n\n  const {\n    width,\n    height\n  } = useWindowSize();\n  const screenWidth = useWindowSize().width;\n  const screenHeight = useWindowSize().height;\n  const birdLeft = screenWidth / 2;\n  const [birdBottom, setBirdBottom] = useState(useWindowSize().height + 1);\n  const [obstaclesLeft, setObstaclesLeft] = useState(useWindowSize().width + 1);\n  const [obstaclesLeftTwo, setObstaclesLeftTwo] = useState(useWindowSize().width + useWindowSize().width / 2 + 30);\n  const [obstaclesLeftThree, setObstaclesLeftThree] = useState(useWindowSize().width + useWindowSize().width / 2 + 80);\n  const [obstaclesNegHeight, setObstaclesNegHeight] = useState(0);\n  const [obstaclesNegHeightTwo, setObstaclesNegHeightTwo] = useState(0);\n  const [obstaclesNegHeightThree, setObstaclesNegHeightThree] = useState(0);\n  const [randomOpacityValue, setRandomOpacityValue] = useState(0);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const gravity = 3;\n  let obstacleWidth = 30;\n  let obstacleHeight = 200;\n  let gap = 150;\n  let gameTimerId;\n  let obstaclesTimerId;\n  let obstaclesTimerIdTwo;\n  let obstaclesTimerIdThree; //start bird falling\n\n  useEffect(() => {\n    if (birdBottom > 0) {\n      gameTimerId = setInterval(() => {\n        setBirdBottom(birdBottom => birdBottom - gravity);\n      }, 30);\n      return () => {\n        clearInterval(gameTimerId);\n      };\n    } //if i dont have birdBottom as a dependecy, it wont stop\n\n  }, [birdBottom]);\n  console.log(birdBottom); // const jump = () => {\n  //   if (!isGameOver && (birdBottom < screenHeight)) {\n  //     setBirdBottom(birdBottom => birdBottom + 50)\n  //     console.log('jumped')\n  //   }\n  // }\n\n  document.body.onkeyup = function (e) {\n    if (e.keyCode == 32) {\n      console.log(\"JUMP\");\n\n      if (!isGameOver && birdBottom < screenHeight) {\n        setBirdBottom(birdBottom => birdBottom + 50);\n        console.log('jumped');\n      }\n    }\n  }; //start first obstacle\n\n\n  useEffect(() => {\n    if (obstaclesLeft > -80) {\n      obstaclesTimerId = setInterval(() => {\n        setObstaclesLeft(obstaclesLeft => obstaclesLeft - 5);\n      }, 9);\n      return () => {\n        clearInterval(obstaclesTimerId);\n      };\n    } else {\n      setScore(score => score + 1);\n      playOne();\n      setObstaclesLeft(screenWidth);\n      setObstaclesNegHeight(-Math.random() * 120);\n      setRandomOpacityValue(Math.random() * (0.4 - 0.9) + 0.9);\n    }\n  }, [obstaclesLeft]); //start second obstacle\n\n  useEffect(() => {\n    if (obstaclesLeftTwo > -60) {\n      obstaclesTimerIdTwo = setInterval(() => {\n        setObstaclesLeftTwo(obstaclesLeftTwo => obstaclesLeftTwo - 5);\n      }, 20);\n      return () => {\n        clearInterval(obstaclesTimerIdTwo);\n      };\n    } else {\n      setScore(score => score + 1);\n      playOne();\n      setObstaclesLeftTwo(screenWidth);\n      setObstaclesNegHeightTwo(-Math.random() * 100);\n    }\n  }, [obstaclesLeftTwo]); //start second obstacle\n\n  useEffect(() => {\n    if (obstaclesLeftThree > -80) {\n      obstaclesTimerIdThree = setInterval(() => {\n        setObstaclesLeftThree(obstaclesLeftThree => obstaclesLeftThree - 5);\n      }, 25);\n      return () => {\n        clearInterval(obstaclesTimerIdThree);\n      };\n    } else {\n      setScore(score => score + 1);\n      playOne();\n      setObstaclesLeftThree(screenWidth);\n      setObstaclesNegHeightThree(-Math.random() * 100);\n    }\n  }, [obstaclesLeftThree]); //check for collisions\n\n  useEffect(() => {\n    console.log(obstaclesLeft);\n    console.log(screenWidth / 2);\n    console.log(obstaclesLeft > screenWidth / 2);\n\n    if ((birdBottom < obstaclesNegHeight + obstacleHeight + 30 || birdBottom > obstaclesNegHeight + obstacleHeight + gap - 30) && obstaclesLeft > screenWidth / 2 - 30 && obstaclesLeft < screenWidth / 2 + 30 || (birdBottom < obstaclesNegHeightTwo + obstacleHeight + 30 || birdBottom > obstaclesNegHeightTwo + obstacleHeight + gap - 30) && obstaclesLeftTwo > screenWidth / 2 - 30 && obstaclesLeftTwo < screenWidth / 2 + 30 || (birdBottom < obstaclesNegHeightThree + obstacleHeight + 30 || birdBottom > obstaclesNegHeightThree + obstacleHeight + gap - 30) && obstaclesLeftThree > screenWidth / 2 - 30 && obstaclesLeftThree < screenWidth / 2 + 30) {\n      console.log('game over');\n      gameOver();\n    }\n  });\n  useEffect(() => {\n    if (score > 40) {\n      console.log('more');\n      more();\n    }\n  });\n\n  const gameOver = () => {\n    clearInterval(gameTimerId);\n    clearInterval(obstaclesTimerId);\n    clearInterval(obstaclesTimerIdTwo);\n    clearInterval(obstaclesTimerIdThree);\n    setIsGameOver(true);\n  };\n\n  const more = () => {\n    clearInterval(gameTimerId);\n    clearInterval(obstaclesTimerId);\n    clearInterval(obstaclesTimerIdTwo);\n    clearInterval(obstaclesTimerIdThree);\n    setIsGameOver(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: height\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: height / 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 5\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"siteTitle\",\n      style: {\n        fontSize: '30px'\n      },\n      children: \"You Scored Bad Luck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"siteTitle\",\n      style: {\n        fontSize: '30px'\n      },\n      children: [\"Your Score \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Bird, {\n      birdBottom: birdBottom,\n      birdLeft: birdLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Obstacles, {\n      color: '#18427d',\n      obstacleWidth: obstacleWidth,\n      obstacleHeight: obstacleHeight,\n      randomBottom: obstaclesNegHeight,\n      height: height,\n      gap: gap,\n      obstaclesLeft: obstaclesLeft,\n      randomOpacity: randomOpacityValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Obstacles, {\n      color: '#ee9b00',\n      obstacleWidth: obstacleWidth,\n      obstacleHeight: obstacleHeight,\n      randomBottom: obstaclesNegHeightTwo,\n      height: height,\n      gap: gap,\n      obstaclesLeft: obstaclesLeftTwo,\n      randomOpacity: randomOpacityValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Obstacles, {\n      color: '#eb00ee',\n      obstacleWidth: obstacleWidth,\n      obstacleHeight: obstacleHeight,\n      randomBottom: obstaclesNegHeightThree,\n      height: height,\n      gap: gap,\n      obstaclesLeft: obstaclesLeftThree,\n      randomOpacity: randomOpacityValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Screen, \"jwKRVLhhLyXb+lSkkCfI3+VllWc=\", false, function () {\n  return [useSound, useWindowSize, useWindowSize, useWindowSize, useWindowSize, useWindowSize, useWindowSize, useWindowSize, useWindowSize, useWindowSize];\n});\n\n_c = Screen;\nexport default Screen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/BloxEscape/Screen.js"],"names":["React","useEffect","useState","Bird","Obstacles","Button","Container","Nav","Navbar","NavDropdown","useSound","lazer","useWindowSize","windowSize","setWindowSize","width","undefined","height","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Screen","props","playOne","volume","play","setPlay","handlePlay","setTimeout","screenWidth","screenHeight","birdLeft","birdBottom","setBirdBottom","obstaclesLeft","setObstaclesLeft","obstaclesLeftTwo","setObstaclesLeftTwo","obstaclesLeftThree","setObstaclesLeftThree","obstaclesNegHeight","setObstaclesNegHeight","obstaclesNegHeightTwo","setObstaclesNegHeightTwo","obstaclesNegHeightThree","setObstaclesNegHeightThree","randomOpacityValue","setRandomOpacityValue","isGameOver","setIsGameOver","score","setScore","gravity","obstacleWidth","obstacleHeight","gap","gameTimerId","obstaclesTimerId","obstaclesTimerIdTwo","obstaclesTimerIdThree","setInterval","clearInterval","console","log","document","body","onkeyup","e","keyCode","Math","random","gameOver","more","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react';\nimport Bird from './components/Bird'\nimport Obstacles from './components/Obstacles'\nimport { Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport useSound from 'use-sound';\n\nimport lazer from './assets/Lazer.wav';\n\n// Hook\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n\n\n\n\nconst Screen = (props) =>{\n\n  const [playOne]=useSound(lazer,{volume:5.6});\n\n\n\n\n  const [play, setPlay]= useState(false)\n\n  const handlePlay = async() => {\n    setPlay(true);\n    setTimeout(function(){\n    },1);\n  }\n\n\n  const { width, height } = useWindowSize();\n\n\n  const screenWidth = useWindowSize().width;\n  const screenHeight = useWindowSize().height;\n  const birdLeft = screenWidth / 2\n\n  const [birdBottom, setBirdBottom]= useState(useWindowSize().height+1)\n\n  const [obstaclesLeft, setObstaclesLeft]= useState(useWindowSize().width+1)\n\n  const [obstaclesLeftTwo, setObstaclesLeftTwo]= useState(useWindowSize().width + useWindowSize().width/2 + 30)\n\n  const [obstaclesLeftThree, setObstaclesLeftThree]= useState(useWindowSize().width + useWindowSize().width/2 + 80)\n\n\n  const [obstaclesNegHeight, setObstaclesNegHeight]= useState(0)\n  const [obstaclesNegHeightTwo, setObstaclesNegHeightTwo]= useState(0)\n  const [obstaclesNegHeightThree, setObstaclesNegHeightThree]= useState(0)\n\n  const [randomOpacityValue, setRandomOpacityValue]= useState(0)\n\n\n\n  const [isGameOver, setIsGameOver]= useState(false)\n  const [score, setScore]= useState(0)\n\n  const gravity = 3\n  let obstacleWidth = 30\n  let obstacleHeight = 200\n  let gap = 150\n  let gameTimerId\n  let obstaclesTimerId\n  let obstaclesTimerIdTwo\n  let obstaclesTimerIdThree\n\n\n//start bird falling\n  useEffect(() => {\n\n    if (birdBottom > 0) {\n      gameTimerId = setInterval(() => {\n        setBirdBottom(birdBottom => birdBottom - gravity)\n      },30)\n\n      return () => {\n        clearInterval(gameTimerId)\n      }\n    }\n    //if i dont have birdBottom as a dependecy, it wont stop\n  }, [birdBottom])\n  console.log(birdBottom)\n\n  // const jump = () => {\n  //   if (!isGameOver && (birdBottom < screenHeight)) {\n  //     setBirdBottom(birdBottom => birdBottom + 50)\n  //     console.log('jumped')\n  //   }\n  // }\n\n\n  document.body.onkeyup = function(e){\n      if(e.keyCode == 32){\n          console.log(\"JUMP\")\n          if (!isGameOver && (birdBottom < screenHeight)) {\n            setBirdBottom(birdBottom => birdBottom + 50)\n            console.log('jumped')\n          }\n      }\n  }\n\n\n  //start first obstacle\n  useEffect(() => {\n    if (obstaclesLeft > -80) {\n      obstaclesTimerId = setInterval(() => {\n        setObstaclesLeft(obstaclesLeft => obstaclesLeft - 5)\n      }, 9)\n      return () => {\n        clearInterval(obstaclesTimerId)\n      }\n    } else {\n      setScore(score => score +1)\n      playOne();\n      setObstaclesLeft(screenWidth)\n      setObstaclesNegHeight( - Math.random() * 120)\n      setRandomOpacityValue(Math.random() * (0.4 - 0.9)+ 0.9)\n    }\n  }, [obstaclesLeft])\n\n  //start second obstacle\n  useEffect(() => {\n    if (obstaclesLeftTwo > -60) {\n      obstaclesTimerIdTwo = setInterval(() => {\n        setObstaclesLeftTwo(obstaclesLeftTwo => obstaclesLeftTwo - 5)\n      }, 20)\n        return () => {\n          clearInterval(obstaclesTimerIdTwo)\n        }\n      } else {\n          setScore(score => score +1)\n          playOne();\n          setObstaclesLeftTwo(screenWidth)\n          setObstaclesNegHeightTwo( - Math.random() * 100)\n        }\n  }, [obstaclesLeftTwo])\n\n  //start second obstacle\n  useEffect(() => {\n    if (obstaclesLeftThree > -80) {\n      obstaclesTimerIdThree = setInterval(() => {\n        setObstaclesLeftThree(obstaclesLeftThree => obstaclesLeftThree - 5)\n      }, 25)\n        return () => {\n          clearInterval(obstaclesTimerIdThree)\n        }\n      } else {\n          setScore(score => score +1)\n          playOne();\n          setObstaclesLeftThree(screenWidth)\n          setObstaclesNegHeightThree( - Math.random() * 100)\n        }\n  }, [obstaclesLeftThree])\n\n    //check for collisions\n    useEffect(() => {\n      console.log(obstaclesLeft)\n      console.log(screenWidth/2)\n      console.log(obstaclesLeft > screenWidth/2)\n      if (\n        ((birdBottom < (obstaclesNegHeight + obstacleHeight + 30) ||\n        birdBottom > (obstaclesNegHeight + obstacleHeight + gap -30)) &&\n        (obstaclesLeft > screenWidth/2 -30 && obstaclesLeft < screenWidth/2 + 30 )\n        )\n        ||\n        ((birdBottom < (obstaclesNegHeightTwo + obstacleHeight + 30) ||\n        birdBottom > (obstaclesNegHeightTwo + obstacleHeight + gap -30)) &&\n        (obstaclesLeftTwo > screenWidth/2 -30 && obstaclesLeftTwo < screenWidth/2 + 30 )\n        )\n        ||\n        ((birdBottom < (obstaclesNegHeightThree + obstacleHeight + 30) ||\n        birdBottom > (obstaclesNegHeightThree + obstacleHeight + gap -30)) &&\n        (obstaclesLeftThree > screenWidth/2 -30 && obstaclesLeftThree < screenWidth/2 + 30 )\n        )\n        )\n        {\n        console.log('game over')\n        gameOver()\n      }\n    })\n\n    useEffect(() => {\n      if (score > 40){\n        console.log('more')\n        more()\n      }\n    })\n\n    const gameOver = () => {\n      clearInterval(gameTimerId)\n      clearInterval(obstaclesTimerId)\n      clearInterval(obstaclesTimerIdTwo)\n      clearInterval(obstaclesTimerIdThree)\n\n      setIsGameOver(true)\n    }\n\n    const more = () => {\n      clearInterval(gameTimerId)\n      clearInterval(obstaclesTimerId)\n      clearInterval(obstaclesTimerIdTwo)\n      clearInterval(obstaclesTimerIdThree)\n      setIsGameOver(true)\n\n    }\n\n  return (\n\n    <div style={{height: height}}>\n\n    <div style={{height: height/2}}/>\n\n    {isGameOver && <div className=\"siteTitle\" style={{fontSize: '30px'}}>You Scored Bad Luck</div>}\n\n    <div className=\"siteTitle\" style={{fontSize: '30px'}}>Your Score {score}</div>\n        <Bird\n          birdBottom = {birdBottom}\n          birdLeft = {birdLeft}\n        />\n\n        <Obstacles\n          color={'#18427d'}\n          obstacleWidth = {obstacleWidth}\n          obstacleHeight = {obstacleHeight}\n          randomBottom = {obstaclesNegHeight}\n          height = {height}\n          gap = {gap}\n          obstaclesLeft = {obstaclesLeft}\n          randomOpacity = {randomOpacityValue}\n        />\n\n        <Obstacles\n          color={'#ee9b00'}\n          obstacleWidth = {obstacleWidth}\n          obstacleHeight = {obstacleHeight}\n          randomBottom = {obstaclesNegHeightTwo}\n          height = {height}\n          gap = {gap}\n          obstaclesLeft = {obstaclesLeftTwo}\n          randomOpacity = {randomOpacityValue}\n        />\n\n        <Obstacles\n          color={'#eb00ee'}\n          obstacleWidth = {obstacleWidth}\n          obstacleHeight = {obstacleHeight}\n          randomBottom = {obstaclesNegHeightThree}\n          height = {height}\n          gap = {gap}\n          obstaclesLeft = {obstaclesLeftThree}\n          randomOpacity = {randomOpacityValue}\n        />\n\n\n    </div>\n  );\n}\n\nexport default Screen;\n"]},"metadata":{},"sourceType":"module"}