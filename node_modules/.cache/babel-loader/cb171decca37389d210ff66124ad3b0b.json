{"ast":null,"code":"export var revealed=function revealed(arr,x,y,newNonMines){// all the cells which are adjaced to zero must be stored in the array \n// so that it can be revealed later\nvar show=[];show.push(arr[x][y]);while(show.length!==0){var one=show.pop();var i=one.x;var j=one.y;if(!one.revealed){newNonMines--;one.revealed=true;}if(one.value!==0){break;}// top left \nif(i>0&&j>0&&arr[i-1][j-1].value===0&&!arr[i-1][j-1].revealed){show.push(arr[i-1][j-1]);}// bottom right\nif(i<arr.length-1&&j<arr[0].length-1&&arr[i+1][j+1].value===0&&!arr[i+1][j+1].revealed){show.push(arr[i+1][j+1]);}// top right\nif(i>0&&j<arr[0].length-1&&arr[i-1][j+1].value===0&&!arr[i-1][j+1].revealed){show.push(arr[i-1][j+1]);}// bottom left \nif(i<arr.length-1&&j>0&&arr[i+1][j-1].value===0&&!arr[i+1][j-1].revealed){show.push(arr[i+1][j-1]);}// top \nif(i>0&&arr[i-1][j].value===0&&!arr[i-1][j].revealed){show.push(arr[i-1][j]);}// right\nif(j<arr[0].length-1&&arr[i][j+1].value===0&&!arr[i][j+1].revealed){show.push(arr[i][j+1]);}// bottom\nif(i<arr.length-1&&arr[i+1][j].value===0&&!arr[i+1][j].revealed){show.push(arr[i+1][j]);}// left\nif(j>0&&arr[i][j-1].value===0&&!arr[i][j-1].revealed){show.push(arr[i][j-1]);}// start revealing the item\nif(i>0&&j>0&&!arr[i-1][j-1].revealed){//Top Left Reveal\narr[i-1][j-1].revealed=true;newNonMines--;}if(j>0&&!arr[i][j-1].revealed){// Left Reveal\narr[i][j-1].revealed=true;newNonMines--;}if(i<arr.length-1&&j>0&&!arr[i+1][j-1].revealed){//Bottom Left Reveal\narr[i+1][j-1].revealed=true;newNonMines--;}if(i>0&&!arr[i-1][j].revealed){//Top Reveal\narr[i-1][j].revealed=true;newNonMines--;}if(i<arr.length-1&&!arr[i+1][j].revealed){// Bottom Reveal\narr[i+1][j].revealed=true;newNonMines--;}if(i>0&&j<arr[0].length-1&&!arr[i-1][j+1].revealed){// Top Right Reveal\narr[i-1][j+1].revealed=true;newNonMines--;}if(j<arr[0].length-1&&!arr[i][j+1].revealed){//Right Reveal\narr[i][j+1].revealed=true;newNonMines--;}if(i<arr.length-1&&j<arr[0].length-1&&!arr[i+1][j+1].revealed){// Bottom Right Reveal\narr[i+1][j+1].revealed=true;newNonMines--;}}return{arr:arr,newNonMines:newNonMines};};","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/MineGame/utils/Reveal.js"],"names":["revealed","arr","x","y","newNonMines","show","push","length","one","pop","i","j","value"],"mappings":"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","sourcesContent":["export const revealed=(arr,x,y,newNonMines)=>{\n    \n    // all the cells which are adjaced to zero must be stored in the array \n    // so that it can be revealed later\n\n    let show=[];\n    show.push(arr[x][y]);\n    while(show.length!==0){\n        let one=show.pop();\n        let i=one.x;\n        let j=one.y;\n        if(!one.revealed){\n            newNonMines--;\n            one.revealed=true;\n        }\n        if(one.value !==0){\n            break;\n        }\n\n        // top left \n\n        if(\n            i>0 && \n            j>0 &&\n            arr[i-1][j-1].value===0 &&\n            !arr[i-1][j-1].revealed\n        )\n        {\n            show.push(arr[i-1][j-1]);\n        }\n\n        // bottom right\n\n        if(\n            i<arr.length-1 &&\n            j<arr[0].length-1 &&\n            arr[i+1][j+1].value===0 &&\n            !arr[i+1][j+1].revealed\n        ){\n            show.push(arr[i+1][j+1]);\n        }\n\n        // top right\n\n        if(\n            i>0 &&\n            j<arr[0].length-1 &&\n            arr[i-1][j+1].value===0 &&\n            !arr[i-1][j+1].revealed\n        ){\n            show.push(arr[i-1][j+1]);\n        }\n\n        // bottom left \n\n        if(\n            i<arr.length-1 &&\n            j>0 &&\n            arr[i+1][j-1].value===0 &&\n            !arr[i+1][j-1].revealed\n        ){\n            show.push(arr[i+1][j-1]);\n        }\n\n        // top \n        if(\n            i>0 &&\n            arr[i-1][j].value===0 &&\n            !arr[i-1][j].revealed \n        ){\n            show.push(arr[i-1][j]);\n        }\n\n        // right\n\n        if(\n            j<arr[0].length-1 &&\n            arr[i][j+1].value===0 &&\n            !arr[i][j+1].revealed\n        ){\n            show.push(arr[i][j+1]);\n        }\n\n        // bottom\n\n        if(\n            i<arr.length-1 &&\n            arr[i+1][j].value===0 &&\n            !arr[i+1][j].revealed\n        ){\n            show.push(arr[i+1][j]);\n        }\n\n        // left\n\n        if(\n            j>0 &&\n            arr[i][j-1].value===0 &&\n            !arr[i][j-1].revealed\n        ){\n            show.push(arr[i][j-1]);\n        }\n\n\n        // start revealing the item\n\n        if (\n            i > 0 &&\n            j > 0 &&\n            !arr[i - 1][j - 1].revealed\n          ) {\n            //Top Left Reveal\n      \n            arr[i - 1][j - 1].revealed = true;\n            newNonMines--;\n          }\n      \n          if (j > 0 && !arr[i][j - 1].revealed) {\n            // Left Reveal\n            arr[i][j - 1].revealed = true;\n            newNonMines--;\n          }\n      \n          if (\n            i < arr.length - 1 &&\n            j > 0 &&\n            !arr[i + 1][j - 1].revealed\n          ) {\n            //Bottom Left Reveal\n            arr[i + 1][j - 1].revealed = true;\n            newNonMines--;\n          }\n      \n          if (i > 0 && !arr[i - 1][j].revealed) {\n            //Top Reveal\n            arr[i - 1][j].revealed = true;\n            newNonMines--;\n          }\n      \n          if (i < arr.length - 1 && !arr[i + 1][j].revealed) {\n            // Bottom Reveal\n            arr[i + 1][j].revealed = true;\n            newNonMines--;\n          }\n      \n          if (\n            i > 0 &&\n            j < arr[0].length - 1 &&\n            !arr[i - 1][j + 1].revealed\n          ) {\n            // Top Right Reveal\n            arr[i - 1][j + 1].revealed = true;\n            newNonMines--;\n          }\n      \n          if (j < arr[0].length - 1 && !arr[i][j + 1].revealed) {\n            //Right Reveal\n            arr[i][j + 1].revealed = true;\n            newNonMines--;\n          }\n      \n          if (\n            i < arr.length - 1 &&\n            j < arr[0].length - 1 &&\n            !arr[i + 1][j + 1].revealed\n          ) {\n            // Bottom Right Reveal\n            arr[i + 1][j + 1].revealed = true;\n            newNonMines--;\n          }\n    }\n\n    return {arr,newNonMines}\n\n}"]},"metadata":{},"sourceType":"module"}