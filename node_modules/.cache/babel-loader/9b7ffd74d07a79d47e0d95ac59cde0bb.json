{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/PartnershipExample/GamesSelection/FighterPilot/FighterScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect, useCallback } from \"react\"; // import Bird from './components/Bird'\n// import Obstacles from './components/Obstacles'\n\nimport { Button, Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport useSound from 'use-sound'; //\n// import lazer from './assets/Lazer.wav';\n// import ohno from './assets/troy_oh_no.mp4';\n\nimport './style.css';\nimport ohno from './assets/troy_oh_no.mp4';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport ReactAudioPlayer from 'react-audio-player'; // Hook\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FighterScreen = props => {\n  _s();\n\n  var [controlPlayer, setControlPlayer] = useState(false);\n  var [hasGameStarted, setHasGameStarted] = useState(false);\n  var [hasGameOver, setHasGameOver] = useState(false);\n  var [canvas, setCanvas] = useState(false);\n  var [ctx, setCtx] = useState(false);\n  var [exit, setExit] = useState(true);\n  var [isGameOver, setIsGameOver] = useState(false);\n  var [redirectLevel1More, setredirectLevel1More] = useState(false);\n  var [timeleft, setTimeleft] = useState(300);\n  var [start, setStart] = useState(false);\n  let count = 0; // Prevent game from working whilst page reloads\n\n  let startDate = null;\n  let playerRect = {\n    x: 275,\n    y: 275,\n    width: 50,\n    height: 50\n  }; //Game Elements\n\n  let rectangles = [{\n    x: 75,\n    y: 75,\n    dx: 5,\n    dy: 4,\n    width: 75,\n    height: 75,\n    color: \"#000099\"\n  }, {\n    x: 450,\n    y: 75,\n    dx: -5,\n    dy: 4,\n    width: 75,\n    height: 75,\n    color: \"#000099\"\n  }, {\n    x: 265,\n    y: 450,\n    dx: 5,\n    dy: 4,\n    width: 75,\n    height: 75,\n    color: \"#000099\"\n  } // {\n  //     x: 400,\n  //     y: 75,\n  //     dx: -5,\n  //     dy: 5.5,\n  //     width: 80,\n  //     height: 60,\n  //     color: \"#000099\"\n  // },\n  // {\n  //     x: 75,\n  //     y: 445,\n  //     dx: 5,\n  //     dy: -5,\n  //     width: 40,\n  //     height: 80,\n  //     color: \"#000099\"\n  // },\n  // {\n  //     x: 420,\n  //     y: 450,\n  //     dx: -5,\n  //     dy: -5,\n  //     width: 130,\n  //     height: 25,\n  //     color: \"#000099\"\n  // }\n  ];\n\n  const gameOverTime = () => {\n    setIsGameOver(true);\n    setExit(false);\n  };\n\n  useEffect(() => {\n    if (start) {\n      setTimeout(() => {\n        if (timeleft > 0) {\n          var timer = timeleft - 1;\n          setTimeleft(timer);\n        }\n\n        if (timeleft == 0) {\n          console.log(\"wiiiiiinnnnnnnn\");\n          setTimeout(handleMore, 500);\n          setStart(false);\n        }\n      }, 1000);\n    }\n  });\n\n  function handleMore() {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n    setredirectLevel1More(true);\n  }\n\n  useEffect(() => {\n    const canvas = document.getElementById(\"canvas\");\n    const ctx = canvas.getContext(\"2d\"); // Global Varabales\n\n    let secondsPassed;\n    let oldTimeStamp;\n    let fps;\n    window.requestAnimationFrame(gameLoop);\n\n    function gameLoop(timeStamp) {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      drawBorder();\n      drawRect();\n\n      if (hasGameStarted) {\n        //Get the blue rectangle to start moving\n        moveRectangle();\n      } //Detect whether rectangles hit edge of canvas\n\n\n      borderRectangleCollisionDetection(); //Detect whether player makes contact with border\n\n      playerCollisionDetection(); //Detect whether player makes contact with rectangle\n\n      rectangleCollisionDetection(); // Calculate the number of seconds passed since the last frame\n\n      secondsPassed = (timeStamp - oldTimeStamp) / 1000;\n      oldTimeStamp = timeStamp; // Calculate fps\n\n      fps = Math.round(1 / secondsPassed); // Draw number to the screen\n\n      ctx.fillStyle = 'white';\n      ctx.fillRect(0, 0, 200, 100);\n      ctx.font = '25px Arial';\n      ctx.fillStyle = 'black';\n      ctx.fillText(\"FPS: \" + fps, 10, 30);\n      window.requestAnimationFrame(gameLoop);\n    } //Render rectangles to canvas.\n\n\n    function drawRect() {\n      //Draw playerRect first\n      ctx.fillStyle = \"#990000\";\n      ctx.fillRect(playerRect.x, playerRect.y, playerRect.width, playerRect.height);\n      rectangles.forEach(rect => {\n        ctx.fillStyle = rect.color;\n        ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n      });\n    }\n\n    function drawRect2() {\n      //Draw playerRect first\n      ctx.fillStyle = \"#000000\";\n      ctx.fillRect(playerRect.x, playerRect.y, playerRect.width, playerRect.height);\n      rectangles.forEach(rect => {\n        ctx.fillStyle = rect.color;\n        ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n      });\n    } //Canvas Black Border\n\n\n    function drawBorder() {\n      ctx.fillStyle = 'black';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      ctx.clearRect(25, 25, 550, 550);\n    } // function drawBoarder(){\n    //   ctx.fillStyle = \"black\";\n    //   ctx.fillRect(0,0,canvas.width,canvas.height);\n    //   ctx.clearRect(50,50,500,500);\n    // }\n\n\n    function millisecondsToMiutes(millis) {\n      let minutes = Math.floor(millis / 60000);\n      let seconds = Math.floor(millis % 60000 / 1000);\n      return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n    } //Detect whether player makes contact with border\n\n\n    function playerCollisionDetection() {\n      if (playerRect.x + playerRect.width > 575 || playerRect.x < 25 || playerRect.y + playerRect.height > 575 || playerRect.y < 25) {\n        gameOverTime();\n      }\n    } //Returns true if 2 rectangles are colliding\n\n\n    function isRectangleCollision(rect1, rect2) {\n      return !(rect1.x > rect2.x + rect2.width || rect1.x + rect1.width < rect2.x || rect1.y > rect2.y + rect2.height || rect1.y + rect1.height < rect2.y);\n    } //Detect whether player makes contact with rectangle\n\n\n    function rectangleCollisionDetection() {\n      rectangles.forEach(rect => {\n        if (isRectangleCollision(playerRect, rect)) {\n          drawRect2();\n          count++;\n          console.log(count, \"counting 123\");\n\n          if (count > 20) {\n            gameOverTime();\n          }\n        }\n      });\n    } //Get the blue rectangle to start moving\n\n\n    function moveRectangle() {\n      rectangles.forEach(rect => {\n        rect.x += rect.dx;\n        rect.y += rect.dy;\n      });\n    } //Detect whether rectangles hit edge of canvas\n\n\n    function borderRectangleCollisionDetection() {\n      rectangles.forEach(rect => {\n        if (rect.x + rect.width > canvas.width || rect.x < 0) {\n          rect.dx *= -1;\n        }\n\n        if (rect.y + rect.height > canvas.height || rect.y < 0) {\n          rect.dy *= -1;\n        }\n      });\n    }\n\n    let numberOfSpeed = 0;\n\n    function configureRectSpeed() {\n      const speedUpGame = setInterval(() => {\n        numberOfSpeed++;\n        rectangles.forEach(rect => {\n          rect.dx >= 0 ? rect.dx += 1 : rect.dx -= 1;\n          rect.dy >= 0 ? rect.dy += 1 : rect.dy -= 1;\n        });\n\n        if (numberOfSpeed === 4) {\n          clearInterval(speedUpGame);\n        }\n      }, 10000);\n    } //Returns true if mouse is in player rectangle\n\n\n    function isCursorInRect(x, y, rect) {\n      return x > rect.x && x < rect.x + rect.width && y > rect.y && y < rect.y + rect.height;\n    }\n\n    canvas.addEventListener(\"mousedown\", e => {\n      //Get X & Y coordinates in relation to canvas\n      const pos = {\n        x: e.clientX - canvas.offsetLeft,\n        y: e.clientY - canvas.offsetTop\n      }; //See if they clicked on the red square in particular\n\n      if (isCursorInRect(pos.x, pos.y, playerRect)) {\n        //Start timer\n        if (!hasGameStarted) {\n          startDate = new Date(); // configureRectSpeed();\n        }\n\n        setControlPlayer(true);\n        setHasGameStarted(true);\n        setStart(true);\n      }\n    });\n    canvas.addEventListener(\"mousemove\", e => {\n      if (controlPlayer && !hasGameOver) {\n        //Get X & Y coordinates in relation to canvas\n        const pos = {\n          x: e.clientX - canvas.offsetLeft,\n          y: e.clientY - canvas.offsetTop\n        };\n        console.log(pos);\n        playerRect.x = pos.x - 25;\n        playerRect.y = pos.y - 25;\n      }\n    });\n    canvas.addEventListener(\"mouseup\", () => {\n      setControlPlayer(false);\n    });\n  }, [controlPlayer, hasGameStarted, hasGameOver]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"top\",\n    children: [isGameOver && /*#__PURE__*/_jsxDEV(ReactAudioPlayer, {\n      src: ohno,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 20\n    }, this), exit ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/JetswapXTreasureBlox1/:top\",\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this), redirectLevel1More ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/PartnershipLevel1More/:top\",\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wording\",\n        children: [\"Fighter Pilot \", timeleft, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 57\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        width: \"600\",\n        height: \"600\",\n        id: \"canvas\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 418,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FighterScreen, \"pJLoUWZ7FqkFJTogjaKL2FC7jNI=\");\n\n_c = FighterScreen;\nexport default FighterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FighterScreen\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/PartnershipExample/GamesSelection/FighterPilot/FighterScreen.js"],"names":["useState","useRef","useEffect","useCallback","Button","Container","Nav","Navbar","NavDropdown","useSound","ohno","BrowserRouter","Router","Switch","Route","Link","Redirect","ReactAudioPlayer","FighterScreen","props","controlPlayer","setControlPlayer","hasGameStarted","setHasGameStarted","hasGameOver","setHasGameOver","canvas","setCanvas","ctx","setCtx","exit","setExit","isGameOver","setIsGameOver","redirectLevel1More","setredirectLevel1More","timeleft","setTimeleft","start","setStart","count","startDate","playerRect","x","y","width","height","rectangles","dx","dy","color","gameOverTime","setTimeout","timer","console","log","handleMore","window","scrollTo","top","behavior","document","getElementById","getContext","secondsPassed","oldTimeStamp","fps","requestAnimationFrame","gameLoop","timeStamp","clearRect","drawBorder","drawRect","moveRectangle","borderRectangleCollisionDetection","playerCollisionDetection","rectangleCollisionDetection","Math","round","fillStyle","fillRect","font","fillText","forEach","rect","drawRect2","millisecondsToMiutes","millis","minutes","floor","seconds","isRectangleCollision","rect1","rect2","numberOfSpeed","configureRectSpeed","speedUpGame","setInterval","clearInterval","isCursorInRect","addEventListener","e","pos","clientX","offsetLeft","clientY","offsetTop","Date"],"mappings":"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","sourcesContent":["\nimport { useState, useRef, useEffect, useCallback } from \"react\";\n\n// import Bird from './components/Bird'\n// import Obstacles from './components/Obstacles'\nimport { Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport useSound from 'use-sound';\n//\n// import lazer from './assets/Lazer.wav';\n// import ohno from './assets/troy_oh_no.mp4';\nimport './style.css';\n\nimport ohno from './assets/troy_oh_no.mp4';\n\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport ReactAudioPlayer from 'react-audio-player';\n\n\n// Hook\n\n\n\n\nconst FighterScreen = (props) =>{\n\n\n  var [controlPlayer, setControlPlayer]= useState(false)\n  var [hasGameStarted, setHasGameStarted]= useState(false)\n  var [hasGameOver, setHasGameOver]= useState(false)\n  var [canvas, setCanvas]= useState(false)\n  var [ctx, setCtx]= useState(false)\n  var [exit,setExit] = useState(true);\n  var [isGameOver, setIsGameOver]= useState(false)\n  var [redirectLevel1More,setredirectLevel1More] = useState(false);\n  var [timeleft,setTimeleft] = useState(300)\n  var [start,setStart] = useState(false)\n\n\n\n  let count = 0;\n\n\n  // Prevent game from working whilst page reloads\n  let startDate = null;\n\n  let playerRect = {\n    x: 275,\n    y: 275,\n    width: 50,\n    height: 50\n}\n//Game Elements\nlet rectangles = [\n    {\n        x: 75,\n        y: 75,\n        dx: 5,\n        dy: 4,\n        width: 75,\n        height: 75,\n        color: \"#000099\"\n    },\n    {\n        x: 450,\n        y: 75,\n        dx: -5,\n        dy: 4,\n        width: 75,\n        height: 75,\n        color: \"#000099\"\n    },\n    {\n        x: 265,\n        y: 450,\n        dx: 5,\n        dy: 4,\n        width: 75,\n        height: 75,\n        color: \"#000099\"\n    },\n    // {\n    //     x: 400,\n    //     y: 75,\n    //     dx: -5,\n    //     dy: 5.5,\n    //     width: 80,\n    //     height: 60,\n    //     color: \"#000099\"\n    // },\n    // {\n    //     x: 75,\n    //     y: 445,\n    //     dx: 5,\n    //     dy: -5,\n    //     width: 40,\n    //     height: 80,\n    //     color: \"#000099\"\n    // },\n    // {\n    //     x: 420,\n    //     y: 450,\n    //     dx: -5,\n    //     dy: -5,\n    //     width: 130,\n    //     height: 25,\n    //     color: \"#000099\"\n    // }\n]\n\n\n      const gameOverTime = () => {\n\n        setIsGameOver(true);\n        setExit(false);\n\n      }\n\n      useEffect(() => {\n          if (start){\n            setTimeout(() => {\n\n\n              if (timeleft > 0) {\n                var timer = timeleft -1\n                setTimeleft(timer)\n              }\n\n\n              if (timeleft == 0){\n\n                console.log(\"wiiiiiinnnnnnnn\")\n\n                setTimeout(handleMore,500);\n                setStart(false);\n\n              }\n            }, 1000)\n          }\n      })\n\n\n      function handleMore()  {\n        window.scrollTo({top: 0,behavior: 'smooth'})\n        setredirectLevel1More(true)\n\n      }\n\n\n\n\n\n\nuseEffect(() => {\n\n      const canvas = document.getElementById(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n\n\n      // Global Varabales\n      let secondsPassed;\n      let oldTimeStamp;\n      let fps;\n\n      window.requestAnimationFrame(gameLoop);\n\n      function gameLoop(timeStamp) {\n        ctx.clearRect(0,0,canvas.width,canvas.height);\n        drawBorder();\n        drawRect();\n\n        if(hasGameStarted){\n            //Get the blue rectangle to start moving\n            moveRectangle();\n        }\n        //Detect whether rectangles hit edge of canvas\n        borderRectangleCollisionDetection();\n        //Detect whether player makes contact with border\n        playerCollisionDetection();\n        //Detect whether player makes contact with rectangle\n        rectangleCollisionDetection();\n\n\n        // Calculate the number of seconds passed since the last frame\n        secondsPassed = (timeStamp - oldTimeStamp) / 1000;\n        oldTimeStamp = timeStamp;\n\n        // Calculate fps\n        fps = Math.round(1 / secondsPassed);\n\n        // Draw number to the screen\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, 200, 100);\n        ctx.font = '25px Arial';\n        ctx.fillStyle = 'black';\n        ctx.fillText(\"FPS: \" + fps, 10, 30);\n\n          window.requestAnimationFrame(gameLoop);\n      }\n\n\n\n\n      //Render rectangles to canvas.\n      function drawRect() {\n          //Draw playerRect first\n          ctx.fillStyle = \"#990000\";\n          ctx.fillRect(playerRect.x,playerRect.y,playerRect.width,playerRect.height);\n\n\n\n\n          rectangles.forEach(rect => {\n              ctx.fillStyle = rect.color;\n              ctx.fillRect(rect.x,rect.y,rect.width,rect.height);\n          })\n      }\n\n\n      function drawRect2() {\n          //Draw playerRect first\n          ctx.fillStyle = \"#000000\";\n          ctx.fillRect(playerRect.x,playerRect.y,playerRect.width,playerRect.height);\n\n\n          rectangles.forEach(rect => {\n              ctx.fillStyle = rect.color;\n              ctx.fillRect(rect.x,rect.y,rect.width,rect.height);\n          })\n\n\n      }\n\n\n      //Canvas Black Border\nfunction drawBorder() {\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0,0,canvas.width,canvas.height);\n    ctx.clearRect(25,25,550,550);\n}\n\n      // function drawBoarder(){\n      //   ctx.fillStyle = \"black\";\n      //   ctx.fillRect(0,0,canvas.width,canvas.height);\n      //   ctx.clearRect(50,50,500,500);\n      // }\n\n\n    function millisecondsToMiutes(millis){\n        let minutes = Math.floor(millis/60000);\n        let seconds = Math.floor((millis % 60000)/1000);\n        return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n\n      }\n\n\n      //Detect whether player makes contact with border\nfunction playerCollisionDetection() {\n    if(\n        playerRect.x + playerRect.width > 575 ||\n        playerRect.x < 25 ||\n        playerRect.y + playerRect.height > 575 ||\n        playerRect.y < 25\n    ){\n        gameOverTime();\n\n    }\n}\n\n//Returns true if 2 rectangles are colliding\nfunction isRectangleCollision(rect1, rect2){\n    return !(\n        rect1.x>rect2.x+rect2.width ||\n        rect1.x+rect1.width<rect2.x ||\n        rect1.y>rect2.y+rect2.height ||\n        rect1.y+rect1.height<rect2.y\n    );\n}\n\n//Detect whether player makes contact with rectangle\nfunction rectangleCollisionDetection() {\n    rectangles.forEach(rect => {\n        if(isRectangleCollision(playerRect, rect)){\n          drawRect2();\n\n          count ++;\n          console.log(count,\"counting 123\");\n          if (count > 20){\n            gameOverTime();\n\n          }\n\n        }\n    })\n}\n\n\n      //Get the blue rectangle to start moving\nfunction moveRectangle() {\n    rectangles.forEach(rect => {\n        rect.x += rect.dx;\n        rect.y += rect.dy;\n    })\n}\n\n\n      //Detect whether rectangles hit edge of canvas\nfunction borderRectangleCollisionDetection() {\n    rectangles.forEach(rect => {\n        if(rect.x + rect.width > canvas.width || rect.x < 0){\n            rect.dx *= -1;\n        }\n        if(rect.y + rect.height > canvas.height || rect.y < 0){\n            rect.dy *= -1;\n        }\n    })\n}\n\n      let numberOfSpeed = 0;\n\n\n\n      function configureRectSpeed() {\n          const speedUpGame = setInterval(() => {\n              numberOfSpeed++;\n              rectangles.forEach(rect => {\n                  rect.dx >= 0 ? rect.dx += 1 : rect.dx -= 1;\n                  rect.dy >= 0 ? rect.dy += 1 : rect.dy -= 1;\n              });\n              if(numberOfSpeed === 4){\n                  clearInterval(speedUpGame);\n              }\n          }, 10000)\n      }\n\n\n\n\n\n\n\n      //Returns true if mouse is in player rectangle\n      function isCursorInRect(x,y,rect){\n          return(x>rect.x && x<rect.x+rect.width && y>rect.y && y<rect.y+rect.height);\n      }\n\n\n\n\n      canvas.addEventListener(\"mousedown\", e => {\n          //Get X & Y coordinates in relation to canvas\n          const pos = {\n              x: e.clientX - canvas.offsetLeft,\n              y: e.clientY - canvas.offsetTop\n\n          }\n\n          //See if they clicked on the red square in particular\n          if(isCursorInRect(pos.x,pos.y,playerRect)){\n              //Start timer\n              if(!hasGameStarted){\n                  startDate = new Date();\n                  // configureRectSpeed();\n              }\n              setControlPlayer(true);\n              setHasGameStarted(true);\n              setStart(true);\n          }\n      })\n\n\n\n\n      canvas.addEventListener(\"mousemove\", e => {\n          if(controlPlayer && !hasGameOver){\n          //Get X & Y coordinates in relation to canvas\n          const pos = {\n              x: e.clientX - canvas.offsetLeft,\n              y: e.clientY - canvas.offsetTop\n          };\n          console.log(pos)\n          playerRect.x = pos.x - 25;\n          playerRect.y = pos.y - 25;\n          }\n\n\n      })\n\n\n\n\n\n\n      canvas.addEventListener(\"mouseup\", () => {\n          setControlPlayer(false);\n      })\n\n\n\n\n    }, [controlPlayer,hasGameStarted,hasGameOver]);\n\n\n\n\n\n\n\n  return (\n    <div id=\"top\">\n\n    {isGameOver && <ReactAudioPlayer\n      src={ohno}\n      autoPlay\n    />}\n\n\n    {exit?(\n      <div>\n\n      </div>\n    ):(\n      <div>\n\n      <Redirect to=\"/JetswapXTreasureBlox1/:top\" {...props}/>\n\n      </div>\n    )}\n\n    {redirectLevel1More?(\n      <div>\n      <Redirect to=\"/PartnershipLevel1More/:top\" {...props}/>\n      </div>\n    ):(\n      <div>\n\n      </div>\n\n    )}\n\n\n\n<center>\n<div className=\"wording\">Fighter Pilot {timeleft} </div><br/>\n\n<canvas width=\"600\" height=\"600\" id=\"canvas\"> </canvas>\n\n</center>\n<br/>\n    </div>\n  );\n}\n\nexport default FighterScreen;\n"]},"metadata":{},"sourceType":"module"}