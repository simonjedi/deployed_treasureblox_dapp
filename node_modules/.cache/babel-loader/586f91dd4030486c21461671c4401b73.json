{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport MyNav from './MyNav';\nimport SingleCard from './components/Structure/Game1/SingleCard';\nimport moment from 'moment'; // import img1 from './Treasure-hunt.jpeg';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component, useState, useEffect } from 'react';\nimport getWeb3 from \"./getWeb3\";\nimport Connection from \"./Connection\";\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Hunt1 from \"./Hunt1\";\nimport Hunt2 from \"./Hunt2\";\nimport { Helmet } from 'react-helmet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [web3, setWeb3] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [tokenContract, setTokenContract] = useState(null);\n  const [decimals, setDecimals] = useState(null);\n  const [totalTreasure, setTotalTreasure] = useState(null); // GAME 1\n\n  const [game1_id, setGame1_id] = useState(undefined);\n  const [game1_live, setGame1_live] = useState(undefined);\n  const [game1_prize, setGame1_prize] = useState(undefined);\n  const [game1_question_hash, setGame1_question_hash] = useState(undefined);\n  const [game1_time_lock_cost, setgame1_time_lock_cost] = useState(undefined);\n  const [game1_submit_secret_cost, setGame1_submit_secret_cost] = useState(undefined);\n  const [game1_riddle, setGame1_riddle] = useState(undefined);\n  const [game1_clue, setGame1_clue] = useState(undefined);\n  const [game1_head_start_time, setGame1_head_start_time] = useState(undefined);\n  const [game1_entry_limit, setGame1_entry_limit] = useState(undefined);\n  const [game1_entry_cost, setGame1_entry_cost] = useState(undefined);\n  const [allGame1_id, setallGame1_id] = useState(undefined);\n  const [allGame1_user_front_of_que, setallGame1_user_front_of_que] = useState(undefined);\n  const [allGame1_deadline_time, setallGame1_deadline] = useState(undefined);\n  const [allGame1_username, setallGame1_username] = useState(undefined);\n  const [allGame1_total_game_tries, setallGame1_total_game_tries] = useState(undefined);\n  const [countGame1, setTimeGame1] = useState(90);\n  const [countGame1DeadlineTrue, setcountGame1DeadlineTrue] = useState(false);\n  const [game1numberOfEntries, setGame1numberOfEntries] = useState(0);\n  const [game1huntEntries, setGame1huntEntries] = useState(undefined);\n  const [userGame1_id, setUserGame1_id] = useState(undefined);\n  const [userEntered_game1, setUserEntered_game1] = useState(undefined);\n  const [userGame1_headstart_time, setUserGame1_headstart_time] = useState(undefined);\n  const [userGame1_live, setUserGame1_live] = useState(undefined);\n  const [winning_address1, setWinning_address1] = useState(undefined);\n  const [treasure_found1, setTreasure_found1] = useState(undefined);\n  const [winning_prize1, setWinning_prize1] = useState(undefined);\n  const [question_hash_solved1, setQuestion_hash_solved1] = useState(undefined);\n  const [winning_message1, setWinning_message1] = useState(undefined);\n  const [attemptId1, setAttemptId1] = useState(undefined);\n  const [attemptAddress1, setAttemptAddress1] = useState(undefined);\n  const [attemptUsername1, setAttemptUsername1] = useState(undefined);\n  const [attemptDeadline1, setAttemptDeadline1] = useState(undefined);\n  const [totalGameEntriesGame1, settotalGameEntriesGame1] = useState(false); // Leaderboard\n\n  const [game1LeaderBoardIndex, setgame1LeaderBoardIndex] = useState(false);\n  const [game1LeaderBoardGameID, setgame1LeaderBoardGameID] = useState(false);\n  const [game1LeaderBoardAddress, setgame1LeaderBoardAddress] = useState(false);\n  const [game1LeaderBoardEntered, setgame1LeaderBoardEntered] = useState(false);\n  const [game1LeaderBoardUsername, setgame1LeaderBoardUsername] = useState(false);\n  const [game1LeaderBoardTries, setgame1LeaderBoardTries] = useState(false);\n  const [game1LeaderBoardStage, setgame1LeaderBoardStage] = useState(false); // GAME 2\n\n  const [game2_id, setGame2_id] = useState(undefined);\n  const [game2_live, setGame2_live] = useState(undefined);\n  const [game2_prize, setGame2_prize] = useState(undefined);\n  const [game2_question_hash, setGame2_question_hash] = useState(undefined);\n  const [game2_time_lock_cost, setgame2_time_lock_cost] = useState(undefined);\n  const [game2_submit_secret_cost, setGame2_submit_secret_cost] = useState(undefined);\n  const [game2_riddle, setGame2_riddle] = useState(undefined);\n  const [game2_clue, setGame2_clue] = useState(undefined);\n  const [game2_head_start_time, setGame2_head_start_time] = useState(undefined);\n  const [game2_entry_limit, setGame2_entry_limit] = useState(undefined);\n  const [game2_entry_cost, setGame2_entry_cost] = useState(undefined);\n  const [allGame2_id, setallGame2_id] = useState(undefined);\n  const [allGame2_user_front_of_que, setallGame2_user_front_of_que] = useState(undefined);\n  const [allGame2_deadline_time, setallGame2_deadline] = useState(undefined);\n  const [allGame2_username, setallGame2_username] = useState(undefined);\n  const [allGame2_total_game_tries, setallGame2_total_game_tries] = useState(undefined);\n  const [countGame2, setTimeGame2] = useState(90);\n  const [countGame2DeadlineTrue, setcountGame2DeadlineTrue] = useState(false);\n  const [game2numberOfEntries, setGame2numberOfEntries] = useState(0);\n  const [game2huntEntries, setGame2huntEntries] = useState(undefined);\n  const [userGame2_id, setUserGame2_id] = useState(undefined);\n  const [userEntered_game2, setUserEntered_game2] = useState(undefined);\n  const [userGame2_headstart_time, setUserGame2_headstart_time] = useState(undefined);\n  const [userGame2_live, setUserGame2_live] = useState(undefined);\n  const [winning_address2, setWinning_address2] = useState(undefined);\n  const [treasure_found2, setTreasure_found2] = useState(undefined);\n  const [winning_prize2, setWinning_prize2] = useState(undefined);\n  const [question_hash_solved2, setQuestion_hash_solved2] = useState(undefined);\n  const [winning_message2, setWinning_message2] = useState(undefined);\n  const [attemptId2, setAttemptId2] = useState(undefined);\n  const [attemptAddress2, setAttemptAddress2] = useState(undefined);\n  const [attemptUsername2, setAttemptUsername2] = useState(undefined);\n  const [attemptDeadline2, setAttemptDeadline2] = useState(undefined);\n  const [loaded, setloaded] = useState(false);\n  const [totalGameEntriesGame2, settotalGameEntriesGame2] = useState(false);\n  const [globalNumberOfTries, setGlobalNumberOfTries] = useState(false);\n  useEffect(() => {\n    const init = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n\n      const abi = require('./TreasureBlox.abi.json');\n\n      const abiToken = require('./TreasureBloxToken.abi.json'); // Set the provider\n      // web3.setProvider(new web3.providers.WebsocketProvider('ws://localhost:8545'));\n      // this.web3.setProvider(new this.web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/'));\n      // LOCAL\n      // const contract = new web3.eth.Contract(abi,\"localhost:8545\" && \"0x9987602E9e9A76CbA7e9DB9217A0962BA8F9e605\");\n      // MainNet\n      // const contract = new web3.eth.Contract(abi,\"https://bsc-dataseed.binance.org/\" && \"0x845f23Ae63b5d03a363f216Ce0BAD4FB12259930\");\n      // Proxy 0x359a72d9F33685c025A6435fE1Cb4dF8fF6736B6\n      // GameV2 0xE2f3578757fe29a481D0221A6d1Ce7A33Ae01170\n\n\n      const contract = new web3.eth.Contract(abi, \"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0xE2f3578757fe29a481D0221A6d1Ce7A33Ae01170\");\n      const tokenContract = new web3.eth.Contract(abiToken, \"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0x359a72d9F33685c025A6435fE1Cb4dF8fF6736B6\"); // TestNet\n      // const contract = new web3.eth.Contract(abi,\"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0xE2f3578757fe29a481D0221A6d1Ce7A33Ae01170\");\n      // Sstart Data Calls\n\n      const decimals = await tokenContract.methods.decimals().call().then(console.log('Yes'));\n      var totalTreasure = await tokenContract.methods.balanceOf(\"0xD10283b232c43924BCc2834bd73F811918851f3C\").call(); // totalTreasure = totalTreasure.substring(0, tokenContract.length-18);\n\n      console.log(totalTreasure, \"Total Treasure token contract\"); // const owner = await contract.methods._owner().call();\n      // const marketingWallet = await contract.methods.marketingWallet().call().then(console.log('marketing Wallet Complete'));\n      //\n      // const total_supply = await contract.methods.totalSupply().call();\n      // const treasure_chest = await contract.methods.treasureChest().call();\n\n      setWeb3(web3);\n      setAccounts(accounts[0]);\n      setContract(contract);\n      setDecimals(decimals);\n      setTotalTreasure(totalTreasure);\n      setTokenContract(tokenContract); // GET GAMES\n      // GAME 1\n\n      const game1 = await contract.methods.Games(1).call();\n      const game1_id = await game1[0];\n      const game1_live = await game1[1];\n      var game1_prize = await game1[2];\n      game1_prize = game1_prize.substring(0, game1_prize.length - 18);\n      const game1_question_hash = await game1[3];\n      var game1_time_lock_cost = await game1[4];\n      game1_time_lock_cost = game1_time_lock_cost.substring(0, game1_time_lock_cost.length - 18);\n      var game1_submit_secret_cost = await game1[5];\n      game1_submit_secret_cost = game1_submit_secret_cost.substring(0, game1_submit_secret_cost.length - 18);\n      const game1_riddle = await game1[6];\n      const game1_clue = await game1[7];\n      const game1_head_start_time = await game1[8];\n      const game1_entry_limit = await game1[9];\n      var game1_entry_cost = await game1[10];\n      game1_entry_cost = game1_entry_cost.substring(0, game1_entry_cost.length - 18);\n      setGame1_id(game1_id);\n      setGame1_live(game1_live);\n      setGame1_prize(game1_prize);\n      setGame1_question_hash(game1_question_hash);\n      setgame1_time_lock_cost(game1_time_lock_cost);\n      setGame1_submit_secret_cost(game1_submit_secret_cost);\n      setGame1_riddle(game1_riddle);\n      setGame1_clue(game1_clue);\n      setGame1_head_start_time(game1_head_start_time);\n      setGame1_entry_limit(game1_entry_limit);\n      setGame1_entry_cost(game1_entry_cost); // GAME 2\n\n      const game2 = await contract.methods.Games(2).call();\n      const game2_id = await game2[0];\n      const game2_live = await game2[1];\n      var game2_prize = await game2[2];\n      game2_prize = game2_prize.substring(0, game2_prize.length - 18);\n      const game2_question_hash = await game2[3];\n      var game2_time_lock_cost = await game2[4];\n      game2_time_lock_cost = game2_time_lock_cost.substring(0, game2_time_lock_cost.length - 18);\n      var game2_submit_secret_cost = await game2[5];\n      game2_submit_secret_cost = game2_submit_secret_cost.substring(0, game2_submit_secret_cost.length - 18);\n      const game2_riddle = await game2[6];\n      const game2_clue = await game2[7];\n      const game2_head_start_time = await game2[8];\n      const game2_entry_limit = await game2[9];\n      var game2_entry_cost = await game2[10];\n      game2_entry_cost = game2_entry_cost.substring(0, game2_entry_cost.length - 18);\n      setGame2_id(game2_id);\n      setGame2_live(game2_live);\n      setGame2_prize(game2_prize);\n      setGame2_question_hash(game2_question_hash);\n      setgame2_time_lock_cost(game2_time_lock_cost);\n      setGame2_submit_secret_cost(game2_submit_secret_cost);\n      setGame2_riddle(game2_riddle);\n      setGame2_clue(game2_clue);\n      setGame2_head_start_time(game2_head_start_time);\n      setGame2_entry_limit(game2_entry_limit);\n      setGame2_entry_cost(game2_entry_cost); // This Handels the countdown time and collecting information every 1 second so the counter goes down\n\n      const timer = window.setInterval(async () => {\n        var moment = require('moment'); // require\n        // GLOBAL\n\n\n        const globalTries = await contract.methods.totalumberOfTries().call();\n        console.log(\"number of tries:\", globalTries);\n        setGlobalNumberOfTries(globalTries); // GET ALL GAME TIMELINES AND gamesTriess\n        // GAME 1\n\n        const allGame1 = await contract.methods.allGames(1).call();\n        const allGame1_id = await allGame1[0];\n        const allGame1_user_front_of_que = await allGame1[1];\n        const allGame1_deadline_time = await allGame1[2];\n        const allGame1_username = await allGame1[3];\n        const allGame1_total_game_tries = await allGame1[4];\n        const numberOfEntriesGame1 = await contract.methods.numberOfEntries(1).call();\n        const game1huntEntries = await contract.methods.huntEntries(accounts[0], 1).call();\n        const userGame1_id = await game1huntEntries[0];\n        const userEntered_game1 = await game1huntEntries[1];\n        const userGame1_headstart_time = await game1huntEntries[2];\n        const userGame1_live = await game1huntEntries[3];\n        const pot1AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(1).call();\n        const winning_address1 = await pot1AnsweredCorrectly[0];\n        const treasure_found1 = await pot1AnsweredCorrectly[1];\n        var winning_prize1 = await pot1AnsweredCorrectly[2];\n        winning_prize1 = winning_prize1.substring(0, winning_prize1.length - 18);\n        const question_hash_solved1 = await pot1AnsweredCorrectly[3];\n        const winning_message1 = await pot1AnsweredCorrectly[4];\n        const getAllLatestGameAttempts1 = await contract.methods.getAllLatestGameAttempts(1).call();\n        const attemptId1 = await getAllLatestGameAttempts1[0];\n        const attemptAddress1 = await getAllLatestGameAttempts1[1];\n        const attemptDeadline1 = await getAllLatestGameAttempts1[2];\n        const attemptUsername1 = await getAllLatestGameAttempts1[3];\n        const entriesGame1 = await contract.methods.numberOfEntries(1).call();\n        settotalGameEntriesGame1(entriesGame1); // Fetches New Games if required\n        // const item = await contract.getPastEvents('setGameEvent',{});\n        // console.log(item[0].returnValues[0])\n        // console.log(item[0].returnValues[1])\n        // console.log(item[0].returnValues[2])\n\n        var currentStartDate = Date();\n        var startDate = new Date(currentStartDate); // // Hours part from the timestamp\n        // var startDateHours = startDate.getHours();\n        // // Minutes part from the timestamp\n        // var startDateMinutes = startDate.getMinutes();\n        // // Seconds part from the timestamp\n        // var startDateSeconds = startDate.getSeconds();\n        // Do\n\n        var endDateGame1 = new Date(allGame1_deadline_time * 1000); // // Hours part from the timestamp\n        // var endDateHours = endDate.getHours();\n        // // Minutes part from the timestamp\n        // var endDateMinutes = endDate.getMinutes();\n        // // Seconds part from the timestamp\n        // var endDateSeconds = endDate.getSeconds();\n\n        function getDifferenceInDays(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / (1000 * 60 * 60 * 24);\n        }\n\n        function getDifferenceInHours(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / (1000 * 60 * 60);\n        }\n\n        function getDifferenceInMinutes(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / (1000 * 60);\n        }\n\n        function getDifferenceInSeconds(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / 1000;\n        } // console.log(getDifferenceInDays(endDate, startDate));\n        // console.log(getDifferenceInHours(endDate, startDate));\n        // console.log(getDifferenceInMinutes(endDate, startDate));\n        // console.log(getDifferenceInSeconds(startDate, endDateGame1));\n\n\n        var timeGame1 = Math.abs(getDifferenceInSeconds(startDate, endDateGame1));\n        setTimeGame1(timeGame1);\n        setTimeGame1(prevTime => prevTime - 1); // <-- Change this line!\n\n        setallGame1_id(allGame1_id);\n        setallGame1_user_front_of_que(allGame1_user_front_of_que);\n        setallGame1_deadline(allGame1_deadline_time);\n        setallGame1_username(allGame1_username);\n        console.log(\"username past: \", allGame1_username);\n        setallGame1_total_game_tries(allGame1_total_game_tries);\n\n        if (endDateGame1 - 1 >= startDate) {\n          setcountGame1DeadlineTrue(true);\n        } else {\n          setcountGame1DeadlineTrue(false);\n        }\n\n        setGame1numberOfEntries(entriesGame1);\n        setUserGame1_id(userGame1_id);\n        setUserEntered_game1(userEntered_game1);\n        setUserGame1_headstart_time(userGame1_headstart_time);\n        setUserGame1_live(userGame1_live);\n        setWinning_address1(winning_address1);\n        setTreasure_found1(treasure_found1);\n        setWinning_prize1(winning_prize1);\n        setQuestion_hash_solved1(question_hash_solved1);\n        setWinning_message1(winning_message1);\n        setAttemptId1(attemptId1);\n        setAttemptAddress1(attemptAddress1);\n        setAttemptUsername1(attemptUsername1);\n        setAttemptDeadline1(attemptDeadline1);\n        const noOfEntrys = await contract.methods.numberOfEntries(1).call(); // LeaderBoard\n\n        var game1_indexrows = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          game1_indexrows.push(i++);\n        }\n\n        setgame1LeaderBoardIndex(game1_indexrows);\n        var game1_leaderboard_game_id = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard_game_id = await leaderBoard[0];\n          game1_leaderboard_game_id.push(leaderboard_game_id);\n        }\n\n        game1LeaderBoardGameID(game1_leaderboard_game_id);\n        var game1_leaderboard_address = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard_address = await leaderBoard[1];\n          game1_leaderboard_address.push(leaderboard_address);\n        }\n\n        game1LeaderBoardAddress(game1_leaderboard_address);\n        var game1_leaderboard_entered = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard_entered = await leaderBoard[2];\n          game1_leaderboard_entered.push(leaderboard_entered);\n        }\n\n        setgame1LeaderBoardEntered(game1_leaderboard_entered);\n        var game1_leaderboard_username = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard_username = await leaderBoard[3];\n          game1_leaderboard_username.push(leaderboard_username);\n        }\n\n        setgame1LeaderBoardUsername(game1_leaderboard_username);\n        var game1_leaderboard_tries = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard_tries = await leaderBoard[4];\n          game1_leaderboard_tries.push(leaderboard_tries);\n        }\n\n        setgame1LeaderBoardTries(game1_leaderboard_tries);\n        var game1_leaderboard_stage = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard_stage = await leaderBoard[5];\n          game1_leaderboard_stage.push(leaderboard_stage);\n        }\n\n        setgame1LeaderBoardStage(game1_leaderboard_stage); // GAME 2\n\n        const allGame2 = await contract.methods.allGames(2).call();\n        const allGame2_id = await allGame2[0];\n        const allGame2_user_front_of_que = await allGame2[1];\n        const allGame2_deadline_time = await allGame2[2];\n        const allGame2_username = await allGame2[3];\n        const allGame2_total_game_tries = await allGame2[4];\n        const game2numberOfEntries = await contract.methods.numberOfEntries(2).call();\n        const game2huntEntries = await contract.methods.huntEntries(accounts[0], 2).call();\n        const userGame2_id = await game2huntEntries[0];\n        const userEntered_game2 = await game2huntEntries[1];\n        const userGame2_headstart_time = await game2huntEntries[2];\n        const userGame2_live = await game2huntEntries[3];\n        const numberOfEntriesGame2 = await contract.methods.numberOfEntries(2).call();\n        const pot2AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(2).call();\n        const winning_address2 = await pot2AnsweredCorrectly[0];\n        const treasure_found2 = await pot2AnsweredCorrectly[1];\n        var winning_prize2 = await pot2AnsweredCorrectly[2];\n        winning_prize2 = winning_prize2.substring(0, winning_prize2.length - 18);\n        const question_hash_solved2 = await pot2AnsweredCorrectly[3];\n        const winning_message2 = await pot2AnsweredCorrectly[4];\n        const getAllLatestGameAttempts2 = await contract.methods.getAllLatestGameAttempts(2).call();\n        const attemptId2 = await getAllLatestGameAttempts2[0];\n        const attemptAddress2 = await getAllLatestGameAttempts2[1];\n        const attemptDeadline2 = await getAllLatestGameAttempts2[2];\n        const attemptUsername2 = await getAllLatestGameAttempts2[3];\n        var currentStartDate = Date();\n        var startDate = new Date(currentStartDate); // Do\n\n        var endDateGame2 = new Date(allGame2_deadline_time * 1000);\n        console.log(getDifferenceInSeconds(startDate, endDateGame2));\n        var timeGame2 = Math.abs(getDifferenceInSeconds(startDate, endDateGame2));\n        setTimeGame2(timeGame2);\n        setTimeGame2(prevTime => prevTime - 1); // <-- Change this line!\n\n        setallGame2_id(allGame2_id);\n        setallGame2_user_front_of_que(allGame2_user_front_of_que);\n        setallGame2_deadline(allGame2_deadline_time);\n        setallGame2_username(allGame2_username);\n        setallGame2_total_game_tries(allGame2_total_game_tries);\n\n        if (endDateGame2 - 1 >= startDate) {\n          setcountGame2DeadlineTrue(true);\n        } else {\n          setcountGame2DeadlineTrue(false);\n        }\n\n        setGame2numberOfEntries(game2numberOfEntries);\n        setUserGame2_id(userGame2_id);\n        setUserEntered_game2(userEntered_game2);\n        setUserGame2_headstart_time(userGame2_headstart_time);\n        setUserGame2_live(userGame2_live);\n        setWinning_address2(winning_address2);\n        setTreasure_found2(treasure_found2);\n        setWinning_prize2(winning_prize2);\n        setQuestion_hash_solved2(question_hash_solved2);\n        setWinning_message2(winning_message2);\n        setAttemptId2(attemptId2);\n        setAttemptAddress2(attemptAddress2);\n        setAttemptUsername2(attemptUsername2);\n        setAttemptDeadline2(attemptDeadline2);\n      }, 1000); // End of Game timer code\n    };\n\n    init();\n  }, [web3, accounts, contract, tokenContract, decimals, totalTreasure, game1LeaderBoardIndex, game1LeaderBoardGameID, game1LeaderBoardAddress, game1LeaderBoardEntered, game1LeaderBoardUsername, game1LeaderBoardTries, game1LeaderBoardStage, // GAME1\n  game1_id, game1_live, game1_prize, game1_question_hash, game1_time_lock_cost, game1_submit_secret_cost, game1_riddle, game1_clue, allGame1_id, allGame1_user_front_of_que, allGame1_deadline_time, allGame1_username, allGame1_total_game_tries, countGame1, countGame1DeadlineTrue, game1_head_start_time, game1_entry_limit, game1_entry_cost, game1numberOfEntries, userGame1_id, userEntered_game1, userGame1_headstart_time, userGame1_live, winning_address1, treasure_found1, winning_prize1, question_hash_solved1, winning_message1, attemptId1, attemptUsername1, attemptDeadline1, attemptAddress1, totalGameEntriesGame1, // GAME2\n  game2_id, game2_live, game2_prize, game2_question_hash, game2_time_lock_cost, game2_submit_secret_cost, game2_riddle, game2_clue, allGame2_id, allGame2_user_front_of_que, allGame2_deadline_time, allGame2_username, allGame2_total_game_tries, countGame2, countGame2DeadlineTrue, game2_head_start_time, game2_entry_limit, game2_entry_cost, game2numberOfEntries, userGame2_id, userEntered_game2, userGame2_headstart_time, userGame2_live, winning_address2, treasure_found2, winning_prize2, question_hash_solved2, winning_message2, attemptId2, attemptUsername2, attemptDeadline2, attemptAddress2, totalGameEntriesGame2, globalNumberOfTries]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background customFont\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"TreasureBlox | DAPP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(MyNav, {\n        accounts: accounts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 9\n      }, this), \"// Pages\", /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            game1_id: game1_id,\n            game1_live: game1_live,\n            game1_prize: game1_prize,\n            game1_question_hash: game1_question_hash,\n            game1_time_lock_cost: game1_time_lock_cost,\n            game1_submit_secret_cost: game1_submit_secret_cost,\n            game1_riddle: game1_riddle,\n            game1_clue: game1_clue,\n            game1_head_start_time: game1_head_start_time,\n            game1_entry_limit: game1_entry_limit,\n            game1_entry_cost: game1_entry_cost,\n            allGame1_id: allGame1_id,\n            allGasme1_user_front_of_que: allGame1_user_front_of_que,\n            allGame1_deadline_time: allGame1_deadline_time,\n            allGame1_username: allGame1_username,\n            allGame1_total_game_tries: allGame1_total_game_tries,\n            countGame1: countGame1,\n            countGame1DeadlineTrue: countGame1DeadlineTrue,\n            totalTreasure: totalTreasure,\n            game1numberOfEntries: game1numberOfEntries,\n            game2_id: game2_id,\n            game2_live: game2_live,\n            game2_prize: game2_prize,\n            game2_question_hash: game2_question_hash,\n            game2_time_lock_cost: game2_time_lock_cost,\n            game2_submit_secret_cost: game2_submit_secret_cost,\n            game2_riddle: game2_riddle,\n            game2_clue: game2_clue,\n            game2_head_start_time: game2_head_start_time,\n            game2_entry_limit: game2_entry_limit,\n            game2_entry_cost: game2_entry_cost,\n            allGame2_id: allGame2_id,\n            allGasme2_user_front_of_que: allGame2_user_front_of_que,\n            allGame2_deadline_time: allGame2_deadline_time,\n            allGame2_username: allGame2_username,\n            allGame2_total_game_tries: allGame2_total_game_tries,\n            countGame2: countGame2,\n            countGame2DeadlineTrue: countGame2DeadlineTrue,\n            totalGameEntriesGame1: totalGameEntriesGame1,\n            totalGameEntriesGame2: totalGameEntriesGame2,\n            globalNumberOfTries: globalNumberOfTries,\n            tokenContract: tokenContract\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/hunt1\",\n          children: /*#__PURE__*/_jsxDEV(Hunt1, {\n            web3: web3,\n            game1_id: game1_id,\n            game1_live: game1_live,\n            game1_prize: game1_prize,\n            game1_question_hash: game1_question_hash,\n            game1_time_lock_cost: game1_time_lock_cost,\n            game1_submit_secret_cost: game1_submit_secret_cost,\n            game1_riddle: game1_riddle,\n            game1_clue: game1_clue,\n            game1_head_start_time: game1_head_start_time,\n            game1_entry_limit: game1_entry_limit,\n            game1_entry_cost: game1_entry_cost,\n            allGame1_id: allGame1_id,\n            allGasme1_user_front_of_que: allGame1_user_front_of_que,\n            allGame1_deadline_time: allGame1_deadline_time,\n            allGame1_username: allGame1_username,\n            allGame1_total_game_tries: allGame1_total_game_tries,\n            countGame1: countGame1,\n            countGame1DeadlineTrue: countGame1DeadlineTrue,\n            decimals: decimals,\n            totalTreasure: totalTreasure,\n            contract: contract,\n            accounts: accounts,\n            game1numberOfEntries: game1numberOfEntries,\n            userGame1_id: userGame1_id,\n            userEntered_game1: userEntered_game1,\n            userGame1_headstart_time: userGame1_headstart_time,\n            userGame1_live: userGame1_live,\n            winning_address1: winning_address1,\n            treasure_found1: treasure_found1,\n            winning_prize1: winning_prize1,\n            question_hash_solved1: question_hash_solved1,\n            winning_message1: winning_message1,\n            attemptId1: attemptId1,\n            attemptAddress1: attemptAddress1,\n            attemptUsername1: attemptUsername1,\n            attemptDeadline1: attemptDeadline1,\n            totalGameEntriesGame1: totalGameEntriesGame1,\n            globalNumberOfTries: globalNumberOfTries,\n            game1LeaderBoardIndex: game1LeaderBoardIndex,\n            game1LeaderBoardGameID: game1LeaderBoardGameID,\n            game1LeaderBoardAddress: game1LeaderBoardAddress,\n            game1LeaderBoardEntered: game1LeaderBoardEntered,\n            game1LeaderBoardUsername: game1LeaderBoardUsername,\n            game1LeaderBoardTries: game1LeaderBoardTries,\n            game1LeaderBoardStage: game1LeaderBoardStage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/hunt2\",\n          children: /*#__PURE__*/_jsxDEV(Hunt2, {\n            web3: web3,\n            game2_id: game2_id,\n            game2_live: game2_live,\n            game2_prize: game2_prize,\n            game2_question_hash: game2_question_hash,\n            game2_time_lock_cost: game2_time_lock_cost,\n            game2_submit_secret_cost: game2_submit_secret_cost,\n            game2_riddle: game2_riddle,\n            game2_clue: game2_clue,\n            game2_head_start_time: game2_head_start_time,\n            game2_entry_limit: game2_entry_limit,\n            game2_entry_cost: game2_entry_cost,\n            allGame2_id: allGame2_id,\n            allGame2_user_front_of_que: allGame2_user_front_of_que,\n            allGame2_deadline_time: allGame2_deadline_time,\n            allGame2_username: allGame2_username,\n            allGame2_total_game_tries: allGame2_total_game_tries,\n            countGame2: countGame2,\n            countGame2DeadlineTrue: countGame2DeadlineTrue,\n            decimals: decimals,\n            totalTreasure: totalTreasure,\n            contract: contract,\n            accounts: accounts,\n            game2numberOfEntries: game2numberOfEntries,\n            userGame2_id: userGame2_id,\n            userEntered_game2: userEntered_game2,\n            userGame2_headstart_time: userGame2_headstart_time,\n            userGame2_live: userGame2_live,\n            winning_address2: winning_address2,\n            treasure_found2: treasure_found2,\n            winning_prize2: winning_prize2,\n            question_hash_solved2: question_hash_solved2,\n            winning_message2: winning_message2,\n            attemptId2: attemptId2,\n            attemptAddress2: attemptAddress2,\n            attemptUsername2: attemptUsername2,\n            attemptDeadline2: attemptDeadline2,\n            totalGameEntriesGame2: totalGameEntriesGame2,\n            globalNumberOfTries: globalNumberOfTries\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 601,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"SYkQ5YkZHySCMqToe4YO0JVq9BI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/App.js"],"names":["Button","Container","Nav","Navbar","NavDropdown","MyNav","SingleCard","moment","React","Component","useState","useEffect","getWeb3","Connection","useWallet","UseWalletProvider","BrowserRouter","Router","Switch","Route","Link","Redirect","Home","Hunt1","Hunt2","Helmet","App","web3","setWeb3","accounts","setAccounts","contract","setContract","tokenContract","setTokenContract","decimals","setDecimals","totalTreasure","setTotalTreasure","game1_id","setGame1_id","undefined","game1_live","setGame1_live","game1_prize","setGame1_prize","game1_question_hash","setGame1_question_hash","game1_time_lock_cost","setgame1_time_lock_cost","game1_submit_secret_cost","setGame1_submit_secret_cost","game1_riddle","setGame1_riddle","game1_clue","setGame1_clue","game1_head_start_time","setGame1_head_start_time","game1_entry_limit","setGame1_entry_limit","game1_entry_cost","setGame1_entry_cost","allGame1_id","setallGame1_id","allGame1_user_front_of_que","setallGame1_user_front_of_que","allGame1_deadline_time","setallGame1_deadline","allGame1_username","setallGame1_username","allGame1_total_game_tries","setallGame1_total_game_tries","countGame1","setTimeGame1","countGame1DeadlineTrue","setcountGame1DeadlineTrue","game1numberOfEntries","setGame1numberOfEntries","game1huntEntries","setGame1huntEntries","userGame1_id","setUserGame1_id","userEntered_game1","setUserEntered_game1","userGame1_headstart_time","setUserGame1_headstart_time","userGame1_live","setUserGame1_live","winning_address1","setWinning_address1","treasure_found1","setTreasure_found1","winning_prize1","setWinning_prize1","question_hash_solved1","setQuestion_hash_solved1","winning_message1","setWinning_message1","attemptId1","setAttemptId1","attemptAddress1","setAttemptAddress1","attemptUsername1","setAttemptUsername1","attemptDeadline1","setAttemptDeadline1","totalGameEntriesGame1","settotalGameEntriesGame1","game1LeaderBoardIndex","setgame1LeaderBoardIndex","game1LeaderBoardGameID","setgame1LeaderBoardGameID","game1LeaderBoardAddress","setgame1LeaderBoardAddress","game1LeaderBoardEntered","setgame1LeaderBoardEntered","game1LeaderBoardUsername","setgame1LeaderBoardUsername","game1LeaderBoardTries","setgame1LeaderBoardTries","game1LeaderBoardStage","setgame1LeaderBoardStage","game2_id","setGame2_id","game2_live","setGame2_live","game2_prize","setGame2_prize","game2_question_hash","setGame2_question_hash","game2_time_lock_cost","setgame2_time_lock_cost","game2_submit_secret_cost","setGame2_submit_secret_cost","game2_riddle","setGame2_riddle","game2_clue","setGame2_clue","game2_head_start_time","setGame2_head_start_time","game2_entry_limit","setGame2_entry_limit","game2_entry_cost","setGame2_entry_cost","allGame2_id","setallGame2_id","allGame2_user_front_of_que","setallGame2_user_front_of_que","allGame2_deadline_time","setallGame2_deadline","allGame2_username","setallGame2_username","allGame2_total_game_tries","setallGame2_total_game_tries","countGame2","setTimeGame2","countGame2DeadlineTrue","setcountGame2DeadlineTrue","game2numberOfEntries","setGame2numberOfEntries","game2huntEntries","setGame2huntEntries","userGame2_id","setUserGame2_id","userEntered_game2","setUserEntered_game2","userGame2_headstart_time","setUserGame2_headstart_time","userGame2_live","setUserGame2_live","winning_address2","setWinning_address2","treasure_found2","setTreasure_found2","winning_prize2","setWinning_prize2","question_hash_solved2","setQuestion_hash_solved2","winning_message2","setWinning_message2","attemptId2","setAttemptId2","attemptAddress2","setAttemptAddress2","attemptUsername2","setAttemptUsername2","attemptDeadline2","setAttemptDeadline2","loaded","setloaded","totalGameEntriesGame2","settotalGameEntriesGame2","globalNumberOfTries","setGlobalNumberOfTries","init","eth","getAccounts","abi","require","abiToken","Contract","methods","call","then","console","log","balanceOf","game1","Games","substring","length","game2","timer","window","setInterval","globalTries","totalumberOfTries","allGame1","allGames","numberOfEntriesGame1","numberOfEntries","huntEntries","pot1AnsweredCorrectly","Pot1AnsweredCorrectly","getAllLatestGameAttempts1","getAllLatestGameAttempts","entriesGame1","currentStartDate","Date","startDate","endDateGame1","getDifferenceInDays","date1","date2","diffInMs","Math","abs","getDifferenceInHours","getDifferenceInMinutes","getDifferenceInSeconds","timeGame1","prevTime","noOfEntrys","game1_indexrows","i","push","game1_leaderboard_game_id","leaderBoard","leaderboard","leaderboard_game_id","game1_leaderboard_address","leaderboard_address","game1_leaderboard_entered","leaderboard_entered","game1_leaderboard_username","leaderboard_username","game1_leaderboard_tries","leaderboard_tries","game1_leaderboard_stage","leaderboard_stage","allGame2","numberOfEntriesGame2","pot2AnsweredCorrectly","getAllLatestGameAttempts2","endDateGame2","timeGame2"],"mappings":"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","sourcesContent":["import { Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport MyNav from './MyNav';\nimport SingleCard from './components/Structure/Game1/SingleCard';\nimport moment from 'moment';\n\n// import img1 from './Treasure-hunt.jpeg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport React, { Component, useState, useEffect } from 'react'\nimport getWeb3 from \"./getWeb3\";\nimport Connection from \"./Connection\";\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport \"./App.css\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\n\nimport Home from \"./Home\";\nimport Hunt1 from \"./Hunt1\";\nimport Hunt2 from \"./Hunt2\";\n\nimport { Helmet } from 'react-helmet';\n\n\nconst App = () => {\n\n  const [web3,setWeb3] = useState(null)\n  const [accounts,setAccounts] = useState(null)\n  const [contract,setContract] = useState(null)\n  const [tokenContract,setTokenContract] = useState(null)\n  const [decimals,setDecimals] = useState(null)\n  const [totalTreasure,setTotalTreasure] = useState(null)\n\n// GAME 1\n  const [game1_id,setGame1_id] = useState(undefined)\n  const [game1_live,setGame1_live] = useState(undefined)\n  const [game1_prize,setGame1_prize] = useState(undefined)\n  const [game1_question_hash,setGame1_question_hash] = useState(undefined)\n  const [game1_time_lock_cost,setgame1_time_lock_cost] = useState(undefined)\n  const [game1_submit_secret_cost,setGame1_submit_secret_cost] = useState(undefined)\n  const [game1_riddle,setGame1_riddle] = useState(undefined)\n  const [game1_clue,setGame1_clue] = useState(undefined)\n  const [game1_head_start_time,setGame1_head_start_time] = useState(undefined)\n  const [game1_entry_limit,setGame1_entry_limit] = useState(undefined)\n  const [game1_entry_cost,setGame1_entry_cost] = useState(undefined)\n\n  const [allGame1_id,setallGame1_id] = useState(undefined)\n  const [allGame1_user_front_of_que,setallGame1_user_front_of_que] = useState(undefined)\n  const [allGame1_deadline_time,setallGame1_deadline] = useState(undefined)\n  const [allGame1_username,setallGame1_username] = useState(undefined)\n  const [allGame1_total_game_tries,setallGame1_total_game_tries] = useState(undefined)\n\n  const [countGame1, setTimeGame1] = useState(90);\n  const [countGame1DeadlineTrue, setcountGame1DeadlineTrue] = useState(false);\n\n  const [game1numberOfEntries, setGame1numberOfEntries] = useState(0);\n  const [game1huntEntries, setGame1huntEntries] = useState(undefined);\n  const [userGame1_id, setUserGame1_id] = useState(undefined);\n  const [userEntered_game1, setUserEntered_game1] = useState(undefined);\n  const [userGame1_headstart_time, setUserGame1_headstart_time] = useState(undefined);\n  const [userGame1_live, setUserGame1_live] = useState(undefined);\n\n  const [winning_address1, setWinning_address1] = useState(undefined);\n  const [treasure_found1, setTreasure_found1] = useState(undefined);\n  const [winning_prize1, setWinning_prize1] = useState(undefined);\n  const [question_hash_solved1, setQuestion_hash_solved1] = useState(undefined);\n  const [winning_message1, setWinning_message1] = useState(undefined);\n\n  const [attemptId1, setAttemptId1] = useState(undefined);\n  const [attemptAddress1, setAttemptAddress1] = useState(undefined);\n  const [attemptUsername1, setAttemptUsername1] = useState(undefined);\n  const [attemptDeadline1, setAttemptDeadline1] = useState(undefined);\n  const [totalGameEntriesGame1, settotalGameEntriesGame1] = useState(false);\n\n// Leaderboard\n  const [game1LeaderBoardIndex, setgame1LeaderBoardIndex] = useState(false);\n  const [game1LeaderBoardGameID, setgame1LeaderBoardGameID] = useState(false);\n  const [game1LeaderBoardAddress, setgame1LeaderBoardAddress] = useState(false);\n  const [game1LeaderBoardEntered, setgame1LeaderBoardEntered] = useState(false);\n  const [game1LeaderBoardUsername, setgame1LeaderBoardUsername] = useState(false);\n  const [game1LeaderBoardTries, setgame1LeaderBoardTries] = useState(false);\n  const [game1LeaderBoardStage, setgame1LeaderBoardStage] = useState(false);\n\n\n// GAME 2\n\n  const [game2_id,setGame2_id] = useState(undefined)\n  const [game2_live,setGame2_live] = useState(undefined)\n  const [game2_prize,setGame2_prize] = useState(undefined)\n  const [game2_question_hash,setGame2_question_hash] = useState(undefined)\n  const [game2_time_lock_cost,setgame2_time_lock_cost] = useState(undefined)\n  const [game2_submit_secret_cost,setGame2_submit_secret_cost] = useState(undefined)\n  const [game2_riddle,setGame2_riddle] = useState(undefined)\n  const [game2_clue,setGame2_clue] = useState(undefined)\n  const [game2_head_start_time,setGame2_head_start_time] = useState(undefined)\n  const [game2_entry_limit,setGame2_entry_limit] = useState(undefined)\n  const [game2_entry_cost,setGame2_entry_cost] = useState(undefined)\n\n  const [allGame2_id,setallGame2_id] = useState(undefined)\n  const [allGame2_user_front_of_que,setallGame2_user_front_of_que] = useState(undefined)\n  const [allGame2_deadline_time,setallGame2_deadline] = useState(undefined)\n  const [allGame2_username,setallGame2_username] = useState(undefined)\n  const [allGame2_total_game_tries,setallGame2_total_game_tries] = useState(undefined)\n\n  const [countGame2, setTimeGame2] = useState(90);\n  const [countGame2DeadlineTrue, setcountGame2DeadlineTrue] = useState(false);\n\n  const [game2numberOfEntries, setGame2numberOfEntries] = useState(0);\n  const [game2huntEntries, setGame2huntEntries] = useState(undefined);\n  const [userGame2_id, setUserGame2_id] = useState(undefined);\n  const [userEntered_game2, setUserEntered_game2] = useState(undefined);\n  const [userGame2_headstart_time, setUserGame2_headstart_time] = useState(undefined);\n  const [userGame2_live, setUserGame2_live] = useState(undefined);\n\n  const [winning_address2, setWinning_address2] = useState(undefined);\n  const [treasure_found2, setTreasure_found2] = useState(undefined);\n  const [winning_prize2, setWinning_prize2] = useState(undefined);\n  const [question_hash_solved2, setQuestion_hash_solved2] = useState(undefined);\n  const [winning_message2, setWinning_message2] = useState(undefined);\n\n  const [attemptId2, setAttemptId2] = useState(undefined);\n  const [attemptAddress2, setAttemptAddress2] = useState(undefined);\n  const [attemptUsername2, setAttemptUsername2] = useState(undefined);\n  const [attemptDeadline2, setAttemptDeadline2] = useState(undefined);\n  const [loaded, setloaded] = useState(false);\n  const [totalGameEntriesGame2, settotalGameEntriesGame2] = useState(false);\n  const [globalNumberOfTries, setGlobalNumberOfTries] = useState(false);\n\n\n\n  useEffect(() => {\n\n\n\n\n      const init = async() => {\n\n\n\n        const web3 = await getWeb3();\n\n        const accounts = await web3.eth.getAccounts();\n\n        const abi = require('./TreasureBlox.abi.json');\n        const abiToken = require('./TreasureBloxToken.abi.json');\n        // Set the provider\n        // web3.setProvider(new web3.providers.WebsocketProvider('ws://localhost:8545'));\n        // this.web3.setProvider(new this.web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/'));\n\n        // LOCAL\n        // const contract = new web3.eth.Contract(abi,\"localhost:8545\" && \"0x9987602E9e9A76CbA7e9DB9217A0962BA8F9e605\");\n        // MainNet\n        // const contract = new web3.eth.Contract(abi,\"https://bsc-dataseed.binance.org/\" && \"0x845f23Ae63b5d03a363f216Ce0BAD4FB12259930\");\n\n\n// Proxy 0x359a72d9F33685c025A6435fE1Cb4dF8fF6736B6\n// GameV2 0xE2f3578757fe29a481D0221A6d1Ce7A33Ae01170\n\n\n        const contract = new web3.eth.Contract(abi,\"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0xE2f3578757fe29a481D0221A6d1Ce7A33Ae01170\");\n\n        const tokenContract = new web3.eth.Contract(abiToken,\"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0x359a72d9F33685c025A6435fE1Cb4dF8fF6736B6\");\n        // TestNet\n        // const contract = new web3.eth.Contract(abi,\"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0xE2f3578757fe29a481D0221A6d1Ce7A33Ae01170\");\n        // Sstart Data Calls\n        const decimals = await tokenContract.methods.decimals().call().then(console.log('Yes'));\n        var totalTreasure = await tokenContract.methods.balanceOf(\"0xD10283b232c43924BCc2834bd73F811918851f3C\").call();\n        // totalTreasure = totalTreasure.substring(0, tokenContract.length-18);\n        console.log(totalTreasure,\"Total Treasure token contract\")\n\n        // const owner = await contract.methods._owner().call();\n        // const marketingWallet = await contract.methods.marketingWallet().call().then(console.log('marketing Wallet Complete'));\n        //\n        // const total_supply = await contract.methods.totalSupply().call();\n        // const treasure_chest = await contract.methods.treasureChest().call();\n        setWeb3(web3)\n        setAccounts(accounts[0])\n        setContract(contract)\n        setDecimals(decimals)\n        setTotalTreasure(totalTreasure)\n        setTokenContract(tokenContract)\n\n\n\n// GET GAMES\n// GAME 1\n        const game1 = await contract.methods.Games(1).call();\n\n        const game1_id = await game1[0];\n        const game1_live = await game1[1];\n        var game1_prize = await game1[2];\n        game1_prize = game1_prize.substring(0, game1_prize.length-18);\n\n        const game1_question_hash = await game1[3];\n        var game1_time_lock_cost = await game1[4];\n        game1_time_lock_cost = game1_time_lock_cost.substring(0, game1_time_lock_cost.length-18);\n        var game1_submit_secret_cost = await game1[5];\n        game1_submit_secret_cost = game1_submit_secret_cost.substring(0, game1_submit_secret_cost.length-18);\n        const game1_riddle = await game1[6];\n        const game1_clue = await game1[7];\n        const game1_head_start_time = await game1[8];\n        const game1_entry_limit = await game1[9];\n        var game1_entry_cost = await game1[10];\n        game1_entry_cost = game1_entry_cost.substring(0, game1_entry_cost.length-18);\n\n\n        setGame1_id(game1_id)\n        setGame1_live(game1_live)\n        setGame1_prize(game1_prize)\n        setGame1_question_hash(game1_question_hash)\n        setgame1_time_lock_cost(game1_time_lock_cost)\n\n        setGame1_submit_secret_cost(game1_submit_secret_cost)\n\n        setGame1_riddle(game1_riddle)\n        setGame1_clue(game1_clue)\n        setGame1_head_start_time(game1_head_start_time)\n        setGame1_entry_limit(game1_entry_limit)\n        setGame1_entry_cost(game1_entry_cost)\n\n\n// GAME 2\n        const game2 = await contract.methods.Games(2).call();\n\n        const game2_id = await game2[0];\n        const game2_live = await game2[1];\n        var game2_prize = await game2[2];\n        game2_prize = game2_prize.substring(0, game2_prize.length-18);\n\n        const game2_question_hash = await game2[3];\n        var game2_time_lock_cost= await game2[4];\n        game2_time_lock_cost = game2_time_lock_cost.substring(0, game2_time_lock_cost.length-18);\n\n        var game2_submit_secret_cost = await game2[5];\n        game2_submit_secret_cost = game2_submit_secret_cost.substring(0, game2_submit_secret_cost.length-18);\n\n        const game2_riddle = await game2[6];\n        const game2_clue = await game2[7];\n        const game2_head_start_time = await game2[8];\n        const game2_entry_limit = await game2[9];\n        var game2_entry_cost = await game2[10];\n        game2_entry_cost = game2_entry_cost.substring(0, game2_entry_cost.length-18);\n\n\n        setGame2_id(game2_id)\n        setGame2_live(game2_live)\n        setGame2_prize(game2_prize)\n        setGame2_question_hash(game2_question_hash)\n        setgame2_time_lock_cost(game2_time_lock_cost)\n        setGame2_submit_secret_cost(game2_submit_secret_cost)\n        setGame2_riddle(game2_riddle)\n        setGame2_clue(game2_clue)\n        setGame2_head_start_time(game2_head_start_time)\n        setGame2_entry_limit(game2_entry_limit)\n        setGame2_entry_cost(game2_entry_cost)\n\n\n\n// This Handels the countdown time and collecting information every 1 second so the counter goes down\n        const timer = window.setInterval( async() => {\n            var moment = require('moment'); // require\n\n\n            // GLOBAL\n\n            const globalTries = await contract.methods.totalumberOfTries().call();\n            console.log(\"number of tries:\",globalTries)\n            setGlobalNumberOfTries(globalTries)\n        // GET ALL GAME TIMELINES AND gamesTriess\n        // GAME 1\n            const allGame1 = await contract.methods.allGames(1).call();\n            const allGame1_id = await allGame1[0];\n            const allGame1_user_front_of_que = await allGame1[1];\n            const allGame1_deadline_time =  await allGame1[2];\n            const allGame1_username = await allGame1[3];\n            const allGame1_total_game_tries = await allGame1[4];\n\n            const numberOfEntriesGame1 = await contract.methods.numberOfEntries(1).call();\n\n\n\n            const game1huntEntries = await contract.methods.huntEntries(accounts[0],1).call();\n            const userGame1_id = await game1huntEntries[0];\n            const userEntered_game1 = await game1huntEntries[1];\n            const userGame1_headstart_time =  await game1huntEntries[2];\n            const userGame1_live = await game1huntEntries[3];\n\n\n            const pot1AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(1).call();\n            const winning_address1 = await pot1AnsweredCorrectly[0];\n            const treasure_found1 = await pot1AnsweredCorrectly[1];\n            var winning_prize1 =  await pot1AnsweredCorrectly[2];\n            winning_prize1 = winning_prize1.substring(0, winning_prize1.length-18);\n\n\n            const question_hash_solved1 = await pot1AnsweredCorrectly[3];\n            const winning_message1 = await pot1AnsweredCorrectly[4];\n\n            const getAllLatestGameAttempts1 = await contract.methods.getAllLatestGameAttempts(1).call();\n            const attemptId1 = await getAllLatestGameAttempts1[0];\n            const attemptAddress1 = await getAllLatestGameAttempts1[1];\n            const attemptDeadline1 =  await getAllLatestGameAttempts1[2];\n            const attemptUsername1 = await getAllLatestGameAttempts1[3];\n\n            const entriesGame1 = await contract.methods.numberOfEntries(1).call()\n            settotalGameEntriesGame1(entriesGame1);\n\n            // Fetches New Games if required\n            // const item = await contract.getPastEvents('setGameEvent',{});\n            // console.log(item[0].returnValues[0])\n            // console.log(item[0].returnValues[1])\n            // console.log(item[0].returnValues[2])\n\n\n            var currentStartDate = Date();\n            var startDate = new Date(currentStartDate);\n            // // Hours part from the timestamp\n            // var startDateHours = startDate.getHours();\n            // // Minutes part from the timestamp\n            // var startDateMinutes = startDate.getMinutes();\n            // // Seconds part from the timestamp\n            // var startDateSeconds = startDate.getSeconds();\n\n            // Do\n            var endDateGame1 = new Date(allGame1_deadline_time * 1000);\n            // // Hours part from the timestamp\n            // var endDateHours = endDate.getHours();\n            // // Minutes part from the timestamp\n            // var endDateMinutes = endDate.getMinutes();\n            // // Seconds part from the timestamp\n            // var endDateSeconds = endDate.getSeconds();\n\n            function getDifferenceInDays(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / (1000 * 60 * 60 * 24);\n              }\n\n            function getDifferenceInHours(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / (1000 * 60 * 60);\n              }\n\n            function getDifferenceInMinutes(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / (1000 * 60);\n              }\n\n            function getDifferenceInSeconds(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / 1000;\n              }\n            // console.log(getDifferenceInDays(endDate, startDate));\n            // console.log(getDifferenceInHours(endDate, startDate));\n            // console.log(getDifferenceInMinutes(endDate, startDate));\n\n            // console.log(getDifferenceInSeconds(startDate, endDateGame1));\n\n            var timeGame1 = Math.abs(getDifferenceInSeconds(startDate, endDateGame1));\n\n\n\n\n            setTimeGame1(timeGame1)\n            setTimeGame1(prevTime => prevTime - 1); // <-- Change this line!\n\n            setallGame1_id(allGame1_id)\n            setallGame1_user_front_of_que(allGame1_user_front_of_que)\n            setallGame1_deadline(allGame1_deadline_time)\n            setallGame1_username(allGame1_username)\n            console.log(\"username past: \", allGame1_username)\n            setallGame1_total_game_tries(allGame1_total_game_tries)\n\n            if (endDateGame1-1 >= startDate){\n              setcountGame1DeadlineTrue(true);\n            } else {\n              setcountGame1DeadlineTrue(false);\n            }\n\n            setGame1numberOfEntries(entriesGame1)\n\n            setUserGame1_id(userGame1_id)\n            setUserEntered_game1(userEntered_game1)\n            setUserGame1_headstart_time(userGame1_headstart_time)\n            setUserGame1_live(userGame1_live)\n\n            setWinning_address1(winning_address1)\n            setTreasure_found1(treasure_found1)\n            setWinning_prize1(winning_prize1)\n            setQuestion_hash_solved1(question_hash_solved1)\n            setWinning_message1(winning_message1)\n\n            setAttemptId1(attemptId1)\n            setAttemptAddress1(attemptAddress1)\n            setAttemptUsername1(attemptUsername1)\n            setAttemptDeadline1(attemptDeadline1)\n\n\n            const noOfEntrys = await contract.methods.numberOfEntries(1).call();\n\n// LeaderBoard\n\n\n            var game1_indexrows = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                game1_indexrows.push(i++);\n              }\n\n            setgame1LeaderBoardIndex(game1_indexrows)\n\n\n            var game1_leaderboard_game_id = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard_game_id = await leaderBoard[0];\n                game1_leaderboard_game_id.push(leaderboard_game_id);\n              }\n            game1LeaderBoardGameID(game1_leaderboard_game_id)\n\n\n            var game1_leaderboard_address = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard_address = await leaderBoard[1];\n                game1_leaderboard_address.push(leaderboard_address);\n              }\n            game1LeaderBoardAddress(game1_leaderboard_address)\n\n            var game1_leaderboard_entered = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard_entered = await leaderBoard[2];\n                game1_leaderboard_entered.push(leaderboard_entered);\n              }\n\n            setgame1LeaderBoardEntered(game1_leaderboard_entered)\n\n\n            var game1_leaderboard_username = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard_username = await leaderBoard[3];\n                game1_leaderboard_username.push(leaderboard_username);\n              }\n\n            setgame1LeaderBoardUsername(game1_leaderboard_username)\n\n\n            var game1_leaderboard_tries = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard_tries = await leaderBoard[4];\n                game1_leaderboard_tries.push(leaderboard_tries);\n              }\n\n            setgame1LeaderBoardTries(game1_leaderboard_tries)\n\n            var game1_leaderboard_stage = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard_stage = await leaderBoard[5];\n                game1_leaderboard_stage.push(leaderboard_stage);\n              }\n\n            setgame1LeaderBoardStage(game1_leaderboard_stage)\n\n\n\n\n\n          // GAME 2\n\n          const allGame2 = await contract.methods.allGames(2).call();\n          const allGame2_id = await allGame2[0];\n          const allGame2_user_front_of_que = await allGame2[1];\n          const allGame2_deadline_time =  await allGame2[2];\n          const allGame2_username = await allGame2[3];\n          const allGame2_total_game_tries = await allGame2[4];\n\n          const game2numberOfEntries = await contract.methods.numberOfEntries(2).call();\n\n          const game2huntEntries = await contract.methods.huntEntries(accounts[0],2).call();\n          const userGame2_id = await game2huntEntries[0];\n          const userEntered_game2 = await game2huntEntries[1];\n          const userGame2_headstart_time =  await game2huntEntries[2];\n          const userGame2_live = await game2huntEntries[3];\n\n          const numberOfEntriesGame2 = await contract.methods.numberOfEntries(2).call();\n\n\n\n          const pot2AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(2).call();\n          const winning_address2 = await pot2AnsweredCorrectly[0];\n          const treasure_found2 = await pot2AnsweredCorrectly[1];\n          var winning_prize2 =  await pot2AnsweredCorrectly[2];\n\n          winning_prize2 = winning_prize2.substring(0, winning_prize2.length-18);\n\n          const question_hash_solved2 = await pot2AnsweredCorrectly[3];\n          const winning_message2 = await pot2AnsweredCorrectly[4];\n\n          const getAllLatestGameAttempts2 = await contract.methods.getAllLatestGameAttempts(2).call();\n          const attemptId2 = await getAllLatestGameAttempts2[0];\n          const attemptAddress2 = await getAllLatestGameAttempts2[1];\n          const attemptDeadline2 =  await getAllLatestGameAttempts2[2];\n          const attemptUsername2 = await getAllLatestGameAttempts2[3];\n\n\n          var currentStartDate = Date();\n          var startDate = new Date(currentStartDate);\n\n          // Do\n          var endDateGame2 = new Date(allGame2_deadline_time * 1000);\n\n          console.log(getDifferenceInSeconds(startDate, endDateGame2));\n\n          var timeGame2 = Math.abs(getDifferenceInSeconds(startDate, endDateGame2));\n\n          setTimeGame2(timeGame2)\n          setTimeGame2(prevTime => prevTime - 1); // <-- Change this line!\n\n          setallGame2_id(allGame2_id)\n          setallGame2_user_front_of_que(allGame2_user_front_of_que)\n          setallGame2_deadline(allGame2_deadline_time)\n          setallGame2_username(allGame2_username)\n          setallGame2_total_game_tries(allGame2_total_game_tries)\n\n          if (endDateGame2-1 >= startDate){\n            setcountGame2DeadlineTrue(true);\n          } else {\n            setcountGame2DeadlineTrue(false);\n          }\n\n          setGame2numberOfEntries(game2numberOfEntries)\n\n          setUserGame2_id(userGame2_id)\n          setUserEntered_game2(userEntered_game2)\n          setUserGame2_headstart_time(userGame2_headstart_time)\n          setUserGame2_live(userGame2_live)\n\n          setWinning_address2(winning_address2)\n          setTreasure_found2(treasure_found2)\n          setWinning_prize2(winning_prize2)\n          setQuestion_hash_solved2(question_hash_solved2)\n          setWinning_message2(winning_message2)\n\n          setAttemptId2(attemptId2)\n          setAttemptAddress2(attemptAddress2)\n          setAttemptUsername2(attemptUsername2)\n          setAttemptDeadline2(attemptDeadline2)\n\n        }, 1000);\n        // End of Game timer code\n\n      }\n      init()\n\n\n\n\n\n    },[web3,accounts,contract,tokenContract,decimals,totalTreasure,game1LeaderBoardIndex,game1LeaderBoardGameID,game1LeaderBoardAddress,\n      game1LeaderBoardEntered,game1LeaderBoardUsername,game1LeaderBoardTries,game1LeaderBoardStage,\n\n      // GAME1\n  game1_id,game1_live,game1_prize,game1_question_hash,game1_time_lock_cost,game1_submit_secret_cost,game1_riddle,game1_clue,\n  allGame1_id,allGame1_user_front_of_que,allGame1_deadline_time,allGame1_username,allGame1_total_game_tries,countGame1,countGame1DeadlineTrue,\n  game1_head_start_time,game1_entry_limit,game1_entry_cost,game1numberOfEntries,userGame1_id,userEntered_game1,userGame1_headstart_time,userGame1_live,\n  winning_address1,treasure_found1,winning_prize1,question_hash_solved1,winning_message1,attemptId1,attemptUsername1,attemptDeadline1,attemptAddress1,\n  totalGameEntriesGame1,\n      // GAME2\n  game2_id,game2_live,game2_prize,game2_question_hash,game2_time_lock_cost,game2_submit_secret_cost,game2_riddle,game2_clue,\n  allGame2_id,allGame2_user_front_of_que,allGame2_deadline_time,allGame2_username,allGame2_total_game_tries,countGame2,countGame2DeadlineTrue,\n  game2_head_start_time,game2_entry_limit,game2_entry_cost,game2numberOfEntries,userGame2_id,userEntered_game2,userGame2_headstart_time,userGame2_live,\n  winning_address2,treasure_found2,winning_prize2,question_hash_solved2,winning_message2,attemptId2,attemptUsername2,attemptDeadline2,attemptAddress2,\n  totalGameEntriesGame2,\n  globalNumberOfTries\n])\n\n\n\n\n    return (\n\n\n\n\n        <div className=\"background customFont\">\n\n\n        <Helmet>\n          <title>TreasureBlox | DAPP</title>\n        </Helmet>\n\n\n        <Router>\n        <MyNav accounts={accounts}/>\n\n\n// Pages\n\n        <Switch>\n                <Route path=\"/home\">\n\n                  <Home\n                  game1_id={game1_id}\n                  game1_live={game1_live}\n                  game1_prize={game1_prize}\n                  game1_question_hash={game1_question_hash}\n                  game1_time_lock_cost={game1_time_lock_cost}\n                  game1_submit_secret_cost={game1_submit_secret_cost}\n                  game1_riddle={game1_riddle}\n                  game1_clue={game1_clue}\n                  game1_head_start_time={game1_head_start_time}\n                  game1_entry_limit={game1_entry_limit}\n                  game1_entry_cost={game1_entry_cost}\n\n                  allGame1_id={allGame1_id}\n                  allGasme1_user_front_of_que={allGame1_user_front_of_que}\n                  allGame1_deadline_time={allGame1_deadline_time}\n                  allGame1_username={allGame1_username}\n                  allGame1_total_game_tries={allGame1_total_game_tries}\n                  countGame1={countGame1}\n                  countGame1DeadlineTrue={countGame1DeadlineTrue}\n                  totalTreasure={totalTreasure}\n                  game1numberOfEntries={game1numberOfEntries}\n\n                  game2_id={game2_id}\n                  game2_live={game2_live}\n                  game2_prize={game2_prize}\n                  game2_question_hash={game2_question_hash}\n                  game2_time_lock_cost={game2_time_lock_cost}\n                  game2_submit_secret_cost={game2_submit_secret_cost}\n                  game2_riddle={game2_riddle}\n                  game2_clue={game2_clue}\n                  game2_head_start_time={game2_head_start_time}\n                  game2_entry_limit={game2_entry_limit}\n                  game2_entry_cost={game2_entry_cost}\n                  allGame2_id={allGame2_id}\n                  allGasme2_user_front_of_que={allGame2_user_front_of_que}\n                  allGame2_deadline_time={allGame2_deadline_time}\n                  allGame2_username={allGame2_username}\n                  allGame2_total_game_tries={allGame2_total_game_tries}\n                  countGame2={countGame2}\n                  countGame2DeadlineTrue={countGame2DeadlineTrue}\n\n                  totalGameEntriesGame1={totalGameEntriesGame1}\n                  totalGameEntriesGame2={totalGameEntriesGame2}\n                  globalNumberOfTries={globalNumberOfTries}\n\n                  tokenContract={tokenContract}\n\n\n                  />\n                </Route>\n\n              <Route path=\"/hunt1\">\n\n                <Hunt1\n\n                web3={web3}\n                game1_id={game1_id}\n                game1_live={game1_live}\n                game1_prize={game1_prize}\n                game1_question_hash={game1_question_hash}\n                game1_time_lock_cost={game1_time_lock_cost}\n                game1_submit_secret_cost={game1_submit_secret_cost}\n                game1_riddle={game1_riddle}\n                game1_clue={game1_clue}\n                game1_head_start_time={game1_head_start_time}\n                game1_entry_limit={game1_entry_limit}\n                game1_entry_cost={game1_entry_cost}\n                allGame1_id={allGame1_id}\n                allGasme1_user_front_of_que={allGame1_user_front_of_que}\n                allGame1_deadline_time={allGame1_deadline_time}\n                allGame1_username={allGame1_username}\n                allGame1_total_game_tries={allGame1_total_game_tries}\n                countGame1={countGame1}\n                countGame1DeadlineTrue={countGame1DeadlineTrue}\n                decimals={decimals}\n                totalTreasure={totalTreasure}\n                contract={contract}\n                accounts={accounts}\n                game1numberOfEntries={game1numberOfEntries}\n                userGame1_id={userGame1_id}\n                userEntered_game1={userEntered_game1}\n                userGame1_headstart_time={userGame1_headstart_time}\n                userGame1_live={userGame1_live}\n                winning_address1={winning_address1}\n                treasure_found1={treasure_found1}\n                winning_prize1={winning_prize1}\n                question_hash_solved1={question_hash_solved1}\n                winning_message1={winning_message1}\n                attemptId1={attemptId1}\n                attemptAddress1={attemptAddress1}\n                attemptUsername1={attemptUsername1}\n                attemptDeadline1={attemptDeadline1}\n                totalGameEntriesGame1={totalGameEntriesGame1}\n                globalNumberOfTries={globalNumberOfTries}\n\n                game1LeaderBoardIndex={game1LeaderBoardIndex}\n                game1LeaderBoardGameID={game1LeaderBoardGameID}\n                game1LeaderBoardAddress={game1LeaderBoardAddress}\n                game1LeaderBoardEntered={game1LeaderBoardEntered}\n                game1LeaderBoardUsername={game1LeaderBoardUsername}\n                game1LeaderBoardTries={game1LeaderBoardTries}\n                game1LeaderBoardStage={game1LeaderBoardStage}\n\n                />\n\n              </Route>\n\n              <Route path=\"/hunt2\">\n\n              <Hunt2\n              web3={web3}\n              game2_id={game2_id}\n              game2_live={game2_live}\n              game2_prize={game2_prize}\n              game2_question_hash={game2_question_hash}\n              game2_time_lock_cost={game2_time_lock_cost}\n              game2_submit_secret_cost={game2_submit_secret_cost}\n              game2_riddle={game2_riddle}\n              game2_clue={game2_clue}\n              game2_head_start_time={game2_head_start_time}\n              game2_entry_limit={game2_entry_limit}\n              game2_entry_cost={game2_entry_cost}\n              allGame2_id={allGame2_id}\n              allGame2_user_front_of_que={allGame2_user_front_of_que}\n              allGame2_deadline_time={allGame2_deadline_time}\n              allGame2_username={allGame2_username}\n              allGame2_total_game_tries={allGame2_total_game_tries}\n              countGame2={countGame2}\n              countGame2DeadlineTrue={countGame2DeadlineTrue}\n              decimals={decimals}\n              totalTreasure={totalTreasure}\n              contract={contract}\n              accounts={accounts}\n              game2numberOfEntries={game2numberOfEntries}\n              userGame2_id={userGame2_id}\n              userEntered_game2={userEntered_game2}\n              userGame2_headstart_time={userGame2_headstart_time}\n              userGame2_live={userGame2_live}\n              winning_address2={winning_address2}\n              treasure_found2={treasure_found2}\n              winning_prize2={winning_prize2}\n              question_hash_solved2={question_hash_solved2}\n              winning_message2={winning_message2}\n              attemptId2={attemptId2}\n              attemptAddress2={attemptAddress2}\n              attemptUsername2={attemptUsername2}\n              attemptDeadline2={attemptDeadline2}\n              totalGameEntriesGame2={totalGameEntriesGame2}\n              globalNumberOfTries={globalNumberOfTries}\n\n              />\n\n              </Route>\n\n        </Switch>\n\n        <Redirect to=\"/home\" />\n</Router>\n\n\n      </div>\n    );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}