{"ast":null,"code":"const Sha3 = require('js-sha3');\n\nconst Buffer = require('safe-buffer').Buffer;\n\nconst hashLengths = [224, 256, 384, 512];\n\nconst hash = function (bitcount) {\n  if (bitcount !== undefined && hashLengths.indexOf(bitcount) === -1) {\n    throw new Error('Unsupported hash length');\n  }\n\n  this.content = [];\n  this.bitcount = bitcount ? 'keccak_' + bitcount : 'keccak_512';\n};\n\nhash.prototype.update = function (i) {\n  if (Buffer.isBuffer(i)) {\n    this.content.push(i);\n  } else if (typeof i === 'string') {\n    this.content.push(new Buffer(i));\n  } else {\n    throw new Error('Unsupported argument to update');\n  }\n\n  return this;\n};\n\nhash.prototype.digest = function (encoding) {\n  const result = Sha3[this.bitcount](Buffer.concat(this.content));\n\n  if (encoding === 'hex') {\n    return result;\n  } else if (encoding === 'binary' || encoding === undefined) {\n    return new Buffer(result, 'hex').toString('binary');\n  } else {\n    throw new Error('Unsupported encoding for digest: ' + encoding);\n  }\n};\n\nmodule.exports = {\n  SHA3Hash: hash\n};","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/TreasureHuntDAPP_React/treasure-blox/node_modules/browserify-sha3/index.js"],"names":["Sha3","require","Buffer","hashLengths","hash","bitcount","undefined","indexOf","Error","content","prototype","update","i","isBuffer","push","digest","encoding","result","concat","toString","module","exports","SHA3Hash"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAApB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,MAAtC;;AAEA,MAAMC,WAAW,GAAG,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,CAApB;;AAEA,MAAMC,IAAI,GAAG,UAAUC,QAAV,EAAoB;AAC/B,MAAIA,QAAQ,KAAKC,SAAb,IAA0BH,WAAW,CAACI,OAAZ,CAAoBF,QAApB,MAAkC,CAAC,CAAjE,EAAoE;AAClE,UAAM,IAAIG,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACD,OAAKC,OAAL,GAAe,EAAf;AACA,OAAKJ,QAAL,GAAgBA,QAAQ,GAAG,YAAYA,QAAf,GAA0B,YAAlD;AACD,CAND;;AAQAD,IAAI,CAACM,SAAL,CAAeC,MAAf,GAAwB,UAAUC,CAAV,EAAa;AACnC,MAAIV,MAAM,CAACW,QAAP,CAAgBD,CAAhB,CAAJ,EAAwB;AACtB,SAAKH,OAAL,CAAaK,IAAb,CAAkBF,CAAlB;AACD,GAFD,MAEO,IAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AAChC,SAAKH,OAAL,CAAaK,IAAb,CAAkB,IAAIZ,MAAJ,CAAWU,CAAX,CAAlB;AACD,GAFM,MAEA;AACL,UAAM,IAAIJ,KAAJ,CAAU,gCAAV,CAAN;AACD;;AACD,SAAO,IAAP;AACD,CATD;;AAWAJ,IAAI,CAACM,SAAL,CAAeK,MAAf,GAAwB,UAAUC,QAAV,EAAoB;AAC1C,QAAMC,MAAM,GAAGjB,IAAI,CAAC,KAAKK,QAAN,CAAJ,CAAoBH,MAAM,CAACgB,MAAP,CAAc,KAAKT,OAAnB,CAApB,CAAf;;AACA,MAAIO,QAAQ,KAAK,KAAjB,EAAwB;AACtB,WAAOC,MAAP;AACD,GAFD,MAEO,IAAID,QAAQ,KAAK,QAAb,IAAyBA,QAAQ,KAAKV,SAA1C,EAAqD;AAC1D,WAAO,IAAIJ,MAAJ,CAAWe,MAAX,EAAmB,KAAnB,EAA0BE,QAA1B,CAAmC,QAAnC,CAAP;AACD,GAFM,MAEA;AACL,UAAM,IAAIX,KAAJ,CAAU,sCAAsCQ,QAAhD,CAAN;AACD;AACF,CATD;;AAWAI,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,QAAQ,EAAElB;AADK,CAAjB","sourcesContent":["const Sha3 = require('js-sha3')\nconst Buffer = require('safe-buffer').Buffer\n\nconst hashLengths = [ 224, 256, 384, 512 ]\n\nconst hash = function (bitcount) {\n  if (bitcount !== undefined && hashLengths.indexOf(bitcount) === -1) {\n    throw new Error('Unsupported hash length')\n  }\n  this.content = []\n  this.bitcount = bitcount ? 'keccak_' + bitcount : 'keccak_512'\n}\n\nhash.prototype.update = function (i) {\n  if (Buffer.isBuffer(i)) {\n    this.content.push(i)\n  } else if (typeof i === 'string') {\n    this.content.push(new Buffer(i))\n  } else {\n    throw new Error('Unsupported argument to update')\n  }\n  return this\n}\n\nhash.prototype.digest = function (encoding) {\n  const result = Sha3[this.bitcount](Buffer.concat(this.content))\n  if (encoding === 'hex') {\n    return result\n  } else if (encoding === 'binary' || encoding === undefined) {\n    return new Buffer(result, 'hex').toString('binary')\n  } else {\n    throw new Error('Unsupported encoding for digest: ' + encoding)\n  }\n}\n\nmodule.exports = {\n  SHA3Hash: hash\n}\n"]},"metadata":{},"sourceType":"script"}