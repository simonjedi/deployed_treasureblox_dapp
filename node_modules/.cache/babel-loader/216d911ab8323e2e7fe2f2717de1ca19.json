{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/PartnershipExample/GamesSelection/react-super-mario/index.js\";\nimport React from 'react';\nimport Background from './components/Background';\nimport Mario from './components/Player';\nimport Touchable from './components/Touchable';\nimport ButtonInfo from './components/Buttons/info';\nimport InfoBox from './components/Infobox';\nimport allowedKeys from './util/allowedKeys';\nimport variables from './util/variables';\nimport introMusic from './assets/audio/mpi.wav';\nimport music from './assets/audio/mp.wav';\nimport jumpAudio from './assets/audio/smw_jump.wav';\nimport infoAudio from './assets/audio/smw_message_block.wav';\nimport './ReactSuperMario.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ReactSuperMario extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      width: 0,\n      positionX: 0,\n      positionY: 0,\n      scenarioPosition: 0,\n      direction: 'ltr',\n      isMoving: false,\n      isJumping: false,\n      isFalling: false,\n      displayInfo: false,\n      userIsTouching: false,\n      userTouchingX: 0,\n      userTouchingY: 0\n    };\n    this._activeKeys = allowedKeys;\n\n    this.gameCoreRun = () => {\n      const {\n        direction,\n        positionX,\n        positionY,\n        width,\n        scenarioPosition,\n        isJumping,\n        isFalling\n      } = this.state;\n      const {\n        _activeKeys\n      } = this;\n      const step = _activeKeys.a || _activeKeys.s ? 20 : 10;\n      const jumpLimit = 120; // Movement\n\n      if (_activeKeys.ArrowRight ? !_activeKeys.ArrowLeft : _activeKeys.ArrowLeft) {\n        this.setState({\n          isMoving: true\n        });\n\n        if (direction === 'ltr' && _activeKeys.ArrowLeft) {\n          this.setState({\n            direction: 'rtl'\n          });\n        } else if (direction === 'rtl' && _activeKeys.ArrowRight) {\n          this.setState({\n            direction: 'ltr'\n          });\n        }\n\n        if (_activeKeys.ArrowRight && width && positionX > width * 40 / 100) {\n          this.setState({\n            scenarioPosition: scenarioPosition + step\n          });\n        } else if (_activeKeys.ArrowLeft && positionX <= step && scenarioPosition > 0) {\n          this.setState({\n            scenarioPosition: scenarioPosition - step\n          });\n        } else if (_activeKeys.ArrowRight && width && positionX < width - variables.marioWidth - step) {\n          this.setState({\n            positionX: positionX + step\n          });\n        } else if (_activeKeys.ArrowLeft && positionX > 0) {\n          this.setState({\n            positionX: positionX - step\n          });\n        }\n      } else {\n        this.setState({\n          isMoving: false\n        });\n      } // Jump\n\n\n      if (_activeKeys.z && !isFalling) {\n        if (!isJumping) {\n          this._audioSfxRef.src = jumpAudio;\n\n          this._audioSfxRef.play();\n        }\n\n        this.setState({\n          isJumping: true\n        });\n\n        if (positionY < jumpLimit) {\n          this.setState({\n            positionY: positionY + 30\n          });\n        } else {\n          this.setState({\n            isFalling: true\n          });\n        }\n      } else {\n        if (positionY > 0) {\n          const nextPositionY = positionY - (_activeKeys.z ? 30 : 40);\n          this.setState({\n            isFalling: true,\n            positionY: nextPositionY >= 0 ? nextPositionY : 0\n          });\n        } else {\n          this.setState({\n            isJumping: false,\n            isFalling: _activeKeys.z\n          });\n        }\n      }\n    };\n\n    this.handleTouchStart = event => {\n      this.setState({\n        userIsTouching: true,\n        userTouchingX: event.touches[0].clientX,\n        userTouchingY: event.touches[0].clientY\n      });\n    };\n\n    this.handleTouchEnd = () => {\n      this.setState({\n        userIsTouching: false,\n        userTouchingX: 0,\n        userTouchingY: 0\n      });\n      this._activeKeys.ArrowRight = false;\n      this._activeKeys.ArrowLeft = false;\n      this._activeKeys.a = false;\n      this._activeKeys.z = false;\n    };\n\n    this.handleTouchMove = event => {\n      const {\n        userTouchingX,\n        userTouchingY\n      } = this.state;\n      const diffX = event.touches[0].clientX - userTouchingX;\n      const diffY = userTouchingY - event.touches[0].clientY;\n\n      if (Math.abs(diffX) > 100) {\n        this._activeKeys.a = true;\n      } else {\n        this._activeKeys.a = false;\n      }\n\n      if (diffX > 20) {\n        this._activeKeys.ArrowRight = true;\n        this._activeKeys.ArrowLeft = false;\n      } else if (diffX < -20) {\n        this._activeKeys.ArrowLeft = true;\n        this._activeKeys.ArrowRight = false;\n      }\n\n      if (diffY > 40) {\n        this._activeKeys.z = true;\n      } else {\n        this._activeKeys.z = false;\n      }\n    };\n\n    this.handleGameInfo = () => {\n      clearInterval(this._gameCoreRunTimeout);\n\n      if (this._audioSfxRef) {\n        this._audioSfxRef.src = infoAudio;\n\n        this._audioSfxRef.play();\n      }\n\n      this.setState({\n        displayInfo: true,\n        isFalling: true,\n        positionY: 60\n      });\n    };\n\n    this.getRef = ref => {\n      if (ref) {\n        this._gameContainerRef = ref;\n        this.setState({\n          width: ref.clientWidth\n        });\n      }\n    };\n\n    this.getAudioRef = ref => {\n      if (ref) {\n        this._audioRef = ref;\n\n        const tryRetry = () => new Promise((resolve, reject) => {\n          const playPromise = ref.play();\n\n          if (playPromise) {\n            playPromise.then(() => {\n              deregister();\n              resolve();\n            }).catch(reject);\n          } else {\n            deregister();\n            resolve();\n          }\n        });\n\n        const register = () => {\n          window.addEventListener('focus', tryRetry);\n          window.addEventListener('click', tryRetry);\n          window.addEventListener('keypress', tryRetry);\n          window.addEventListener('load', tryRetry);\n        };\n\n        const deregister = () => {\n          window.removeEventListener('focus', tryRetry);\n          window.removeEventListener('click', tryRetry);\n          window.removeEventListener('keypress', tryRetry);\n          window.removeEventListener('load', tryRetry);\n        };\n\n        tryRetry().catch(register);\n\n        ref.onended = () => {\n          ref.src = music;\n          ref.loop = true;\n          ref.play();\n\n          ref.onended = () => {};\n        };\n      }\n    };\n\n    this.getSfxAudioRef = ref => {\n      if (ref) {\n        this._audioSfxRef = ref;\n      }\n    };\n\n    this.keyDown = event => {\n      const {\n        _activeKeys,\n        state: {\n          displayInfo\n        }\n      } = this;\n\n      if (_activeKeys[event.key] === false) {\n        _activeKeys[event.key] = true;\n\n        if (displayInfo) {\n          this.setState({\n            displayInfo: false\n          });\n          this.restart();\n        }\n      }\n    };\n\n    this.keyUp = event => {\n      const {\n        _activeKeys\n      } = this;\n\n      if (_activeKeys[event.key] === true) {\n        _activeKeys[event.key] = false;\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.keyDown);\n    window.addEventListener('keyup', this.keyUp);\n    window.addEventListener('touchstart', this.handleTouchStart);\n    window.addEventListener('touchmove', this.handleTouchMove);\n    window.addEventListener('touchend', this.handleTouchEnd);\n    this._gameCoreRunTimeout = setInterval(this.gameCoreRun, 80); // toastr.success('Move with arrow LEFT/RIGHT <br/>Run with A or S <br/>Jump with Z', 'Instructions', { timeOut: 5000 })\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.keyDown);\n    window.removeEventListener('keyup', this.keyUp);\n    window.removeEventListener('touchstart', this.handleTouchStart);\n    window.removeEventListener('touchmove', this.handleTouchMove);\n    window.removeventListener('touchend', this.handleTouchEnd);\n    clearInterval(this._gameCoreRunTimeout);\n  }\n\n  restart() {\n    clearInterval(this._gameCoreRunTimeout);\n    this._gameCoreRunTimeout = setInterval(this.gameCoreRun, 80);\n  }\n\n  render() {\n    const {\n      positionX,\n      positionY,\n      direction,\n      isMoving,\n      isJumping,\n      scenarioPosition,\n      displayInfo\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ReactSuperMario\",\n      ref: this.getRef,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        position: scenarioPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Mario, {\n        positionX: positionX,\n        positionY: positionY,\n        direction: direction,\n        isMoving: isMoving,\n        isJumping: isJumping\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: introMusic,\n        ref: this.getAudioRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: this.getSfxAudioRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Touchable, {\n        onTouch: this.handleGameInfo,\n        active: displayInfo,\n        scenarioPosition: scenarioPosition,\n        positionX: 200,\n        positionY: 150,\n        playerPositionX: positionX,\n        playerPositionY: positionY,\n        children: /*#__PURE__*/_jsxDEV(ButtonInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), displayInfo && /*#__PURE__*/_jsxDEV(InfoBox, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"React JS Super Mario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Check the source code\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://github.com/fabiopaiva/react-super-mario\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fab fa-github fa-2x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Follow me:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://github.com/fabiopaiva\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fab fa-github fa-2x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://www.linkedin.com/in/fabio-dev/\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fab fa-linkedin fa-2x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/PartnershipExample/GamesSelection/react-super-mario/index.js"],"names":["React","Background","Mario","Touchable","ButtonInfo","InfoBox","allowedKeys","variables","introMusic","music","jumpAudio","infoAudio","ReactSuperMario","Component","state","width","positionX","positionY","scenarioPosition","direction","isMoving","isJumping","isFalling","displayInfo","userIsTouching","userTouchingX","userTouchingY","_activeKeys","gameCoreRun","step","a","s","jumpLimit","ArrowRight","ArrowLeft","setState","marioWidth","z","_audioSfxRef","src","play","nextPositionY","handleTouchStart","event","touches","clientX","clientY","handleTouchEnd","handleTouchMove","diffX","diffY","Math","abs","handleGameInfo","clearInterval","_gameCoreRunTimeout","getRef","ref","_gameContainerRef","clientWidth","getAudioRef","_audioRef","tryRetry","Promise","resolve","reject","playPromise","then","deregister","catch","register","window","addEventListener","removeEventListener","onended","loop","getSfxAudioRef","keyDown","key","restart","keyUp","componentDidMount","setInterval","componentWillUnmount","removeventListener","render"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAO,uBAAP;;AAmBA,eAAe,MAAMC,eAAN,SAA8BZ,KAAK,CAACa,SAApC,CAA4D;AAAA;AAAA;AAAA,SACzEC,KADyE,GACjE;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,SAAS,EAAE,CAFL;AAGNC,MAAAA,SAAS,EAAE,CAHL;AAINC,MAAAA,gBAAgB,EAAE,CAJZ;AAKNC,MAAAA,SAAS,EAAE,KALL;AAMNC,MAAAA,QAAQ,EAAE,KANJ;AAONC,MAAAA,SAAS,EAAE,KAPL;AAQNC,MAAAA,SAAS,EAAE,KARL;AASNC,MAAAA,WAAW,EAAE,KATP;AAUNC,MAAAA,cAAc,EAAE,KAVV;AAWNC,MAAAA,aAAa,EAAE,CAXT;AAYNC,MAAAA,aAAa,EAAE;AAZT,KADiE;AAAA,SAoCzEC,WApCyE,GAoCvCrB,WApCuC;;AAAA,SA8CzEsB,WA9CyE,GA8C3D,MAAM;AAClB,YAAM;AAAET,QAAAA,SAAF;AAAaH,QAAAA,SAAb;AAAwBC,QAAAA,SAAxB;AAAmCF,QAAAA,KAAnC;AAA0CG,QAAAA,gBAA1C;AAA4DG,QAAAA,SAA5D;AAAuEC,QAAAA;AAAvE,UAAqF,KAAKR,KAAhG;AACA,YAAM;AAAEa,QAAAA;AAAF,UAAkB,IAAxB;AACA,YAAME,IAAI,GAAGF,WAAW,CAACG,CAAZ,IAAiBH,WAAW,CAACI,CAA7B,GAAkC,EAAlC,GAAuC,EAApD;AACA,YAAMC,SAAS,GAAG,GAAlB,CAJkB,CAMlB;;AACA,UAAIL,WAAW,CAACM,UAAZ,GAAyB,CAACN,WAAW,CAACO,SAAtC,GAAkDP,WAAW,CAACO,SAAlE,EAA6E;AAC3E,aAAKC,QAAL,CAAc;AAAEf,UAAAA,QAAQ,EAAE;AAAZ,SAAd;;AACA,YAAID,SAAS,KAAK,KAAd,IAAuBQ,WAAW,CAACO,SAAvC,EAAkD;AAChD,eAAKC,QAAL,CAAc;AAAEhB,YAAAA,SAAS,EAAE;AAAb,WAAd;AACD,SAFD,MAEO,IAAIA,SAAS,KAAK,KAAd,IAAuBQ,WAAW,CAACM,UAAvC,EAAmD;AACxD,eAAKE,QAAL,CAAc;AAAEhB,YAAAA,SAAS,EAAE;AAAb,WAAd;AACD;;AACD,YAAIQ,WAAW,CAACM,UAAZ,IAA0BlB,KAA1B,IAAmCC,SAAS,GAAID,KAAK,GAAG,EAAR,GAAa,GAAjE,EAAuE;AACrE,eAAKoB,QAAL,CAAc;AAAEjB,YAAAA,gBAAgB,EAAEA,gBAAgB,GAAGW;AAAvC,WAAd;AACD,SAFD,MAEO,IAAIF,WAAW,CAACO,SAAZ,IAAyBlB,SAAS,IAAIa,IAAtC,IAA8CX,gBAAgB,GAAG,CAArE,EAAwE;AAC7E,eAAKiB,QAAL,CAAc;AAAEjB,YAAAA,gBAAgB,EAAEA,gBAAgB,GAAGW;AAAvC,WAAd;AACD,SAFM,MAEA,IAAIF,WAAW,CAACM,UAAZ,IAA0BlB,KAA1B,IAAmCC,SAAS,GAAID,KAAK,GAAGR,SAAS,CAAC6B,UAAlB,GAA+BP,IAAnF,EAA0F;AAC/F,eAAKM,QAAL,CAAc;AAAEnB,YAAAA,SAAS,EAAEA,SAAS,GAAGa;AAAzB,WAAd;AACD,SAFM,MAEA,IAAIF,WAAW,CAACO,SAAZ,IAAyBlB,SAAS,GAAG,CAAzC,EAA4C;AACjD,eAAKmB,QAAL,CAAc;AAAEnB,YAAAA,SAAS,EAAEA,SAAS,GAAGa;AAAzB,WAAd;AACD;AACF,OAhBD,MAgBO;AACL,aAAKM,QAAL,CAAc;AAAEf,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACD,OAzBiB,CA2BlB;;;AACA,UAAIO,WAAW,CAACU,CAAZ,IAAiB,CAACf,SAAtB,EAAiC;AAC/B,YAAI,CAACD,SAAL,EAAgB;AACd,eAAKiB,YAAL,CAAkBC,GAAlB,GAAwB7B,SAAxB;;AACA,eAAK4B,YAAL,CAAkBE,IAAlB;AACD;;AACD,aAAKL,QAAL,CAAc;AAAEd,UAAAA,SAAS,EAAE;AAAb,SAAd;;AACA,YAAIJ,SAAS,GAAGe,SAAhB,EAA2B;AACzB,eAAKG,QAAL,CAAc;AAAElB,YAAAA,SAAS,EAAEA,SAAS,GAAG;AAAzB,WAAd;AACD,SAFD,MAEO;AACL,eAAKkB,QAAL,CAAc;AAAEb,YAAAA,SAAS,EAAE;AAAb,WAAd;AACD;AACF,OAXD,MAWO;AACL,YAAIL,SAAS,GAAG,CAAhB,EAAmB;AACjB,gBAAMwB,aAAa,GAAGxB,SAAS,IAAIU,WAAW,CAACU,CAAZ,GAAgB,EAAhB,GAAqB,EAAzB,CAA/B;AACA,eAAKF,QAAL,CAAc;AAAEb,YAAAA,SAAS,EAAE,IAAb;AAAmBL,YAAAA,SAAS,EAAEwB,aAAa,IAAI,CAAjB,GAAqBA,aAArB,GAAqC;AAAnE,WAAd;AACD,SAHD,MAGO;AACL,eAAKN,QAAL,CAAc;AAAEd,YAAAA,SAAS,EAAE,KAAb;AAAoBC,YAAAA,SAAS,EAAEK,WAAW,CAACU;AAA3C,WAAd;AACD;AACF;AACF,KA7FwE;;AAAA,SA+FzEK,gBA/FyE,GA+FrDC,KAAD,IAAuB;AACxC,WAAKR,QAAL,CAAc;AACZX,QAAAA,cAAc,EAAE,IADJ;AAEZC,QAAAA,aAAa,EAAEkB,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBC,OAFpB;AAGZnB,QAAAA,aAAa,EAAEiB,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBE;AAHpB,OAAd;AAKD,KArGwE;;AAAA,SAuGzEC,cAvGyE,GAuGxD,MAAM;AACrB,WAAKZ,QAAL,CAAc;AACZX,QAAAA,cAAc,EAAE,KADJ;AAEZC,QAAAA,aAAa,EAAE,CAFH;AAGZC,QAAAA,aAAa,EAAE;AAHH,OAAd;AAKA,WAAKC,WAAL,CAAiBM,UAAjB,GAA8B,KAA9B;AACA,WAAKN,WAAL,CAAiBO,SAAjB,GAA6B,KAA7B;AACA,WAAKP,WAAL,CAAiBG,CAAjB,GAAqB,KAArB;AACA,WAAKH,WAAL,CAAiBU,CAAjB,GAAqB,KAArB;AACD,KAjHwE;;AAAA,SAmHzEW,eAnHyE,GAmHtDL,KAAD,IAAuB;AACvC,YAAM;AAAElB,QAAAA,aAAF;AAAiBC,QAAAA;AAAjB,UAAmC,KAAKZ,KAA9C;AACA,YAAMmC,KAAK,GAAGN,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBC,OAAjB,GAA2BpB,aAAzC;AACA,YAAMyB,KAAK,GAAGxB,aAAa,GAAGiB,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBE,OAA/C;;AAEA,UAAIK,IAAI,CAACC,GAAL,CAASH,KAAT,IAAkB,GAAtB,EAA2B;AACzB,aAAKtB,WAAL,CAAiBG,CAAjB,GAAqB,IAArB;AACD,OAFD,MAEO;AACL,aAAKH,WAAL,CAAiBG,CAAjB,GAAqB,KAArB;AACD;;AACD,UAAImB,KAAK,GAAG,EAAZ,EAAgB;AACd,aAAKtB,WAAL,CAAiBM,UAAjB,GAA8B,IAA9B;AACA,aAAKN,WAAL,CAAiBO,SAAjB,GAA6B,KAA7B;AACD,OAHD,MAGO,IAAIe,KAAK,GAAG,CAAC,EAAb,EAAiB;AACtB,aAAKtB,WAAL,CAAiBO,SAAjB,GAA6B,IAA7B;AACA,aAAKP,WAAL,CAAiBM,UAAjB,GAA8B,KAA9B;AACD;;AAED,UAAIiB,KAAK,GAAG,EAAZ,EAAgB;AACd,aAAKvB,WAAL,CAAiBU,CAAjB,GAAqB,IAArB;AACD,OAFD,MAEO;AACL,aAAKV,WAAL,CAAiBU,CAAjB,GAAqB,KAArB;AACD;AACF,KA1IwE;;AAAA,SA4IzEgB,cA5IyE,GA4IxD,MAAM;AACrBC,MAAAA,aAAa,CAAC,KAAKC,mBAAN,CAAb;;AACA,UAAI,KAAKjB,YAAT,EAAuB;AACrB,aAAKA,YAAL,CAAkBC,GAAlB,GAAwB5B,SAAxB;;AACA,aAAK2B,YAAL,CAAkBE,IAAlB;AACD;;AACD,WAAKL,QAAL,CAAc;AAAEZ,QAAAA,WAAW,EAAE,IAAf;AAAqBD,QAAAA,SAAS,EAAE,IAAhC;AAAsCL,QAAAA,SAAS,EAAE;AAAjD,OAAd;AACD,KAnJwE;;AAAA,SAqJzEuC,MArJyE,GAqJ/DC,GAAD,IAA0B;AACjC,UAAIA,GAAJ,EAAS;AACP,aAAKC,iBAAL,GAAyBD,GAAzB;AACA,aAAKtB,QAAL,CAAc;AAAEpB,UAAAA,KAAK,EAAE0C,GAAG,CAACE;AAAb,SAAd;AACD;AACF,KA1JwE;;AAAA,SA4JzEC,WA5JyE,GA4J1DH,GAAD,IAA4B;AACxC,UAAIA,GAAJ,EAAS;AACP,aAAKI,SAAL,GAAiBJ,GAAjB;;AACA,cAAMK,QAAQ,GAAG,MAAM,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtD,gBAAMC,WAAW,GAAGT,GAAG,CAACjB,IAAJ,EAApB;;AACA,cAAI0B,WAAJ,EAAiB;AACfA,YAAAA,WAAW,CACRC,IADH,CACQ,MAAM;AACVC,cAAAA,UAAU;AACVJ,cAAAA,OAAO;AACR,aAJH,EAKGK,KALH,CAKSJ,MALT;AAMD,WAPD,MAOO;AACLG,YAAAA,UAAU;AACVJ,YAAAA,OAAO;AACR;AACF,SAbsB,CAAvB;;AAeA,cAAMM,QAAQ,GAAG,MAAM;AACrBC,UAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCV,QAAjC;AACAS,UAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCV,QAAjC;AACAS,UAAAA,MAAM,CAACC,gBAAP,CAAwB,UAAxB,EAAoCV,QAApC;AACAS,UAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgCV,QAAhC;AACD,SALD;;AAMA,cAAMM,UAAU,GAAG,MAAM;AACvBG,UAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCX,QAApC;AACAS,UAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCX,QAApC;AACAS,UAAAA,MAAM,CAACE,mBAAP,CAA2B,UAA3B,EAAuCX,QAAvC;AACAS,UAAAA,MAAM,CAACE,mBAAP,CAA2B,MAA3B,EAAmCX,QAAnC;AACD,SALD;;AAMAA,QAAAA,QAAQ,GAAGO,KAAX,CAAiBC,QAAjB;;AAEAb,QAAAA,GAAG,CAACiB,OAAJ,GAAc,MAAM;AAClBjB,UAAAA,GAAG,CAAClB,GAAJ,GAAU9B,KAAV;AACAgD,UAAAA,GAAG,CAACkB,IAAJ,GAAW,IAAX;AACAlB,UAAAA,GAAG,CAACjB,IAAJ;;AACAiB,UAAAA,GAAG,CAACiB,OAAJ,GAAc,MAAM,CAAE,CAAtB;AACD,SALD;AAMD;AACF,KAnMwE;;AAAA,SAqMzEE,cArMyE,GAqMvDnB,GAAD,IAA4B;AAC3C,UAAIA,GAAJ,EAAS;AACP,aAAKnB,YAAL,GAAoBmB,GAApB;AACD;AACF,KAzMwE;;AAAA,SA2MzEoB,OA3MyE,GA2M9DlC,KAAD,IAA0B;AAClC,YAAM;AAAEhB,QAAAA,WAAF;AAAeb,QAAAA,KAAK,EAAE;AAAES,UAAAA;AAAF;AAAtB,UAA0C,IAAhD;;AACA,UAAII,WAAW,CAACgB,KAAK,CAACmC,GAAP,CAAX,KAA2B,KAA/B,EAAuC;AACrCnD,QAAAA,WAAW,CAACgB,KAAK,CAACmC,GAAP,CAAX,GAAyB,IAAzB;;AACA,YAAIvD,WAAJ,EAAiB;AACf,eAAKY,QAAL,CAAc;AAAEZ,YAAAA,WAAW,EAAE;AAAf,WAAd;AACA,eAAKwD,OAAL;AACD;AACF;AACF,KApNwE;;AAAA,SAsNzEC,KAtNyE,GAsNhErC,KAAD,IAA0B;AAChC,YAAM;AAAEhB,QAAAA;AAAF,UAAkB,IAAxB;;AACA,UAAIA,WAAW,CAACgB,KAAK,CAACmC,GAAP,CAAX,KAA2B,IAA/B,EAAsC;AACpCnD,QAAAA,WAAW,CAACgB,KAAK,CAACmC,GAAP,CAAX,GAAyB,KAAzB;AACD;AACF,KA3NwE;AAAA;;AAgBzEG,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKK,OAAxC;AACAN,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiC,KAAKQ,KAAtC;AACAT,IAAAA,MAAM,CAACC,gBAAP,CAAwB,YAAxB,EAAsC,KAAK9B,gBAA3C;AACA6B,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqC,KAAKxB,eAA1C;AACAuB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,UAAxB,EAAoC,KAAKzB,cAAzC;AACA,SAAKQ,mBAAL,GAA2B2B,WAAW,CAAC,KAAKtD,WAAN,EAAmB,EAAnB,CAAtC,CANkB,CAOlB;AACD;;AAEDuD,EAAAA,oBAAoB,GAAG;AACrBZ,IAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsC,KAAKI,OAA3C;AACAN,IAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoC,KAAKO,KAAzC;AACAT,IAAAA,MAAM,CAACE,mBAAP,CAA2B,YAA3B,EAAyC,KAAK/B,gBAA9C;AACA6B,IAAAA,MAAM,CAACE,mBAAP,CAA2B,WAA3B,EAAwC,KAAKzB,eAA7C;AACAuB,IAAAA,MAAM,CAACa,kBAAP,CAA0B,UAA1B,EAAsC,KAAKrC,cAA3C;AACAO,IAAAA,aAAa,CAAC,KAAKC,mBAAN,CAAb;AACD;;AAQDwB,EAAAA,OAAO,GAAG;AACRzB,IAAAA,aAAa,CAAC,KAAKC,mBAAN,CAAb;AACA,SAAKA,mBAAL,GAA2B2B,WAAW,CAAC,KAAKtD,WAAN,EAAmB,EAAnB,CAAtC;AACD;;AAiLDyD,EAAAA,MAAM,GAAG;AACP,UAAM;AACJrE,MAAAA,SADI;AAEJC,MAAAA,SAFI;AAGJE,MAAAA,SAHI;AAIJC,MAAAA,QAJI;AAKJC,MAAAA,SALI;AAMJH,MAAAA,gBANI;AAOJK,MAAAA;AAPI,QAQF,KAAKT,KART;AASA,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,GAAG,EAAE,KAAK0C,MAA3C;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEtC;AAAtB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,SAAS,EAAEF,SADb;AAEE,QAAA,SAAS,EAAEC,SAFb;AAGE,QAAA,SAAS,EAAEE,SAHb;AAIE,QAAA,QAAQ,EAAEC,QAJZ;AAKE,QAAA,SAAS,EAAEC;AALb;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAO,QAAA,GAAG,EAAEb,UAAZ;AAAwB,QAAA,GAAG,EAAE,KAAKoD;AAAlC;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAO,QAAA,GAAG,EAAE,KAAKgB;AAAjB;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE,QAAC,SAAD;AACE,QAAA,OAAO,EAAE,KAAKvB,cADhB;AAEE,QAAA,MAAM,EAAE9B,WAFV;AAGE,QAAA,gBAAgB,EAAEL,gBAHpB;AAIE,QAAA,SAAS,EAAE,GAJb;AAKE,QAAA,SAAS,EAAE,GALb;AAME,QAAA,eAAe,EAAEF,SANnB;AAOE,QAAA,eAAe,EAAEC,SAPnB;AAAA,+BASE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,cAXF,EAsBGM,WAAW,iBACV,QAAC,OAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,8CAEG,GAFH,eAGE;AAAG,YAAA,IAAI,EAAC,iDAAR;AAA0D,YAAA,MAAM,EAAC,QAAjE;AAA0E,YAAA,GAAG,EAAC,qBAA9E;AAAA,mCACE;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eASE;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE;AAAA,kCACE;AAAG,YAAA,IAAI,EAAC,+BAAR;AAAwC,YAAA,MAAM,EAAC,QAA/C;AAAwD,YAAA,GAAG,EAAC,qBAA5D;AAAA,mCACE;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,EAIG,GAJH,eAKE;AAAG,YAAA,IAAI,EAAC,wCAAR;AAAiD,YAAA,MAAM,EAAC,QAAxD;AAAiE,YAAA,GAAG,EAAC,qBAArE;AAAA,mCACE;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgDD;;AAvRwE","sourcesContent":["// @flow\nimport React from 'react'\nimport Background from './components/Background'\nimport Mario from './components/Player'\nimport Touchable from './components/Touchable'\nimport ButtonInfo from './components/Buttons/info'\nimport InfoBox from './components/Infobox'\nimport allowedKeys from './util/allowedKeys'\nimport variables from './util/variables'\nimport introMusic from './assets/audio/mpi.wav'\nimport music from './assets/audio/mp.wav'\nimport jumpAudio from './assets/audio/smw_jump.wav'\nimport infoAudio from './assets/audio/smw_message_block.wav'\nimport './ReactSuperMario.css'\n\ntype Props = {}\n\ntype State = {\n  width?: number,\n  positionX: number,\n  positionY: number,\n  scenarioPosition: number,\n  direction: 'ltr' | 'rtl',\n  isMoving: boolean,\n  isJumping: boolean,\n  isFalling: boolean,\n  displayInfo: boolean,\n  userIsTouching: boolean,\n  userTouchingX: number,\n  userTouchingY: number,\n}\n\nexport default class ReactSuperMario extends React.Component<Props, State> {\n  state = {\n    width: 0,\n    positionX: 0,\n    positionY: 0,\n    scenarioPosition: 0,\n    direction: 'ltr',\n    isMoving: false,\n    isJumping: false,\n    isFalling: false,\n    displayInfo: false,\n    userIsTouching: false,\n    userTouchingX: 0,\n    userTouchingY: 0,\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.keyDown)\n    window.addEventListener('keyup', this.keyUp)\n    window.addEventListener('touchstart', this.handleTouchStart)\n    window.addEventListener('touchmove', this.handleTouchMove)\n    window.addEventListener('touchend', this.handleTouchEnd)\n    this._gameCoreRunTimeout = setInterval(this.gameCoreRun, 80)\n    // toastr.success('Move with arrow LEFT/RIGHT <br/>Run with A or S <br/>Jump with Z', 'Instructions', { timeOut: 5000 })\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.keyDown)\n    window.removeEventListener('keyup', this.keyUp)\n    window.removeEventListener('touchstart', this.handleTouchStart)\n    window.removeEventListener('touchmove', this.handleTouchMove)\n    window.removeventListener('touchend', this.handleTouchEnd)\n    clearInterval(this._gameCoreRunTimeout)\n  }\n\n  _gameCoreRunTimeout: IntervalID;\n  _activeKeys: typeof allowedKeys = allowedKeys;\n  _gameContainerRef: ?HTMLDivElement;\n  _audioRef: ?HTMLAudioElement;\n  _audioSfxRef: ?HTMLAudioElement;\n\n  restart() {\n    clearInterval(this._gameCoreRunTimeout)\n    this._gameCoreRunTimeout = setInterval(this.gameCoreRun, 80)\n  }\n\n  gameCoreRun = () => {\n    const { direction, positionX, positionY, width, scenarioPosition, isJumping, isFalling } = this.state;\n    const { _activeKeys } = this;\n    const step = _activeKeys.a || _activeKeys.s ?  20 : 10;\n    const jumpLimit = 120;\n\n    // Movement\n    if (_activeKeys.ArrowRight ? !_activeKeys.ArrowLeft : _activeKeys.ArrowLeft) {\n      this.setState({ isMoving: true });\n      if (direction === 'ltr' && _activeKeys.ArrowLeft) {\n        this.setState({ direction: 'rtl' });\n      } else if (direction === 'rtl' && _activeKeys.ArrowRight) {\n        this.setState({ direction: 'ltr' });\n      }\n      if (_activeKeys.ArrowRight && width && positionX > (width * 40 / 100)) {\n        this.setState({ scenarioPosition: scenarioPosition + step });\n      } else if (_activeKeys.ArrowLeft && positionX <= step && scenarioPosition > 0) {\n        this.setState({ scenarioPosition: scenarioPosition - step });\n      } else if (_activeKeys.ArrowRight && width && positionX < (width - variables.marioWidth - step)) {\n        this.setState({ positionX: positionX + step });\n      } else if (_activeKeys.ArrowLeft && positionX > 0) {\n        this.setState({ positionX: positionX - step });\n      }\n    } else {\n      this.setState({ isMoving: false });\n    }\n\n    // Jump\n    if (_activeKeys.z && !isFalling) {\n      if (!isJumping) {\n        this._audioSfxRef.src = jumpAudio\n        this._audioSfxRef.play()\n      }\n      this.setState({ isJumping: true })\n      if (positionY < jumpLimit) {\n        this.setState({ positionY: positionY + 30 })\n      } else {\n        this.setState({ isFalling: true })\n      }\n    } else {\n      if (positionY > 0) {\n        const nextPositionY = positionY - (_activeKeys.z ? 30 : 40)\n        this.setState({ isFalling: true, positionY: nextPositionY >= 0 ? nextPositionY : 0 })\n      } else {\n        this.setState({ isJumping: false, isFalling: _activeKeys.z })\n      }\n    }\n  }\n\n  handleTouchStart = (event: TouchEvent) => {\n    this.setState({\n      userIsTouching: true,\n      userTouchingX: event.touches[0].clientX,\n      userTouchingY: event.touches[0].clientY,\n    })\n  }\n\n  handleTouchEnd = () => {\n    this.setState({\n      userIsTouching: false,\n      userTouchingX: 0,\n      userTouchingY: 0,\n    })\n    this._activeKeys.ArrowRight = false\n    this._activeKeys.ArrowLeft = false\n    this._activeKeys.a = false\n    this._activeKeys.z = false\n  }\n\n  handleTouchMove = (event: TouchEvent) => {\n    const { userTouchingX, userTouchingY } = this.state\n    const diffX = event.touches[0].clientX - userTouchingX\n    const diffY = userTouchingY - event.touches[0].clientY\n\n    if (Math.abs(diffX) > 100) {\n      this._activeKeys.a = true\n    } else {\n      this._activeKeys.a = false\n    }\n    if (diffX > 20) {\n      this._activeKeys.ArrowRight = true\n      this._activeKeys.ArrowLeft = false\n    } else if (diffX < -20) {\n      this._activeKeys.ArrowLeft = true\n      this._activeKeys.ArrowRight = false\n    }\n\n    if (diffY > 40) {\n      this._activeKeys.z = true\n    } else {\n      this._activeKeys.z = false\n    }\n  }\n\n  handleGameInfo = () => {\n    clearInterval(this._gameCoreRunTimeout)\n    if (this._audioSfxRef) {\n      this._audioSfxRef.src = infoAudio\n      this._audioSfxRef.play()\n    }\n    this.setState({ displayInfo: true, isFalling: true, positionY: 60 })\n  }\n\n  getRef = (ref: ?HTMLDivElement) => {\n    if (ref) {\n      this._gameContainerRef = ref;\n      this.setState({ width: ref.clientWidth })\n    }\n  }\n\n  getAudioRef = (ref: ?HTMLAudioElement) => {\n    if (ref) {\n      this._audioRef = ref\n      const tryRetry = () => new Promise((resolve, reject) => {\n        const playPromise = ref.play()\n        if (playPromise) {\n          playPromise\n            .then(() => {\n              deregister()\n              resolve()\n            })\n            .catch(reject)\n        } else {\n          deregister()\n          resolve()\n        }\n      })\n\n      const register = () => {\n        window.addEventListener('focus', tryRetry)\n        window.addEventListener('click', tryRetry)\n        window.addEventListener('keypress', tryRetry)\n        window.addEventListener('load', tryRetry)\n      }\n      const deregister = () => {\n        window.removeEventListener('focus', tryRetry)\n        window.removeEventListener('click', tryRetry)\n        window.removeEventListener('keypress', tryRetry)\n        window.removeEventListener('load', tryRetry)\n      }\n      tryRetry().catch(register)\n\n      ref.onended = () => {\n        ref.src = music\n        ref.loop = true\n        ref.play()\n        ref.onended = () => {}\n      }\n    }\n  }\n\n  getSfxAudioRef = (ref: ?HTMLAudioElement) => {\n    if (ref) {\n      this._audioSfxRef = ref;\n    }\n  }\n\n  keyDown = (event: KeyboardEvent) => {\n    const { _activeKeys, state: { displayInfo } } = this\n    if (_activeKeys[event.key] === false ) {\n      _activeKeys[event.key] = true\n      if (displayInfo) {\n        this.setState({ displayInfo: false })\n        this.restart()\n      }\n    }\n  }\n\n  keyUp = (event: KeyboardEvent) => {\n    const { _activeKeys } = this;\n    if (_activeKeys[event.key] === true ) {\n      _activeKeys[event.key] = false;\n    }\n  }\n\n  render() {\n    const {\n      positionX,\n      positionY,\n      direction,\n      isMoving,\n      isJumping,\n      scenarioPosition,\n      displayInfo,\n    } = this.state\n    return (\n      <div className=\"ReactSuperMario\" ref={this.getRef}>\n        <Background position={scenarioPosition} />\n        <Mario\n          positionX={positionX}\n          positionY={positionY}\n          direction={direction}\n          isMoving={isMoving}\n          isJumping={isJumping}\n        />\n        <audio src={introMusic} ref={this.getAudioRef} />\n        <audio ref={this.getSfxAudioRef} />\n        <Touchable\n          onTouch={this.handleGameInfo}\n          active={displayInfo}\n          scenarioPosition={scenarioPosition}\n          positionX={200}\n          positionY={150}\n          playerPositionX={positionX}\n          playerPositionY={positionY}\n        >\n          <ButtonInfo />\n        </Touchable>\n        {displayInfo && (\n          <InfoBox>\n            <h2>React JS Super Mario</h2>\n            <p>\n              Check the source code\n              {' '}\n              <a href=\"https://github.com/fabiopaiva/react-super-mario\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <i className=\"fab fa-github fa-2x\" />\n              </a>\n            </p>\n            <br />\n            <h2>Follow me:</h2>\n            <p>\n              <a href=\"https://github.com/fabiopaiva\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <i className=\"fab fa-github fa-2x\" />\n              </a>\n              {' '}\n              <a href=\"https://www.linkedin.com/in/fabio-dev/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <i className=\"fab fa-linkedin fa-2x\" />\n              </a>\n            </p>\n          </InfoBox>\n        )}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}