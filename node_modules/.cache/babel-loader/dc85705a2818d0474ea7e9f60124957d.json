{"ast":null,"code":"const THREE = require('three');\n\nconst {\n  TweenLite\n} = require('../lib/TweenLite');\n\nconst helper = require('./helper');\n\nconst config = require('./config');\n\nclass Stage {\n  constructor() {\n    // container\n    this.container = document.getElementById('game'); // renderer\n\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: false\n    });\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.setClearColor('#D0CBC7', 1);\n    this.container.appendChild(this.renderer.domElement); // scene\n\n    this.scene = new THREE.Scene(); // camera\n\n    const cameraConfig = config.camera;\n    const aspect = window.innerWidth / window.innerHeight;\n    const depth = cameraConfig.depth;\n    this.camera = new THREE.OrthographicCamera(-depth * aspect, depth * aspect, depth, -depth, cameraConfig.near, cameraConfig.far);\n    this.camera.position.fromArray(cameraConfig.position);\n    this.camera.lookAt(new THREE.Vector3().fromArray(cameraConfig.lookAt)); //light\n\n    const lightsConfig = config.lights;\n    lightsConfig.forEach(lightConfig => {\n      const LightClass = helper.get(THREE, lightConfig.type);\n\n      if (LightClass) {\n        const light = new LightClass(lightConfig.color, lightConfig.intensity);\n        light.position.fromArray(lightConfig.position);\n        this.scene.add(light);\n      }\n    });\n    window.addEventListener('resize', () => this.onResize());\n    this.onResize();\n  }\n\n  setCamera(y, speed = 0.3) {\n    TweenLite.to(this.camera.position, speed, {\n      y: y + 4,\n      ease: Power1.easeInOut\n    });\n    TweenLite.to(this.camera.lookAt, speed, {\n      y: y,\n      ease: Power1.easeInOut\n    });\n  }\n\n  onResize() {\n    let viewSize = 30;\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.camera.left = window.innerWidth / -viewSize;\n    this.camera.right = window.innerWidth / viewSize;\n    this.camera.top = window.innerHeight / viewSize;\n    this.camera.bottom = window.innerHeight / -viewSize;\n    this.camera.updateProjectionMatrix();\n  }\n\n  render() {\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  add(elem) {\n    this.scene.add(elem);\n  }\n\n  remove(elem) {\n    this.scene.remove(elem);\n  }\n\n}\n\nmodule.exports = Stage;","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/bloxstackgame/src/stage.js"],"names":["THREE","require","TweenLite","helper","config","Stage","constructor","container","document","getElementById","renderer","WebGLRenderer","antialias","alpha","setSize","window","innerWidth","innerHeight","setClearColor","appendChild","domElement","scene","Scene","cameraConfig","camera","aspect","depth","OrthographicCamera","near","far","position","fromArray","lookAt","Vector3","lightsConfig","lights","forEach","lightConfig","LightClass","get","type","light","color","intensity","add","addEventListener","onResize","setCamera","y","speed","to","ease","Power1","easeInOut","viewSize","left","right","top","bottom","updateProjectionMatrix","render","elem","remove","module","exports"],"mappings":"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","sourcesContent":["const THREE = require('three');\nconst { TweenLite } = require('../lib/TweenLite');\n\nconst helper = require('./helper');\n\nconst config = require('./config');\n\nclass Stage {\n  constructor() {\n    // container\n    this.container = document.getElementById('game');\n\n    // renderer\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: false\n    });\n\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.setClearColor('#D0CBC7', 1);\n    this.container.appendChild( this.renderer.domElement );\n\n    // scene\n    this.scene = new THREE.Scene();\n\n    // camera\n    const cameraConfig = config.camera;\n    const aspect = window.innerWidth / window.innerHeight;\n    const depth = cameraConfig.depth;\n    this.camera = new THREE.OrthographicCamera(-depth * aspect, depth * aspect, depth, -depth, cameraConfig.near, cameraConfig.far);\n    this.camera.position.fromArray(cameraConfig.position);\n    this.camera.lookAt(new THREE.Vector3().fromArray(cameraConfig.lookAt));\n\n    //light\n    const lightsConfig = config.lights;\n    lightsConfig.forEach((lightConfig) => {\n      const LightClass = helper.get(THREE, lightConfig.type)\n      if (LightClass) {\n        const light = new LightClass(lightConfig.color, lightConfig.intensity);\n        light.position.fromArray(lightConfig.position);\n        this.scene.add(light);\n      }\n    });\n\n    window.addEventListener('resize', () => this.onResize());\n    this.onResize();\n  }\n\n  setCamera(y, speed = 0.3) {\n    TweenLite.to(this.camera.position, speed, {y: y + 4, ease: Power1.easeInOut});\n    TweenLite.to(this.camera.lookAt, speed, {y: y, ease: Power1.easeInOut});\n  }\n\n  onResize() {\n    let viewSize = 30;\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.camera.left = window.innerWidth / - viewSize;\n    this.camera.right = window.innerWidth / viewSize;\n    this.camera.top = window.innerHeight / viewSize;\n    this.camera.bottom = window.innerHeight / - viewSize;\n    this.camera.updateProjectionMatrix();\n  }\n\n  render() {\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  add(elem) {\n    this.scene.add(elem);\n  }\n\n  remove(elem) {\n    this.scene.remove(elem);\n  }\n}\n\nmodule.exports = Stage;\n"]},"metadata":{},"sourceType":"module"}