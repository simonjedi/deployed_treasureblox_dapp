{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/treasure-blox/src/Connection.js\",\n    _s = $RefreshSig$();\n\n// App.js\nimport React, { useState } from 'react';\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport { Button } from 'react-bootstrap';\nimport MyNav from \"./MyNav\";\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Connection = props => {\n  _s();\n\n  const wallet = useWallet();\n  console.log(\"this here\", props.accounts);\n\n  const connectWallet = async e => {\n    e.preventDefault();\n    await wallet.connect(); // setAccountName(true)\n  };\n\n  return wallet.status === 'connected' ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: connectWallet,\n      className: \"customButton enableEthereumButton\",\n      children: [props.accounts, \"WTF\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: connectWallet,\n      className: \"customButton enableEthereumButton\",\n      children: [props.accounts, \"WTF\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}; // Wrap everything in <UseWalletProvider />\n\n\n_s(Connection, \"i+/qxb0flJRE8MgvazOGMkNRtsk=\", false, function () {\n  return [useWallet];\n});\n\n_c = Connection;\nexport default (props => /*#__PURE__*/_jsxDEV(UseWalletProvider, {\n  chainId: 1337,\n  connectors: {\n    // This is how connectors get configured\n    provided: {\n      provider: window.cleanEthereum\n    }\n  },\n  children: [/*#__PURE__*/_jsxDEV(Connection, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this), props.accounts]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 3\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"Connection\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/treasure-blox/src/Connection.js"],"names":["React","useState","useWallet","UseWalletProvider","Button","MyNav","App","Connection","props","wallet","console","log","accounts","connectWallet","e","preventDefault","connect","status","provided","provider","window","cleanEthereum"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,YAA7C;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAY;AAAA;;AAE7B,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBH,KAAK,CAACI,QAA9B;;AAEA,QAAMC,aAAa,GAAG,MAAMC,CAAN,IAAY;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMN,MAAM,CAACO,OAAP,EAAN,CAFgC,CAGhC;AACD,GAJD;;AAKA,SAAOP,MAAM,CAACQ,MAAP,KAAkB,WAAlB,gBACL;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEJ,aAAjB;AAAgC,MAAA,SAAS,EAAC,mCAA1C;AAAA,iBAA+EL,KAAK,CAACI,QAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADK,gBAQL;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC,aAAjB;AAAgC,MAAA,SAAS,EAAC,mCAA1C;AAAA,iBAA+EL,KAAK,CAACI,QAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UARF;AAaD,CAxBD,C,CA0BA;;;GA1BML,U;UAEWL,S;;;KAFXK,U;AA2BN,gBAAgBC,KAAD,iBACb,QAAC,iBAAD;AACE,EAAA,OAAO,EAAE,IADX;AAEE,EAAA,UAAU,EAAE;AACV;AACAU,IAAAA,QAAQ,EAAE;AAACC,MAAAA,QAAQ,EAAEC,MAAM,CAACC;AAAlB;AAFA,GAFd;AAAA,0BAOE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,UAPF,EAQGb,KAAK,CAACI,QART;AAAA;AAAA;AAAA;AAAA;AAAA,QADF","sourcesContent":["// App.js\n\nimport React, {useState} from 'react'\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport { Button } from 'react-bootstrap';\n\nimport MyNav from \"./MyNav\";\nimport App from \"./App\";\n\n\nconst Connection = (props) =>  {\n\n  const wallet = useWallet()\n\n  console.log(\"this here\",props.accounts)\n\n  const connectWallet = async(e) => {\n    e.preventDefault()\n    await wallet.connect()\n    // setAccountName(true)\n  }\n  return wallet.status === 'connected' ?(\n    <div>\n      <Button onClick={connectWallet} className=\"customButton enableEthereumButton\">{props.accounts}WTF</Button>\n    </div>\n\n\n\n  ):(\n    <div>\n      <Button onClick={connectWallet} className=\"customButton enableEthereumButton\">{props.accounts}WTF</Button>\n    </div>\n    \n  )\n}\n\n// Wrap everything in <UseWalletProvider />\nexport default (props) => (\n  <UseWalletProvider\n    chainId={1337}\n    connectors={{\n      // This is how connectors get configured\n      provided: {provider: window.cleanEthereum},\n    }}>\n\n    <Connection />\n    {props.accounts}\n\n\n  </UseWalletProvider>\n)\n"]},"metadata":{},"sourceType":"module"}