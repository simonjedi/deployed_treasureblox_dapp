{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AccountUtils = exports.generateKeysFromSeed = exports.generateSeed = exports.generateDeterministicInviteCode = exports.generateKeys = exports.suggestMnemonicCorrections = exports.detectMnemonicLanguage = exports.mnemonicLengthFromStrength = exports.getAllLanguages = exports.formatNonAccentedCharacters = exports.normalizeMnemonic = exports.invalidMnemonicWords = exports.validateMnemonic = exports.generateMnemonic = exports.MnemonicStrength = exports.MnemonicLanguages = exports.CELO_DERIVATION_PATH_BASE = void 0;\n\nvar account_1 = require(\"@celo/base/lib/account\");\n\nvar string_1 = require(\"@celo/base/lib/string\");\n\nvar bip32 = __importStar(require(\"bip32\"));\n\nvar bip39 = __importStar(require(\"bip39\"));\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar randombytes_1 = __importDefault(require(\"randombytes\"));\n\nvar address_1 = require(\"./address\");\n\nvar levenshtein_1 = require(\"./levenshtein\"); // Exports moved to @celo/base, forwarding them\n// here for backwards compatibility\n\n\nvar account_2 = require(\"@celo/base/lib/account\");\n\nObject.defineProperty(exports, \"CELO_DERIVATION_PATH_BASE\", {\n  enumerable: true,\n  get: function () {\n    return account_2.CELO_DERIVATION_PATH_BASE;\n  }\n});\nObject.defineProperty(exports, \"MnemonicLanguages\", {\n  enumerable: true,\n  get: function () {\n    return account_2.MnemonicLanguages;\n  }\n});\nObject.defineProperty(exports, \"MnemonicStrength\", {\n  enumerable: true,\n  get: function () {\n    return account_2.MnemonicStrength;\n  }\n});\n\nfunction defaultGenerateMnemonic(strength, rng, wordlist) {\n  return new Promise(function (resolve, reject) {\n    strength = strength || 128;\n    rng = rng || randombytes_1.default;\n    rng(strength / 8, function (error, randomBytesBuffer) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(bip39.entropyToMnemonic(randomBytesBuffer.toString('hex'), wordlist));\n      }\n    });\n  });\n}\n\nvar bip39Wrapper = {\n  mnemonicToSeedSync: bip39.mnemonicToSeedSync,\n  mnemonicToSeed: bip39.mnemonicToSeed,\n  generateMnemonic: defaultGenerateMnemonic,\n  validateMnemonic: bip39.validateMnemonic\n};\n\nfunction generateMnemonic(strength, language, bip39ToUse) {\n  if (strength === void 0) {\n    strength = account_1.MnemonicStrength.s256_24words;\n  }\n\n  if (bip39ToUse === void 0) {\n    bip39ToUse = bip39Wrapper;\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , bip39ToUse.generateMnemonic(strength, undefined, getWordList(language))];\n    });\n  });\n}\n\nexports.generateMnemonic = generateMnemonic;\n\nfunction validateMnemonic(mnemonic, bip39ToUse, language) {\n  var e_1, _a;\n\n  if (bip39ToUse === void 0) {\n    bip39ToUse = bip39Wrapper;\n  }\n\n  if (language !== undefined) {\n    return bip39ToUse.validateMnemonic(mnemonic, getWordList(language));\n  }\n\n  var languages = getAllLanguages();\n\n  try {\n    for (var languages_1 = __values(languages), languages_1_1 = languages_1.next(); !languages_1_1.done; languages_1_1 = languages_1.next()) {\n      var guessedLanguage = languages_1_1.value;\n\n      if (bip39ToUse.validateMnemonic(mnemonic, getWordList(guessedLanguage))) {\n        return true;\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (languages_1_1 && !languages_1_1.done && (_a = languages_1.return)) _a.call(languages_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return false;\n}\n\nexports.validateMnemonic = validateMnemonic;\n/**\n * Return a list of the words in the mnemonic that are not in the list of valid BIP-39 words for the\n * specified or detected language.\n *\n * @remarks Will return undefined if the language cannot be detected (e.g.  all the words are\n * invalid, or half of the valid words are from one language and the other half from another.)\n */\n\nfunction invalidMnemonicWords(mnemonic, language) {\n  var words = splitMnemonic(mnemonic);\n  var detectedLanguage = language !== null && language !== void 0 ? language : detectMnemonicLanguage(words);\n\n  if (detectedLanguage === undefined) {\n    return undefined;\n  }\n\n  var wordSet = new Set(getWordList(detectedLanguage));\n  return words.filter(function (word) {\n    return !wordSet.has(word);\n  });\n}\n\nexports.invalidMnemonicWords = invalidMnemonicWords;\n/**\n * Normalize the mnemonic phrase to eliminate a number of inconsistencies with standard BIP-39\n * phrases that are likely to arise when a user manually enters a phrase.\n *\n * @remarks Note that this does not guarantee that the output is a valid mnemonic phrase, or even\n * that all the words in the phrase are contained in a valid wordlist.\n */\n\nfunction normalizeMnemonic(mnemonic, language) {\n  var words = splitMnemonic(mnemonic);\n  var lowered = words.map(function (word) {\n    return word.toLowerCase();\n  });\n  var detectedLanguage = language !== null && language !== void 0 ? language : detectMnemonicLanguage(lowered); // If the language is unknown, do not run further normalizations.\n\n  if (detectedLanguage === undefined) {\n    return joinMnemonic(lowered, detectedLanguage);\n  }\n\n  return joinMnemonic(formatNonAccentedWords(lowered, detectedLanguage), detectedLanguage);\n}\n\nexports.normalizeMnemonic = normalizeMnemonic;\n/**\n * Scans the provided phrase and adds accents to words where the are not provided, or provided\n * inconsistently with the BIP-39 standard. Ensures that phrases differing only by accents will\n * validate after being cast into the normalized form.\n *\n * @remarks Words should be converted to lower case before being given to this function.\n */\n\nfunction formatNonAccentedWords(words, language) {\n  if (isLatinBasedLanguage(language)) {\n    var wordList = getWordList(language);\n    var normalizedWordMap_1 = new Map(wordList.map(function (word) {\n      return [(0, string_1.normalizeAccents)(word), word];\n    }));\n    return words.map(function (word) {\n      var _a;\n\n      return (_a = normalizedWordMap_1.get((0, string_1.normalizeAccents)(word))) !== null && _a !== void 0 ? _a : word;\n    });\n  }\n\n  return words;\n}\n\nfunction isLatinBasedLanguage(language) {\n  // Use exhaustive switch to ensure that every language is accounted for.\n  switch (language) {\n    case account_1.MnemonicLanguages.english:\n    case account_1.MnemonicLanguages.french:\n    case account_1.MnemonicLanguages.italian:\n    case account_1.MnemonicLanguages.spanish:\n    case account_1.MnemonicLanguages.portuguese:\n      return true;\n\n    case account_1.MnemonicLanguages.chinese_simplified:\n    case account_1.MnemonicLanguages.chinese_traditional:\n    case account_1.MnemonicLanguages.japanese:\n    case account_1.MnemonicLanguages.korean:\n      return false;\n  }\n}\n/**\n * @deprecated now an alias for normalizeMnemonic.\n */\n\n\nfunction formatNonAccentedCharacters(mnemonic) {\n  return normalizeMnemonic(mnemonic);\n}\n\nexports.formatNonAccentedCharacters = formatNonAccentedCharacters; // Unify the bip39.wordlists (otherwise depends on the instance of the bip39)\n\nfunction getWordList(language) {\n  // Use exhaustive switch to ensure that every language is accounted for.\n  switch (language !== null && language !== void 0 ? language : account_1.MnemonicLanguages.english) {\n    case account_1.MnemonicLanguages.chinese_simplified:\n      return bip39.wordlists.chinese_simplified;\n\n    case account_1.MnemonicLanguages.chinese_traditional:\n      return bip39.wordlists.chinese_traditional;\n\n    case account_1.MnemonicLanguages.english:\n      return bip39.wordlists.english;\n\n    case account_1.MnemonicLanguages.french:\n      return bip39.wordlists.french;\n\n    case account_1.MnemonicLanguages.italian:\n      return bip39.wordlists.italian;\n\n    case account_1.MnemonicLanguages.japanese:\n      return bip39.wordlists.japanese;\n\n    case account_1.MnemonicLanguages.korean:\n      return bip39.wordlists.korean;\n\n    case account_1.MnemonicLanguages.spanish:\n      return bip39.wordlists.spanish;\n\n    case account_1.MnemonicLanguages.portuguese:\n      return bip39.wordlists.portuguese;\n  }\n}\n\nfunction getAllLanguages() {\n  return [account_1.MnemonicLanguages.chinese_simplified, account_1.MnemonicLanguages.chinese_traditional, account_1.MnemonicLanguages.english, account_1.MnemonicLanguages.french, account_1.MnemonicLanguages.italian, account_1.MnemonicLanguages.japanese, account_1.MnemonicLanguages.korean, account_1.MnemonicLanguages.spanish, account_1.MnemonicLanguages.portuguese];\n}\n\nexports.getAllLanguages = getAllLanguages;\n\nfunction mnemonicLengthFromStrength(strength) {\n  switch (strength) {\n    case account_1.MnemonicStrength.s128_12words:\n      return 12;\n\n    case account_1.MnemonicStrength.s256_24words:\n      return 24;\n  }\n}\n\nexports.mnemonicLengthFromStrength = mnemonicLengthFromStrength;\n/**\n * Splits a mnemonic phrase into words, handling extra whitespace anywhere in the phrase.\n */\n\nfunction splitMnemonic(mnemonic) {\n  return __spreadArray([], __read(mnemonic.trim().split(/\\s+/)), false);\n}\n/**\n * Joins a list of words into a mnemonic phrase. Inverse of splitMnemonic.\n */\n\n\nfunction joinMnemonic(words, language) {\n  return words.join(language === account_1.MnemonicLanguages.japanese ? '\\u3000' : ' ');\n}\n/**\n * Detects the language of tokenized mnemonic phrase by applying a heuristic.\n *\n * @remarks Uses a heuristic of returning the language with the most matching words. In practice, we\n * expect all words to come from a single language, also some may be misspelled or otherwise\n * malformed. It may occasionally occur that a typo results in word from another language (e.g. bag\n * -> bagr) but this should occur at most once or twice per phrase.\n */\n\n\nfunction detectMnemonicLanguage(words, candidates) {\n  // Assign a match score to each language by how many words of the phrase are in each language.\n  var scores = (candidates !== null && candidates !== void 0 ? candidates : getAllLanguages()).map(function (candidate) {\n    var wordSet = new Set(getWordList(candidate));\n    var score = words.reduce(function (count, word) {\n      return wordSet.has(word) ? count + 1 : count;\n    }, 0);\n    return [candidate, score];\n  }); // Reduce to the highest scoring candidate(s). Note that it is possible for multiple candidates to\n  // have the same score, but it likely to occur only for specially constructed phrases.\n\n  var _a = __read(scores.reduce(function (_a, _b) {\n    var _c = __read(_a, 2),\n        leaders = _c[0],\n        leadingScore = _c[1];\n\n    var _d = __read(_b, 2),\n        candidate = _d[0],\n        score = _d[1];\n\n    if (score > leadingScore) {\n      return [[candidate], score];\n    } else if (score === leadingScore) {\n      return [__spreadArray(__spreadArray([], __read(leaders), false), [candidate], false), leadingScore];\n    }\n\n    return [leaders, leadingScore];\n  }, [[], 0]), 2),\n      winners = _a[0],\n      highscore = _a[1];\n\n  if (winners.length !== 1 || highscore < 1) {\n    return undefined;\n  }\n\n  return winners[0];\n}\n\nexports.detectMnemonicLanguage = detectMnemonicLanguage;\n/**\n * Generates a list of suggested corrections to the mnemonic phrase based on a set of heuristics.\n *\n * @remarks\n * Each yielded suggestion represents an attempt to correct the seed phrase by replacing any invalid\n * words with the most likely valid words. Returned suggestions phrases are ordered by probability\n * based on a noisy channel model, described in detail in CIP-39.\n *\n * The generated list of suggestions is exponential in size, and effectively infinite. One should\n * not attempt to generate the entire list.\n *\n * All yielded suggestions will have a valid checksum, but are not guaranteed to correspond to any\n * given wallet. If the phrase is being used to recover a wallet with non-zero balance, it is\n * suggested that the caller check the balance of the derived wallet address. If the balance is\n * non-zero, they can be sure that the phrase is correct. If it is zero, then they should continue\n * and try the next suggestion.\n *\n * It is recommended to normalize the mnemonic phrase before inputting to this function.\n *\n * @privateRemarks\n * TODO(victor): Include a heuristic rule for phrase-level corrections, such as word ordering swaps.\n */\n\nfunction suggestMnemonicCorrections(mnemonic, language, strength) {\n  var words, expectedLength, lang, _a, _b, suggestion, phrase, e_2_1;\n\n  var e_2, _c;\n\n  return __generator(this, function (_d) {\n    switch (_d.label) {\n      case 0:\n        words = splitMnemonic(mnemonic);\n        expectedLength = strength && mnemonicLengthFromStrength(strength);\n\n        if (expectedLength && words.length !== expectedLength || words.length % 3 !== 0) {\n          return [2\n          /*return*/\n          ];\n        }\n\n        lang = language !== null && language !== void 0 ? language : detectMnemonicLanguage(words);\n\n        if (lang === undefined) {\n          return [2\n          /*return*/\n          ];\n        }\n\n        _d.label = 1;\n\n      case 1:\n        _d.trys.push([1, 6, 7, 8]);\n\n        _a = __values(suggestUnvalidatedCorrections(words, lang)), _b = _a.next();\n        _d.label = 2;\n\n      case 2:\n        if (!!_b.done) return [3\n        /*break*/\n        , 5];\n        suggestion = _b.value;\n        phrase = joinMnemonic(suggestion, lang);\n        if (!validateMnemonic(phrase, undefined, lang)) return [3\n        /*break*/\n        , 4];\n        return [4\n        /*yield*/\n        , phrase];\n\n      case 3:\n        _d.sent();\n\n        _d.label = 4;\n\n      case 4:\n        _b = _a.next();\n        return [3\n        /*break*/\n        , 2];\n\n      case 5:\n        return [3\n        /*break*/\n        , 8];\n\n      case 6:\n        e_2_1 = _d.sent();\n        e_2 = {\n          error: e_2_1\n        };\n        return [3\n        /*break*/\n        , 8];\n\n      case 7:\n        try {\n          if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n\n        return [7\n        /*endfinally*/\n        ];\n\n      case 8:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n\nexports.suggestMnemonicCorrections = suggestMnemonicCorrections; /// Generates a list of suggested phases based on an edit distance correction heuristic.\n\nfunction suggestUnvalidatedCorrections(words, language) {\n  // Combine the given suggestions lists to produce all combinations with weight, defined as the sum\n  // edit distances for all chosen words, equal to the given weight value.\n  // The set of suggestions yielded with a given weight is disjoint from the set of suggestions\n  // yielded with any other given weight.\n  function combineSuggestions(suggestionsLists, weight) {\n    var suggestions, remaining, _a, _b, distance, _c, _d, list, _e, _f, suggestion, e_4_1, e_5_1, e_6_1;\n\n    var e_6, _g, e_5, _h, e_4, _j;\n\n    var _k, _l, _m;\n\n    return __generator(this, function (_o) {\n      switch (_o.label) {\n        case 0:\n          if (suggestionsLists.length < 1 || weight < 0) {\n            throw Error('programming error: suggestions map must have at least one entry');\n          }\n\n          suggestions = suggestionsLists[0];\n          if (!(suggestionsLists.length === 1)) return [3\n          /*break*/\n          , 2];\n          return [5\n          /*yield**/\n          , __values((_l = (_k = suggestions.get(weight)) === null || _k === void 0 ? void 0 : _k.map(function (suggestion) {\n            return [suggestion];\n          })) !== null && _l !== void 0 ? _l : [])];\n\n        case 1:\n          _o.sent();\n\n          return [2\n          /*return*/\n          ];\n\n        case 2:\n          remaining = __spreadArray([], __read(suggestionsLists.slice(1)), false);\n          _o.label = 3;\n\n        case 3:\n          _o.trys.push([3, 20, 21, 22]);\n\n          _a = __values(__spreadArray([], __read(suggestions.keys()), false).sort()), _b = _a.next();\n          _o.label = 4;\n\n        case 4:\n          if (!!_b.done) return [3\n          /*break*/\n          , 19];\n          distance = _b.value;\n\n          if (distance > weight) {\n            return [3\n            /*break*/\n            , 19];\n          }\n\n          _o.label = 5;\n\n        case 5:\n          _o.trys.push([5, 16, 17, 18]);\n\n          _c = (e_5 = void 0, __values(combineSuggestions(remaining, weight - distance))), _d = _c.next();\n          _o.label = 6;\n\n        case 6:\n          if (!!_d.done) return [3\n          /*break*/\n          , 15];\n          list = _d.value;\n          _o.label = 7;\n\n        case 7:\n          _o.trys.push([7, 12, 13, 14]);\n\n          _e = (e_4 = void 0, __values((_m = suggestions.get(distance)) !== null && _m !== void 0 ? _m : [])), _f = _e.next();\n          _o.label = 8;\n\n        case 8:\n          if (!!_f.done) return [3\n          /*break*/\n          , 11];\n          suggestion = _f.value;\n          return [4\n          /*yield*/\n          , __spreadArray([suggestion], __read(list), false)];\n\n        case 9:\n          _o.sent();\n\n          _o.label = 10;\n\n        case 10:\n          _f = _e.next();\n          return [3\n          /*break*/\n          , 8];\n\n        case 11:\n          return [3\n          /*break*/\n          , 14];\n\n        case 12:\n          e_4_1 = _o.sent();\n          e_4 = {\n            error: e_4_1\n          };\n          return [3\n          /*break*/\n          , 14];\n\n        case 13:\n          try {\n            if (_f && !_f.done && (_j = _e.return)) _j.call(_e);\n          } finally {\n            if (e_4) throw e_4.error;\n          }\n\n          return [7\n          /*endfinally*/\n          ];\n\n        case 14:\n          _d = _c.next();\n          return [3\n          /*break*/\n          , 6];\n\n        case 15:\n          return [3\n          /*break*/\n          , 18];\n\n        case 16:\n          e_5_1 = _o.sent();\n          e_5 = {\n            error: e_5_1\n          };\n          return [3\n          /*break*/\n          , 18];\n\n        case 17:\n          try {\n            if (_d && !_d.done && (_h = _c.return)) _h.call(_c);\n          } finally {\n            if (e_5) throw e_5.error;\n          }\n\n          return [7\n          /*endfinally*/\n          ];\n\n        case 18:\n          _b = _a.next();\n          return [3\n          /*break*/\n          , 4];\n\n        case 19:\n          return [3\n          /*break*/\n          , 22];\n\n        case 20:\n          e_6_1 = _o.sent();\n          e_6 = {\n            error: e_6_1\n          };\n          return [3\n          /*break*/\n          , 22];\n\n        case 21:\n          try {\n            if (_b && !_b.done && (_g = _a.return)) _g.call(_a);\n          } finally {\n            if (e_6) throw e_6.error;\n          }\n\n          return [7\n          /*endfinally*/\n          ];\n\n        case 22:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  }\n\n  var spotSuggestions, weight, _a, _b, suggestedWords, e_3_1;\n\n  var e_3, _c;\n\n  return __generator(this, function (_d) {\n    switch (_d.label) {\n      case 0:\n        spotSuggestions = words.map(function (word) {\n          return wordSuggestions(word, language);\n        });\n        weight = 0;\n        _d.label = 1;\n\n      case 1:\n        if (!(weight < 1000)) return [3\n        /*break*/\n        , 10];\n        _d.label = 2;\n\n      case 2:\n        _d.trys.push([2, 7, 8, 9]);\n\n        _a = (e_3 = void 0, __values(combineSuggestions(spotSuggestions, weight))), _b = _a.next();\n        _d.label = 3;\n\n      case 3:\n        if (!!_b.done) return [3\n        /*break*/\n        , 6];\n        suggestedWords = _b.value;\n        return [4\n        /*yield*/\n        , suggestedWords];\n\n      case 4:\n        _d.sent();\n\n        _d.label = 5;\n\n      case 5:\n        _b = _a.next();\n        return [3\n        /*break*/\n        , 3];\n\n      case 6:\n        return [3\n        /*break*/\n        , 9];\n\n      case 7:\n        e_3_1 = _d.sent();\n        e_3 = {\n          error: e_3_1\n        };\n        return [3\n        /*break*/\n        , 9];\n\n      case 8:\n        try {\n          if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n\n        return [7\n        /*endfinally*/\n        ];\n\n      case 9:\n        weight++;\n        return [3\n        /*break*/\n        , 1];\n\n      case 10:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n} // Given a word and lnaguage, returns a map of all words in the BIP-39 word list for the given\n// language by edit distance. This is used as word replacement suggestions.\n\n\nfunction wordSuggestions(typo, language) {\n  return getWordList(language).map(function (word) {\n    return {\n      distance: (0, levenshtein_1.levenshteinDistance)(typo, word),\n      word: word\n    };\n  }).reduce(function (map, _a) {\n    var distance = _a.distance,\n        word = _a.word; // Reduction uses mutation, instead of spread, as an optimization.\n\n    var list = map.get(distance);\n\n    if (list !== undefined) {\n      list.push(word);\n    } else {\n      map.set(distance, [word]);\n    }\n\n    return map;\n  }, new Map());\n}\n\nfunction generateKeys(mnemonic, password, changeIndex, addressIndex, bip39ToUse, derivationPath) {\n  if (changeIndex === void 0) {\n    changeIndex = 0;\n  }\n\n  if (addressIndex === void 0) {\n    addressIndex = 0;\n  }\n\n  if (bip39ToUse === void 0) {\n    bip39ToUse = bip39Wrapper;\n  }\n\n  if (derivationPath === void 0) {\n    derivationPath = account_1.CELO_DERIVATION_PATH_BASE;\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    var seed;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , generateSeed(mnemonic, password, bip39ToUse)];\n\n        case 1:\n          seed = _a.sent();\n          return [2\n          /*return*/\n          , generateKeysFromSeed(seed, changeIndex, addressIndex, derivationPath)];\n      }\n    });\n  });\n}\n\nexports.generateKeys = generateKeys;\n\nfunction generateDeterministicInviteCode(recipientPhoneHash, recipientPepper, addressIndex, changeIndex, derivationPath) {\n  if (addressIndex === void 0) {\n    addressIndex = 0;\n  }\n\n  if (changeIndex === void 0) {\n    changeIndex = 0;\n  }\n\n  if (derivationPath === void 0) {\n    derivationPath = account_1.CELO_DERIVATION_PATH_BASE;\n  }\n\n  var seed = (0, ethereumjs_util_1.keccak256)(recipientPhoneHash + recipientPepper);\n  return generateKeysFromSeed(seed, changeIndex, addressIndex, derivationPath);\n}\n\nexports.generateDeterministicInviteCode = generateDeterministicInviteCode; // keyByteLength truncates the seed. *Avoid its use*\n// It was added only because a backwards compatibility bug\n\nfunction generateSeed(mnemonic, password, bip39ToUse, keyByteLength) {\n  if (bip39ToUse === void 0) {\n    bip39ToUse = bip39Wrapper;\n  }\n\n  if (keyByteLength === void 0) {\n    keyByteLength = 64;\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    var seed, bufAux;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , bip39ToUse.mnemonicToSeed(mnemonic, password)];\n\n        case 1:\n          seed = _a.sent();\n\n          if (keyByteLength > 0 && seed.byteLength > keyByteLength) {\n            bufAux = Buffer.allocUnsafe(keyByteLength);\n            seed.copy(bufAux, 0, 0, keyByteLength);\n            seed = bufAux;\n          }\n\n          return [2\n          /*return*/\n          , seed];\n      }\n    });\n  });\n}\n\nexports.generateSeed = generateSeed;\n\nfunction generateKeysFromSeed(seed, changeIndex, addressIndex, derivationPath) {\n  if (changeIndex === void 0) {\n    changeIndex = 0;\n  }\n\n  if (addressIndex === void 0) {\n    addressIndex = 0;\n  }\n\n  if (derivationPath === void 0) {\n    derivationPath = account_1.CELO_DERIVATION_PATH_BASE;\n  }\n\n  var node = bip32.fromSeed(seed);\n  var newNode = node.derivePath(\"\" + (derivationPath ? derivationPath + \"/\" : '') + changeIndex + \"/\" + addressIndex);\n\n  if (!newNode.privateKey) {\n    // As we are generating the node from a seed, the node will always have a private key and this would never happened\n    throw new Error('utils-accounts@generateKeys: invalid node to derivate');\n  }\n\n  return {\n    privateKey: newNode.privateKey.toString('hex'),\n    publicKey: newNode.publicKey.toString('hex'),\n    address: (0, address_1.privateKeyToAddress)(newNode.privateKey.toString('hex'))\n  };\n}\n\nexports.generateKeysFromSeed = generateKeysFromSeed;\nexports.AccountUtils = {\n  detectMnemonicLanguage: detectMnemonicLanguage,\n  generateMnemonic: generateMnemonic,\n  normalizeMnemonic: normalizeMnemonic,\n  validateMnemonic: validateMnemonic,\n  invalidMnemonicWords: invalidMnemonicWords,\n  suggestMnemonicCorrections: suggestMnemonicCorrections,\n  generateKeys: generateKeys,\n  generateSeed: generateSeed,\n  generateKeysFromSeed: generateKeysFromSeed\n};","map":{"version":3,"sources":["../src/account.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccountUtils = exports.generateKeysFromSeed = exports.generateSeed = exports.generateDeterministicInviteCode = exports.generateKeys = exports.suggestMnemonicCorrections = exports.detectMnemonicLanguage = exports.mnemonicLengthFromStrength = exports.getAllLanguages = exports.formatNonAccentedCharacters = exports.normalizeMnemonic = exports.invalidMnemonicWords = exports.validateMnemonic = exports.generateMnemonic = exports.MnemonicStrength = exports.MnemonicLanguages = exports.CELO_DERIVATION_PATH_BASE = void 0;\nvar account_1 = require(\"@celo/base/lib/account\");\nvar string_1 = require(\"@celo/base/lib/string\");\nvar bip32 = __importStar(require(\"bip32\"));\nvar bip39 = __importStar(require(\"bip39\"));\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar randombytes_1 = __importDefault(require(\"randombytes\"));\nvar address_1 = require(\"./address\");\nvar levenshtein_1 = require(\"./levenshtein\");\n// Exports moved to @celo/base, forwarding them\n// here for backwards compatibility\nvar account_2 = require(\"@celo/base/lib/account\");\nObject.defineProperty(exports, \"CELO_DERIVATION_PATH_BASE\", { enumerable: true, get: function () { return account_2.CELO_DERIVATION_PATH_BASE; } });\nObject.defineProperty(exports, \"MnemonicLanguages\", { enumerable: true, get: function () { return account_2.MnemonicLanguages; } });\nObject.defineProperty(exports, \"MnemonicStrength\", { enumerable: true, get: function () { return account_2.MnemonicStrength; } });\nfunction defaultGenerateMnemonic(strength, rng, wordlist) {\n    return new Promise(function (resolve, reject) {\n        strength = strength || 128;\n        rng = rng || randombytes_1.default;\n        rng(strength / 8, function (error, randomBytesBuffer) {\n            if (error) {\n                reject(error);\n            }\n            else {\n                resolve(bip39.entropyToMnemonic(randomBytesBuffer.toString('hex'), wordlist));\n            }\n        });\n    });\n}\nvar bip39Wrapper = {\n    mnemonicToSeedSync: bip39.mnemonicToSeedSync,\n    mnemonicToSeed: bip39.mnemonicToSeed,\n    generateMnemonic: defaultGenerateMnemonic,\n    validateMnemonic: bip39.validateMnemonic,\n};\nfunction generateMnemonic(strength, language, bip39ToUse) {\n    if (strength === void 0) { strength = account_1.MnemonicStrength.s256_24words; }\n    if (bip39ToUse === void 0) { bip39ToUse = bip39Wrapper; }\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, bip39ToUse.generateMnemonic(strength, undefined, getWordList(language))];\n        });\n    });\n}\nexports.generateMnemonic = generateMnemonic;\nfunction validateMnemonic(mnemonic, bip39ToUse, language) {\n    var e_1, _a;\n    if (bip39ToUse === void 0) { bip39ToUse = bip39Wrapper; }\n    if (language !== undefined) {\n        return bip39ToUse.validateMnemonic(mnemonic, getWordList(language));\n    }\n    var languages = getAllLanguages();\n    try {\n        for (var languages_1 = __values(languages), languages_1_1 = languages_1.next(); !languages_1_1.done; languages_1_1 = languages_1.next()) {\n            var guessedLanguage = languages_1_1.value;\n            if (bip39ToUse.validateMnemonic(mnemonic, getWordList(guessedLanguage))) {\n                return true;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (languages_1_1 && !languages_1_1.done && (_a = languages_1.return)) _a.call(languages_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return false;\n}\nexports.validateMnemonic = validateMnemonic;\n/**\n * Return a list of the words in the mnemonic that are not in the list of valid BIP-39 words for the\n * specified or detected language.\n *\n * @remarks Will return undefined if the language cannot be detected (e.g.  all the words are\n * invalid, or half of the valid words are from one language and the other half from another.)\n */\nfunction invalidMnemonicWords(mnemonic, language) {\n    var words = splitMnemonic(mnemonic);\n    var detectedLanguage = language !== null && language !== void 0 ? language : detectMnemonicLanguage(words);\n    if (detectedLanguage === undefined) {\n        return undefined;\n    }\n    var wordSet = new Set(getWordList(detectedLanguage));\n    return words.filter(function (word) { return !wordSet.has(word); });\n}\nexports.invalidMnemonicWords = invalidMnemonicWords;\n/**\n * Normalize the mnemonic phrase to eliminate a number of inconsistencies with standard BIP-39\n * phrases that are likely to arise when a user manually enters a phrase.\n *\n * @remarks Note that this does not guarantee that the output is a valid mnemonic phrase, or even\n * that all the words in the phrase are contained in a valid wordlist.\n */\nfunction normalizeMnemonic(mnemonic, language) {\n    var words = splitMnemonic(mnemonic);\n    var lowered = words.map(function (word) { return word.toLowerCase(); });\n    var detectedLanguage = language !== null && language !== void 0 ? language : detectMnemonicLanguage(lowered);\n    // If the language is unknown, do not run further normalizations.\n    if (detectedLanguage === undefined) {\n        return joinMnemonic(lowered, detectedLanguage);\n    }\n    return joinMnemonic(formatNonAccentedWords(lowered, detectedLanguage), detectedLanguage);\n}\nexports.normalizeMnemonic = normalizeMnemonic;\n/**\n * Scans the provided phrase and adds accents to words where the are not provided, or provided\n * inconsistently with the BIP-39 standard. Ensures that phrases differing only by accents will\n * validate after being cast into the normalized form.\n *\n * @remarks Words should be converted to lower case before being given to this function.\n */\nfunction formatNonAccentedWords(words, language) {\n    if (isLatinBasedLanguage(language)) {\n        var wordList = getWordList(language);\n        var normalizedWordMap_1 = new Map(wordList.map(function (word) { return [(0, string_1.normalizeAccents)(word), word]; }));\n        return words.map(function (word) { var _a; return (_a = normalizedWordMap_1.get((0, string_1.normalizeAccents)(word))) !== null && _a !== void 0 ? _a : word; });\n    }\n    return words;\n}\nfunction isLatinBasedLanguage(language) {\n    // Use exhaustive switch to ensure that every language is accounted for.\n    switch (language) {\n        case account_1.MnemonicLanguages.english:\n        case account_1.MnemonicLanguages.french:\n        case account_1.MnemonicLanguages.italian:\n        case account_1.MnemonicLanguages.spanish:\n        case account_1.MnemonicLanguages.portuguese:\n            return true;\n        case account_1.MnemonicLanguages.chinese_simplified:\n        case account_1.MnemonicLanguages.chinese_traditional:\n        case account_1.MnemonicLanguages.japanese:\n        case account_1.MnemonicLanguages.korean:\n            return false;\n    }\n}\n/**\n * @deprecated now an alias for normalizeMnemonic.\n */\nfunction formatNonAccentedCharacters(mnemonic) {\n    return normalizeMnemonic(mnemonic);\n}\nexports.formatNonAccentedCharacters = formatNonAccentedCharacters;\n// Unify the bip39.wordlists (otherwise depends on the instance of the bip39)\nfunction getWordList(language) {\n    // Use exhaustive switch to ensure that every language is accounted for.\n    switch (language !== null && language !== void 0 ? language : account_1.MnemonicLanguages.english) {\n        case account_1.MnemonicLanguages.chinese_simplified:\n            return bip39.wordlists.chinese_simplified;\n        case account_1.MnemonicLanguages.chinese_traditional:\n            return bip39.wordlists.chinese_traditional;\n        case account_1.MnemonicLanguages.english:\n            return bip39.wordlists.english;\n        case account_1.MnemonicLanguages.french:\n            return bip39.wordlists.french;\n        case account_1.MnemonicLanguages.italian:\n            return bip39.wordlists.italian;\n        case account_1.MnemonicLanguages.japanese:\n            return bip39.wordlists.japanese;\n        case account_1.MnemonicLanguages.korean:\n            return bip39.wordlists.korean;\n        case account_1.MnemonicLanguages.spanish:\n            return bip39.wordlists.spanish;\n        case account_1.MnemonicLanguages.portuguese:\n            return bip39.wordlists.portuguese;\n    }\n}\nfunction getAllLanguages() {\n    return [\n        account_1.MnemonicLanguages.chinese_simplified,\n        account_1.MnemonicLanguages.chinese_traditional,\n        account_1.MnemonicLanguages.english,\n        account_1.MnemonicLanguages.french,\n        account_1.MnemonicLanguages.italian,\n        account_1.MnemonicLanguages.japanese,\n        account_1.MnemonicLanguages.korean,\n        account_1.MnemonicLanguages.spanish,\n        account_1.MnemonicLanguages.portuguese,\n    ];\n}\nexports.getAllLanguages = getAllLanguages;\nfunction mnemonicLengthFromStrength(strength) {\n    switch (strength) {\n        case account_1.MnemonicStrength.s128_12words:\n            return 12;\n        case account_1.MnemonicStrength.s256_24words:\n            return 24;\n    }\n}\nexports.mnemonicLengthFromStrength = mnemonicLengthFromStrength;\n/**\n * Splits a mnemonic phrase into words, handling extra whitespace anywhere in the phrase.\n */\nfunction splitMnemonic(mnemonic) {\n    return __spreadArray([], __read(mnemonic.trim().split(/\\s+/)), false);\n}\n/**\n * Joins a list of words into a mnemonic phrase. Inverse of splitMnemonic.\n */\nfunction joinMnemonic(words, language) {\n    return words.join(language === account_1.MnemonicLanguages.japanese ? '\\u3000' : ' ');\n}\n/**\n * Detects the language of tokenized mnemonic phrase by applying a heuristic.\n *\n * @remarks Uses a heuristic of returning the language with the most matching words. In practice, we\n * expect all words to come from a single language, also some may be misspelled or otherwise\n * malformed. It may occasionally occur that a typo results in word from another language (e.g. bag\n * -> bagr) but this should occur at most once or twice per phrase.\n */\nfunction detectMnemonicLanguage(words, candidates) {\n    // Assign a match score to each language by how many words of the phrase are in each language.\n    var scores = (candidates !== null && candidates !== void 0 ? candidates : getAllLanguages()).map(function (candidate) {\n        var wordSet = new Set(getWordList(candidate));\n        var score = words.reduce(function (count, word) { return (wordSet.has(word) ? count + 1 : count); }, 0);\n        return [candidate, score];\n    });\n    // Reduce to the highest scoring candidate(s). Note that it is possible for multiple candidates to\n    // have the same score, but it likely to occur only for specially constructed phrases.\n    var _a = __read(scores.reduce(function (_a, _b) {\n        var _c = __read(_a, 2), leaders = _c[0], leadingScore = _c[1];\n        var _d = __read(_b, 2), candidate = _d[0], score = _d[1];\n        if (score > leadingScore) {\n            return [[candidate], score];\n        }\n        else if (score === leadingScore) {\n            return [__spreadArray(__spreadArray([], __read(leaders), false), [candidate], false), leadingScore];\n        }\n        return [leaders, leadingScore];\n    }, [[], 0]), 2), winners = _a[0], highscore = _a[1];\n    if (winners.length !== 1 || highscore < 1) {\n        return undefined;\n    }\n    return winners[0];\n}\nexports.detectMnemonicLanguage = detectMnemonicLanguage;\n/**\n * Generates a list of suggested corrections to the mnemonic phrase based on a set of heuristics.\n *\n * @remarks\n * Each yielded suggestion represents an attempt to correct the seed phrase by replacing any invalid\n * words with the most likely valid words. Returned suggestions phrases are ordered by probability\n * based on a noisy channel model, described in detail in CIP-39.\n *\n * The generated list of suggestions is exponential in size, and effectively infinite. One should\n * not attempt to generate the entire list.\n *\n * All yielded suggestions will have a valid checksum, but are not guaranteed to correspond to any\n * given wallet. If the phrase is being used to recover a wallet with non-zero balance, it is\n * suggested that the caller check the balance of the derived wallet address. If the balance is\n * non-zero, they can be sure that the phrase is correct. If it is zero, then they should continue\n * and try the next suggestion.\n *\n * It is recommended to normalize the mnemonic phrase before inputting to this function.\n *\n * @privateRemarks\n * TODO(victor): Include a heuristic rule for phrase-level corrections, such as word ordering swaps.\n */\nfunction suggestMnemonicCorrections(mnemonic, language, strength) {\n    var words, expectedLength, lang, _a, _b, suggestion, phrase, e_2_1;\n    var e_2, _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                words = splitMnemonic(mnemonic);\n                expectedLength = strength && mnemonicLengthFromStrength(strength);\n                if ((expectedLength && words.length !== expectedLength) || words.length % 3 !== 0) {\n                    return [2 /*return*/];\n                }\n                lang = language !== null && language !== void 0 ? language : detectMnemonicLanguage(words);\n                if (lang === undefined) {\n                    return [2 /*return*/];\n                }\n                _d.label = 1;\n            case 1:\n                _d.trys.push([1, 6, 7, 8]);\n                _a = __values(suggestUnvalidatedCorrections(words, lang)), _b = _a.next();\n                _d.label = 2;\n            case 2:\n                if (!!_b.done) return [3 /*break*/, 5];\n                suggestion = _b.value;\n                phrase = joinMnemonic(suggestion, lang);\n                if (!validateMnemonic(phrase, undefined, lang)) return [3 /*break*/, 4];\n                return [4 /*yield*/, phrase];\n            case 3:\n                _d.sent();\n                _d.label = 4;\n            case 4:\n                _b = _a.next();\n                return [3 /*break*/, 2];\n            case 5: return [3 /*break*/, 8];\n            case 6:\n                e_2_1 = _d.sent();\n                e_2 = { error: e_2_1 };\n                return [3 /*break*/, 8];\n            case 7:\n                try {\n                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                }\n                finally { if (e_2) throw e_2.error; }\n                return [7 /*endfinally*/];\n            case 8: return [2 /*return*/];\n        }\n    });\n}\nexports.suggestMnemonicCorrections = suggestMnemonicCorrections;\n/// Generates a list of suggested phases based on an edit distance correction heuristic.\nfunction suggestUnvalidatedCorrections(words, language) {\n    // Combine the given suggestions lists to produce all combinations with weight, defined as the sum\n    // edit distances for all chosen words, equal to the given weight value.\n    // The set of suggestions yielded with a given weight is disjoint from the set of suggestions\n    // yielded with any other given weight.\n    function combineSuggestions(suggestionsLists, weight) {\n        var suggestions, remaining, _a, _b, distance, _c, _d, list, _e, _f, suggestion, e_4_1, e_5_1, e_6_1;\n        var e_6, _g, e_5, _h, e_4, _j;\n        var _k, _l, _m;\n        return __generator(this, function (_o) {\n            switch (_o.label) {\n                case 0:\n                    if (suggestionsLists.length < 1 || weight < 0) {\n                        throw Error('programming error: suggestions map must have at least one entry');\n                    }\n                    suggestions = suggestionsLists[0];\n                    if (!(suggestionsLists.length === 1)) return [3 /*break*/, 2];\n                    return [5 /*yield**/, __values((_l = (_k = suggestions.get(weight)) === null || _k === void 0 ? void 0 : _k.map(function (suggestion) { return [suggestion]; })) !== null && _l !== void 0 ? _l : [])];\n                case 1:\n                    _o.sent();\n                    return [2 /*return*/];\n                case 2:\n                    remaining = __spreadArray([], __read(suggestionsLists.slice(1)), false);\n                    _o.label = 3;\n                case 3:\n                    _o.trys.push([3, 20, 21, 22]);\n                    _a = __values(__spreadArray([], __read(suggestions.keys()), false).sort()), _b = _a.next();\n                    _o.label = 4;\n                case 4:\n                    if (!!_b.done) return [3 /*break*/, 19];\n                    distance = _b.value;\n                    if (distance > weight) {\n                        return [3 /*break*/, 19];\n                    }\n                    _o.label = 5;\n                case 5:\n                    _o.trys.push([5, 16, 17, 18]);\n                    _c = (e_5 = void 0, __values(combineSuggestions(remaining, weight - distance))), _d = _c.next();\n                    _o.label = 6;\n                case 6:\n                    if (!!_d.done) return [3 /*break*/, 15];\n                    list = _d.value;\n                    _o.label = 7;\n                case 7:\n                    _o.trys.push([7, 12, 13, 14]);\n                    _e = (e_4 = void 0, __values((_m = suggestions.get(distance)) !== null && _m !== void 0 ? _m : [])), _f = _e.next();\n                    _o.label = 8;\n                case 8:\n                    if (!!_f.done) return [3 /*break*/, 11];\n                    suggestion = _f.value;\n                    return [4 /*yield*/, __spreadArray([suggestion], __read(list), false)];\n                case 9:\n                    _o.sent();\n                    _o.label = 10;\n                case 10:\n                    _f = _e.next();\n                    return [3 /*break*/, 8];\n                case 11: return [3 /*break*/, 14];\n                case 12:\n                    e_4_1 = _o.sent();\n                    e_4 = { error: e_4_1 };\n                    return [3 /*break*/, 14];\n                case 13:\n                    try {\n                        if (_f && !_f.done && (_j = _e.return)) _j.call(_e);\n                    }\n                    finally { if (e_4) throw e_4.error; }\n                    return [7 /*endfinally*/];\n                case 14:\n                    _d = _c.next();\n                    return [3 /*break*/, 6];\n                case 15: return [3 /*break*/, 18];\n                case 16:\n                    e_5_1 = _o.sent();\n                    e_5 = { error: e_5_1 };\n                    return [3 /*break*/, 18];\n                case 17:\n                    try {\n                        if (_d && !_d.done && (_h = _c.return)) _h.call(_c);\n                    }\n                    finally { if (e_5) throw e_5.error; }\n                    return [7 /*endfinally*/];\n                case 18:\n                    _b = _a.next();\n                    return [3 /*break*/, 4];\n                case 19: return [3 /*break*/, 22];\n                case 20:\n                    e_6_1 = _o.sent();\n                    e_6 = { error: e_6_1 };\n                    return [3 /*break*/, 22];\n                case 21:\n                    try {\n                        if (_b && !_b.done && (_g = _a.return)) _g.call(_a);\n                    }\n                    finally { if (e_6) throw e_6.error; }\n                    return [7 /*endfinally*/];\n                case 22: return [2 /*return*/];\n            }\n        });\n    }\n    var spotSuggestions, weight, _a, _b, suggestedWords, e_3_1;\n    var e_3, _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                spotSuggestions = words.map(function (word) {\n                    return wordSuggestions(word, language);\n                });\n                weight = 0;\n                _d.label = 1;\n            case 1:\n                if (!(weight < 1000)) return [3 /*break*/, 10];\n                _d.label = 2;\n            case 2:\n                _d.trys.push([2, 7, 8, 9]);\n                _a = (e_3 = void 0, __values(combineSuggestions(spotSuggestions, weight))), _b = _a.next();\n                _d.label = 3;\n            case 3:\n                if (!!_b.done) return [3 /*break*/, 6];\n                suggestedWords = _b.value;\n                return [4 /*yield*/, suggestedWords];\n            case 4:\n                _d.sent();\n                _d.label = 5;\n            case 5:\n                _b = _a.next();\n                return [3 /*break*/, 3];\n            case 6: return [3 /*break*/, 9];\n            case 7:\n                e_3_1 = _d.sent();\n                e_3 = { error: e_3_1 };\n                return [3 /*break*/, 9];\n            case 8:\n                try {\n                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                }\n                finally { if (e_3) throw e_3.error; }\n                return [7 /*endfinally*/];\n            case 9:\n                weight++;\n                return [3 /*break*/, 1];\n            case 10: return [2 /*return*/];\n        }\n    });\n}\n// Given a word and lnaguage, returns a map of all words in the BIP-39 word list for the given\n// language by edit distance. This is used as word replacement suggestions.\nfunction wordSuggestions(typo, language) {\n    return getWordList(language)\n        .map(function (word) { return ({ distance: (0, levenshtein_1.levenshteinDistance)(typo, word), word: word }); })\n        .reduce(function (map, _a) {\n        var distance = _a.distance, word = _a.word;\n        // Reduction uses mutation, instead of spread, as an optimization.\n        var list = map.get(distance);\n        if (list !== undefined) {\n            list.push(word);\n        }\n        else {\n            map.set(distance, [word]);\n        }\n        return map;\n    }, new Map());\n}\nfunction generateKeys(mnemonic, password, changeIndex, addressIndex, bip39ToUse, derivationPath) {\n    if (changeIndex === void 0) { changeIndex = 0; }\n    if (addressIndex === void 0) { addressIndex = 0; }\n    if (bip39ToUse === void 0) { bip39ToUse = bip39Wrapper; }\n    if (derivationPath === void 0) { derivationPath = account_1.CELO_DERIVATION_PATH_BASE; }\n    return __awaiter(this, void 0, void 0, function () {\n        var seed;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, generateSeed(mnemonic, password, bip39ToUse)];\n                case 1:\n                    seed = _a.sent();\n                    return [2 /*return*/, generateKeysFromSeed(seed, changeIndex, addressIndex, derivationPath)];\n            }\n        });\n    });\n}\nexports.generateKeys = generateKeys;\nfunction generateDeterministicInviteCode(recipientPhoneHash, recipientPepper, addressIndex, changeIndex, derivationPath) {\n    if (addressIndex === void 0) { addressIndex = 0; }\n    if (changeIndex === void 0) { changeIndex = 0; }\n    if (derivationPath === void 0) { derivationPath = account_1.CELO_DERIVATION_PATH_BASE; }\n    var seed = (0, ethereumjs_util_1.keccak256)(recipientPhoneHash + recipientPepper);\n    return generateKeysFromSeed(seed, changeIndex, addressIndex, derivationPath);\n}\nexports.generateDeterministicInviteCode = generateDeterministicInviteCode;\n// keyByteLength truncates the seed. *Avoid its use*\n// It was added only because a backwards compatibility bug\nfunction generateSeed(mnemonic, password, bip39ToUse, keyByteLength) {\n    if (bip39ToUse === void 0) { bip39ToUse = bip39Wrapper; }\n    if (keyByteLength === void 0) { keyByteLength = 64; }\n    return __awaiter(this, void 0, void 0, function () {\n        var seed, bufAux;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, bip39ToUse.mnemonicToSeed(mnemonic, password)];\n                case 1:\n                    seed = _a.sent();\n                    if (keyByteLength > 0 && seed.byteLength > keyByteLength) {\n                        bufAux = Buffer.allocUnsafe(keyByteLength);\n                        seed.copy(bufAux, 0, 0, keyByteLength);\n                        seed = bufAux;\n                    }\n                    return [2 /*return*/, seed];\n            }\n        });\n    });\n}\nexports.generateSeed = generateSeed;\nfunction generateKeysFromSeed(seed, changeIndex, addressIndex, derivationPath) {\n    if (changeIndex === void 0) { changeIndex = 0; }\n    if (addressIndex === void 0) { addressIndex = 0; }\n    if (derivationPath === void 0) { derivationPath = account_1.CELO_DERIVATION_PATH_BASE; }\n    var node = bip32.fromSeed(seed);\n    var newNode = node.derivePath(\"\" + (derivationPath ? derivationPath + \"/\" : '') + changeIndex + \"/\" + addressIndex);\n    if (!newNode.privateKey) {\n        // As we are generating the node from a seed, the node will always have a private key and this would never happened\n        throw new Error('utils-accounts@generateKeys: invalid node to derivate');\n    }\n    return {\n        privateKey: newNode.privateKey.toString('hex'),\n        publicKey: newNode.publicKey.toString('hex'),\n        address: (0, address_1.privateKeyToAddress)(newNode.privateKey.toString('hex')),\n    };\n}\nexports.generateKeysFromSeed = generateKeysFromSeed;\nexports.AccountUtils = {\n    detectMnemonicLanguage: detectMnemonicLanguage,\n    generateMnemonic: generateMnemonic,\n    normalizeMnemonic: normalizeMnemonic,\n    validateMnemonic: validateMnemonic,\n    invalidMnemonicWords: invalidMnemonicWords,\n    suggestMnemonicCorrections: suggestMnemonicCorrections,\n    generateKeys: generateKeys,\n    generateSeed: generateSeed,\n    generateKeysFromSeed: generateKeysFromSeed,\n};\n//# sourceMappingURL=account.js.map"]},"metadata":{},"sourceType":"script"}