{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/Connection.js\",\n    _s = $RefreshSig$();\n\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport { Button, ButtonGroup, Col, Toast, Modal } from 'react-bootstrap';\nimport MyNav from \"./MyNav\";\nimport App from \"./App\";\nimport \"./App.css\";\nimport getWeb3 from \"./getWeb3\";\nimport img_bsc from './components/Structure/images/bsc_logo.png';\nimport img_meter from './components/Structure/images/meter.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Connection = props => {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const wallet = useWallet();\n  const [firstPartAddress, setFirstPartAddress] = useState('Connect Wallet');\n  const [secondPartAddress, setSecondPartAddress] = useState('');\n  console.log(firstPartAddress, \"firstPartAddress\");\n  useEffect(() => {\n    const init = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const usersAccount = accounts[0];\n      const stringOfUsersAccount = new String(usersAccount);\n      console.log(stringOfUsersAccount.slice(0, 4)); // \"01\"\n\n      setFirstPartAddress(stringOfUsersAccount.slice(0, 5));\n      setSecondPartAddress('____' + stringOfUsersAccount.slice(37, 42));\n    };\n\n    init();\n  });\n\n  const connectWallet = async e => {\n    await wallet.connect();\n    const usersAccount = props.accounts[0];\n    const stringOfUsersAccount = new String(usersAccount);\n    console.log(stringOfUsersAccount.slice(0, 4)); // \"01\"\n\n    setFirstPartAddress('Welcome');\n    setSecondPartAddress('');\n    window.location.reload();\n  };\n\n  const bsc = async e => {\n    const Moralis = require('moralis'); // ES6 Minimized\n\n\n    const web3 = await Moralis.enableWeb3();\n    const chainId = \"0x38\"; //BSC Mainnet\n\n    const chainName = \"Smart Chain\";\n    const currencyName = \"BNB\";\n    const currencySymbol = \"BNB\";\n    const rpcUrl = \"https://bsc-dataseed.binance.org/\";\n    const blockExplorerUrl = \"https://bscscan.com\";\n    await Moralis.addNetwork(chainId, chainName, currencyName, currencySymbol, rpcUrl, blockExplorerUrl);\n    const chainIdHex = await Moralis.switchNetwork(chainId);\n    window.location.reload(false);\n  };\n\n  const meter = async e => {\n    const Moralis = require('moralis'); // ES6 Minimized\n\n\n    const web3 = await Moralis.enableWeb3();\n    const chainId = \"0x53\"; //Meter Mainnet\n    // const chainId = \"0x52\"; //Meter Mainnet\n\n    const chainName = \"Meter Testnet\";\n    const currencyName = \"MTR\";\n    const currencySymbol = \"MTR\";\n    const rpcUrl = \"https://rpctest.meter.io\";\n    const blockExplorerUrl = \"https://scan-warringstakes.meter.io\";\n    await Moralis.addNetwork(chainId, chainName, currencyName, currencySymbol, rpcUrl, blockExplorerUrl);\n    const chainIdHex = await Moralis.switchNetwork(chainId);\n    window.location.reload(false);\n  };\n\n  console.log(props.accounts, \"acccount\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n      className: \"mb-1\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn btn-default btn-light\",\n        onClick: meter,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"treasureblox_logo\",\n          src: img_meter,\n          width: \"25\",\n          className: \"d-inline-block align-middle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn btn-default btn-dark\",\n        onClick: bsc,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"treasureblox_logo\",\n          src: img_bsc,\n          width: \"25\",\n          className: \"d-inline-block align-middle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: connectWallet,\n        id: \"wallet-button\",\n        className: \"customWalletButton \",\n        children: [firstPartAddress, secondPartAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}; // Wrap everything in <UseWalletProvider />\n\n\n_s(Connection, \"aHDWbgFdMVhDtcE80KuDtbShWxE=\", false, function () {\n  return [useWallet];\n});\n\n_c = Connection;\nexport default (props => /*#__PURE__*/_jsxDEV(UseWalletProvider, {\n  chainId: 1337,\n  connectors: {\n    // This is how connectors get configured\n    provided: {\n      provider: window.cleanEthereum\n    }\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 163,\n  columnNumber: 3\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"Connection\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/Connection.js"],"names":["React","useState","useEffect","useWallet","UseWalletProvider","Button","ButtonGroup","Col","Toast","Modal","MyNav","App","getWeb3","img_bsc","img_meter","Connection","props","show","setShow","handleClose","handleShow","wallet","firstPartAddress","setFirstPartAddress","secondPartAddress","setSecondPartAddress","console","log","init","web3","accounts","eth","getAccounts","usersAccount","stringOfUsersAccount","String","slice","connectWallet","e","connect","window","location","reload","bsc","Moralis","require","enableWeb3","chainId","chainName","currencyName","currencySymbol","rpcUrl","blockExplorerUrl","addNetwork","chainIdHex","switchNetwork","meter","provided","provider","cleanEthereum"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,YAA7C;AACA,SAASC,MAAT,EAAgBC,WAAhB,EAA4BC,GAA5B,EAAgCC,KAAhC,EAAsCC,KAAtC,QAAmD,iBAAnD;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,WAAP;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,OAAP,MAAoB,4CAApB;AACA,OAAOC,SAAP,MAAsB,yCAAtB;;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAY;AAAA;;AAG7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMkB,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,UAAU,GAAG,MAAOF,OAAO,CAAC,IAAD,CAAjC;;AAIA,QAAMG,MAAM,GAAGlB,SAAS,EAAxB;AACA,QAAM,CAACmB,gBAAD,EAAmBC,mBAAnB,IAA0CtB,QAAQ,CAAC,gBAAD,CAAxD;AACA,QAAM,CAACuB,iBAAD,EAAoBC,oBAApB,IAA4CxB,QAAQ,CAAC,EAAD,CAA1D;AAEFyB,EAAAA,OAAO,CAACC,GAAR,CAAYL,gBAAZ,EAA6B,kBAA7B;AAEEpB,EAAAA,SAAS,CAAC,MAAM;AAEb,UAAM0B,IAAI,GAAG,YAAW;AAEtB,YAAMC,IAAI,GAAG,MAAMjB,OAAO,EAA1B;AACA,YAAMkB,QAAQ,GAAG,MAAMD,IAAI,CAACE,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMC,YAAY,GAAGH,QAAQ,CAAC,CAAD,CAA7B;AACA,YAAMI,oBAAoB,GAAG,IAAIC,MAAJ,CAAWF,YAAX,CAA7B;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYO,oBAAoB,CAACE,KAArB,CAA2B,CAA3B,EAA8B,CAA9B,CAAZ,EANsB,CAMyB;;AAC/Cb,MAAAA,mBAAmB,CAACW,oBAAoB,CAACE,KAArB,CAA2B,CAA3B,EAA8B,CAA9B,CAAD,CAAnB;AACAX,MAAAA,oBAAoB,CAAC,SAAOS,oBAAoB,CAACE,KAArB,CAA2B,EAA3B,EAA+B,EAA/B,CAAR,CAApB;AAED,KAVD;;AAWAR,IAAAA,IAAI;AACL,GAdO,CAAT;;AAgBA,QAAMS,aAAa,GAAG,MAAMC,CAAN,IAAY;AAChC,UAAMjB,MAAM,CAACkB,OAAP,EAAN;AACA,UAAMN,YAAY,GAAGjB,KAAK,CAACc,QAAN,CAAe,CAAf,CAArB;AACA,UAAMI,oBAAoB,GAAG,IAAIC,MAAJ,CAAWF,YAAX,CAA7B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYO,oBAAoB,CAACE,KAArB,CAA2B,CAA3B,EAA8B,CAA9B,CAAZ,EAJgC,CAIe;;AAC/Cb,IAAAA,mBAAmB,CAAC,SAAD,CAAnB;AACAE,IAAAA,oBAAoB,CAAC,EAAD,CAApB;AACAe,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAED,GATD;;AAgBA,QAAMC,GAAG,GAAG,MAAML,CAAN,IAAY;AACtB,UAAMM,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB,CADsB,CAEtB;;;AACA,UAAMhB,IAAI,GAAG,MAAMe,OAAO,CAACE,UAAR,EAAnB;AAEA,UAAMC,OAAO,GAAG,MAAhB,CALsB,CAKE;;AACxB,UAAMC,SAAS,GAAG,aAAlB;AACA,UAAMC,YAAY,GAAG,KAArB;AACA,UAAMC,cAAc,GAAG,KAAvB;AACA,UAAMC,MAAM,GAAG,mCAAf;AACA,UAAMC,gBAAgB,GAAG,qBAAzB;AACA,UAAMR,OAAO,CAACS,UAAR,CACJN,OADI,EAEJC,SAFI,EAGJC,YAHI,EAIJC,cAJI,EAKJC,MALI,EAMJC,gBANI,CAAN;AAQA,UAAME,UAAU,GAAG,MAAMV,OAAO,CAACW,aAAR,CAAsBR,OAAtB,CAAzB;AAEAP,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AAED,GAvBD;;AAyBA,QAAMc,KAAK,GAAG,MAAMlB,CAAN,IAAY;AACxB,UAAMM,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB,CADwB,CAExB;;;AACA,UAAMhB,IAAI,GAAG,MAAMe,OAAO,CAACE,UAAR,EAAnB;AAGA,UAAMC,OAAO,GAAG,MAAhB,CANwB,CAMA;AACxB;;AAEA,UAAMC,SAAS,GAAG,eAAlB;AACA,UAAMC,YAAY,GAAG,KAArB;AACA,UAAMC,cAAc,GAAG,KAAvB;AACA,UAAMC,MAAM,GAAG,0BAAf;AACA,UAAMC,gBAAgB,GAAG,qCAAzB;AACA,UAAMR,OAAO,CAACS,UAAR,CACJN,OADI,EAEJC,SAFI,EAGJC,YAHI,EAIJC,cAJI,EAKJC,MALI,EAMJC,gBANI,CAAN;AASA,UAAME,UAAU,GAAG,MAAMV,OAAO,CAACW,aAAR,CAAsBR,OAAtB,CAAzB;AAEAP,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AAED,GA3BD;;AA4BFhB,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACc,QAAlB,EAA2B,UAA3B;AAOE,sBACE;AAAA,4BAEE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAC,MAAvB;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,2BAAlB;AAA8C,QAAA,OAAO,EAAE0B,KAAvD;AAAA,+BACA;AACE,UAAA,GAAG,EAAC,mBADN;AAEE,UAAA,GAAG,EAAE1C,SAFP;AAGE,UAAA,KAAK,EAAC,IAHR;AAIE,UAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAA6C,QAAA,OAAO,EAAE6B,GAAtD;AAAA,+BAEA;AACE,UAAA,GAAG,EAAC,mBADN;AAEE,UAAA,GAAG,EAAE9B,OAFP;AAGE,UAAA,KAAK,EAAC,IAHR;AAIE,UAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,cATJ,eAmBI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEwB,aAAjB;AAAgC,QAAA,EAAE,EAAC,eAAnC;AAAmD,QAAA,SAAS,EAAC,qBAA7D;AAAA,mBAAqFf,gBAArF,EAAuGE,iBAAvG;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eA6BI;AAAA;AAAA;AAAA;AAAA,YA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CA9ID,C,CAgJA;;;GAhJMT,U;UAUWZ,S;;;KAVXY,U;AAiJN,gBAAgBC,KAAD,iBACb,QAAC,iBAAD;AAGE,EAAA,OAAO,EAAE,IAHX;AAIE,EAAA,UAAU,EAAE;AACV;AACAyC,IAAAA,QAAQ,EAAE;AAACC,MAAAA,QAAQ,EAAElB,MAAM,CAACmB;AAAlB;AAFA;AAJd;AAAA;AAAA;AAAA;AAAA,QADF","sourcesContent":["// App.js\n\nimport React, {useState, useEffect} from 'react'\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport { Button,ButtonGroup,Col,Toast,Modal } from 'react-bootstrap';\n\nimport MyNav from \"./MyNav\";\nimport App from \"./App\";\nimport \"./App.css\";\n\nimport getWeb3 from \"./getWeb3\"\n\nimport img_bsc from './components/Structure/images/bsc_logo.png';\nimport img_meter from './components/Structure/images/meter.png';\n\n\nconst Connection = (props) =>  {\n\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () =>  setShow(true);\n\n\n\n  const wallet = useWallet()\n  const [firstPartAddress, setFirstPartAddress] = useState('Connect Wallet');\n  const [secondPartAddress, setSecondPartAddress] = useState('');\n\nconsole.log(firstPartAddress,\"firstPartAddress\")\n\n  useEffect(() => {\n\n     const init = async() => {\n\n       const web3 = await getWeb3();\n       const accounts = await web3.eth.getAccounts();\n       const usersAccount = accounts[0];\n       const stringOfUsersAccount = new String(usersAccount)\n       console.log(stringOfUsersAccount.slice(0, 4)); // \"01\"\n       setFirstPartAddress(stringOfUsersAccount.slice(0, 5));\n       setSecondPartAddress('____'+stringOfUsersAccount.slice(37, 42));\n\n     }\n     init()\n   });\n\n  const connectWallet = async(e) => {\n    await wallet.connect()\n    const usersAccount = props.accounts[0];\n    const stringOfUsersAccount = new String(usersAccount)\n    console.log(stringOfUsersAccount.slice(0, 4)); // \"01\"\n    setFirstPartAddress('Welcome');\n    setSecondPartAddress('');\n    window.location.reload();\n\n  }\n\n\n\n\n\n\n  const bsc = async(e) => {\n    const Moralis = require('moralis');\n    // ES6 Minimized\n    const web3 = await Moralis.enableWeb3();\n\n    const chainId = \"0x38\"; //BSC Mainnet\n    const chainName = \"Smart Chain\";\n    const currencyName = \"BNB\";\n    const currencySymbol = \"BNB\";\n    const rpcUrl = \"https://bsc-dataseed.binance.org/\";\n    const blockExplorerUrl = \"https://bscscan.com\";\n    await Moralis.addNetwork(\n      chainId,\n      chainName,\n      currencyName,\n      currencySymbol,\n      rpcUrl,\n      blockExplorerUrl\n    );\n    const chainIdHex = await Moralis.switchNetwork(chainId);\n\n    window.location.reload(false);\n\n  }\n\n  const meter = async(e) => {\n    const Moralis = require('moralis');\n    // ES6 Minimized\n    const web3 = await Moralis.enableWeb3();\n\n\n    const chainId = \"0x53\"; //Meter Mainnet\n    // const chainId = \"0x52\"; //Meter Mainnet\n\n    const chainName = \"Meter Testnet\";\n    const currencyName = \"MTR\";\n    const currencySymbol = \"MTR\";\n    const rpcUrl = \"https://rpctest.meter.io\";\n    const blockExplorerUrl = \"https://scan-warringstakes.meter.io\";\n    await Moralis.addNetwork(\n      chainId,\n      chainName,\n      currencyName,\n      currencySymbol,\n      rpcUrl,\n      blockExplorerUrl\n    );\n\n    const chainIdHex = await Moralis.switchNetwork(chainId);\n\n    window.location.reload(false);\n\n  }\nconsole.log(props.accounts,\"acccount\")\n\n\n\n\n\n\n  return(\n    <div>\n\n      <ButtonGroup className=\"mb-1\">\n          <Button className=\"btn btn-default btn-light\" onClick={meter} >\n          <img\n            alt=\"treasureblox_logo\"\n            src={img_meter}\n            width=\"25\"\n            className=\"d-inline-block align-middle\"\n          />\n          </Button>\n          <Button className=\"btn btn-default btn-dark\" onClick={bsc} >\n\n          <img\n            alt=\"treasureblox_logo\"\n            src={img_bsc}\n            width=\"25\"\n            className=\"d-inline-block align-middle\"\n          />\n          </Button>\n\n          <Button onClick={connectWallet} id=\"wallet-button\" className=\"customWalletButton \" >{firstPartAddress}{secondPartAddress}</Button>\n\n        </ButtonGroup>\n\n\n\n\n\n        <br />\n\n    </div>\n  )\n}\n\n// Wrap everything in <UseWalletProvider />\nexport default (props) => (\n  <UseWalletProvider\n\n\n    chainId={1337}\n    connectors={{\n      // This is how connectors get configured\n      provided: {provider: window.cleanEthereum},\n    }}>\n\n\n\n\n  </UseWalletProvider>\n)\n"]},"metadata":{},"sourceType":"module"}