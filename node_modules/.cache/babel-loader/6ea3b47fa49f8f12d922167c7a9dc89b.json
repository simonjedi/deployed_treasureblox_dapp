{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst SecretStorage = require(\"@meterio/ethers/utils/secret-storage\");\n\nvar Keystore;\n\n(function (Keystore) {\n  /**\n   * encrypt private key to keystore with given password\n   * @param privateKey the private key to be encrypted\n   * @param password password to encrypt the private key\n   */\n  function encrypt(privateKey, password) {\n    return SecretStorage.encrypt(`0x${privateKey.toString('hex')}`, password, {\n      scrypt: {\n        N: 131072,\n        p: 1,\n        r: 8\n      }\n    }).then(str => normalize(JSON.parse(str)));\n  }\n\n  Keystore.encrypt = encrypt;\n  /**\n   * decrypt private key from keystore\n   * an error thrown if not well formed\n   * @param ks the keystore\n   * @param password password to decrypt keystore\n   */\n\n  function decrypt(ks, password) {\n    return SecretStorage.decrypt(JSON.stringify(ks), password).then(sk => Buffer.from(sk.privateKey.slice(2), 'hex'));\n  }\n\n  Keystore.decrypt = decrypt;\n  /**\n   * roughly check whether keystore is well formed\n   * @param ks the keystore\n   */\n\n  function wellFormed(ks) {\n    try {\n      validate(normalize(ks));\n      return true;\n    } catch (_a) {\n      return false;\n    }\n  }\n\n  Keystore.wellFormed = wellFormed;\n  /** normalize keystore. e.g. lower case keys */\n\n  function normalize(obj) {\n    const lowerKey = o => {\n      return Object.keys(o).reduce((converted, k) => {\n        let v = o[k];\n\n        if (typeof v === 'object') {\n          v = lowerKey(v);\n        }\n\n        converted[k.toLowerCase()] = v;\n        return converted;\n      }, {});\n    };\n\n    return lowerKey(obj);\n  }\n\n  function validate(ks) {\n    if (ks.version !== 1 && ks.version !== 3) {\n      throw new Error('unsupported version');\n    }\n\n    if (!/^[0-9a-f]{40}$/i.test(ks.address)) {\n      throw new Error('invalid address');\n    }\n\n    if (!/^[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}$/i.test(ks.id)) {\n      throw new Error('invalid id');\n    }\n\n    if (typeof ks.crypto !== 'object') {\n      throw new Error('invalid crypto');\n    }\n\n    return ks;\n  }\n})(Keystore = exports.Keystore || (exports.Keystore = {}));","map":{"version":3,"sources":["../../src/cry/keystore.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,aAAA,GAAA,OAAA,CAAA,sCAAA,CAAA;;AAWA,IAAiB,QAAjB;;AAAA,CAAA,UAAiB,QAAjB,EAAyB;AACvB;;;;AAIG;AACH,WAAgB,OAAhB,CAAwB,UAAxB,EAA4C,QAA5C,EAA4D;AAC1D,WAAO,aAAa,CAAC,OAAd,CAAsB,KAAK,UAAU,CAAC,QAAX,CAAoB,KAApB,CAA0B,EAArD,EAAyD,QAAzD,EAAmE;AACxE,MAAA,MAAM,EAAE;AACN,QAAA,CAAC,EAAE,MADG;AAEN,QAAA,CAAC,EAAE,CAFG;AAGN,QAAA,CAAC,EAAE;AAHG;AADgE,KAAnE,EAMJ,IANI,CAME,GAAD,IAAS,SAAS,CAAC,IAAI,CAAC,KAAL,CAAW,GAAX,CAAD,CANnB,CAAP;AAOD;;AARe,EAAA,QAAA,CAAA,OAAA,GAAO,OAAP;AAUhB;;;;;AAKG;;AACH,WAAgB,OAAhB,CAAwB,EAAxB,EAAsC,QAAtC,EAAsD;AACpD,WAAO,aAAa,CAAC,OAAd,CAAsB,IAAI,CAAC,SAAL,CAAe,EAAf,CAAtB,EAA0C,QAA1C,EAAoD,IAApD,CAA0D,EAAD,IAC9D,MAAM,CAAC,IAAP,CAAY,EAAE,CAAC,UAAH,CAAc,KAAd,CAAoB,CAApB,CAAZ,EAAoC,KAApC,CADK,CAAP;AAGD;;AAJe,EAAA,QAAA,CAAA,OAAA,GAAO,OAAP;AAMhB;;;AAGG;;AACH,WAAgB,UAAhB,CAA2B,EAA3B,EAAkC;AAChC,QAAI;AACF,MAAA,QAAQ,CAAC,SAAS,CAAC,EAAD,CAAV,CAAR;AACA,aAAO,IAAP;AACD,KAHD,CAGE,OAAA,EAAA,EAAM;AACN,aAAO,KAAP;AACD;AACF;;AAPe,EAAA,QAAA,CAAA,UAAA,GAAU,UAAV;AAShB;;AACA,WAAS,SAAT,CAAmB,GAAnB,EAA8B;AAC5B,UAAM,QAAQ,GAAI,CAAD,IAAc;AAC7B,aAAO,MAAM,CAAC,IAAP,CAAY,CAAZ,EAAe,MAAf,CAAsB,CAAC,SAAD,EAAY,CAAZ,KAAiB;AAC5C,YAAI,CAAC,GAAI,CAAS,CAAC,CAAD,CAAlB;;AACA,YAAI,OAAO,CAAP,KAAa,QAAjB,EAA2B;AACzB,UAAA,CAAC,GAAG,QAAQ,CAAC,CAAD,CAAZ;AACD;;AACD,QAAA,SAAS,CAAC,CAAC,CAAC,WAAF,EAAD,CAAT,GAA6B,CAA7B;AACA,eAAO,SAAP;AACD,OAPM,EAOJ,EAPI,CAAP;AAQD,KATD;;AAUA,WAAO,QAAQ,CAAC,GAAD,CAAf;AACD;;AAED,WAAS,QAAT,CAAkB,EAAlB,EAA8B;AAC5B,QAAI,EAAE,CAAC,OAAH,KAAe,CAAf,IAAoB,EAAE,CAAC,OAAH,KAAe,CAAvC,EAA0C;AACxC,YAAM,IAAI,KAAJ,CAAU,qBAAV,CAAN;AACD;;AACD,QAAI,CAAC,kBAAkB,IAAlB,CAAuB,EAAE,CAAC,OAA1B,CAAL,EAAyC;AACvC,YAAM,IAAI,KAAJ,CAAU,iBAAV,CAAN;AACD;;AACD,QAAI,CAAC,kEAAkE,IAAlE,CAAuE,EAAE,CAAC,EAA1E,CAAL,EAAoF;AAClF,YAAM,IAAI,KAAJ,CAAU,YAAV,CAAN;AACD;;AACD,QAAI,OAAO,EAAE,CAAC,MAAV,KAAqB,QAAzB,EAAmC;AACjC,YAAM,IAAI,KAAJ,CAAU,gBAAV,CAAN;AACD;;AACD,WAAO,EAAP;AACD;AACF,CAvED,EAAiB,QAAQ,GAAR,OAAA,CAAA,QAAA,KAAA,OAAA,CAAA,QAAA,GAAQ,EAAR,CAAjB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SecretStorage = require(\"@meterio/ethers/utils/secret-storage\");\nvar Keystore;\n(function (Keystore) {\n    /**\n     * encrypt private key to keystore with given password\n     * @param privateKey the private key to be encrypted\n     * @param password password to encrypt the private key\n     */\n    function encrypt(privateKey, password) {\n        return SecretStorage.encrypt(`0x${privateKey.toString('hex')}`, password, {\n            scrypt: {\n                N: 131072,\n                p: 1,\n                r: 8,\n            },\n        }).then((str) => normalize(JSON.parse(str)));\n    }\n    Keystore.encrypt = encrypt;\n    /**\n     * decrypt private key from keystore\n     * an error thrown if not well formed\n     * @param ks the keystore\n     * @param password password to decrypt keystore\n     */\n    function decrypt(ks, password) {\n        return SecretStorage.decrypt(JSON.stringify(ks), password).then((sk) => Buffer.from(sk.privateKey.slice(2), 'hex'));\n    }\n    Keystore.decrypt = decrypt;\n    /**\n     * roughly check whether keystore is well formed\n     * @param ks the keystore\n     */\n    function wellFormed(ks) {\n        try {\n            validate(normalize(ks));\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    Keystore.wellFormed = wellFormed;\n    /** normalize keystore. e.g. lower case keys */\n    function normalize(obj) {\n        const lowerKey = (o) => {\n            return Object.keys(o).reduce((converted, k) => {\n                let v = o[k];\n                if (typeof v === 'object') {\n                    v = lowerKey(v);\n                }\n                converted[k.toLowerCase()] = v;\n                return converted;\n            }, {});\n        };\n        return lowerKey(obj);\n    }\n    function validate(ks) {\n        if (ks.version !== 1 && ks.version !== 3) {\n            throw new Error('unsupported version');\n        }\n        if (!/^[0-9a-f]{40}$/i.test(ks.address)) {\n            throw new Error('invalid address');\n        }\n        if (!/^[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}$/i.test(ks.id)) {\n            throw new Error('invalid id');\n        }\n        if (typeof ks.crypto !== 'object') {\n            throw new Error('invalid crypto');\n        }\n        return ks;\n    }\n})(Keystore = exports.Keystore || (exports.Keystore = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5c3RvcmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY3J5L2tleXN0b3JlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0VBQXNFO0FBV3RFLElBQWlCLFFBQVEsQ0F1RXhCO0FBdkVELFdBQWlCLFFBQVE7SUFDdkI7Ozs7T0FJRztJQUNILFNBQWdCLE9BQU8sQ0FBQyxVQUFrQixFQUFFLFFBQWdCO1FBQzFELE9BQU8sYUFBYSxDQUFDLE9BQU8sQ0FBQyxLQUFLLFVBQVUsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUU7WUFDeEUsTUFBTSxFQUFFO2dCQUNOLENBQUMsRUFBRSxNQUFNO2dCQUNULENBQUMsRUFBRSxDQUFDO2dCQUNKLENBQUMsRUFBRSxDQUFDO2FBQ0w7U0FDRixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQVJlLGdCQUFPLFVBUXRCLENBQUE7SUFFRDs7Ozs7T0FLRztJQUNILFNBQWdCLE9BQU8sQ0FBQyxFQUFZLEVBQUUsUUFBZ0I7UUFDcEQsT0FBTyxhQUFhLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FDckUsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FDM0MsQ0FBQztJQUNKLENBQUM7SUFKZSxnQkFBTyxVQUl0QixDQUFBO0lBRUQ7OztPQUdHO0lBQ0gsU0FBZ0IsVUFBVSxDQUFDLEVBQU87UUFDaEMsSUFBSTtZQUNGLFFBQVEsQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUN4QixPQUFPLElBQUksQ0FBQztTQUNiO1FBQUMsV0FBTTtZQUNOLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7SUFDSCxDQUFDO0lBUGUsbUJBQVUsYUFPekIsQ0FBQTtJQUVELCtDQUErQztJQUMvQyxTQUFTLFNBQVMsQ0FBQyxHQUFXO1FBQzVCLE1BQU0sUUFBUSxHQUFHLENBQUMsQ0FBUyxFQUFFLEVBQUU7WUFDN0IsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDNUMsSUFBSSxDQUFDLEdBQUksQ0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN0QixJQUFJLE9BQU8sQ0FBQyxLQUFLLFFBQVEsRUFBRTtvQkFDekIsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztpQkFDakI7Z0JBQ0QsU0FBUyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDL0IsT0FBTyxTQUFTLENBQUM7WUFDbkIsQ0FBQyxFQUFFLEVBQVMsQ0FBQyxDQUFDO1FBQ2hCLENBQUMsQ0FBQztRQUNGLE9BQU8sUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxTQUFTLFFBQVEsQ0FBQyxFQUFZO1FBQzVCLElBQUksRUFBRSxDQUFDLE9BQU8sS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLE9BQU8sS0FBSyxDQUFDLEVBQUU7WUFDeEMsTUFBTSxJQUFJLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1NBQ3hDO1FBQ0QsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDdkMsTUFBTSxJQUFJLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1NBQ3BDO1FBQ0QsSUFBSSxDQUFDLGlFQUFpRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7WUFDbEYsTUFBTSxJQUFJLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUMvQjtRQUNELElBQUksT0FBTyxFQUFFLENBQUMsTUFBTSxLQUFLLFFBQVEsRUFBRTtZQUNqQyxNQUFNLElBQUksS0FBSyxDQUFDLGdCQUFnQixDQUFDLENBQUM7U0FDbkM7UUFDRCxPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7QUFDSCxDQUFDLEVBdkVnQixRQUFRLEdBQVIsZ0JBQVEsS0FBUixnQkFBUSxRQXVFeEIifQ=="]},"metadata":{},"sourceType":"script"}