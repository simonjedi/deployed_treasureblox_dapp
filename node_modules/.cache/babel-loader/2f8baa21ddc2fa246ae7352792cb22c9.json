{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/PartnershipExample/GamesSelection/FighterPilot/FighterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\"; // import Bird from './components/Bird'\n// import Obstacles from './components/Obstacles'\n\nimport { Button, Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport useSound from 'use-sound'; //\n// import lazer from './assets/Lazer.wav';\n// import ohno from './assets/troy_oh_no.mp4';\n\nimport './style.css';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport ReactAudioPlayer from 'react-audio-player'; // Hook\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Screen = props => {\n  _s();\n\n  useEffect(() => {\n    const canvas = document.getElementById(\"canvas\");\n    const ctx = canvas.getContext(\"2d\"); // Global Varabales\n\n    let controlPlayer = false;\n    let hasGameStarted = false; // Prevent game from working whilst page reloads\n\n    let hasGameOver = false; // Canvas black boarder\n\n    function drawBoarder() {\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      ctx.clearRect(50, 50, 500, 500);\n    }\n\n    let playerRect = {\n      x: 275,\n      y: 275,\n      width: 50,\n      height: 50\n    }; // Game Elements\n\n    let rectangles = [{\n      x: 75,\n      y: 75,\n      dx: 5,\n      dy: 4,\n      width: 75,\n      height: 75,\n      color: \"#000099\"\n    }, {\n      x: 400,\n      y: 75,\n      dx: -5,\n      dy: 5.5,\n      width: 80,\n      height: 60,\n      color: \"#000099\"\n    }, {\n      x: 75,\n      y: 445,\n      dx: 5,\n      dy: -5,\n      width: 40,\n      height: 80,\n      color: \"#000099\"\n    }, {\n      x: 420,\n      y: 450,\n      dx: -5,\n      dy: -5,\n      width: 130,\n      height: 25,\n      color: \"#000099\"\n    }]; // Render rectangles to canvas\n\n    function drawRect() {\n      // Draw player rect first\n      ctx.fillStyle = \"#901234\";\n      ctx.fillRect(playerRect.x, playerRect.y, playerRect.width, playerRect.height);\n      rectangles.forEach(rect => {\n        ctx.fillStyle = rect.color;\n        ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n      });\n    }\n\n    function update() {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      drawBoarder();\n      drawRect();\n      requestAnimationFrame(update);\n    } // call update methord on initial document load\n\n\n    update(); // Returns true if collision\n\n    function ifCursorIsInRect(x, y, rect) {\n      return x > rect.x && x < rect.x + rect.width && y > rect.y && y < rect.y + rect.height;\n    }\n\n    canvas.addEventListener(\"mousedown\", e => {\n      // get x & y coordinates in relation to the canvas\n      const pos = {\n        x: e.clientX - canvas.offsetLeft,\n        y: e.clientY - canvas.offsetTop\n      }; // See if they clicked on red square\n\n      if (ifCursorIsInRect(pos.x, pos.y, playerRect)) {\n        hasGameStarted = true;\n        controlPlayer = true;\n      }\n\n      console.log(pos.x, \"down\");\n      console.log(pos.y, \"down\");\n      console.log(hasGameStarted, \"down\");\n      console.log(playerRect, \"down\");\n    });\n    canvas.addEventListener(\"mousemove\", e => {\n      if (controlPlayer && !hasGameOver) {\n        // get x & y coordinates in relation to the canvas\n        const pos = {\n          x: e.clientX - canvas.offsetLeft,\n          y: e.clientY - canvas.offsetTop\n        };\n        playerRect.x = pos.x - 25;\n        playerRect.y = pos.y - 25;\n      }\n    });\n    canvas.addEventListener(\"onmouseup\", () => {\n      controlPlayer = false;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: [\"Fighter Pilot\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        width: \"600\",\n        height: \"600\",\n        id: \"canvas\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Screen, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Screen;\nexport default Screen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/PartnershipExample/GamesSelection/FighterPilot/FighterScreen.js"],"names":["React","useState","useEffect","useRef","Button","Container","Nav","Navbar","NavDropdown","useSound","BrowserRouter","Router","Switch","Route","Link","Redirect","ReactAudioPlayer","Screen","props","canvas","document","getElementById","ctx","getContext","controlPlayer","hasGameStarted","hasGameOver","drawBoarder","fillStyle","fillRect","width","height","clearRect","playerRect","x","y","rectangles","dx","dy","color","drawRect","forEach","rect","update","requestAnimationFrame","ifCursorIsInRect","addEventListener","e","pos","clientX","offsetLeft","clientY","offsetTop","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD,C,CACA;AACA;;AACA,SAASC,MAAT,EAAgBC,SAAhB,EAA0BC,GAA1B,EAA8BC,MAA9B,EAAqCC,WAArC,QAAwD,iBAAxD;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;AACA;AACA;;AACA,OAAO,aAAP;AAGA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,QALF,QAMO,kBANP;AAQA,OAAOC,gBAAP,MAA6B,oBAA7B,C,CAGA;;;;AAMA,MAAMC,MAAM,GAAIC,KAAD,IAAU;AAAA;;AAIvBhB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiB,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACA,UAAMC,GAAG,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAZ,CAFY,CAIZ;;AAEA,QAAIC,aAAa,GAAG,KAApB;AACA,QAAIC,cAAc,GAAG,KAArB,CAPY,CAUZ;;AACA,QAAIC,WAAW,GAAG,KAAlB,CAXY,CAaZ;;AAEA,aAASC,WAAT,GAAsB;AACpBL,MAAAA,GAAG,CAACM,SAAJ,GAAgB,OAAhB;AACAN,MAAAA,GAAG,CAACO,QAAJ,CAAa,CAAb,EAAe,CAAf,EAAiBV,MAAM,CAACW,KAAxB,EAA8BX,MAAM,CAACY,MAArC;AACAT,MAAAA,GAAG,CAACU,SAAJ,CAAc,EAAd,EAAiB,EAAjB,EAAoB,GAApB,EAAwB,GAAxB;AACD;;AAED,QAAIC,UAAU,GAAG;AACfC,MAAAA,CAAC,EAAC,GADa;AAEfC,MAAAA,CAAC,EAAC,GAFa;AAGfL,MAAAA,KAAK,EAAC,EAHS;AAIfC,MAAAA,MAAM,EAAC;AAJQ,KAAjB,CArBY,CA4BZ;;AACA,QAAIK,UAAU,GAAG,CACf;AACEF,MAAAA,CAAC,EAAC,EADJ;AAEEC,MAAAA,CAAC,EAAC,EAFJ;AAGEE,MAAAA,EAAE,EAAC,CAHL;AAIEC,MAAAA,EAAE,EAAC,CAJL;AAKER,MAAAA,KAAK,EAAC,EALR;AAMEC,MAAAA,MAAM,EAAC,EANT;AAOEQ,MAAAA,KAAK,EAAC;AAPR,KADe,EAUf;AACEL,MAAAA,CAAC,EAAC,GADJ;AAEEC,MAAAA,CAAC,EAAC,EAFJ;AAGEE,MAAAA,EAAE,EAAC,CAAC,CAHN;AAIEC,MAAAA,EAAE,EAAC,GAJL;AAKER,MAAAA,KAAK,EAAC,EALR;AAMEC,MAAAA,MAAM,EAAC,EANT;AAOEQ,MAAAA,KAAK,EAAC;AAPR,KAVe,EAmBf;AACEL,MAAAA,CAAC,EAAC,EADJ;AAEEC,MAAAA,CAAC,EAAC,GAFJ;AAGEE,MAAAA,EAAE,EAAC,CAHL;AAIEC,MAAAA,EAAE,EAAC,CAAC,CAJN;AAKER,MAAAA,KAAK,EAAC,EALR;AAMEC,MAAAA,MAAM,EAAC,EANT;AAOEQ,MAAAA,KAAK,EAAC;AAPR,KAnBe,EA4Bf;AACEL,MAAAA,CAAC,EAAC,GADJ;AAEEC,MAAAA,CAAC,EAAC,GAFJ;AAGEE,MAAAA,EAAE,EAAC,CAAC,CAHN;AAIEC,MAAAA,EAAE,EAAC,CAAC,CAJN;AAKER,MAAAA,KAAK,EAAC,GALR;AAMEC,MAAAA,MAAM,EAAC,EANT;AAOEQ,MAAAA,KAAK,EAAC;AAPR,KA5Be,CAAjB,CA7BY,CAoEZ;;AAEA,aAASC,QAAT,GAAmB;AACjB;AACAlB,MAAAA,GAAG,CAACM,SAAJ,GAAgB,SAAhB;AACAN,MAAAA,GAAG,CAACO,QAAJ,CAAaI,UAAU,CAACC,CAAxB,EAA0BD,UAAU,CAACE,CAArC,EAAuCF,UAAU,CAACH,KAAlD,EAAwDG,UAAU,CAACF,MAAnE;AACAK,MAAAA,UAAU,CAACK,OAAX,CAAmBC,IAAI,IAAI;AACzBpB,QAAAA,GAAG,CAACM,SAAJ,GAAgBc,IAAI,CAACH,KAArB;AACAjB,QAAAA,GAAG,CAACO,QAAJ,CAAaa,IAAI,CAACR,CAAlB,EAAoBQ,IAAI,CAACP,CAAzB,EAA2BO,IAAI,CAACZ,KAAhC,EAAsCY,IAAI,CAACX,MAA3C;AACD,OAHD;AAKD;;AAED,aAASY,MAAT,GAAiB;AACfrB,MAAAA,GAAG,CAACU,SAAJ,CAAc,CAAd,EAAgB,CAAhB,EAAkBb,MAAM,CAACW,KAAzB,EAA+BX,MAAM,CAACY,MAAtC;AAEAJ,MAAAA,WAAW;AACXa,MAAAA,QAAQ;AAERI,MAAAA,qBAAqB,CAACD,MAAD,CAArB;AACD,KAxFW,CA0FZ;;;AACAA,IAAAA,MAAM,GA3FM,CA8FZ;;AACA,aAASE,gBAAT,CAA0BX,CAA1B,EAA4BC,CAA5B,EAA8BO,IAA9B,EAAmC;AACjC,aAAOR,CAAC,GAACQ,IAAI,CAACR,CAAP,IAAYA,CAAC,GAACQ,IAAI,CAACR,CAAL,GAAOQ,IAAI,CAACZ,KAA1B,IAAmCK,CAAC,GAACO,IAAI,CAACP,CAA1C,IAA+CA,CAAC,GAACO,IAAI,CAACP,CAAL,GAAOO,IAAI,CAACX,MAApE;AACD;;AAEDZ,IAAAA,MAAM,CAAC2B,gBAAP,CAAwB,WAAxB,EAAqCC,CAAC,IAAI;AAExC;AACA,YAAMC,GAAG,GAAG;AACVd,QAAAA,CAAC,EAAEa,CAAC,CAACE,OAAF,GAAY9B,MAAM,CAAC+B,UADZ;AAEVf,QAAAA,CAAC,EAAEY,CAAC,CAACI,OAAF,GAAYhC,MAAM,CAACiC;AAFZ,OAAZ,CAHwC,CAQxC;;AACA,UAAGP,gBAAgB,CAACG,GAAG,CAACd,CAAL,EAAOc,GAAG,CAACb,CAAX,EAAaF,UAAb,CAAnB,EAA4C;AAC1CR,QAAAA,cAAc,GAAG,IAAjB;AACAD,QAAAA,aAAa,GAAG,IAAhB;AACD;;AAED6B,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACd,CAAhB,EAAkB,MAAlB;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACb,CAAhB,EAAkB,MAAlB;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY7B,cAAZ,EAA2B,MAA3B;AACA4B,MAAAA,OAAO,CAACC,GAAR,CAAYrB,UAAZ,EAAuB,MAAvB;AAKD,KAtBD;AAwBAd,IAAAA,MAAM,CAAC2B,gBAAP,CAAwB,WAAxB,EAAoCC,CAAC,IAAI;AACvC,UAAGvB,aAAa,IAAI,CAACE,WAArB,EAAiC;AAC/B;AACA,cAAMsB,GAAG,GAAG;AACVd,UAAAA,CAAC,EAAEa,CAAC,CAACE,OAAF,GAAY9B,MAAM,CAAC+B,UADZ;AAEVf,UAAAA,CAAC,EAAEY,CAAC,CAACI,OAAF,GAAYhC,MAAM,CAACiC;AAFZ,SAAZ;AAKAnB,QAAAA,UAAU,CAACC,CAAX,GAAec,GAAG,CAACd,CAAJ,GAAQ,EAAvB;AACAD,QAAAA,UAAU,CAACE,CAAX,GAAea,GAAG,CAACb,CAAJ,GAAQ,EAAvB;AACD;AACF,KAXD;AAaAhB,IAAAA,MAAM,CAAC2B,gBAAP,CAAwB,WAAxB,EAAoC,MAAK;AACvCtB,MAAAA,aAAa,GAAG,KAAhB;AACD,KAFD;AAID,GA5IM,EA4IJ,EA5II,CAAT;AAkJA,sBACE;AAAA,4BAEJ;AAAA,+CACa;AAAA;AAAA;AAAA;AAAA,cADb,eAEA;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAoB,QAAA,MAAM,EAAC,KAA3B;AAAiC,QAAA,EAAE,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFI,eAOJ;AAAA;AAAA;AAAA;AAAA,YAPI;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjKD;;GAAMP,M;;KAAAA,M;AAmKN,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\n// import Bird from './components/Bird'\n// import Obstacles from './components/Obstacles'\nimport { Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport useSound from 'use-sound';\n//\n// import lazer from './assets/Lazer.wav';\n// import ohno from './assets/troy_oh_no.mp4';\nimport './style.css';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport ReactAudioPlayer from 'react-audio-player';\n\n\n// Hook\n\n\n\n\n\nconst Screen = (props) =>{\n\n\n\n  useEffect(() => {\n      const canvas = document.getElementById(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n\n      // Global Varabales\n\n      let controlPlayer = false;\n      let hasGameStarted = false;\n\n\n      // Prevent game from working whilst page reloads\n      let hasGameOver = false;\n\n      // Canvas black boarder\n\n      function drawBoarder(){\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(0,0,canvas.width,canvas.height);\n        ctx.clearRect(50,50,500,500);\n      }\n\n      let playerRect = {\n        x:275,\n        y:275,\n        width:50,\n        height:50,\n      }\n\n      // Game Elements\n      let rectangles = [\n        {\n          x:75,\n          y:75,\n          dx:5,\n          dy:4,\n          width:75,\n          height:75,\n          color:\"#000099\",\n        },\n        {\n          x:400,\n          y:75,\n          dx:-5,\n          dy:5.5,\n          width:80,\n          height:60,\n          color:\"#000099\",\n        },\n        {\n          x:75,\n          y:445,\n          dx:5,\n          dy:-5,\n          width:40,\n          height:80,\n          color:\"#000099\",\n        },\n        {\n          x:420,\n          y:450,\n          dx:-5,\n          dy:-5,\n          width:130,\n          height:25,\n          color:\"#000099\",\n        },\n      ]\n\n      // Render rectangles to canvas\n\n      function drawRect(){\n        // Draw player rect first\n        ctx.fillStyle = \"#901234\";\n        ctx.fillRect(playerRect.x,playerRect.y,playerRect.width,playerRect.height);\n        rectangles.forEach(rect => {\n          ctx.fillStyle = rect.color;\n          ctx.fillRect(rect.x,rect.y,rect.width,rect.height);\n        });\n\n      }\n\n      function update(){\n        ctx.clearRect(0,0,canvas.width,canvas.height);\n\n        drawBoarder();\n        drawRect();\n\n        requestAnimationFrame(update);\n      }\n\n      // call update methord on initial document load\n      update();\n\n\n      // Returns true if collision\n      function ifCursorIsInRect(x,y,rect){\n        return(x>rect.x && x<rect.x+rect.width && y>rect.y && y<rect.y+rect.height);\n      }\n\n      canvas.addEventListener(\"mousedown\", e => {\n\n        // get x & y coordinates in relation to the canvas\n        const pos = {\n          x: e.clientX - canvas.offsetLeft,\n          y: e.clientY - canvas.offsetTop,\n        };\n\n        // See if they clicked on red square\n        if(ifCursorIsInRect(pos.x,pos.y,playerRect)){\n          hasGameStarted = true;\n          controlPlayer = true;\n        }\n\n        console.log(pos.x,\"down\")\n        console.log(pos.y,\"down\")\n        console.log(hasGameStarted,\"down\")\n        console.log(playerRect,\"down\")\n\n\n\n\n      })\n\n      canvas.addEventListener(\"mousemove\",e => {\n        if(controlPlayer && !hasGameOver){\n          // get x & y coordinates in relation to the canvas\n          const pos = {\n            x: e.clientX - canvas.offsetLeft,\n            y: e.clientY - canvas.offsetTop,\n          };\n\n          playerRect.x = pos.x - 25;\n          playerRect.y = pos.y - 25;\n        }\n      })\n\n      canvas.addEventListener(\"onmouseup\",() =>{\n        controlPlayer = false;\n      })\n\n    }, []);\n\n\n\n\n\n  return (\n    <div >\n\n<center>\nFighter Pilot<br/>\n<canvas width=\"600\" height=\"600\" id=\"canvas\"> </canvas>\n\n</center>\n<br/>\n    </div>\n  );\n}\n\nexport default Screen;\n"]},"metadata":{},"sourceType":"module"}