{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/treasure-blox/src/Connection.js\",\n    _s = $RefreshSig$();\n\n// App.js\nimport React from 'react';\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Connection(props) {\n  _s();\n\n  const wallet = useWallet();\n\n  const connectWallet = async e => {\n    e.preventDefault();\n    await wallet.connect();\n  };\n\n  const handleClick = async e => {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      className: \"customButton enableEthereumButton\",\n      children: \"cccc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this), this.state.isToggleOn ? 'ON' : 'OFF', /*#__PURE__*/_jsxDEV(Button, {\n      onClick: connectWallet,\n      className: \"customButton enableEthereumButton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), props.accounts]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n} // Wrap everything in <UseWalletProvider />\n\n\n_s(Connection, \"i+/qxb0flJRE8MgvazOGMkNRtsk=\", false, function () {\n  return [useWallet];\n});\n\n_c = Connection;\nexport default (() => /*#__PURE__*/_jsxDEV(UseWalletProvider, {\n  chainId: 1337,\n  connectors: {\n    // This is how connectors get configured\n    provided: {\n      provider: window.cleanEthereum\n    }\n  },\n  children: /*#__PURE__*/_jsxDEV(Connection, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 3\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"Connection\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/treasure-blox/src/Connection.js"],"names":["React","useWallet","UseWalletProvider","Button","Connection","props","wallet","connectWallet","e","preventDefault","connect","handleClick","setState","prevState","isToggleOn","state","accounts","provided","provider","window","cleanEthereum"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,YAA7C;AACA,SAASC,MAAT,QAAuB,iBAAvB;;;AAMA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;;AAIA,QAAMM,aAAa,GAAG,MAAMC,CAAN,IAAY;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMH,MAAM,CAACI,OAAP,EAAN;AAGD,GALD;;AAOA,QAAMC,WAAW,GAAG,MAAMH,CAAN,IAAa;AAC/B,SAAKI,QAAL,CAAcC,SAAS,KAAK;AAC1BC,MAAAA,UAAU,EAAE,CAACD,SAAS,CAACC;AADG,KAAL,CAAvB;AAGD,GAJD;;AAaA,sBACE;AAAA,4BAEJ,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEH,WAAjB;AAA8B,MAAA,SAAS,EAAC,mCAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFI,EAGH,KAAKI,KAAL,CAAWD,UAAX,GAAwB,IAAxB,GAA+B,KAH5B,eAKA,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEP,aAAjB;AAAgC,MAAA,SAAS,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YALA,EAMCF,KAAK,CAACW,QANP;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,C,CAGD;;;GAtCSZ,U;UACQH,S;;;KADRG,U;AAuCT,gBAAe,mBACb,QAAC,iBAAD;AACE,EAAA,OAAO,EAAE,IADX;AAEE,EAAA,UAAU,EAAE;AACV;AACAa,IAAAA,QAAQ,EAAE;AAACC,MAAAA,QAAQ,EAAEC,MAAM,CAACC;AAAlB;AAFA,GAFd;AAAA,yBAQE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,QADF","sourcesContent":["// App.js\n\nimport React from 'react'\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport { Button } from 'react-bootstrap';\n\n\n\n\n\nfunction Connection(props) {\n  const wallet = useWallet()\n\n\n\n  const connectWallet = async(e) => {\n    e.preventDefault()\n    await wallet.connect()\n\n\n  }\n\n  const handleClick = async(e) =>  {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  };\n\n\n\n\n\n\n\n\n  return (\n    <div>\n\n<Button onClick={handleClick} className=\"customButton enableEthereumButton\">cccc</Button>\n{this.state.isToggleOn ? 'ON' : 'OFF'}\n\n    <Button onClick={connectWallet} className=\"customButton enableEthereumButton\"></Button>\n    {props.accounts}\n    </div>\n  )\n}\n\n\n// Wrap everything in <UseWalletProvider />\nexport default () => (\n  <UseWalletProvider\n    chainId={1337}\n    connectors={{\n      // This is how connectors get configured\n      provided: {provider: window.cleanEthereum},\n    }}\n\n  >\n    <Connection />\n  </UseWalletProvider>\n)\n"]},"metadata":{},"sourceType":"module"}