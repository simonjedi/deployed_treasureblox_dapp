{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jedi/Desktop/Education/REACT/TreasureHuntDAPP_React/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jedi/Desktop/Education/REACT/TreasureHuntDAPP_React/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/jedi/Desktop/Education/REACT/TreasureHuntDAPP_React/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// App.js\nimport React,{useState,useEffect}from'react';import{useWallet,UseWalletProvider}from'use-wallet';import{Button}from'react-bootstrap';import MyNav from\"./MyNav\";import App from\"./App\";import getWeb3 from\"./getWeb3\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Connection=function Connection(props){var wallet=useWallet();var _useState=useState('Connect Wallet'),_useState2=_slicedToArray(_useState,2),firstPartAddress=_useState2[0],setFirstPartAddress=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),secondPartAddress=_useState4[0],setSecondPartAddress=_useState4[1];useEffect(function(){var init=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var web3,accounts,usersAccount,stringOfUsersAccount;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getWeb3();case 2:web3=_context.sent;_context.next=5;return web3.eth.getAccounts();case 5:accounts=_context.sent;usersAccount=accounts[0];stringOfUsersAccount=new String(usersAccount);console.log(stringOfUsersAccount.slice(0,4));// \"01\"\nsetFirstPartAddress(stringOfUsersAccount.slice(0,5));setSecondPartAddress('____'+stringOfUsersAccount.slice(27,32));case 11:case\"end\":return _context.stop();}}},_callee);}));return function init(){return _ref.apply(this,arguments);};}();init();});var connectWallet=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var usersAccount,stringOfUsersAccount;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return wallet.connect();case 2:usersAccount=props.accounts;stringOfUsersAccount=new String(usersAccount);console.log(stringOfUsersAccount.slice(0,4));// \"01\"\nsetFirstPartAddress('Welcome');setSecondPartAddress('');case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function connectWallet(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Button,{onClick:connectWallet,className:\"customButton enableEthereumButton\",children:[firstPartAddress,secondPartAddress]})});};// Wrap everything in <UseWalletProvider />\nexport default(function(props){return/*#__PURE__*/_jsx(UseWalletProvider,{chainId:1337,connectors:{// This is how connectors get configured\nprovided:{provider:window.cleanEthereum}},children:/*#__PURE__*/_jsx(Connection,{accounts:props.accounts})});});","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/TreasureHuntDAPP_React/src/Connection.js"],"names":["React","useState","useEffect","useWallet","UseWalletProvider","Button","MyNav","App","getWeb3","Connection","props","wallet","firstPartAddress","setFirstPartAddress","secondPartAddress","setSecondPartAddress","init","web3","eth","getAccounts","accounts","usersAccount","stringOfUsersAccount","String","console","log","slice","connectWallet","e","connect","provided","provider","window","cleanEthereum"],"mappings":"oaAAA;AAEA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,OAASC,SAAT,CAAoBC,iBAApB,KAA6C,YAA7C,CACA,OAASC,MAAT,KAAuB,iBAAvB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,C,wFAGA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAY,CAE7B,GAAMC,CAAAA,MAAM,CAAGR,SAAS,EAAxB,CACA,cAAgDF,QAAQ,CAAC,gBAAD,CAAxD,wCAAOW,gBAAP,eAAyBC,mBAAzB,eACA,eAAkDZ,QAAQ,CAAC,EAAD,CAA1D,yCAAOa,iBAAP,eAA0BC,oBAA1B,eAEAb,SAAS,CAAC,UAAM,CACb,GAAMc,CAAAA,IAAI,0FAAG,6MACQR,CAAAA,OAAO,EADf,QACLS,IADK,qCAEYA,CAAAA,IAAI,CAACC,GAAL,CAASC,WAAT,EAFZ,QAELC,QAFK,eAGLC,YAHK,CAGUD,QAAQ,CAAC,CAAD,CAHlB,CAILE,oBAJK,CAIkB,GAAIC,CAAAA,MAAJ,CAAWF,YAAX,CAJlB,CAKXG,OAAO,CAACC,GAAR,CAAYH,oBAAoB,CAACI,KAArB,CAA2B,CAA3B,CAA8B,CAA9B,CAAZ,EAA+C;AAC/Cb,mBAAmB,CAACS,oBAAoB,CAACI,KAArB,CAA2B,CAA3B,CAA8B,CAA9B,CAAD,CAAnB,CACAX,oBAAoB,CAAC,OAAOO,oBAAoB,CAACI,KAArB,CAA2B,EAA3B,CAA+B,EAA/B,CAAR,CAApB,CAPW,uDAAH,kBAAJV,CAAAA,IAAI,0CAAV,CAUAA,IAAI,GACL,CAZO,CAAT,CAcA,GAAMW,CAAAA,aAAa,2FAAG,kBAAMC,CAAN,mLACdjB,CAAAA,MAAM,CAACkB,OAAP,EADc,QAEdR,YAFc,CAECX,KAAK,CAACU,QAFP,CAGdE,oBAHc,CAGS,GAAIC,CAAAA,MAAJ,CAAWF,YAAX,CAHT,CAIpBG,OAAO,CAACC,GAAR,CAAYH,oBAAoB,CAACI,KAArB,CAA2B,CAA3B,CAA8B,CAA9B,CAAZ,EAA+C;AAC/Cb,mBAAmB,CAAC,SAAD,CAAnB,CACAE,oBAAoB,CAAC,EAAD,CAApB,CANoB,wDAAH,kBAAbY,CAAAA,aAAa,6CAAnB,CASA,mBACE,kCACE,MAAC,MAAD,EAAQ,OAAO,CAAEA,aAAjB,CAAgC,SAAS,CAAC,mCAA1C,WAA+Ef,gBAA/E,CAAiGE,iBAAjG,GADF,EADF,CAKD,CAlCD,CAoCA;AACA,eAAe,SAACJ,KAAD,qBACb,KAAC,iBAAD,EACE,OAAO,CAAE,IADX,CAEE,UAAU,CAAE,CACV;AACAoB,QAAQ,CAAE,CAACC,QAAQ,CAAEC,MAAM,CAACC,aAAlB,CAFA,CAFd,uBAOE,KAAC,UAAD,EAAY,QAAQ,CAAEvB,KAAK,CAACU,QAA5B,EAPF,EADa,EAAf","sourcesContent":["// App.js\n\nimport React, {useState, useEffect} from 'react'\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport { Button } from 'react-bootstrap';\n\nimport MyNav from \"./MyNav\";\nimport App from \"./App\";\nimport getWeb3 from \"./getWeb3\";\n\n\nconst Connection = (props) =>  {\n\n  const wallet = useWallet()\n  const [firstPartAddress, setFirstPartAddress] = useState('Connect Wallet');\n  const [secondPartAddress, setSecondPartAddress] = useState('');\n\n  useEffect(() => {\n     const init = async() => {\n       const web3 = await getWeb3();\n       const accounts = await web3.eth.getAccounts();\n       const usersAccount = accounts[0];\n       const stringOfUsersAccount = new String(usersAccount)\n       console.log(stringOfUsersAccount.slice(0, 4)); // \"01\"\n       setFirstPartAddress(stringOfUsersAccount.slice(0, 5));\n       setSecondPartAddress('____'+stringOfUsersAccount.slice(27, 32));\n\n     }\n     init()\n   });\n\n  const connectWallet = async(e) => {\n    await wallet.connect()\n    const usersAccount = props.accounts;\n    const stringOfUsersAccount = new String(usersAccount)\n    console.log(stringOfUsersAccount.slice(0, 4)); // \"01\"\n    setFirstPartAddress('Welcome');\n    setSecondPartAddress('');\n  }\n\n  return(\n    <div>\n      <Button onClick={connectWallet} className=\"customButton enableEthereumButton\">{firstPartAddress}{secondPartAddress}</Button>\n    </div>\n  )\n}\n\n// Wrap everything in <UseWalletProvider />\nexport default (props) => (\n  <UseWalletProvider\n    chainId={1337}\n    connectors={{\n      // This is how connectors get configured\n      provided: {provider: window.cleanEthereum},\n    }}>\n\n    <Connection accounts={props.accounts}/>\n\n\n\n  </UseWalletProvider>\n)\n"]},"metadata":{},"sourceType":"module"}