{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/BloxEscape/Screen.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Bird from './components/Bird';\nimport Obstacles from './components/Obstacles';\nimport './App.css';\nimport { Button, Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport Game2 from '../Game2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\ndocument.body.onkeyup = function (e) {\n  if (e.keyCode == 32) {\n    console.log(\"SPACE\");\n  }\n}; // Hook\n\n\nfunction useWindowSize() {\n  _s();\n\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    } // Add event listener\n\n\n    window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n_s(useWindowSize, \"WMqaMVAPr0u8CJVTsAIdEuYrbbM=\");\n\nconst Screen = props => {\n  _s2();\n\n  const [play, setPlay] = useState(false);\n\n  const handlePlay = async () => {\n    setPlay(true);\n    setTimeout(function () {}, 1);\n  };\n\n  const {\n    width,\n    height\n  } = useWindowSize();\n  const screenWidth = useWindowSize().width;\n  const screenHeight = useWindowSize().height;\n  const birdLeft = screenWidth / 2;\n  const [birdBottom, setBirdBottom] = useState(500);\n  const [obstaclesLeft, setObstaclesLeft] = useState(useWindowSize().width + 1);\n  const [obstaclesLeftTwo, setObstaclesLeftTwo] = useState(useWindowSize().width + useWindowSize().width / 2 + 30);\n  const [obstaclesNegHeight, setObstaclesNegHeight] = useState(0);\n  const [obstaclesNegHeightTwo, setObstaclesNegHeightTwo] = useState(0);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const gravity = 3;\n  let obstacleWidth = 60;\n  let obstacleHeight = 300;\n  let gap = 200;\n  let gameTimerId;\n  let obstaclesTimerId;\n  let obstaclesTimerIdTwo; //start bird falling\n\n  useEffect(() => {\n    if (birdBottom > 0) {\n      gameTimerId = setInterval(() => {\n        setBirdBottom(birdBottom => birdBottom - gravity);\n      }, 30);\n      return () => {\n        clearInterval(gameTimerId);\n      };\n    } //if i dont have birdBottom as a dependecy, it wont stop\n\n  }, [birdBottom]);\n  console.log(birdBottom); // const jump = () => {\n  //   if (!isGameOver && (birdBottom < screenHeight)) {\n  //     setBirdBottom(birdBottom => birdBottom + 50)\n  //     console.log('jumped')\n  //   }\n  // }\n\n  const jump = async () => {\n    if (!isGameOver && birdBottom < screenHeight) {\n      setBirdBottom(birdBottom => birdBottom + 50);\n      console.log('jumped');\n    }\n\n    setTimeout(function () {}, 1);\n  }; //start first obstacle\n\n\n  useEffect(() => {\n    if (obstaclesLeft > -60) {\n      obstaclesTimerId = setInterval(() => {\n        setObstaclesLeft(obstaclesLeft => obstaclesLeft - 5);\n      }, 10);\n      return () => {\n        clearInterval(obstaclesTimerId);\n      };\n    } else {\n      setScore(score => score + 1);\n      setObstaclesLeft(screenWidth);\n      setObstaclesNegHeight(-Math.random() * 150);\n    }\n  }, [obstaclesLeft]); //start second obstacle\n\n  useEffect(() => {\n    if (obstaclesLeftTwo > -60) {\n      obstaclesTimerIdTwo = setInterval(() => {\n        setObstaclesLeftTwo(obstaclesLeftTwo => obstaclesLeftTwo - 5);\n      }, 20);\n      return () => {\n        clearInterval(obstaclesTimerIdTwo);\n      };\n    } else {\n      setScore(score => score + 1);\n      setObstaclesLeftTwo(screenWidth);\n      setObstaclesNegHeightTwo(-Math.random() * 100);\n    }\n  }, [obstaclesLeftTwo]); //check for collisions\n\n  useEffect(() => {\n    console.log(obstaclesLeft);\n    console.log(screenWidth / 2);\n    console.log(obstaclesLeft > screenWidth / 2);\n\n    if ((birdBottom < obstaclesNegHeight + obstacleHeight + 30 || birdBottom > obstaclesNegHeight + obstacleHeight + gap - 30) && obstaclesLeft > screenWidth / 2 - 30 && obstaclesLeft < screenWidth / 2 + 30 || (birdBottom < obstaclesNegHeightTwo + obstacleHeight + 30 || birdBottom > obstaclesNegHeightTwo + obstacleHeight + gap - 30) && obstaclesLeftTwo > screenWidth / 2 - 30 && obstaclesLeftTwo < screenWidth / 2 + 30) {\n      console.log('game over');\n      gameOver();\n    }\n  });\n  useEffect(() => {\n    if (score > 40) {\n      console.log('more');\n      more();\n    }\n  });\n\n  const gameOver = () => {\n    clearInterval(gameTimerId);\n    clearInterval(obstaclesTimerId);\n    clearInterval(obstaclesTimerIdTwo);\n    setIsGameOver(true);\n  };\n\n  const more = () => {\n    clearInterval(gameTimerId);\n    clearInterval(obstaclesTimerId);\n    clearInterval(obstaclesTimerIdTwo);\n    setIsGameOver(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: play ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"mt-5\",\n        fluid: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"siteTitle\",\n            style: {\n              fontSize: '30px'\n            },\n            children: [\"Your Score \", score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 9\n          }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"siteTitle\",\n            style: {\n              fontSize: '30px'\n            },\n            children: \"You Scored Bad Luck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(Bird, {\n            birdBottom: birdBottom,\n            birdLeft: birdLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Obstacles, {\n            color: 'yellow',\n            obstacleWidth: obstacleWidth,\n            obstacleHeight: obstacleHeight,\n            randomBottom: obstaclesNegHeight,\n            gap: gap,\n            obstaclesLeft: obstaclesLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Obstacles, {\n            color: 'green',\n            obstacleWidth: obstacleWidth,\n            obstacleHeight: obstacleHeight,\n            randomBottom: obstaclesNegHeightTwo,\n            gap: gap,\n            obstaclesLeft: obstaclesLeftTwo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"customButton\",\n          onClick: jump,\n          children: \"Click To Jump\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"customButton\",\n        onClick: handlePlay,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Screen, \"bpGuVuW7g6I5+S4NLL15iBoe0Xc=\", false, function () {\n  return [useWindowSize, useWindowSize, useWindowSize, useWindowSize, useWindowSize, useWindowSize];\n});\n\n_c = Screen;\nexport default Screen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/BloxEscape/Screen.js"],"names":["React","useEffect","useState","Bird","Obstacles","Button","Container","Nav","Navbar","NavDropdown","Game2","document","body","onkeyup","e","keyCode","console","log","useWindowSize","windowSize","setWindowSize","width","undefined","height","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Screen","props","play","setPlay","handlePlay","setTimeout","screenWidth","screenHeight","birdLeft","birdBottom","setBirdBottom","obstaclesLeft","setObstaclesLeft","obstaclesLeftTwo","setObstaclesLeftTwo","obstaclesNegHeight","setObstaclesNegHeight","obstaclesNegHeightTwo","setObstaclesNegHeightTwo","isGameOver","setIsGameOver","score","setScore","gravity","obstacleWidth","obstacleHeight","gap","gameTimerId","obstaclesTimerId","obstaclesTimerIdTwo","setInterval","clearInterval","jump","Math","random","gameOver","more","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react';\nimport Bird from './components/Bird'\nimport Obstacles from './components/Obstacles'\nimport './App.css';\nimport { Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport Game2 from '../Game2';\n\n\ndocument.body.onkeyup = function(e){\n    if(e.keyCode == 32){\n        console.log(\"SPACE\")\n    }\n}\n\n// Hook\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n\n\n\n\nconst Screen = (props) =>{\n\n  const [play, setPlay]= useState(false)\n\n  const handlePlay = async() => {\n    setPlay(true);\n    setTimeout(function(){\n    },1);\n  }\n\n\n  const { width, height } = useWindowSize();\n\n\n  const screenWidth = useWindowSize().width;\n  const screenHeight = useWindowSize().height;\n  const birdLeft = screenWidth / 2\n\n  const [birdBottom, setBirdBottom]= useState(500)\n\n\n  const [obstaclesLeft, setObstaclesLeft]= useState(useWindowSize().width+1)\n\n  const [obstaclesLeftTwo, setObstaclesLeftTwo]= useState(useWindowSize().width + useWindowSize().width/2 + 30)\n\n\n  const [obstaclesNegHeight, setObstaclesNegHeight]= useState(0)\n  const [obstaclesNegHeightTwo, setObstaclesNegHeightTwo]= useState(0)\n\n  const [isGameOver, setIsGameOver]= useState(false)\n  const [score, setScore]= useState(0)\n\n  const gravity = 3\n  let obstacleWidth = 60\n  let obstacleHeight = 300\n  let gap = 200\n  let gameTimerId\n  let obstaclesTimerId\n  let obstaclesTimerIdTwo\n\n\n\n//start bird falling\n  useEffect(() => {\n\n    if (birdBottom > 0) {\n      gameTimerId = setInterval(() => {\n        setBirdBottom(birdBottom => birdBottom - gravity)\n      },30)\n\n      return () => {\n        clearInterval(gameTimerId)\n      }\n    }\n    //if i dont have birdBottom as a dependecy, it wont stop\n  }, [birdBottom])\n  console.log(birdBottom)\n\n  // const jump = () => {\n  //   if (!isGameOver && (birdBottom < screenHeight)) {\n  //     setBirdBottom(birdBottom => birdBottom + 50)\n  //     console.log('jumped')\n  //   }\n  // }\n\n\n\n  const jump = async() => {\n\n    if (!isGameOver && (birdBottom < screenHeight)) {\n      setBirdBottom(birdBottom => birdBottom + 50)\n      console.log('jumped')\n    }\n    setTimeout(function(){\n    },1);\n  }\n\n  //start first obstacle\n  useEffect(() => {\n    if (obstaclesLeft > -60) {\n      obstaclesTimerId = setInterval(() => {\n        setObstaclesLeft(obstaclesLeft => obstaclesLeft - 5)\n      }, 10)\n      return () => {\n        clearInterval(obstaclesTimerId)\n      }\n    } else {\n      setScore(score => score +1)\n      setObstaclesLeft(screenWidth)\n      setObstaclesNegHeight( - Math.random() * 150)\n    }\n  }, [obstaclesLeft])\n\n  //start second obstacle\n  useEffect(() => {\n    if (obstaclesLeftTwo > -60) {\n      obstaclesTimerIdTwo = setInterval(() => {\n        setObstaclesLeftTwo(obstaclesLeftTwo => obstaclesLeftTwo - 5)\n      }, 20)\n        return () => {\n          clearInterval(obstaclesTimerIdTwo)\n        }\n      } else {\n          setScore(score => score +1)\n          setObstaclesLeftTwo(screenWidth)\n          setObstaclesNegHeightTwo( - Math.random() * 100)\n        }\n  }, [obstaclesLeftTwo])\n\n    //check for collisions\n    useEffect(() => {\n      console.log(obstaclesLeft)\n      console.log(screenWidth/2)\n      console.log(obstaclesLeft > screenWidth/2)\n      if (\n        ((birdBottom < (obstaclesNegHeight + obstacleHeight + 30) ||\n        birdBottom > (obstaclesNegHeight + obstacleHeight + gap -30)) &&\n        (obstaclesLeft > screenWidth/2 -30 && obstaclesLeft < screenWidth/2 + 30 )\n        )\n        ||\n        ((birdBottom < (obstaclesNegHeightTwo + obstacleHeight + 30) ||\n        birdBottom > (obstaclesNegHeightTwo + obstacleHeight + gap -30)) &&\n        (obstaclesLeftTwo > screenWidth/2 -30 && obstaclesLeftTwo < screenWidth/2 + 30 )\n        )\n        )\n        {\n        console.log('game over')\n        gameOver()\n      }\n    })\n\n    useEffect(() => {\n      if (score > 40){\n        console.log('more')\n        more()\n      }\n    })\n\n    const gameOver = () => {\n      clearInterval(gameTimerId)\n      clearInterval(obstaclesTimerId)\n      clearInterval(obstaclesTimerIdTwo)\n      setIsGameOver(true)\n    }\n\n    const more = () => {\n      clearInterval(gameTimerId)\n      clearInterval(obstaclesTimerId)\n      clearInterval(obstaclesTimerIdTwo)\n      setIsGameOver(true)\n\n    }\n\n  return (\n\n    <div >\n    {play?(\n      <div>\n      <Container className='mt-5' fluid=\"md\">\n\n      <div>\n        <div className=\"siteTitle\" style={{fontSize: '30px'}}>Your Score {score}</div>\n\n        {isGameOver && <div className=\"siteTitle\" style={{fontSize: '30px'}}>You Scored Bad Luck</div>}\n\n\n\n        <Bird\n          birdBottom = {birdBottom}\n          birdLeft = {birdLeft}\n        />\n\n        <Obstacles\n          color={'yellow'}\n          obstacleWidth = {obstacleWidth}\n          obstacleHeight = {obstacleHeight}\n          randomBottom = {obstaclesNegHeight}\n          gap = {gap}\n          obstaclesLeft = {obstaclesLeft}\n        />\n\n        <Obstacles\n          color={'green'}\n          obstacleWidth = {obstacleWidth}\n          obstacleHeight = {obstacleHeight}\n          randomBottom = {obstaclesNegHeightTwo}\n          gap = {gap}\n          obstaclesLeft = {obstaclesLeftTwo}\n        />\n\n\n      </div>\n      <Button className=\"customButton\" onClick={jump}>Click To Jump</Button>\n      <br/>\n      </Container>\n      </div>\n    ):(\n\n      <div>\n      <Button className=\"customButton\" onClick={handlePlay}>Start</Button>\n      </div>\n\n    )}\n\n\n    </div>\n  );\n}\n\nexport default Screen;\n"]},"metadata":{},"sourceType":"module"}