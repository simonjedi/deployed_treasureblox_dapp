{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/MineGame/BloxMine/Cell.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useSound from 'use-sound';\nimport boopSfx from '../assets/boop.mp3';\nimport plungerSfx from '../assets/plunger.mp3';\nimport biteSfx from '../assets/bite.mp3';\nimport troy_wrong from '../assets/Troy_oh_no.mp4';\nimport troy_success from '../assets/Troy_you_did_it.mp4';\nimport ReactAudioPlayer from 'react-audio-player';\nimport blox from '../assets/blox.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cell({\n  details,\n  updateFlag,\n  revealcell\n}) {\n  _s();\n\n  // Adding three sounds\n  // Adding three sounds\n  const [playOne] = useSound(plungerSfx, {\n    volume: 5.6\n  });\n  const [playTwo] = useSound(boopSfx, {\n    volume: 10.5\n  });\n  const [playThree] = useSound(biteSfx, {\n    volume: 10.5\n  });\n  const [playFour] = useSound(troy_wrong, {\n    volume: 10.5\n  });\n  const [playFive] = useSound(troy_success, {\n    volume: 10.5\n  });\n  const style = {\n    cellStyle: {\n      width: 45,\n      height: 45,\n      backgroundColor: details.revealed && details.value !== 0 ? details.value === 'X' ? 'red' : ' #00226d' : details.revealed && details.value === 0 ? '#00226f' : '#000',\n      opacity: '0.8',\n      border: '2px solid white',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontSize: '20px',\n      cursor: 'pointer',\n      color: 'cyan',\n      fontWeight: '1000'\n    }\n  }; // Playing Sound on differents Clicks\n\n  const click = () => {\n    if (details.value === 'X') {\n      playTwo();\n      playFour();\n    } else {\n      playOne();\n      playFive();\n    } // calling revealcell for specific cell x and y\n\n\n    revealcell(details.x, details.y);\n  }; // Right Click Function\n\n\n  const rightclick = e => {\n    updateFlag(e, details.x, details.y);\n    playThree();\n  }; // rendering the cell component and showing the different values on right and left clicks\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.cellStyle,\n    onClick: click,\n    onContextMenu: rightclick,\n    children: !details.revealed && details.flagged ? \"ğŸš©\" : details.revealed && details.value !== 0 ? details.value === \"X\" ? \"ğŸ’£\" : details.value : /*#__PURE__*/_jsxDEV(\"img\", {\n      width: \"15px\",\n      height: \"15px\",\n      src: blox,\n      alt: \"blox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cell, \"fHMAu3XPq/ZVQtiglXpGN/vJ6GY=\", false, function () {\n  return [useSound, useSound, useSound, useSound, useSound];\n});\n\n_c = Cell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/MineGame/BloxMine/Cell.js"],"names":["React","useSound","boopSfx","plungerSfx","biteSfx","troy_wrong","troy_success","ReactAudioPlayer","blox","Cell","details","updateFlag","revealcell","playOne","volume","playTwo","playThree","playFour","playFive","style","cellStyle","width","height","backgroundColor","revealed","value","opacity","border","display","justifyContent","alignItems","fontSize","cursor","color","fontWeight","click","x","y","rightclick","e","flagged"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAGA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAGA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA,OAAD;AAASC,EAAAA,UAAT;AAAoBC,EAAAA;AAApB,CAAd,EAA+C;AAAA;;AAC5D;AACA;AACE,QAAM,CAACC,OAAD,IAAUZ,QAAQ,CAACE,UAAD,EAAY;AAACW,IAAAA,MAAM,EAAC;AAAR,GAAZ,CAAxB;AACA,QAAM,CAACC,OAAD,IAAUd,QAAQ,CAACC,OAAD,EAAS;AAACY,IAAAA,MAAM,EAAC;AAAR,GAAT,CAAxB;AACA,QAAM,CAACE,SAAD,IAAYf,QAAQ,CAACG,OAAD,EAAS;AAACU,IAAAA,MAAM,EAAC;AAAR,GAAT,CAA1B;AACA,QAAM,CAACG,QAAD,IAAWhB,QAAQ,CAACI,UAAD,EAAY;AAACS,IAAAA,MAAM,EAAC;AAAR,GAAZ,CAAzB;AACA,QAAM,CAACI,QAAD,IAAWjB,QAAQ,CAACK,YAAD,EAAc;AAACQ,IAAAA,MAAM,EAAC;AAAR,GAAd,CAAzB;AAEA,QAAMK,KAAK,GAAC;AACRC,IAAAA,SAAS,EAAC;AACNC,MAAAA,KAAK,EAAC,EADA;AAENC,MAAAA,MAAM,EAAC,EAFD;AAGNC,MAAAA,eAAe,EAACb,OAAO,CAACc,QAAR,IAAoBd,OAAO,CAACe,KAAR,KAAgB,CAApC,GAAsCf,OAAO,CAACe,KAAR,KAAgB,GAAhB,GAAoB,KAApB,GAA0B,UAAhE,GAA2Ef,OAAO,CAACc,QAAR,IAAkBd,OAAO,CAACe,KAAR,KAAgB,CAAlC,GAAoC,SAApC,GAA8C,MAHnI;AAINC,MAAAA,OAAO,EAAC,KAJF;AAKNC,MAAAA,MAAM,EAAC,iBALD;AAMNC,MAAAA,OAAO,EAAC,MANF;AAONC,MAAAA,cAAc,EAAC,QAPT;AAQNC,MAAAA,UAAU,EAAC,QARL;AASNC,MAAAA,QAAQ,EAAC,MATH;AAUNC,MAAAA,MAAM,EAAC,SAVD;AAWNC,MAAAA,KAAK,EAAC,MAXA;AAYNC,MAAAA,UAAU,EAAC;AAZL;AADF,GAAZ,CAT0D,CA0B1D;;AAEA,QAAMC,KAAK,GAAC,MAAI;AACZ,QAAGzB,OAAO,CAACe,KAAR,KAAgB,GAAnB,EAAuB;AACnBV,MAAAA,OAAO;AACPE,MAAAA,QAAQ;AACX,KAHD,MAGK;AACDJ,MAAAA,OAAO;AACPK,MAAAA,QAAQ;AACX,KAPW,CAQZ;;;AACAN,IAAAA,UAAU,CAACF,OAAO,CAAC0B,CAAT,EAAW1B,OAAO,CAAC2B,CAAnB,CAAV;AACH,GAVD,CA5B0D,CAwC1D;;;AAEA,QAAMC,UAAU,GAAEC,CAAD,IAAK;AAClB5B,IAAAA,UAAU,CAAC4B,CAAD,EAAG7B,OAAO,CAAC0B,CAAX,EAAa1B,OAAO,CAAC2B,CAArB,CAAV;AACArB,IAAAA,SAAS;AAEZ,GAJD,CA1C0D,CA+C1D;;;AAEA,sBACI;AAAK,IAAA,KAAK,EAAEG,KAAK,CAACC,SAAlB;AAA6B,IAAA,OAAO,EAAEe,KAAtC;AAA6C,IAAA,aAAa,EAAEG,UAA5D;AAAA,cAEK,CAAC5B,OAAO,CAACc,QAAT,IAAqBd,OAAO,CAAC8B,OAA7B,GACL,IADK,GAEH9B,OAAO,CAACc,QAAR,IAAoBd,OAAO,CAACe,KAAR,KAAkB,CAAtC,GACFf,OAAO,CAACe,KAAR,KAAkB,GAAlB,GACE,IADF,GAGEf,OAAO,CAACe,KAJR,gBAOF;AAAK,MAAA,KAAK,EAAC,MAAX;AAAkB,MAAA,MAAM,EAAC,MAAzB;AAAgC,MAAA,GAAG,EAAEjB,IAArC;AAA2C,MAAA,GAAG,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA;AAXA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAjEuBC,I;UAGJR,Q,EACAA,Q,EACEA,Q,EACDA,Q,EACAA,Q;;;KAPGQ,I","sourcesContent":["import React from 'react'\nimport useSound from 'use-sound';\nimport boopSfx from '../assets/boop.mp3';\nimport plungerSfx from '../assets/plunger.mp3';\nimport biteSfx from '../assets/bite.mp3';\nimport troy_wrong from '../assets/Troy_oh_no.mp4';\nimport troy_success from '../assets/Troy_you_did_it.mp4';\n\n\nimport ReactAudioPlayer from 'react-audio-player';\nimport blox from '../assets/blox.png';\n\n\nexport default function Cell({details,updateFlag,revealcell}) {\n  // Adding three sounds\n  // Adding three sounds\n    const [playOne]=useSound(plungerSfx,{volume:5.6});\n    const [playTwo]=useSound(boopSfx,{volume:10.5});\n    const [playThree]=useSound(biteSfx,{volume:10.5});\n    const [playFour]=useSound(troy_wrong,{volume:10.5});\n    const [playFive]=useSound(troy_success,{volume:10.5});\n\n    const style={\n        cellStyle:{\n            width:45,\n            height:45,\n            backgroundColor:details.revealed && details.value!==0?details.value==='X'?'red':' #00226d':details.revealed&&details.value===0?'#00226f':'#000',\n            opacity:'0.8',\n            border:'2px solid white',\n            display:'flex',\n            justifyContent:'center',\n            alignItems:'center',\n            fontSize:'20px',\n            cursor:'pointer',\n            color:'cyan',\n            fontWeight:'1000'\n        },\n    }\n\n    // Playing Sound on differents Clicks\n\n    const click=()=>{\n        if(details.value==='X'){\n            playTwo();\n            playFour()\n        }else{\n            playOne();\n            playFive()\n        }\n        // calling revealcell for specific cell x and y\n        revealcell(details.x,details.y);\n    }\n\n    // Right Click Function\n\n    const rightclick=(e)=>{\n        updateFlag(e,details.x,details.y)\n        playThree();\n\n    }\n    // rendering the cell component and showing the different values on right and left clicks\n\n    return (\n        <div style={style.cellStyle} onClick={click} onContextMenu={rightclick}>\n\n            {!details.revealed && details.flagged ? (\n        \"ğŸš©\"\n      ) : details.revealed && details.value !== 0 ? (\n        details.value === \"X\" ? (\n          \"ğŸ’£\"\n        ) : (\n          details.value\n        )\n      ) : (\n        <img width=\"15px\" height=\"15px\" src={blox} alt=\"blox\" />\n      )}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}