{"ast":null,"code":"export const revealed = (arr, x, y, newNonMines) => {\n  // all the cells which are adjaced to zero must be stored in the array \n  // so that it can be revealed later\n  let show = [];\n  show.push(arr[x][y]);\n\n  while (show.length !== 0) {\n    let one = show.pop();\n    let i = one.x;\n    let j = one.y;\n\n    if (!one.revealed) {\n      newNonMines--;\n      one.revealed = true;\n    }\n\n    if (one.value !== 0) {\n      break;\n    } // top left \n\n\n    if (i > 0 && j > 0 && arr[i - 1][j - 1].value === 0 && !arr[i - 1][j - 1].revealed) {\n      show.push(arr[i - 1][j - 1]);\n    } // bottom right\n\n\n    if (i < arr.length - 1 && j < arr[0].length - 1 && arr[i + 1][j + 1].value === 0 && !arr[i + 1][j + 1].revealed) {\n      show.push(arr[i + 1][j + 1]);\n    } // top right\n\n\n    if (i > 0 && j < arr[0].length - 1 && arr[i - 1][j + 1].value === 0 && !arr[i - 1][j + 1].revealed) {\n      show.push(arr[i - 1][j + 1]);\n    } // bottom left \n\n\n    if (i < arr.length - 1 && j > 0 && arr[i + 1][j - 1].value === 0 && !arr[i + 1][j - 1].revealed) {\n      show.push(arr[i + 1][j - 1]);\n    } // top \n\n\n    if (i > 0 && arr[i - 1][j].value === 0 && !arr[i - 1][j].revealed) {\n      show.push(arr[i - 1][j]);\n    } // right\n\n\n    if (j < arr[0].length - 1 && arr[i][j + 1].value === 0 && !arr[i][j + 1].revealed) {\n      show.push(arr[i][j + 1]);\n    } // bottom\n\n\n    if (i < arr.length - 1 && arr[i + 1][j].value === 0 && !arr[i + 1][j].revealed) {\n      show.push(arr[i + 1][j]);\n    } // left\n\n\n    if (j > 0 && arr[i][j - 1].value === 0 && !arr[i][j - 1].revealed) {\n      show.push(arr[i][j - 1]);\n    } // start revealing the item\n\n\n    if (i > 0 && j > 0 && !arr[i - 1][j - 1].revealed) {\n      //Top Left Reveal\n      arr[i - 1][j - 1].revealed = true;\n      newNonMines--;\n    }\n\n    if (j > 0 && !arr[i][j - 1].revealed) {\n      // Left Reveal\n      arr[i][j - 1].revealed = true;\n      newNonMines--;\n    }\n\n    if (i < arr.length - 1 && j > 0 && !arr[i + 1][j - 1].revealed) {\n      //Bottom Left Reveal\n      arr[i + 1][j - 1].revealed = true;\n      newNonMines--;\n    }\n\n    if (i > 0 && !arr[i - 1][j].revealed) {\n      //Top Reveal\n      arr[i - 1][j].revealed = true;\n      newNonMines--;\n    }\n\n    if (i < arr.length - 1 && !arr[i + 1][j].revealed) {\n      // Bottom Reveal\n      arr[i + 1][j].revealed = true;\n      newNonMines--;\n    }\n\n    if (i > 0 && j < arr[0].length - 1 && !arr[i - 1][j + 1].revealed) {\n      // Top Right Reveal\n      arr[i - 1][j + 1].revealed = true;\n      newNonMines--;\n    }\n\n    if (j < arr[0].length - 1 && !arr[i][j + 1].revealed) {\n      //Right Reveal\n      arr[i][j + 1].revealed = true;\n      newNonMines--;\n    }\n\n    if (i < arr.length - 1 && j < arr[0].length - 1 && !arr[i + 1][j + 1].revealed) {\n      // Bottom Right Reveal\n      arr[i + 1][j + 1].revealed = true;\n      newNonMines--;\n    }\n  }\n\n  return {\n    arr,\n    newNonMines\n  };\n};","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/PartnershipExample/GamesSelection/MineGame/utils/Reveal.js"],"names":["revealed","arr","x","y","newNonMines","show","push","length","one","pop","i","j","value"],"mappings":"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","sourcesContent":["export const revealed=(arr,x,y,newNonMines)=>{\n    \n    // all the cells which are adjaced to zero must be stored in the array \n    // so that it can be revealed later\n\n    let show=[];\n    show.push(arr[x][y]);\n    while(show.length!==0){\n        let one=show.pop();\n        let i=one.x;\n        let j=one.y;\n        if(!one.revealed){\n            newNonMines--;\n            one.revealed=true;\n        }\n        if(one.value !==0){\n            break;\n        }\n\n        // top left \n\n        if(\n            i>0 && \n            j>0 &&\n            arr[i-1][j-1].value===0 &&\n            !arr[i-1][j-1].revealed\n        )\n        {\n            show.push(arr[i-1][j-1]);\n        }\n\n        // bottom right\n\n        if(\n            i<arr.length-1 &&\n            j<arr[0].length-1 &&\n            arr[i+1][j+1].value===0 &&\n            !arr[i+1][j+1].revealed\n        ){\n            show.push(arr[i+1][j+1]);\n        }\n\n        // top right\n\n        if(\n            i>0 &&\n            j<arr[0].length-1 &&\n            arr[i-1][j+1].value===0 &&\n            !arr[i-1][j+1].revealed\n        ){\n            show.push(arr[i-1][j+1]);\n        }\n\n        // bottom left \n\n        if(\n            i<arr.length-1 &&\n            j>0 &&\n            arr[i+1][j-1].value===0 &&\n            !arr[i+1][j-1].revealed\n        ){\n            show.push(arr[i+1][j-1]);\n        }\n\n        // top \n        if(\n            i>0 &&\n            arr[i-1][j].value===0 &&\n            !arr[i-1][j].revealed \n        ){\n            show.push(arr[i-1][j]);\n        }\n\n        // right\n\n        if(\n            j<arr[0].length-1 &&\n            arr[i][j+1].value===0 &&\n            !arr[i][j+1].revealed\n        ){\n            show.push(arr[i][j+1]);\n        }\n\n        // bottom\n\n        if(\n            i<arr.length-1 &&\n            arr[i+1][j].value===0 &&\n            !arr[i+1][j].revealed\n        ){\n            show.push(arr[i+1][j]);\n        }\n\n        // left\n\n        if(\n            j>0 &&\n            arr[i][j-1].value===0 &&\n            !arr[i][j-1].revealed\n        ){\n            show.push(arr[i][j-1]);\n        }\n\n\n        // start revealing the item\n\n        if (\n            i > 0 &&\n            j > 0 &&\n            !arr[i - 1][j - 1].revealed\n          ) {\n            //Top Left Reveal\n      \n            arr[i - 1][j - 1].revealed = true;\n            newNonMines--;\n          }\n      \n          if (j > 0 && !arr[i][j - 1].revealed) {\n            // Left Reveal\n            arr[i][j - 1].revealed = true;\n            newNonMines--;\n          }\n      \n          if (\n            i < arr.length - 1 &&\n            j > 0 &&\n            !arr[i + 1][j - 1].revealed\n          ) {\n            //Bottom Left Reveal\n            arr[i + 1][j - 1].revealed = true;\n            newNonMines--;\n          }\n      \n          if (i > 0 && !arr[i - 1][j].revealed) {\n            //Top Reveal\n            arr[i - 1][j].revealed = true;\n            newNonMines--;\n          }\n      \n          if (i < arr.length - 1 && !arr[i + 1][j].revealed) {\n            // Bottom Reveal\n            arr[i + 1][j].revealed = true;\n            newNonMines--;\n          }\n      \n          if (\n            i > 0 &&\n            j < arr[0].length - 1 &&\n            !arr[i - 1][j + 1].revealed\n          ) {\n            // Top Right Reveal\n            arr[i - 1][j + 1].revealed = true;\n            newNonMines--;\n          }\n      \n          if (j < arr[0].length - 1 && !arr[i][j + 1].revealed) {\n            //Right Reveal\n            arr[i][j + 1].revealed = true;\n            newNonMines--;\n          }\n      \n          if (\n            i < arr.length - 1 &&\n            j < arr[0].length - 1 &&\n            !arr[i + 1][j + 1].revealed\n          ) {\n            // Bottom Right Reveal\n            arr[i + 1][j + 1].revealed = true;\n            newNonMines--;\n          }\n    }\n\n    return {arr,newNonMines}\n\n}"]},"metadata":{},"sourceType":"module"}