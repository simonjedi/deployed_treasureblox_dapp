{"ast":null,"code":"var exec = require('child_process').execSync;\n\nvar platform = require('os').platform();\n\nmodule.exports = function () {\n  var commands = Array.isArray(arguments[0]) ? arguments[0] : Array.prototype.slice.apply(arguments);\n  var command = null;\n  commands.some(function (c) {\n    if (isExec(findCommand(c))) {\n      command = c;\n      return true;\n    }\n  });\n  return command;\n};\n\nfunction isExec(command) {\n  try {\n    exec(command);\n    return true;\n  } catch (_e) {\n    return false;\n  }\n}\n\nfunction findCommand(command) {\n  if (/^win/.test(platform)) {\n    return \"where \" + command;\n  } else {\n    return \"command -v \" + command;\n  }\n}","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/TreasureHuntDAPP_React/treasure-blox/node_modules/find-exec/index.js"],"names":["exec","require","execSync","platform","module","exports","commands","Array","isArray","arguments","prototype","slice","apply","command","some","c","isExec","findCommand","_e","test"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBC,QAApC;;AACA,IAAIC,QAAQ,GAAGF,OAAO,CAAC,IAAD,CAAP,CAAcE,QAAd,EAAf;;AAEAC,MAAM,CAACC,OAAP,GAAiB,YAAU;AACzB,MAAIC,QAAQ,GAAGC,KAAK,CAACC,OAAN,CAAcC,SAAS,CAAC,CAAD,CAAvB,IAA8BA,SAAS,CAAC,CAAD,CAAvC,GAA6CF,KAAK,CAACG,SAAN,CAAgBC,KAAhB,CAAsBC,KAAtB,CAA4BH,SAA5B,CAA5D;AACA,MAAII,OAAO,GAAG,IAAd;AAEAP,EAAAA,QAAQ,CAACQ,IAAT,CAAc,UAASC,CAAT,EAAW;AACvB,QAAIC,MAAM,CAACC,WAAW,CAACF,CAAD,CAAZ,CAAV,EAA2B;AACzBF,MAAAA,OAAO,GAAGE,CAAV;AACA,aAAO,IAAP;AACD;AACF,GALD;AAOA,SAAOF,OAAP;AACD,CAZD;;AAcA,SAASG,MAAT,CAAgBH,OAAhB,EAAwB;AACtB,MAAG;AACDb,IAAAA,IAAI,CAACa,OAAD,CAAJ;AACA,WAAO,IAAP;AACD,GAHD,CAIA,OAAOK,EAAP,EAAU;AACR,WAAO,KAAP;AACD;AACF;;AAED,SAASD,WAAT,CAAqBJ,OAArB,EAA6B;AAC3B,MAAI,OAAOM,IAAP,CAAYhB,QAAZ,CAAJ,EAA0B;AACxB,WAAO,WAAWU,OAAlB;AACD,GAFD,MAEO;AACL,WAAO,gBAAgBA,OAAvB;AACD;AACF","sourcesContent":["var exec = require('child_process').execSync\nvar platform = require('os').platform()\n\nmodule.exports = function(){\n  var commands = Array.isArray(arguments[0]) ? arguments[0] : Array.prototype.slice.apply(arguments)\n  var command = null\n\n  commands.some(function(c){\n    if (isExec(findCommand(c))){\n      command = c\n      return true\n    }\n  })\n\n  return command\n}\n\nfunction isExec(command){\n  try{\n    exec(command)\n    return true\n  }\n  catch (_e){\n    return false\n  }\n}\n\nfunction findCommand(command){\n  if (/^win/.test(platform)){\n    return \"where \" + command\n  } else {\n    return \"command -v \" + command\n  }\n}\n"]},"metadata":{},"sourceType":"script"}