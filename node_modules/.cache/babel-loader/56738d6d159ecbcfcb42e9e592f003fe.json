{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/treasure-blox/src/components/Structure/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Countdown from 'react-countdown';\nimport moment from 'moment';\nimport { CardColumns, CardGroup, Card, Button, Container, Nav, Navbar, NavDropdown, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = props => {\n  _s();\n\n  const [count, setTime] = useState(60);\n  useEffect(() => {\n    const timer = window.setInterval(() => {\n      var moment = require('moment'); // require\n\n\n      const currentStartDate = Date();\n      var startDate = new Date(currentStartDate); // // Hours part from the timestamp\n      // var startDateHours = startDate.getHours();\n      // // Minutes part from the timestamp\n      // var startDateMinutes = startDate.getMinutes();\n      // // Seconds part from the timestamp\n      // var startDateSeconds = startDate.getSeconds();\n      // Do\n\n      var endDate = new Date(props.allGame1_deadline_time * 1000); // // Hours part from the timestamp\n      // var endDateHours = endDate.getHours();\n      // // Minutes part from the timestamp\n      // var endDateMinutes = endDate.getMinutes();\n      // // Seconds part from the timestamp\n      // var endDateSeconds = endDate.getSeconds();\n\n      function getDifferenceInDays(date1, date2) {\n        const diffInMs = Math.abs(date2 - date1);\n        return diffInMs / (1000 * 60 * 60 * 24);\n      }\n\n      function getDifferenceInHours(date1, date2) {\n        const diffInMs = Math.abs(date2 - date1);\n        return diffInMs / (1000 * 60 * 60);\n      }\n\n      function getDifferenceInMinutes(date1, date2) {\n        const diffInMs = Math.abs(date2 - date1);\n        return diffInMs / (1000 * 60);\n      }\n\n      function getDifferenceInSeconds(date1, date2) {\n        const diffInMs = Math.abs(date2 - date1);\n        return diffInMs / 1000;\n      } // console.log(getDifferenceInDays(endDate, startDate));\n      // console.log(getDifferenceInHours(endDate, startDate));\n      // console.log(getDifferenceInMinutes(endDate, startDate));\n\n\n      console.log(getDifferenceInSeconds(startDate, endDate));\n      const time = Math.abs(getDifferenceInSeconds(startDate, endDate));\n\n      if (time >= 0) {\n        setTime(time);\n        setTime(prevTime => prevTime - 1); // <-- Change this line!\n      } else {} // return (\n      //   xxx\n      // );\n\n    }, 1000);\n    return () => {\n      window.clearInterval(timer);\n    }; // console.log('test');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attemptPrize\",\n      children: [\"This time slot will expire in \", count, \" seconds!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"m6Q8l9leIy2APirKKj01gS4zegs=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/treasure-blox/src/components/Structure/Timer.js"],"names":["React","Component","useState","useEffect","ReactDOM","Countdown","moment","CardColumns","CardGroup","Card","Button","Container","Nav","Navbar","NavDropdown","Row","Col","Timer","props","count","setTime","timer","window","setInterval","require","currentStartDate","Date","startDate","endDate","allGame1_deadline_time","getDifferenceInDays","date1","date2","diffInMs","Math","abs","getDifferenceInHours","getDifferenceInMinutes","getDifferenceInSeconds","console","log","time","prevTime","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAGA,SAASC,WAAT,EAAqBC,SAArB,EAA+BC,IAA/B,EAAoCC,MAApC,EAA2CC,SAA3C,EAAqDC,GAArD,EAAyDC,MAAzD,EAAgEC,WAAhE,EAA4EC,GAA5E,EAAgFC,GAAhF,QAA2F,iBAA3F;AAEA,OAAO,sCAAP;AACA,OAAO,YAAP;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAEvB,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBlB,QAAQ,CAAC,EAAD,CAAjC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAGd,UAAMkB,KAAK,GAAGC,MAAM,CAACC,WAAP,CAAmB,MAAM;AAGnC,UAAIjB,MAAM,GAAGkB,OAAO,CAAC,QAAD,CAApB,CAHmC,CAGH;;;AAIhC,YAAMC,gBAAgB,GAAGC,IAAI,EAA7B;AACA,UAAIC,SAAS,GAAG,IAAID,IAAJ,CAASD,gBAAT,CAAhB,CARmC,CASnC;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,UAAIG,OAAO,GAAG,IAAIF,IAAJ,CAASR,KAAK,CAACW,sBAAN,GAA+B,IAAxC,CAAd,CAlBmC,CAmBnC;AACA;AACA;AACA;AACA;AACA;;AAGA,eAASC,mBAAT,CAA6BC,KAA7B,EAAoCC,KAApC,EAA2C;AACzC,cAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASH,KAAK,GAAGD,KAAjB,CAAjB;AACA,eAAOE,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAf;AACC;;AAEH,eAASG,oBAAT,CAA8BL,KAA9B,EAAqCC,KAArC,EAA4C;AAC1C,cAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASH,KAAK,GAAGD,KAAjB,CAAjB;AACA,eAAOE,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAf;AACC;;AAEH,eAASI,sBAAT,CAAgCN,KAAhC,EAAuCC,KAAvC,EAA8C;AAC5C,cAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASH,KAAK,GAAGD,KAAjB,CAAjB;AACA,eAAOE,QAAQ,IAAI,OAAO,EAAX,CAAf;AACC;;AAEH,eAASK,sBAAT,CAAgCP,KAAhC,EAAuCC,KAAvC,EAA8C;AAC5C,cAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASH,KAAK,GAAGD,KAAjB,CAAjB;AACA,eAAOE,QAAQ,GAAG,IAAlB;AACC,OA7CgC,CA+CnC;AACA;AACA;;;AAEAM,MAAAA,OAAO,CAACC,GAAR,CAAYF,sBAAsB,CAACX,SAAD,EAAYC,OAAZ,CAAlC;AAEA,YAAMa,IAAI,GAAGP,IAAI,CAACC,GAAL,CAASG,sBAAsB,CAACX,SAAD,EAAYC,OAAZ,CAA/B,CAAb;;AAEA,UAAIa,IAAI,IAAI,CAAZ,EAAe;AACbrB,QAAAA,OAAO,CAACqB,IAAD,CAAP;AACArB,QAAAA,OAAO,CAACsB,QAAQ,IAAIA,QAAQ,GAAG,CAAxB,CAAP,CAFa,CAEsB;AAEpC,OAJD,MAIO,CAGN,CA9DkC,CAgEnC;AACA;AACA;;AAEH,KApEa,EAoEX,IApEW,CAAd;AAwEA,WAAO,MAAM;AACXpB,MAAAA,MAAM,CAACqB,aAAP,CAAqBtB,KAArB;AACD,KAFD,CA3Ec,CA8EhB;AACD,GA/EU,EA+ER,EA/EQ,CAAT;AAoFA,sBAEE;AAAA,2BAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,mDAA6DF,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UAFF;AAUD,CAlGD;;GAAMF,K;;KAAAA,K;AAoGN,eAAeA,KAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\nimport Countdown from 'react-countdown';\nimport moment from 'moment';\n\n\nimport { CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown,Row,Col } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Card.css';\n\nconst Timer = (props) => {\n\n  const [count, setTime] = useState(60);\n\n  useEffect(() => {\n\n\n    const timer = window.setInterval(() => {\n\n\n        var moment = require('moment'); // require\n\n\n\n        const currentStartDate = Date();\n        var startDate = new Date(currentStartDate);\n        // // Hours part from the timestamp\n        // var startDateHours = startDate.getHours();\n        // // Minutes part from the timestamp\n        // var startDateMinutes = startDate.getMinutes();\n        // // Seconds part from the timestamp\n        // var startDateSeconds = startDate.getSeconds();\n\n        // Do\n\n        var endDate = new Date(props.allGame1_deadline_time * 1000);\n        // // Hours part from the timestamp\n        // var endDateHours = endDate.getHours();\n        // // Minutes part from the timestamp\n        // var endDateMinutes = endDate.getMinutes();\n        // // Seconds part from the timestamp\n        // var endDateSeconds = endDate.getSeconds();\n\n\n        function getDifferenceInDays(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / (1000 * 60 * 60 * 24);\n          }\n\n        function getDifferenceInHours(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / (1000 * 60 * 60);\n          }\n\n        function getDifferenceInMinutes(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / (1000 * 60);\n          }\n\n        function getDifferenceInSeconds(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / 1000;\n          }\n\n        // console.log(getDifferenceInDays(endDate, startDate));\n        // console.log(getDifferenceInHours(endDate, startDate));\n        // console.log(getDifferenceInMinutes(endDate, startDate));\n\n        console.log(getDifferenceInSeconds(startDate, endDate));\n\n        const time = Math.abs(getDifferenceInSeconds(startDate, endDate));\n\n        if (time >= 0) {\n          setTime(time)\n          setTime(prevTime => prevTime - 1); // <-- Change this line!\n\n        } else {\n\n\n        }\n\n        // return (\n        //   xxx\n        // );\n\n    }, 1000);\n\n\n\n    return () => {\n      window.clearInterval(timer);\n    };\n  // console.log('test');\n}, []);\n\n\n\n\n  return(\n\n    <div>\n\n      <div className=\"attemptPrize\">This time slot will expire in {count} seconds!</div>\n\n    </div>\n\n  );\n\n};\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}