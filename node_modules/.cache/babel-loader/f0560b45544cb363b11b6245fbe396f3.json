{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/treasure-blox/src/components/Structure/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Countdown from 'react-countdown';\nimport moment from 'moment';\nimport { CardColumns, CardGroup, Card, Button, Container, Nav, Navbar, NavDropdown, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = props => {\n  _s();\n\n  var moment = require('moment');\n\n  const allGame1_deadline_time = props.allGame1_deadline_time; // Timer\n  // const currentTimestamp = Math.floor(Date.now()/1000);\n\n  const currentTimestamp = Math.floor(); // console.log(currentTimestamp); // get current timestamp\n  //   let date = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(currentTimestamp)\n  // console.log(currentTimestamp);\n  // let time = props.allGame1_deadline_time - currentTimestamp\n  // console.log(currentTimestamp);\n  // const time1 = currentTimestamp + 10;\n\n  function secondsSinceEpoch() {\n    return new Date() / 1000 | 0;\n  } // const set = new theTime - secondsSinceEpoch();\n  // console.log(secondsSinceEpoch(allGame1_deadline_time));\n\n\n  var diff = moment.unix(Date / 1000 | 0).from(props.allGame1_deadline_time);\n  console.log(secondsSinceEpoch(diff)); // const time2 = 10;\n  // const time3 = 69;\n  // console.log(game1_clue)\n  // props.allGame1_deadline_time\n  // console.log(\"Deadline:\", mytime)\n\n  const [count, setTime] = useState(diff);\n  useEffect(() => {\n    const timer = window.setInterval(() => {\n      setTime(prevTime => prevTime - 1); // <-- Change this line!\n    }, 1000);\n    return () => {\n      window.clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attemptPrize\",\n      children: [\"This time slot will expire in \", count, \" seconds!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"zMhlXx/7gDcOTdn+ntjWdeUQNi4=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/treasure-blox/src/components/Structure/Timer.js"],"names":["React","Component","useState","useEffect","ReactDOM","Countdown","moment","CardColumns","CardGroup","Card","Button","Container","Nav","Navbar","NavDropdown","Row","Col","Timer","props","require","allGame1_deadline_time","currentTimestamp","Math","floor","secondsSinceEpoch","Date","diff","unix","from","console","log","count","setTime","timer","window","setInterval","prevTime","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAGA,SAASC,WAAT,EAAqBC,SAArB,EAA+BC,IAA/B,EAAoCC,MAApC,EAA2CC,SAA3C,EAAqDC,GAArD,EAAyDC,MAAzD,EAAgEC,WAAhE,EAA4EC,GAA5E,EAAgFC,GAAhF,QAA2F,iBAA3F;AAEA,OAAO,sCAAP;AACA,OAAO,YAAP;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,MAAIZ,MAAM,GAAGa,OAAO,CAAC,QAAD,CAApB;;AAEA,QAAMC,sBAAsB,GAAGF,KAAK,CAACE,sBAArC,CAHuB,CAKvB;AACA;;AACA,QAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,EAAzB,CAPuB,CASvB;AACA;AAEA;AACA;AACA;AACA;;AAGA,WAASC,iBAAT,GAA6B;AAC3B,WAAO,IAAIC,IAAJ,KAAS,IAAT,GAAgB,CAAvB;AACH,GApBwB,CAqBzB;AACA;;;AAGA,MAAIC,IAAI,GAAGpB,MAAM,CAACqB,IAAP,CAAYF,IAAI,GAAC,IAAL,GAAY,CAAxB,EAA2BG,IAA3B,CAAgCV,KAAK,CAACE,sBAAtC,CAAX;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYN,iBAAiB,CAACE,IAAD,CAA7B,EA1ByB,CA4BvB;AACA;AAEA;AAEF;AAEE;;AAGA,QAAM,CAACK,KAAD,EAAQC,OAAR,IAAmB9B,QAAQ,CAACwB,IAAD,CAAjC;AAGAvB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM8B,KAAK,GAAGC,MAAM,CAACC,WAAP,CAAmB,MAAM;AACrCH,MAAAA,OAAO,CAACI,QAAQ,IAAIA,QAAQ,GAAG,CAAxB,CAAP,CADqC,CACF;AACpC,KAFa,EAEX,IAFW,CAAd;AAGA,WAAO,MAAM;AACXF,MAAAA,MAAM,CAACG,aAAP,CAAqBJ,KAArB;AACD,KAFD;AAKD,GATQ,EASN,EATM,CAAT;AAcA,sBAEE;AAAA,2BAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,mDAA6DF,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UAFF;AAUD,CAjED;;GAAMd,K;;KAAAA,K;AAmEN,eAAeA,KAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\nimport Countdown from 'react-countdown';\nimport moment from 'moment';\n\n\nimport { CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown,Row,Col } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Card.css';\n\nconst Timer = (props) => {\n  var moment = require('moment');\n\n  const allGame1_deadline_time = props.allGame1_deadline_time;\n\n  // Timer\n  // const currentTimestamp = Math.floor(Date.now()/1000);\n  const currentTimestamp = Math.floor();\n\n  // console.log(currentTimestamp); // get current timestamp\n  //   let date = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(currentTimestamp)\n\n  // console.log(currentTimestamp);\n  // let time = props.allGame1_deadline_time - currentTimestamp\n  // console.log(currentTimestamp);\n  // const time1 = currentTimestamp + 10;\n\n\n  function secondsSinceEpoch() {\n    return new Date/1000 | 0;\n}\n// const set = new theTime - secondsSinceEpoch();\n// console.log(secondsSinceEpoch(allGame1_deadline_time));\n\n\nvar diff = moment.unix(Date/1000 | 0).from(props.allGame1_deadline_time);\nconsole.log(secondsSinceEpoch(diff));\n\n  // const time2 = 10;\n  // const time3 = 69;\n\n  // console.log(game1_clue)\n\n// props.allGame1_deadline_time\n\n  // console.log(\"Deadline:\", mytime)\n\n\n  const [count, setTime] = useState(diff);\n\n\n  useEffect(() => {\n    const timer = window.setInterval(() => {\n      setTime(prevTime => prevTime - 1); // <-- Change this line!\n    }, 1000);\n    return () => {\n      window.clearInterval(timer);\n    };\n\n\n  }, []);\n\n\n\n\n  return(\n\n    <div>\n\n      <div className=\"attemptPrize\">This time slot will expire in {count} seconds!</div>\n\n    </div>\n\n  );\n\n};\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}