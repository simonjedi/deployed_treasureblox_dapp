{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletBase = void 0;\n\nvar address_1 = require(\"@celo/base/lib/address\");\n\nvar ethUtil = __importStar(require(\"ethereumjs-util\"));\n\nvar signing_utils_1 = require(\"./signing-utils\");\n\nvar WalletBase = function () {\n  function WalletBase() {\n    // By creating the Signers in advance we can have a common pattern across wallets\n    // Each implementation is responsible for populating this map through addSigner\n    this.accountSigners = new Map();\n  }\n  /**\n   * Gets a list of accounts that have been registered\n   */\n\n\n  WalletBase.prototype.getAccounts = function () {\n    return Array.from(this.accountSigners.keys());\n  };\n  /**\n   * Removes the account with the given address. Needs to be implemented by subclass, otherwise throws error\n   * @param address The address of the account to be removed\n   */\n\n\n  WalletBase.prototype.removeAccount = function (_address) {\n    throw new Error('removeAccount is not supported for this wallet');\n  };\n  /**\n   * Returns true if account has been registered\n   * @param address Account to check\n   */\n\n\n  WalletBase.prototype.hasAccount = function (address) {\n    if (address) {\n      var normalizedAddress = (0, address_1.normalizeAddressWith0x)(address);\n      return this.accountSigners.has(normalizedAddress);\n    } else {\n      return false;\n    }\n  };\n  /**\n   * Adds the account-signer set to the internal map\n   * @param address Account address\n   * @param signer Account signer\n   */\n\n\n  WalletBase.prototype.addSigner = function (address, signer) {\n    var normalizedAddress = (0, address_1.normalizeAddressWith0x)(address);\n    this.accountSigners.set(normalizedAddress, signer);\n  };\n  /**\n   * Removes the account-signer\n   * @param address Account address\n   */\n\n\n  WalletBase.prototype.removeSigner = function (address) {\n    var normalizedAddress = (0, address_1.normalizeAddressWith0x)(address);\n    this.accountSigners.delete(normalizedAddress);\n  };\n  /**\n   * Gets the signer based on the 'from' field in the tx body\n   * @param txParams Transaction to sign\n   */\n\n\n  WalletBase.prototype.signTransaction = function (txParams) {\n    return __awaiter(this, void 0, void 0, function () {\n      var rlpEncoded, addToV, fromAddress, signer, signature;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!txParams) {\n              throw new Error('No transaction object given!');\n            }\n\n            rlpEncoded = (0, signing_utils_1.rlpEncodedTx)(txParams);\n            addToV = (0, signing_utils_1.chainIdTransformationForSigning)(txParams.chainId);\n            fromAddress = txParams.from.toString();\n            signer = this.getSigner(fromAddress);\n            return [4\n            /*yield*/\n            , signer.signTransaction(addToV, rlpEncoded)];\n\n          case 1:\n            signature = _a.sent();\n            return [2\n            /*return*/\n            , (0, signing_utils_1.encodeTransaction)(rlpEncoded, signature)];\n        }\n      });\n    });\n  };\n  /**\n   * Sign a personal Ethereum signed message.\n   * @param address Address of the account to sign with\n   * @param data Hex string message to sign\n   * @return Signature hex string (order: rsv)\n   */\n\n\n  WalletBase.prototype.signPersonalMessage = function (address, data) {\n    return __awaiter(this, void 0, void 0, function () {\n      var signer, sig;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(0, address_1.isHexString)(data)) {\n              throw Error('wallet@signPersonalMessage: Expected data has to be a hex string ');\n            }\n\n            signer = this.getSigner(address);\n            return [4\n            /*yield*/\n            , signer.signPersonalMessage(data)];\n\n          case 1:\n            sig = _a.sent();\n            return [2\n            /*return*/\n            , ethUtil.toRpcSig(sig.v, sig.r, sig.s)];\n        }\n      });\n    });\n  };\n  /**\n   * Sign an EIP712 Typed Data message.\n   * @param address Address of the account to sign with\n   * @param typedData the typed data object\n   * @return Signature hex string (order: rsv)\n   */\n\n\n  WalletBase.prototype.signTypedData = function (address, typedData) {\n    return __awaiter(this, void 0, void 0, function () {\n      var signer, sig;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (typedData === undefined) {\n              throw Error('wallet@signTypedData: TypedData Missing');\n            }\n\n            signer = this.getSigner(address);\n            return [4\n            /*yield*/\n            , signer.signTypedData(typedData)];\n\n          case 1:\n            sig = _a.sent();\n            return [2\n            /*return*/\n            , ethUtil.toRpcSig(sig.v, sig.r, sig.s)];\n        }\n      });\n    });\n  };\n\n  WalletBase.prototype.getSigner = function (address) {\n    var normalizedAddress = (0, address_1.normalizeAddressWith0x)(address);\n\n    if (!this.accountSigners.has(normalizedAddress)) {\n      throw new Error(\"Could not find address \" + normalizedAddress);\n    }\n\n    return this.accountSigners.get(normalizedAddress);\n  };\n\n  WalletBase.prototype.decrypt = function (address, ciphertext) {\n    return __awaiter(this, void 0, void 0, function () {\n      var signer;\n      return __generator(this, function (_a) {\n        signer = this.getSigner(address);\n        return [2\n        /*return*/\n        , signer.decrypt(ciphertext)];\n      });\n    });\n  };\n  /**\n   * Computes the shared secret (an ECDH key exchange object) between two accounts\n   */\n\n\n  WalletBase.prototype.computeSharedSecret = function (address, publicKey) {\n    var signer = this.getSigner(address);\n    return signer.computeSharedSecret(publicKey);\n  };\n\n  return WalletBase;\n}();\n\nexports.WalletBase = WalletBase;","map":{"version":3,"sources":["../src/wallet-base.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletBase = void 0;\nvar address_1 = require(\"@celo/base/lib/address\");\nvar ethUtil = __importStar(require(\"ethereumjs-util\"));\nvar signing_utils_1 = require(\"./signing-utils\");\nvar WalletBase = /** @class */ (function () {\n    function WalletBase() {\n        // By creating the Signers in advance we can have a common pattern across wallets\n        // Each implementation is responsible for populating this map through addSigner\n        this.accountSigners = new Map();\n    }\n    /**\n     * Gets a list of accounts that have been registered\n     */\n    WalletBase.prototype.getAccounts = function () {\n        return Array.from(this.accountSigners.keys());\n    };\n    /**\n     * Removes the account with the given address. Needs to be implemented by subclass, otherwise throws error\n     * @param address The address of the account to be removed\n     */\n    WalletBase.prototype.removeAccount = function (_address) {\n        throw new Error('removeAccount is not supported for this wallet');\n    };\n    /**\n     * Returns true if account has been registered\n     * @param address Account to check\n     */\n    WalletBase.prototype.hasAccount = function (address) {\n        if (address) {\n            var normalizedAddress = (0, address_1.normalizeAddressWith0x)(address);\n            return this.accountSigners.has(normalizedAddress);\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Adds the account-signer set to the internal map\n     * @param address Account address\n     * @param signer Account signer\n     */\n    WalletBase.prototype.addSigner = function (address, signer) {\n        var normalizedAddress = (0, address_1.normalizeAddressWith0x)(address);\n        this.accountSigners.set(normalizedAddress, signer);\n    };\n    /**\n     * Removes the account-signer\n     * @param address Account address\n     */\n    WalletBase.prototype.removeSigner = function (address) {\n        var normalizedAddress = (0, address_1.normalizeAddressWith0x)(address);\n        this.accountSigners.delete(normalizedAddress);\n    };\n    /**\n     * Gets the signer based on the 'from' field in the tx body\n     * @param txParams Transaction to sign\n     */\n    WalletBase.prototype.signTransaction = function (txParams) {\n        return __awaiter(this, void 0, void 0, function () {\n            var rlpEncoded, addToV, fromAddress, signer, signature;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!txParams) {\n                            throw new Error('No transaction object given!');\n                        }\n                        rlpEncoded = (0, signing_utils_1.rlpEncodedTx)(txParams);\n                        addToV = (0, signing_utils_1.chainIdTransformationForSigning)(txParams.chainId);\n                        fromAddress = txParams.from.toString();\n                        signer = this.getSigner(fromAddress);\n                        return [4 /*yield*/, signer.signTransaction(addToV, rlpEncoded)];\n                    case 1:\n                        signature = _a.sent();\n                        return [2 /*return*/, (0, signing_utils_1.encodeTransaction)(rlpEncoded, signature)];\n                }\n            });\n        });\n    };\n    /**\n     * Sign a personal Ethereum signed message.\n     * @param address Address of the account to sign with\n     * @param data Hex string message to sign\n     * @return Signature hex string (order: rsv)\n     */\n    WalletBase.prototype.signPersonalMessage = function (address, data) {\n        return __awaiter(this, void 0, void 0, function () {\n            var signer, sig;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(0, address_1.isHexString)(data)) {\n                            throw Error('wallet@signPersonalMessage: Expected data has to be a hex string ');\n                        }\n                        signer = this.getSigner(address);\n                        return [4 /*yield*/, signer.signPersonalMessage(data)];\n                    case 1:\n                        sig = _a.sent();\n                        return [2 /*return*/, ethUtil.toRpcSig(sig.v, sig.r, sig.s)];\n                }\n            });\n        });\n    };\n    /**\n     * Sign an EIP712 Typed Data message.\n     * @param address Address of the account to sign with\n     * @param typedData the typed data object\n     * @return Signature hex string (order: rsv)\n     */\n    WalletBase.prototype.signTypedData = function (address, typedData) {\n        return __awaiter(this, void 0, void 0, function () {\n            var signer, sig;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (typedData === undefined) {\n                            throw Error('wallet@signTypedData: TypedData Missing');\n                        }\n                        signer = this.getSigner(address);\n                        return [4 /*yield*/, signer.signTypedData(typedData)];\n                    case 1:\n                        sig = _a.sent();\n                        return [2 /*return*/, ethUtil.toRpcSig(sig.v, sig.r, sig.s)];\n                }\n            });\n        });\n    };\n    WalletBase.prototype.getSigner = function (address) {\n        var normalizedAddress = (0, address_1.normalizeAddressWith0x)(address);\n        if (!this.accountSigners.has(normalizedAddress)) {\n            throw new Error(\"Could not find address \" + normalizedAddress);\n        }\n        return this.accountSigners.get(normalizedAddress);\n    };\n    WalletBase.prototype.decrypt = function (address, ciphertext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var signer;\n            return __generator(this, function (_a) {\n                signer = this.getSigner(address);\n                return [2 /*return*/, signer.decrypt(ciphertext)];\n            });\n        });\n    };\n    /**\n     * Computes the shared secret (an ECDH key exchange object) between two accounts\n     */\n    WalletBase.prototype.computeSharedSecret = function (address, publicKey) {\n        var signer = this.getSigner(address);\n        return signer.computeSharedSecret(publicKey);\n    };\n    return WalletBase;\n}());\nexports.WalletBase = WalletBase;\n//# sourceMappingURL=wallet-base.js.map"]},"metadata":{},"sourceType":"script"}