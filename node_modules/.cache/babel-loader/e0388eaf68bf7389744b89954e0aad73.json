{"ast":null,"code":"const Stage = require('./stage');\n\nconst {\n  NormalBlock: Block,\n  FallingBlock\n} = require('./block');\n\nclass Game {\n  constructor() {\n    this.STATES = {\n      LOADING: 'loading',\n      PLAYING: 'playing',\n      READY: 'ready',\n      ENDED: 'ended',\n      RESETTING: 'resetting'\n    };\n    this.blocks = [];\n    this.fallingBlocks = [];\n    this.state = this.STATES.LOADING;\n    this.stage = new Stage();\n    this.mainContainer = document.getElementById('container');\n    this.scoreContainer = document.getElementById('score');\n    this.startButton = document.getElementById('start-button');\n    this.instructions = document.getElementById('instructions');\n    this.scoreContainer.innerHTML = '0';\n    this.music = document.getElementById('music');\n    this.addBlock();\n    this.tick();\n\n    for (let key in this.STATES) {\n      this.mainContainer.classList.remove(this.STATES[key]);\n    }\n\n    this.setState(this.STATES.READY);\n    document.addEventListener('keydown', e => {\n      if (e.keyCode === 32) {\n        // Space\n        this.handleEvent();\n      }\n    });\n    document.addEventListener('click', e => {\n      this.handleEvent();\n    });\n    document.addEventListener('touchend', e => {\n      this.handleEvent();\n    });\n  }\n\n  handleEvent() {\n    switch (this.state) {\n      case this.STATES.READY:\n        this.setState(this.STATES.PLAYING);\n        this.music.play();\n        this.addBlock();\n        break;\n\n      case this.STATES.PLAYING:\n        this.addBlock();\n        break;\n\n      case this.STATES.ENDED:\n        this.blocks.forEach(block => {\n          this.stage.remove(block.mesh);\n        });\n        this.blocks = [];\n        this.scoreContainer.innerHTML = '0';\n        this.addBlock();\n        this.setState(this.STATES.READY);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  addBlock() {\n    let lastBlock = this.blocks[this.blocks.length - 1];\n    const lastToLastBlock = this.blocks[this.blocks.length - 2];\n\n    if (lastBlock && lastToLastBlock) {\n      const {\n        axis,\n        dimensionAlongAxis\n      } = lastBlock.getAxis();\n      const distance = lastBlock.position[axis] - lastToLastBlock.position[axis];\n      let position, dimension;\n      let positionFalling, dimensionFalling;\n      const {\n        color\n      } = lastBlock;\n      const newLength = lastBlock.dimension[dimensionAlongAxis] - Math.abs(distance);\n\n      if (newLength <= 0) {\n        this.stage.remove(lastBlock.mesh);\n        this.setState(this.STATES.ENDED);\n        this.music.pause();\n        return;\n      }\n\n      dimension = { ...lastBlock.dimension\n      };\n      dimension[dimensionAlongAxis] = newLength;\n      dimensionFalling = { ...lastBlock.dimension\n      };\n      dimensionFalling[dimensionAlongAxis] = Math.abs(distance);\n\n      if (distance >= 0) {\n        position = lastBlock.position;\n        positionFalling = { ...lastBlock.position\n        };\n        positionFalling[axis] = lastBlock.position[axis] + newLength;\n      } else {\n        position = { ...lastBlock.position\n        };\n        position[axis] = lastBlock.position[axis] + Math.abs(distance);\n        positionFalling = { ...lastBlock.position\n        };\n        positionFalling[axis] = lastBlock.position[axis] - Math.abs(distance);\n      }\n\n      this.blocks.pop();\n      this.stage.remove(lastBlock.mesh);\n      lastBlock = new Block({\n        dimension,\n        position,\n        color,\n        axis\n      }, true);\n      this.blocks.push(lastBlock);\n      this.stage.add(lastBlock.mesh);\n      const fallingBlock = new FallingBlock({\n        dimension: dimensionFalling,\n        position: positionFalling,\n        color\n      });\n      this.fallingBlocks.push(fallingBlock);\n      this.stage.add(fallingBlock.mesh);\n    }\n\n    this.scoreContainer.innerHTML = String(this.blocks.length - 1);\n    const newBlock = new Block(lastBlock);\n    this.stage.add(newBlock.mesh);\n    this.blocks.push(newBlock);\n    this.stage.setCamera(this.blocks.length * 2);\n  }\n\n  setState(state) {\n    const oldState = this.state;\n    this.mainContainer.classList.remove(this.state);\n    this.state = state;\n    this.mainContainer.classList.add(this.state);\n    return oldState;\n  }\n\n  tick() {\n    if (this.blocks.length > 1) {\n      this.blocks[this.blocks.length - 1].tick(this.blocks.length / 10);\n    }\n\n    this.fallingBlocks.forEach(block => block.tick());\n    this.fallingBlocks = this.fallingBlocks.filter(block => {\n      if (block.position.y > 0) {\n        return true;\n      } else {\n        this.stage.remove(block.mesh);\n        return false;\n      }\n    });\n    this.stage.render();\n    requestAnimationFrame(() => {\n      this.tick();\n    });\n  }\n\n}\n\nmodule.exports = Game;","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/BloxStack/game.js"],"names":["Stage","require","NormalBlock","Block","FallingBlock","Game","constructor","STATES","LOADING","PLAYING","READY","ENDED","RESETTING","blocks","fallingBlocks","state","stage","mainContainer","document","getElementById","scoreContainer","startButton","instructions","innerHTML","music","addBlock","tick","key","classList","remove","setState","addEventListener","e","keyCode","handleEvent","play","forEach","block","mesh","lastBlock","length","lastToLastBlock","axis","dimensionAlongAxis","getAxis","distance","position","dimension","positionFalling","dimensionFalling","color","newLength","Math","abs","pause","pop","push","add","fallingBlock","String","newBlock","setCamera","oldState","filter","y","render","requestAnimationFrame","module","exports"],"mappings":"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","sourcesContent":["const Stage = require('./stage');\nconst { NormalBlock: Block, FallingBlock } = require('./block');\n\nclass Game {\n  constructor() {\n    this.STATES = {\n      LOADING: 'loading',\n      PLAYING: 'playing',\n      READY: 'ready',\n      ENDED: 'ended',\n      RESETTING: 'resetting'\n    }\n\n    this.blocks = [];\n    this.fallingBlocks = [];\n    this.state = this.STATES.LOADING;\n\n    this.stage = new Stage();\n\n    this.mainContainer = document.getElementById('container');\n    this.scoreContainer = document.getElementById('score');\n    this.startButton = document.getElementById('start-button');\n    this.instructions = document.getElementById('instructions');\n    this.scoreContainer.innerHTML = '0';\n\n    this.music = document.getElementById('music')\n\n    this.addBlock();\n    this.tick();\n\n    for (let key in this.STATES) {\n      this.mainContainer.classList.remove(this.STATES[key]);\n    }\n    this.setState(this.STATES.READY);\n\n    document.addEventListener('keydown', e => {\n      if(e.keyCode === 32) { // Space\n        this.handleEvent();\n      }\n    });\n\n    document.addEventListener('click', e => {\n      this.handleEvent();\n    });\n\n    document.addEventListener('touchend', e => {\n      this.handleEvent();\n    });\n  }\n\n  handleEvent() {\n    switch (this.state) {\n      case this.STATES.READY:\n        this.setState(this.STATES.PLAYING);\n        this.music.play();\n        this.addBlock();\n        break;\n      case this.STATES.PLAYING:\n        this.addBlock();\n        break;\n      case this.STATES.ENDED:\n        this.blocks.forEach(block => {\n          this.stage.remove(block.mesh);\n        })\n        this.blocks = [];\n        this.scoreContainer.innerHTML = '0';\n        this.addBlock();\n        this.setState(this.STATES.READY);\n        break;\n      default:\n        break;\n    }\n  }\n\n  addBlock() {\n    let lastBlock = this.blocks[this.blocks.length - 1];\n    const lastToLastBlock = this.blocks[this.blocks.length - 2];\n    \n    if (lastBlock && lastToLastBlock) {\n      const { axis, dimensionAlongAxis } = lastBlock.getAxis();\n      const distance = lastBlock.position[axis] - lastToLastBlock.position[axis];\n      let position, dimension;\n      let positionFalling, dimensionFalling;\n      const { color } = lastBlock;\n      const newLength = lastBlock.dimension[dimensionAlongAxis] - Math.abs(distance);\n\n      if (newLength <= 0) {\n        this.stage.remove(lastBlock.mesh);\n        this.setState(this.STATES.ENDED);\n        this.music.pause();\n        return;\n      }\n\n      dimension = { ...lastBlock.dimension }\n      dimension[dimensionAlongAxis] = newLength;\n\n      dimensionFalling = { ...lastBlock.dimension }\n      dimensionFalling[dimensionAlongAxis] = Math.abs(distance)\n\n      if (distance >= 0) {\n        position = lastBlock.position;\n\n        positionFalling = { ...lastBlock.position };\n        positionFalling[axis] = lastBlock.position[axis] + newLength;\n      } else {\n        position = { ...lastBlock.position };\n        position[axis] = lastBlock.position[axis] + Math.abs(distance);\n\n        positionFalling = { ...lastBlock.position };\n        positionFalling[axis] = lastBlock.position[axis] - Math.abs(distance);\n      }\n\n      this.blocks.pop();\n      this.stage.remove(lastBlock.mesh);\n      lastBlock = new Block({ dimension, position, color, axis }, true);\n\n      this.blocks.push(lastBlock);\n      this.stage.add(lastBlock.mesh);\n\n      const fallingBlock = new FallingBlock({\n        dimension: dimensionFalling,\n        position: positionFalling,\n        color,\n      });\n\n      this.fallingBlocks.push(fallingBlock);\n      this.stage.add(fallingBlock.mesh);\n    }\n\n    this.scoreContainer.innerHTML = String(this.blocks.length - 1);\n\n    const newBlock = new Block(lastBlock);\n    this.stage.add(newBlock.mesh);\n    this.blocks.push(newBlock);\n\n    this.stage.setCamera(this.blocks.length * 2);\n  }\n\n  setState(state) {\n    const oldState = this.state;\n    this.mainContainer.classList.remove(this.state);\n    this.state = state;\n    this.mainContainer.classList.add(this.state);\n    return oldState;\n  }\n\n  tick() {\n    if (this.blocks.length > 1) {\n      this.blocks[this.blocks.length - 1].tick(this.blocks.length/10);\n    }\n    this.fallingBlocks.forEach(block => block.tick());\n    this.fallingBlocks = this.fallingBlocks.filter(block => {\n      if (block.position.y > 0) {\n        return true;\n      } else {\n        this.stage.remove(block.mesh);\n        return false;\n      }\n    });\n    this.stage.render();\n    requestAnimationFrame(() => {this.tick()});\n  }\n}\n\nmodule.exports = Game;\n"]},"metadata":{},"sourceType":"module"}