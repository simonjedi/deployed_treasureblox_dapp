{"ast":null,"code":"import { EventEmitter } from \"events\";\nimport { generateChildLogger, getLoggerContext } from \"@walletconnect/logger\";\nimport { IPairing } from \"@walletconnect/types\";\nimport { formatUri, mergeArrays } from \"@walletconnect/utils\";\nimport { State } from \"./state\";\nimport { Engine } from \"./engine\";\nimport { JsonRpcHistory } from \"./history\";\nimport { PAIRING_CONTEXT, PAIRING_EVENTS, PAIRING_JSONRPC, PAIRING_STATUS, PAIRING_SIGNAL_METHOD_URI, SESSION_JSONRPC, PAIRING_DEFAULT_TTL } from \"../constants\";\nexport class Pairing extends IPairing {\n  constructor(client, logger) {\n    super(client, logger);\n    this.client = client;\n    this.logger = logger;\n    this.events = new EventEmitter();\n    this.name = PAIRING_CONTEXT;\n    this.config = {\n      status: PAIRING_STATUS,\n      events: PAIRING_EVENTS,\n      jsonrpc: PAIRING_JSONRPC\n    };\n    this.logger = generateChildLogger(logger, this.name);\n    this.pending = new State(client, this.logger, this.config.status.pending);\n    this.settled = new State(client, this.logger, this.config.status.settled);\n    this.history = new JsonRpcHistory(client, this.logger);\n    this.engine = new Engine(this);\n  }\n\n  async init() {\n    this.logger.trace(`Initialized`);\n    await this.pending.init();\n    await this.settled.init();\n    await this.history.init();\n  }\n\n  get(topic) {\n    return this.settled.get(topic);\n  }\n\n  find(permissions) {\n    return this.engine.find(permissions);\n  }\n\n  ping(topic, timeout) {\n    return this.engine.ping(topic, timeout);\n  }\n\n  send(topic, payload) {\n    return this.engine.send(topic, payload);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get length() {\n    return this.settled.length;\n  }\n\n  get topics() {\n    return this.settled.topics;\n  }\n\n  get values() {\n    return this.settled.values;\n  }\n\n  create(params) {\n    return this.engine.create(params);\n  }\n\n  respond(params) {\n    return this.engine.respond(params);\n  }\n\n  upgrade(params) {\n    return this.engine.upgrade(params);\n  }\n\n  update(params) {\n    return this.engine.update(params);\n  }\n\n  request(params) {\n    return this.engine.request(params);\n  }\n\n  delete(params) {\n    return this.engine.delete(params);\n  }\n\n  notify(params) {\n    return this.engine.notify(params);\n  }\n\n  on(event, listener) {\n    this.events.on(event, listener);\n  }\n\n  once(event, listener) {\n    this.events.once(event, listener);\n  }\n\n  off(event, listener) {\n    this.events.off(event, listener);\n  }\n\n  removeListener(event, listener) {\n    this.events.removeListener(event, listener);\n  }\n\n  async mergeUpdate(topic, update) {\n    const settled = await this.settled.get(topic);\n    const state = {\n      metadata: update.state.metadata || settled.state.metadata\n    };\n    return state;\n  }\n\n  async mergeUpgrade(topic, upgrade) {\n    var _a, _b, _c;\n\n    const settled = await this.settled.get(topic);\n    const permissions = {\n      jsonrpc: {\n        methods: mergeArrays(settled.permissions.jsonrpc.methods, ((_a = upgrade.permissions.jsonrpc) === null || _a === void 0 ? void 0 : _a.methods) || [])\n      },\n      notifications: {\n        types: mergeArrays(((_b = settled.permissions.notifications) === null || _b === void 0 ? void 0 : _b.types) || [], ((_c = upgrade.permissions.notifications) === null || _c === void 0 ? void 0 : _c.types) || [])\n      },\n      controller: settled.permissions.controller\n    };\n    return permissions;\n  }\n\n  async validateRespond(params) {}\n\n  async validateRequest(params) {}\n\n  async validatePropose(params) {}\n\n  async getDefaultSignal({\n    topic,\n    relay,\n    proposer\n  }) {\n    const uri = formatUri({\n      protocol: this.client.protocol,\n      version: this.client.version,\n      topic: topic,\n      publicKey: proposer.publicKey,\n      controller: proposer.controller,\n      relay: relay\n    });\n    const signal = {\n      method: PAIRING_SIGNAL_METHOD_URI,\n      params: {\n        uri\n      }\n    };\n    return signal;\n  }\n\n  async getDefaultTTL() {\n    return PAIRING_DEFAULT_TTL;\n  }\n\n  async getDefaultPermissions() {\n    const permissions = {\n      jsonrpc: {\n        methods: [SESSION_JSONRPC.propose]\n      },\n      notifications: {\n        types: []\n      }\n    };\n    return permissions;\n  }\n\n}","map":{"version":3,"sources":["../../../src/controllers/pairing.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { EventEmitter } from \"events\";\nimport { generateChildLogger, getLoggerContext } from \"@walletconnect/logger\";\nimport { IPairing } from \"@walletconnect/types\";\nimport { formatUri, mergeArrays } from \"@walletconnect/utils\";\nimport { State } from \"./state\";\nimport { Engine } from \"./engine\";\nimport { JsonRpcHistory } from \"./history\";\nimport { PAIRING_CONTEXT, PAIRING_EVENTS, PAIRING_JSONRPC, PAIRING_STATUS, PAIRING_SIGNAL_METHOD_URI, SESSION_JSONRPC, PAIRING_DEFAULT_TTL, } from \"../constants\";\nexport class Pairing extends IPairing {\n    constructor(client, logger) {\n        super(client, logger);\n        this.client = client;\n        this.logger = logger;\n        this.events = new EventEmitter();\n        this.name = PAIRING_CONTEXT;\n        this.config = {\n            status: PAIRING_STATUS,\n            events: PAIRING_EVENTS,\n            jsonrpc: PAIRING_JSONRPC,\n        };\n        this.logger = generateChildLogger(logger, this.name);\n        this.pending = new State(client, this.logger, this.config.status.pending);\n        this.settled = new State(client, this.logger, this.config.status.settled);\n        this.history = new JsonRpcHistory(client, this.logger);\n        this.engine = new Engine(this);\n    }\n    async init() {\n        this.logger.trace(`Initialized`);\n        await this.pending.init();\n        await this.settled.init();\n        await this.history.init();\n    }\n    get(topic) {\n        return this.settled.get(topic);\n    }\n    find(permissions) {\n        return this.engine.find(permissions);\n    }\n    ping(topic, timeout) {\n        return this.engine.ping(topic, timeout);\n    }\n    send(topic, payload) {\n        return this.engine.send(topic, payload);\n    }\n    get context() {\n        return getLoggerContext(this.logger);\n    }\n    get length() {\n        return this.settled.length;\n    }\n    get topics() {\n        return this.settled.topics;\n    }\n    get values() {\n        return this.settled.values;\n    }\n    create(params) {\n        return this.engine.create(params);\n    }\n    respond(params) {\n        return this.engine.respond(params);\n    }\n    upgrade(params) {\n        return this.engine.upgrade(params);\n    }\n    update(params) {\n        return this.engine.update(params);\n    }\n    request(params) {\n        return this.engine.request(params);\n    }\n    delete(params) {\n        return this.engine.delete(params);\n    }\n    notify(params) {\n        return this.engine.notify(params);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    async mergeUpdate(topic, update) {\n        const settled = await this.settled.get(topic);\n        const state = {\n            metadata: update.state.metadata || settled.state.metadata,\n        };\n        return state;\n    }\n    async mergeUpgrade(topic, upgrade) {\n        var _a, _b, _c;\n        const settled = await this.settled.get(topic);\n        const permissions = {\n            jsonrpc: {\n                methods: mergeArrays(settled.permissions.jsonrpc.methods, ((_a = upgrade.permissions.jsonrpc) === null || _a === void 0 ? void 0 : _a.methods) || []),\n            },\n            notifications: {\n                types: mergeArrays(((_b = settled.permissions.notifications) === null || _b === void 0 ? void 0 : _b.types) || [], ((_c = upgrade.permissions.notifications) === null || _c === void 0 ? void 0 : _c.types) || []),\n            },\n            controller: settled.permissions.controller,\n        };\n        return permissions;\n    }\n    async validateRespond(params) {\n    }\n    async validateRequest(params) {\n    }\n    async validatePropose(params) {\n    }\n    async getDefaultSignal({ topic, relay, proposer }) {\n        const uri = formatUri({\n            protocol: this.client.protocol,\n            version: this.client.version,\n            topic: topic,\n            publicKey: proposer.publicKey,\n            controller: proposer.controller,\n            relay: relay,\n        });\n        const signal = {\n            method: PAIRING_SIGNAL_METHOD_URI,\n            params: { uri },\n        };\n        return signal;\n    }\n    async getDefaultTTL() {\n        return PAIRING_DEFAULT_TTL;\n    }\n    async getDefaultPermissions() {\n        const permissions = {\n            jsonrpc: {\n                methods: [SESSION_JSONRPC.propose],\n            },\n            notifications: {\n                types: [],\n            },\n        };\n        return permissions;\n    }\n}\n//# sourceMappingURL=pairing.js.map"]},"metadata":{},"sourceType":"module"}