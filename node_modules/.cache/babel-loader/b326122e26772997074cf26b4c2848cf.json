{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/treasure-blox/src/App.js\";\nimport { Button, Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport MyNav from './components/Structure/Nav';\nimport MyCards from './components/Structure/Cards';\nimport SingleCard from './components/Structure/SingleCard'; // import img1 from './Treasure-hunt.jpeg';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react';\nimport Web3 from 'web3'; // var web3 = Web3();\n// window.web3 = web3;\n//\n// web3.setProvider(new web3.providers.HttpProvider('http://localhost:8545'));\n//\n// ethereumButton.addEventListener('click', () => {\n//   getAccount();\n// });\n//\n//\n//\n// async function getAccount() {\n//   const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n//   const account = accounts[0];\n//   showAccount.innerHTML = account;\n// }\n//\n//\n// next we'll create a new instance of web3.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar web3 = new Web3(); // Set the provider\n\nweb3.setProvider(new Web3.providers.WebsocketProvider('ws://localhost:8545'));\n\nconst abi = require('./TreasureBlox.abi.json');\n\nconst mepAddress = '0xaE0dd156fC8F5c0FFaB71b0Fb1908d1aBD4B1Df2';\nlet mep = new web3.eth.Contract(abi, mepAddress); // function checkBalance() {  web3.eth.personal.getAccounts().then(accounts => {console.log('accounts', accounts);\n//\n//     web3.eth.getBalance(accounts[0]).then(balance => {console.log('balance[0]', balance);\n//\n//     });\n//   });\n// }\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    console.log(\"Accounts: \", accounts);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: ''\n    };\n    this.state = {\n      isToggleOn: true\n    }; // This binding is necessary to make `this` work in the callback\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background customFont\",\n      children: [/*#__PURE__*/_jsxDEV(MyNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SingleCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.handleClick,\n        children: this.state.isToggleOn ? 'ON' : 'OFF'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MyCards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MyCards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/treasure-blox/src/App.js"],"names":["Button","Container","Nav","Navbar","NavDropdown","MyNav","MyCards","SingleCard","React","Component","Web3","web3","setProvider","providers","WebsocketProvider","abi","require","mepAddress","mep","eth","Contract","App","componentWillMount","loadBlockchainData","givenProvider","accounts","getAccounts","setState","account","console","log","constructor","props","state","isToggleOn","handleClick","bind","prevState","render"],"mappings":";AAAA,SAASA,MAAT,EAAgBC,SAAhB,EAA0BC,GAA1B,EAA8BC,MAA9B,EAAqCC,WAArC,QAAwD,iBAAxD;AAEA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,UAAP,MAAuB,mCAAvB,C,CAEA;;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;AAGA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;;;AACA,IAAIC,IAAI,GAAG,IAAID,IAAJ,EAAX,C,CAEA;;AACAC,IAAI,CAACC,WAAL,CAAiB,IAAIF,IAAI,CAACG,SAAL,CAAeC,iBAAnB,CAAqC,qBAArC,CAAjB;;AAGA,MAAMC,GAAG,GAAGC,OAAO,CAAC,yBAAD,CAAnB;;AACA,MAAMC,UAAU,GAAG,4CAAnB;AAEA,IAAIC,GAAG,GAAG,IAAIP,IAAI,CAACQ,GAAL,CAASC,QAAb,CAAsBL,GAAtB,EAA0BE,UAA1B,CAAV,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,MAAMI,GAAN,SAAkBZ,SAAlB,CAA4B;AAC1Ba,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,kBAAL;AACD;;AAEuB,QAAlBA,kBAAkB,GAAG;AACzB,UAAMZ,IAAI,GAAG,IAAID,IAAJ,CAASA,IAAI,CAACc,aAAL,IAAsB,uBAA/B,CAAb;AACA,UAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACQ,GAAL,CAASO,WAAT,EAAvB;AACA,SAAKC,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAEH,QAAQ,CAAC,CAAD;AAAnB,KAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBL,QAAzB;AAED;;AAEDM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEL,MAAAA,OAAO,EAAE;AAAX,KAAb;AACA,SAAKK,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb,CAHiB,CAKjB;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,SAAKR,QAAL,CAAcU,SAAS,KAAK;AAC1BH,MAAAA,UAAU,EAAE,CAACG,SAAS,CAACH;AADG,KAAL,CAAvB;AAGD;;AAkBDI,EAAAA,MAAM,GAAG;AAEP,wBACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKH,WAAtB;AAAA,kBACS,KAAKF,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B;AADxC;AAAA;AAAA;AAAA;AAAA,cALF,eASE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcD;;AA5DyB;;AA+D5B,eAAeb,GAAf","sourcesContent":["import { Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport MyNav from './components/Structure/Nav';\nimport MyCards from './components/Structure/Cards';\nimport SingleCard from './components/Structure/SingleCard';\n\n// import img1 from './Treasure-hunt.jpeg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport React, { Component } from 'react'\nimport Web3 from 'web3'\n\n\n\n// var web3 = Web3();\n// window.web3 = web3;\n//\n// web3.setProvider(new web3.providers.HttpProvider('http://localhost:8545'));\n//\n// ethereumButton.addEventListener('click', () => {\n//   getAccount();\n// });\n//\n//\n//\n// async function getAccount() {\n//   const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n//   const account = accounts[0];\n//   showAccount.innerHTML = account;\n// }\n//\n//\n\n\n\n\n// next we'll create a new instance of web3.\nvar web3 = new Web3();\n\n// Set the provider\nweb3.setProvider(new Web3.providers.WebsocketProvider('ws://localhost:8545')\n);\n\nconst abi = require('./TreasureBlox.abi.json');\nconst mepAddress = '0xaE0dd156fC8F5c0FFaB71b0Fb1908d1aBD4B1Df2'\n\nlet mep = new web3.eth.Contract(abi,mepAddress);\n\n\n// function checkBalance() {  web3.eth.personal.getAccounts().then(accounts => {console.log('accounts', accounts);\n//\n//     web3.eth.getBalance(accounts[0]).then(balance => {console.log('balance[0]', balance);\n//\n//     });\n//   });\n// }\n\n\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    console.log(\"Accounts: \",accounts)\n\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = { account: '' };\n    this.state = {isToggleOn: true};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  render() {\n\n    return (\n        <div className=\"background customFont\">\n\n          <MyNav />\n          <SingleCard/>\n\n          <Button onClick={this.handleClick}>\n                  {this.state.isToggleOn ? 'ON' : 'OFF'}\n                </Button>\n\n          <MyCards/>\n          <MyCards/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}