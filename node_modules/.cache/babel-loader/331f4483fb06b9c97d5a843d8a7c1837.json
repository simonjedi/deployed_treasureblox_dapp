{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/treasure-blox/src/Connection.js\",\n    _s = $RefreshSig$();\n\n// App.js\nimport React from 'react';\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Connection() {\n  _s();\n\n  const wallet = useWallet();\n\n  const connectWallet = async e => {\n    e.preventDefault();\n    await wallet.connect();\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    // <button onClick={connectWallet}>Connect Wallet</button>\n    // </div>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), wallet.status === 'connected' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Account: \", wallet.account]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Balance: \", wallet.balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => wallet.reset(),\n          children: \"disconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Connect:\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => wallet.connect(),\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  );\n} // Wrap everything in <UseWalletProvider />\n\n\n_s(Connection, \"i+/qxb0flJRE8MgvazOGMkNRtsk=\", false, function () {\n  return [useWallet];\n});\n\n_c = Connection;\nexport default (() => /*#__PURE__*/_jsxDEV(UseWalletProvider, {\n  chainId: 1337,\n  connectors: {\n    // This is how connectors get configured\n    provided: {\n      provider: window.cleanEthereum\n    }\n  },\n  children: /*#__PURE__*/_jsxDEV(Connection, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 3\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"Connection\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/treasure-blox/src/Connection.js"],"names":["React","useWallet","UseWalletProvider","Connection","wallet","connectWallet","e","preventDefault","connect","status","account","balance","reset","provided","provider","window","cleanEthereum"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,YAA7C;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;;AAEA,QAAMI,aAAa,GAAG,MAAMC,CAAN,IAAY;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMH,MAAM,CAACI,OAAP,EAAN;AAED,GAJD;;AAMA;AAAA;AAEE;AACA;AACA;AAEA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGJ,MAAM,CAACK,MAAP,KAAkB,WAAlB,gBACC;AAAA,gCACE;AAAA,kCAAeL,MAAM,CAACM,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCAAeN,MAAM,CAACO,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,OAAO,EAAE,MAAMP,MAAM,CAACQ,KAAP,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAOC;AAAA,4CAEE;AAAQ,UAAA,OAAO,EAAE,MAAMR,MAAM,CAACI,OAAP,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AANF;AAuBD,C,CAED;;;GAlCSL,U;UACQF,S;;;KADRE,U;AAmCT,gBAAe,mBACb,QAAC,iBAAD;AACE,EAAA,OAAO,EAAE,IADX;AAEE,EAAA,UAAU,EAAE;AACV;AACAU,IAAAA,QAAQ,EAAE;AAACC,MAAAA,QAAQ,EAAEC,MAAM,CAACC;AAAlB;AAFA,GAFd;AAAA,yBAOE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,QADF","sourcesContent":["// App.js\n\nimport React from 'react'\nimport { useWallet, UseWalletProvider } from 'use-wallet'\n\nfunction Connection() {\n  const wallet = useWallet()\n\n  const connectWallet = async(e) => {\n    e.preventDefault()\n    await wallet.connect()\n\n  }\n\n  return (\n\n    // <div>\n    // <button onClick={connectWallet}>Connect Wallet</button>\n    // </div>\n\n    <>\n      <h1>Wallet</h1>\n      {wallet.status === 'connected' ? (\n        <div>\n          <div>Account: {wallet.account}</div>\n          <div>Balance: {wallet.balance}</div>\n          <button onClick={() => wallet.reset()}>disconnect</button>\n        </div>\n      ) : (\n        <div>\n          Connect:\n          <button onClick={() => wallet.connect()}>Connect Wallet</button>\n\n        </div>\n      )}\n    </>\n  )\n}\n\n// Wrap everything in <UseWalletProvider />\nexport default () => (\n  <UseWalletProvider\n    chainId={1337}\n    connectors={{\n      // This is how connectors get configured\n      provided: {provider: window.cleanEthereum},\n    }}\n  >\n    <Connection />\n  </UseWalletProvider>\n)\n"]},"metadata":{},"sourceType":"module"}