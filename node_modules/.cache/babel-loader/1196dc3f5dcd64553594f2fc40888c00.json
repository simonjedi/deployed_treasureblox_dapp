{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport MyNav from './MyNav';\nimport SingleCard from './components/Structure/Game1/SingleCard';\nimport moment from 'moment'; // import img1 from './Treasure-hunt.jpeg';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component, useState, useEffect } from 'react';\nimport getWeb3 from \"./getWeb3\";\nimport Connection from \"./Connection\";\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Hunt1 from \"./Hunt1\";\nimport Hunt2 from \"./Hunt2\";\nimport User from './components/Structure/Game1/User';\nimport { Helmet } from 'react-helmet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [web3, setWeb3] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [tokenContract, setTokenContract] = useState(null);\n  const [decimals, setDecimals] = useState(null);\n  const [totalTreasure, setTotalTreasure] = useState(null); // GAME 1\n\n  const [game1_id, setGame1_id] = useState(undefined);\n  const [game1_live, setGame1_live] = useState(undefined);\n  const [game1_prize, setGame1_prize] = useState(undefined);\n  const [game1_question_hash, setGame1_question_hash] = useState(undefined);\n  const [game1_time_lock_cost, setgame1_time_lock_cost] = useState(undefined);\n  const [game1_submit_secret_cost, setGame1_submit_secret_cost] = useState(undefined);\n  const [game1_riddle, setGame1_riddle] = useState(undefined);\n  const [game1_clue, setGame1_clue] = useState(undefined);\n  const [game1_head_start_time, setGame1_head_start_time] = useState(undefined);\n  const [game1_entry_limit, setGame1_entry_limit] = useState(undefined);\n  const [game1_entry_cost, setGame1_entry_cost] = useState(undefined);\n  const [allGame1_id, setallGame1_id] = useState(undefined);\n  const [allGame1_user_front_of_que, setallGame1_user_front_of_que] = useState(undefined);\n  const [allGame1_deadline_time, setallGame1_deadline] = useState(undefined);\n  const [allGame1_username, setallGame1_username] = useState(undefined);\n  const [allGame1_total_game_tries, setallGame1_total_game_tries] = useState(undefined);\n  const [countGame1, setTimeGame1] = useState(90);\n  const [countGame1DeadlineTrue, setcountGame1DeadlineTrue] = useState(false);\n  const [game1numberOfEntries, setGame1numberOfEntries] = useState(0);\n  const [game1huntEntries, setGame1huntEntries] = useState(undefined);\n  const [userGame1_id, setUserGame1_id] = useState(undefined);\n  const [userEntered_game1, setUserEntered_game1] = useState(undefined);\n  const [userGame1_headstart_time, setUserGame1_headstart_time] = useState(undefined);\n  const [userGame1_live, setUserGame1_live] = useState(undefined);\n  const [winning_address1, setWinning_address1] = useState(undefined);\n  const [treasure_found1, setTreasure_found1] = useState(undefined);\n  const [winning_prize1, setWinning_prize1] = useState(undefined);\n  const [question_hash_solved1, setQuestion_hash_solved1] = useState(undefined);\n  const [winning_message1, setWinning_message1] = useState(undefined);\n  const [attemptId1, setAttemptId1] = useState(undefined);\n  const [attemptAddress1, setAttemptAddress1] = useState(undefined);\n  const [attemptUsername1, setAttemptUsername1] = useState(undefined);\n  const [attemptDeadline1, setAttemptDeadline1] = useState(undefined);\n  const [totalGameEntriesGame1, settotalGameEntriesGame1] = useState(false); // Leaderboard\n\n  const [game1LeaderBoardIndex, setgame1LeaderBoardIndex] = useState([\"Loading\"]);\n  const [game1LeaderBoardGameID, setgame1LeaderBoardGameID] = useState([\"Loading\"]);\n  const [game1LeaderBoardAddress, setgame1LeaderBoardAddress] = useState([\"Loading\"]);\n  const [game1LeaderBoardEntered, setgame1LeaderBoardEntered] = useState([\"Loading\"]);\n  const [game1LeaderBoardUsername, setgame1LeaderBoardUsername] = useState([\"Loading\"]);\n  const [game1LeaderBoardTries, setgame1LeaderBoardTries] = useState([\"Loading\"]);\n  const [game1LeaderBoardStage, setgame1LeaderBoardStage] = useState([\"Loading\"]);\n  const [game1LeaderBoard, setgame1LeaderBoard] = useState([\"Loading\"]);\n  const [game1UserList, setGame1UserList] = useState([\"Loading\"]); // Leaderbaord Address Search\n\n  const [state_leaderboardAddressSearch_huntid_game1, setleaderboardAddressSearch_huntid_game1] = useState(false);\n  const [state_leaderboardAddressSearch_address_game1, setleaderboardAddressSearch_address_game1] = useState(false);\n  const [state_leaderboardAddressSearch_entered_game1, setleaderboardAddressSearch_entered_game1] = useState(false);\n  const [state_leaderboardAddressSearch_username_game1, setleaderboardAddressSearch_username_game1] = useState(false);\n  const [state_leaderboardAddressSearch_tries_game1, setleaderboardAddressSearch_tries_game1] = useState(false);\n  const [state_leaderboardAddressSearch_stage_game1, setleaderboardAddressSearch_stage_game1] = useState(false);\n  const [state_WinnerEstPrizeGame1, setWinnerEstPrizeGame1] = useState(false); // GAME 2\n\n  const [game2_id, setGame2_id] = useState(undefined);\n  const [game2_live, setGame2_live] = useState(undefined);\n  const [game2_prize, setGame2_prize] = useState(undefined);\n  const [game2_question_hash, setGame2_question_hash] = useState(undefined);\n  const [game2_time_lock_cost, setgame2_time_lock_cost] = useState(undefined);\n  const [game2_submit_secret_cost, setGame2_submit_secret_cost] = useState(undefined);\n  const [game2_riddle, setGame2_riddle] = useState(undefined);\n  const [game2_clue, setGame2_clue] = useState(undefined);\n  const [game2_head_start_time, setGame2_head_start_time] = useState(undefined);\n  const [game2_entry_limit, setGame2_entry_limit] = useState(undefined);\n  const [game2_entry_cost, setGame2_entry_cost] = useState(undefined);\n  const [allGame2_id, setallGame2_id] = useState(undefined);\n  const [allGame2_user_front_of_que, setallGame2_user_front_of_que] = useState(undefined);\n  const [allGame2_deadline_time, setallGame2_deadline] = useState(undefined);\n  const [allGame2_username, setallGame2_username] = useState(undefined);\n  const [allGame2_total_game_tries, setallGame2_total_game_tries] = useState(undefined);\n  const [countGame2, setTimeGame2] = useState(90);\n  const [countGame2DeadlineTrue, setcountGame2DeadlineTrue] = useState(false);\n  const [game2numberOfEntries, setGame2numberOfEntries] = useState(0);\n  const [game2huntEntries, setGame2huntEntries] = useState(undefined);\n  const [userGame2_id, setUserGame2_id] = useState(undefined);\n  const [userEntered_game2, setUserEntered_game2] = useState(undefined);\n  const [userGame2_headstart_time, setUserGame2_headstart_time] = useState(undefined);\n  const [userGame2_live, setUserGame2_live] = useState(undefined);\n  const [winning_address2, setWinning_address2] = useState(undefined);\n  const [treasure_found2, setTreasure_found2] = useState(undefined);\n  const [winning_prize2, setWinning_prize2] = useState(undefined);\n  const [question_hash_solved2, setQuestion_hash_solved2] = useState(undefined);\n  const [winning_message2, setWinning_message2] = useState(undefined);\n  const [attemptId2, setAttemptId2] = useState(undefined);\n  const [attemptAddress2, setAttemptAddress2] = useState(undefined);\n  const [attemptUsername2, setAttemptUsername2] = useState(undefined);\n  const [attemptDeadline2, setAttemptDeadline2] = useState(undefined);\n  const [loaded, setloaded] = useState(false);\n  const [totalGameEntriesGame2, settotalGameEntriesGame2] = useState(false);\n  const [globalNumberOfTries, setGlobalNumberOfTries] = useState(false); // Leaderboard\n\n  const [game2LeaderBoardIndex, setgame2LeaderBoardIndex] = useState([\"Loading\"]);\n  const [game2LeaderBoardGameID, setgame2LeaderBoardGameID] = useState([\"Loading\"]);\n  const [game2LeaderBoardAddress, setgame2LeaderBoardAddress] = useState([\"Loading\"]);\n  const [game2LeaderBoardEntered, setgame2LeaderBoardEntered] = useState([\"Loading\"]);\n  const [game2LeaderBoardUsername, setgame2LeaderBoardUsername] = useState([\"Loading\"]);\n  const [game2LeaderBoardTries, setgame2LeaderBoardTries] = useState([\"Loading\"]);\n  const [game2LeaderBoardStage, setgame2LeaderBoardStage] = useState([\"Loading\"]);\n  const [game2LeaderBoard, setgame2LeaderBoard] = useState([\"Loading\"]);\n  const [game2UserList, setGame2UserList] = useState([\"Loading\"]); // Leaderbaord Address Search\n\n  const [state_leaderboardAddressSearch_huntid_game2, setleaderboardAddressSearch_huntid_game2] = useState(false);\n  const [state_leaderboardAddressSearch_address_game2, setleaderboardAddressSearch_address_game2] = useState(false);\n  const [state_leaderboardAddressSearch_entered_game2, setleaderboardAddressSearch_entered_game2] = useState(false);\n  const [state_leaderboardAddressSearch_username_game2, setleaderboardAddressSearch_username_game2] = useState(false);\n  const [state_leaderboardAddressSearch_tries_game2, setleaderboardAddressSearch_tries_game2] = useState(false);\n  const [state_leaderboardAddressSearch_stage_game2, setleaderboardAddressSearch_stage_game2] = useState(false);\n  const [state_WinnerEstPrizeGame2, setWinnerEstPrizeGame2] = useState(false);\n  useEffect(() => {\n    const init = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n\n      const abi = require('./TreasureBlox.abi.json');\n\n      const abiToken = require('./TreasureBloxToken.abi.json'); // Set the provider\n      // web3.setProvider(new web3.providers.WebsocketProvider('ws://localhost:8545'));\n      // this.web3.setProvider(new this.web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/'));\n      // LOCAL\n      // const contract = new web3.eth.Contract(abi,\"localhost:8545\" && \"0x9987602E9e9A76CbA7e9DB9217A0962BA8F9e605\");\n      // MainNet\n      // const contract = new web3.eth.Contract(abi,\"https://bsc-dataseed.binance.org/\" && \"0x845f23Ae63b5d03a363f216Ce0BAD4FB12259930\");\n      // Proxy 0x359a72d9F33685c025A6435fE1Cb4dF8fF6736B6\n      // GameV2 0xE2f3578757fe29a481D0221A6d1Ce7A33Ae01170\n\n\n      const contract = new web3.eth.Contract(abi, \"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0xE2f3578757fe29a481D0221A6d1Ce7A33Ae01170\");\n      const tokenContract = new web3.eth.Contract(abiToken, \"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0x359a72d9F33685c025A6435fE1Cb4dF8fF6736B6\"); // TestNet\n      // const contract = new web3.eth.Contract(abi,\"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0xE2f3578757fe29a481D0221A6d1Ce7A33Ae01170\");\n      // Sstart Data Calls\n\n      const decimals = await tokenContract.methods.decimals().call().then(console.log('Yes'));\n      var totalTreasure = await tokenContract.methods.balanceOf(\"0xD10283b232c43924BCc2834bd73F811918851f3C\").call(); // totalTreasure = totalTreasure.substring(0, tokenContract.length-18);\n\n      console.log(totalTreasure, \"Total Treasure token contract\"); // const owner = await contract.methods._owner().call();\n      // const marketingWallet = await contract.methods.marketingWallet().call().then(console.log('marketing Wallet Complete'));\n      //\n      // const total_supply = await contract.methods.totalSupply().call();\n      // const treasure_chest = await contract.methods.treasureChest().call();\n\n      setWeb3(web3);\n      setAccounts(accounts[0]);\n      setContract(contract);\n      setDecimals(decimals);\n      setTotalTreasure(totalTreasure);\n      setTokenContract(tokenContract); // GET GAMES\n      // GAME 1\n\n      const game1 = await contract.methods.Games(1).call();\n      const game1_id = await game1[0];\n      const game1_live = await game1[1];\n      var game1_prize = await game1[2]; // Local Testing\n      // var winnerEstPrizeGame1 = Math.round(game1_prize*.3);\n      // game1_prize = game1_prize;\n\n      var winnerEstPrizeGame1 = game1_prize.substring(0, Math.round(game1_prize * .3).length - 18);\n      setWinnerEstPrizeGame1(winnerEstPrizeGame1);\n      game1_prize = game1_prize.substring(0, game1_prize.length - 18);\n      const game1_question_hash = await game1[3];\n      var game1_time_lock_cost = await game1[4];\n      game1_time_lock_cost = game1_time_lock_cost.substring(0, game1_time_lock_cost.length - 18);\n      var game1_submit_secret_cost = await game1[5];\n      game1_submit_secret_cost = game1_submit_secret_cost.substring(0, game1_submit_secret_cost.length - 18);\n      const game1_riddle = await game1[6];\n      const game1_clue = await game1[7];\n      const game1_head_start_time = await game1[8];\n      const game1_entry_limit = await game1[9];\n      var game1_entry_cost = await game1[10];\n      game1_entry_cost = game1_entry_cost.substring(0, game1_entry_cost.length - 18);\n      setGame1_id(game1_id);\n      setGame1_live(game1_live);\n      setGame1_prize(game1_prize);\n      setGame1_question_hash(game1_question_hash);\n      setgame1_time_lock_cost(game1_time_lock_cost);\n      setGame1_submit_secret_cost(game1_submit_secret_cost);\n      setGame1_riddle(game1_riddle);\n      setGame1_clue(game1_clue);\n      setGame1_head_start_time(game1_head_start_time);\n      setGame1_entry_limit(game1_entry_limit);\n      setGame1_entry_cost(game1_entry_cost); // GAME 2\n\n      const game2 = await contract.methods.Games(2).call();\n      const game2_id = await game2[0];\n      const game2_live = await game2[1];\n      var game2_prize = await game2[2]; // Local Testing\n\n      var winnerEstPrizeGame2 = Math.round(game2_prize * .3);\n      game2_prize = game2_prize; // var winnerEstPrizeGame2 = game2_prize.substring(0, Math.round(game2_prize*.3).length-18);\n\n      setWinnerEstPrizeGame2(winnerEstPrizeGame2); // game2_prize = game2_prize.substring(0, game2_prize.length-18);\n\n      const game2_question_hash = await game2[3];\n      var game2_time_lock_cost = await game2[4];\n      game2_time_lock_cost = game2_time_lock_cost.substring(0, game2_time_lock_cost.length - 18);\n      var game2_submit_secret_cost = await game2[5];\n      game2_submit_secret_cost = game2_submit_secret_cost.substring(0, game2_submit_secret_cost.length - 18);\n      const game2_riddle = await game2[6];\n      const game2_clue = await game2[7];\n      const game2_head_start_time = await game2[8];\n      const game2_entry_limit = await game2[9];\n      var game2_entry_cost = await game2[10];\n      game2_entry_cost = game2_entry_cost.substring(0, game2_entry_cost.length - 18);\n      setGame2_id(game2_id);\n      setGame2_live(game2_live);\n      setGame2_prize(game2_prize);\n      setGame2_question_hash(game2_question_hash);\n      setgame2_time_lock_cost(game2_time_lock_cost);\n      setGame2_submit_secret_cost(game2_submit_secret_cost);\n      setGame2_riddle(game2_riddle);\n      setGame2_clue(game2_clue);\n      setGame2_head_start_time(game2_head_start_time);\n      setGame2_entry_limit(game2_entry_limit);\n      setGame2_entry_cost(game2_entry_cost); //\n      // This Handels the countdown time and collecting information every 1 second so the counter goes down\n\n      const timer = window.setInterval(async () => {\n        var moment = require('moment'); // require\n        // GLOBAL\n\n\n        const globalTries = await contract.methods.totalumberOfTries().call();\n        console.log(\"number of tries:\", globalTries);\n        setGlobalNumberOfTries(globalTries); // GET ALL GAME TIMELINES AND gamesTriess\n        // GAME 1\n\n        const allGame1 = await contract.methods.allGames(1).call();\n        const allGame1_id = await allGame1[0];\n        const allGame1_user_front_of_que = await allGame1[1];\n        const allGame1_deadline_time = await allGame1[2];\n        const allGame1_username = await allGame1[3];\n        const allGame1_total_game_tries = await allGame1[4];\n        const numberOfEntriesGame1 = await contract.methods.numberOfEntries(1).call();\n        const game1huntEntries = await contract.methods.huntEntries(accounts[0], 1).call();\n        const userGame1_id = await game1huntEntries[0];\n        const userEntered_game1 = await game1huntEntries[1];\n        const userGame1_headstart_time = await game1huntEntries[2];\n        const userGame1_live = await game1huntEntries[3];\n        const pot1AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(1).call();\n        const winning_address1 = await pot1AnsweredCorrectly[0];\n        const treasure_found1 = await pot1AnsweredCorrectly[1];\n        var winning_prize1 = await pot1AnsweredCorrectly[2];\n        winning_prize1 = winning_prize1.substring(0, winning_prize1.length - 18);\n        const question_hash_solved1 = await pot1AnsweredCorrectly[3];\n        const winning_message1 = await pot1AnsweredCorrectly[4];\n        const getAllLatestGameAttempts1 = await contract.methods.getAllLatestGameAttempts(1).call();\n        const attemptId1 = await getAllLatestGameAttempts1[0];\n        const attemptAddress1 = await getAllLatestGameAttempts1[1];\n        const attemptDeadline1 = await getAllLatestGameAttempts1[2];\n        const attemptUsername1 = await getAllLatestGameAttempts1[3];\n        const entriesGame1 = await contract.methods.numberOfEntries(1).call();\n        settotalGameEntriesGame1(entriesGame1); // Fetches New Games if required\n        // const item = await contract.getPastEvents('setGameEvent',{});\n        // console.log(item[0].returnValues[0])\n        // console.log(item[0].returnValues[1])\n        // console.log(item[0].returnValues[2])\n\n        var currentStartDate = Date();\n        var startDate = new Date(currentStartDate); // // Hours part from the timestamp\n        // var startDateHours = startDate.getHours();\n        // // Minutes part from the timestamp\n        // var startDateMinutes = startDate.getMinutes();\n        // // Seconds part from the timestamp\n        // var startDateSeconds = startDate.getSeconds();\n        // Do\n\n        var endDateGame1 = new Date(allGame1_deadline_time * 1000); // // Hours part from the timestamp\n        // var endDateHours = endDate.getHours();\n        // // Minutes part from the timestamp\n        // var endDateMinutes = endDate.getMinutes();\n        // // Seconds part from the timestamp\n        // var endDateSeconds = endDate.getSeconds();\n\n        function getDifferenceInDays(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / (1000 * 60 * 60 * 24);\n        }\n\n        function getDifferenceInHours(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / (1000 * 60 * 60);\n        }\n\n        function getDifferenceInMinutes(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / (1000 * 60);\n        }\n\n        function getDifferenceInSeconds(date1, date2) {\n          const diffInMs = Math.abs(date2 - date1);\n          return diffInMs / 1000;\n        } // console.log(getDifferenceInDays(endDate, startDate));\n        // console.log(getDifferenceInHours(endDate, startDate));\n        // console.log(getDifferenceInMinutes(endDate, startDate));\n        // console.log(getDifferenceInSeconds(startDate, endDateGame1));\n\n\n        var timeGame1 = Math.abs(getDifferenceInSeconds(startDate, endDateGame1));\n        setTimeGame1(timeGame1);\n        setTimeGame1(prevTime => prevTime - 1); // <-- Change this line!\n\n        setallGame1_id(allGame1_id);\n        setallGame1_user_front_of_que(allGame1_user_front_of_que);\n        setallGame1_deadline(allGame1_deadline_time);\n        setallGame1_username(allGame1_username);\n        console.log(\"username past: \", allGame1_username);\n        setallGame1_total_game_tries(allGame1_total_game_tries);\n\n        if (endDateGame1 - 1 >= startDate) {\n          setcountGame1DeadlineTrue(true);\n        } else {\n          setcountGame1DeadlineTrue(false);\n        }\n\n        setGame1numberOfEntries(entriesGame1);\n        setUserGame1_id(userGame1_id);\n        setUserEntered_game1(userEntered_game1);\n        setUserGame1_headstart_time(userGame1_headstart_time);\n        setUserGame1_live(userGame1_live);\n        setWinning_address1(winning_address1);\n        setTreasure_found1(treasure_found1);\n        setWinning_prize1(winning_prize1);\n        setQuestion_hash_solved1(question_hash_solved1);\n        setWinning_message1(winning_message1);\n        setAttemptId1(attemptId1);\n        setAttemptAddress1(attemptAddress1);\n        setAttemptUsername1(attemptUsername1);\n        setAttemptDeadline1(attemptDeadline1); // LeaderBoardAddressSearch\n\n        const leaderboardAddressSearch = await contract.methods.leaderboardAddressMapping(accounts[0], 1).call();\n        var leaderboardAddressSearch_huntid_game1 = await leaderboardAddressSearch[0];\n        var leaderboardAddressSearch_address_game1 = await leaderboardAddressSearch[1];\n        var leaderboardAddressSearch_entered_game1 = await leaderboardAddressSearch[2];\n        var leaderboardAddressSearch_username_game1 = await leaderboardAddressSearch[3];\n        var leaderboardAddressSearch_tries_game1 = await leaderboardAddressSearch[4];\n        var leaderboardAddressSearch_stage_game1 = await leaderboardAddressSearch[5];\n        setleaderboardAddressSearch_huntid_game1(leaderboardAddressSearch_huntid_game1);\n        setleaderboardAddressSearch_address_game1(leaderboardAddressSearch_address_game1);\n        setleaderboardAddressSearch_entered_game1(leaderboardAddressSearch_entered_game1);\n        setleaderboardAddressSearch_username_game1(leaderboardAddressSearch_username_game1);\n        setleaderboardAddressSearch_tries_game1(leaderboardAddressSearch_tries_game1);\n        setleaderboardAddressSearch_stage_game1(leaderboardAddressSearch_stage_game1);\n        const noOfEntrys = await contract.methods.numberOfEntries(1).call(); // LeaderBoard\n\n        var game1_leaderboard = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard1 = await leaderBoard;\n          game1_leaderboard.push(leaderboard1);\n        }\n\n        setgame1LeaderBoard(game1_leaderboard);\n        console.log(game1LeaderBoard, \"here\");\n        var game1_indexrows = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          game1_indexrows.push(i);\n        }\n\n        setgame1LeaderBoardIndex(game1_indexrows);\n        var game1_leaderboard_game_id = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard_game_id = await leaderBoard[0];\n          game1_leaderboard_game_id.push(leaderboard_game_id);\n        }\n\n        setgame1LeaderBoardGameID(game1_leaderboard_game_id);\n        var game1_leaderboard_address = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard_address = await leaderBoard[1];\n          game1_leaderboard_address.push(leaderboard_address);\n        }\n\n        setgame1LeaderBoardAddress(game1_leaderboard_address);\n        var game1_leaderboard_entered = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard_entered = await leaderBoard[2];\n          game1_leaderboard_entered.push(leaderboard_entered);\n        }\n\n        setgame1LeaderBoardEntered(game1_leaderboard_entered);\n        var game1_leaderboard_username = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard_username = await leaderBoard[3];\n          game1_leaderboard_username.push(leaderboard_username);\n        }\n\n        setgame1LeaderBoardUsername(game1_leaderboard_username);\n        var game1_leaderboard_tries = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard_tries = await leaderBoard[4];\n          game1_leaderboard_tries.push(leaderboard_tries);\n        }\n\n        setgame1LeaderBoardTries(game1_leaderboard_tries);\n        var game1_leaderboard_stage = [];\n\n        for (var i = 0; i < noOfEntrys; i++) {\n          const leaderBoard = await contract.methods.leaderboard(1, i).call();\n          var leaderboard_stage = await leaderBoard[5];\n          game1_leaderboard_stage.push(leaderboard_stage);\n        }\n\n        setgame1LeaderBoardStage(game1_leaderboard_stage); // GAME 2\n\n        const allGame2 = await contract.methods.allGames(2).call();\n        const allGame2_id = await allGame2[0];\n        const allGame2_user_front_of_que = await allGame2[1];\n        const allGame2_deadline_time = await allGame2[2];\n        const allGame2_username = await allGame2[3];\n        const allGame2_total_game_tries = await allGame2[4];\n        const game2numberOfEntries = await contract.methods.numberOfEntries(2).call();\n        const game2huntEntries = await contract.methods.huntEntries(accounts[0], 2).call();\n        const userGame2_id = await game2huntEntries[0];\n        const userEntered_game2 = await game2huntEntries[1];\n        const userGame2_headstart_time = await game2huntEntries[2];\n        const userGame2_live = await game2huntEntries[3];\n        const numberOfEntriesGame2 = await contract.methods.numberOfEntries(2).call();\n        const pot2AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(2).call();\n        const winning_address2 = await pot2AnsweredCorrectly[0];\n        const treasure_found2 = await pot2AnsweredCorrectly[1];\n        var winning_prize2 = await pot2AnsweredCorrectly[2];\n        winning_prize2 = winning_prize2.substring(0, winning_prize2.length - 18);\n        const question_hash_solved2 = await pot2AnsweredCorrectly[3];\n        const winning_message2 = await pot2AnsweredCorrectly[4];\n        const getAllLatestGameAttempts2 = await contract.methods.getAllLatestGameAttempts(2).call();\n        const attemptId2 = await getAllLatestGameAttempts2[0];\n        const attemptAddress2 = await getAllLatestGameAttempts2[1];\n        const attemptDeadline2 = await getAllLatestGameAttempts2[2];\n        const attemptUsername2 = await getAllLatestGameAttempts2[3];\n        var currentStartDate = Date();\n        var startDate = new Date(currentStartDate); // Do\n\n        var endDateGame2 = new Date(allGame2_deadline_time * 1000);\n        console.log(getDifferenceInSeconds(startDate, endDateGame2));\n        var timeGame2 = Math.abs(getDifferenceInSeconds(startDate, endDateGame2));\n        setTimeGame2(timeGame2);\n        setTimeGame2(prevTime => prevTime - 1); // <-- Change this line!\n\n        setallGame2_id(allGame2_id);\n        setallGame2_user_front_of_que(allGame2_user_front_of_que);\n        setallGame2_deadline(allGame2_deadline_time);\n        setallGame2_username(allGame2_username);\n        setallGame2_total_game_tries(allGame2_total_game_tries);\n\n        if (endDateGame2 - 1 >= startDate) {\n          setcountGame2DeadlineTrue(true);\n        } else {\n          setcountGame2DeadlineTrue(false);\n        }\n\n        setGame2numberOfEntries(game2numberOfEntries);\n        setUserGame2_id(userGame2_id);\n        setUserEntered_game2(userEntered_game2);\n        setUserGame2_headstart_time(userGame2_headstart_time);\n        setUserGame2_live(userGame2_live);\n        setWinning_address2(winning_address2);\n        setTreasure_found2(treasure_found2);\n        setWinning_prize2(winning_prize2);\n        setQuestion_hash_solved2(question_hash_solved2);\n        setWinning_message2(winning_message2);\n        setAttemptId2(attemptId2);\n        setAttemptAddress2(attemptAddress2);\n        setAttemptUsername2(attemptUsername2);\n        setAttemptDeadline2(attemptDeadline2); // LeaderBoardAddressSearch\n\n        const leaderboardAddressSearch2 = await contract.methods.leaderboardAddressMapping(accounts[0], 2).call();\n        var leaderboardAddressSearch_huntid_game2 = await leaderboardAddressSearch2[0];\n        var leaderboardAddressSearch_address_game2 = await leaderboardAddressSearch2[1];\n        var leaderboardAddressSearch_entered_game2 = await leaderboardAddressSearch2[2];\n        var leaderboardAddressSearch_username_game2 = await leaderboardAddressSearch2[3];\n        var leaderboardAddressSearch_tries_game2 = await leaderboardAddressSearch2[4];\n        var leaderboardAddressSearch_stage_game2 = await leaderboardAddressSearch2[5];\n        setleaderboardAddressSearch_huntid_game2(leaderboardAddressSearch_huntid_game2);\n        setleaderboardAddressSearch_address_game2(leaderboardAddressSearch_address_game2);\n        setleaderboardAddressSearch_entered_game2(leaderboardAddressSearch_entered_game2);\n        setleaderboardAddressSearch_username_game2(leaderboardAddressSearch_username_game2);\n        setleaderboardAddressSearch_tries_game2(leaderboardAddressSearch_tries_game2);\n        setleaderboardAddressSearch_stage_game2(leaderboardAddressSearch_stage_game2);\n        const noOfEntrys2 = await contract.methods.numberOfEntries(2).call(); // LeaderBoard\n\n        var game2_leaderboard = [];\n\n        for (var i = 0; i < noOfEntrys2; i++) {\n          const leaderBoard2 = await contract.methods.leaderboard(2, i).call();\n          var leaderboard2 = await leaderBoard2;\n          game2_leaderboard.push(leaderboard2);\n        }\n\n        setgame1LeaderBoard(game2_leaderboard);\n        console.log(game2LeaderBoard, \"here\");\n        var game2_indexrows = [];\n\n        for (var i = 0; i < noOfEntrys2; i++) {\n          game2_indexrows.push(i);\n        }\n\n        setgame1LeaderBoardIndex(game2_indexrows);\n        var game2_leaderboard_game_id = [];\n\n        for (var i = 0; i < noOfEntrys2; i++) {\n          const leaderBoard2 = await contract.methods.leaderboard(2, i).call();\n          var leaderboard_game_id2 = await leaderBoard2[0];\n          game2_leaderboard_game_id.push(leaderboard_game_id2);\n        }\n\n        setgame1LeaderBoardGameID(game2_leaderboard_game_id);\n        var game2_leaderboard_address = [];\n\n        for (var i = 0; i < noOfEntrys2; i++) {\n          const leaderBoard2 = await contract.methods.leaderboard(2, i).call();\n          var leaderboard_address2 = await leaderBoard2[1];\n          game2_leaderboard_address.push(leaderboard_address2);\n        }\n\n        setgame1LeaderBoardAddress(game2_leaderboard_address);\n        var game2_leaderboard_entered = [];\n\n        for (var i = 0; i < noOfEntrys2; i++) {\n          const leaderBoard2 = await contract.methods.leaderboard(2, i).call();\n          var leaderboard_entered2 = await leaderBoard2[2];\n          game2_leaderboard_entered.push(leaderboard_entered2);\n        }\n\n        setgame1LeaderBoardEntered(game2_leaderboard_entered);\n        var game2_leaderboard_username = [];\n\n        for (var i = 0; i < noOfEntrys2; i++) {\n          const leaderBoard2 = await contract.methods.leaderboard(2, i).call();\n          var leaderboard_username2 = await leaderBoard2[3];\n          game2_leaderboard_username.push(leaderboard_username2);\n        }\n\n        setgame1LeaderBoardUsername(game2_leaderboard_username);\n        var game2_leaderboard_tries = [];\n\n        for (var i = 0; i < noOfEntrys2; i++) {\n          const leaderBoard2 = await contract.methods.leaderboard(2, i).call();\n          var leaderboard_tries2 = await leaderBoard2[4];\n          game2_leaderboard_tries.push(leaderboard_tries2);\n        }\n\n        setgame1LeaderBoardTries(game2_leaderboard_tries);\n        var game2_leaderboard_stage = [];\n\n        for (var i = 0; i < noOfEntrys2; i++) {\n          const leaderBoard2 = await contract.methods.leaderboard(2, i).call();\n          var leaderboard_stage2 = await leaderBoard2[5];\n          game2_leaderboard_stage.push(leaderboard_stage2);\n        }\n\n        setgame2LeaderBoardStage(game2_leaderboard_stage);\n      }, 1000); // End of Game timer code\n    };\n\n    init();\n  }, [web3, accounts, contract, tokenContract, decimals, totalTreasure, globalNumberOfTries, // GAME1\n  game1_id, game1_live, game1_prize, game1_question_hash, game1_time_lock_cost, game1_submit_secret_cost, game1_riddle, game1_clue, allGame1_id, allGame1_user_front_of_que, allGame1_deadline_time, allGame1_username, allGame1_total_game_tries, countGame1, countGame1DeadlineTrue, game1_head_start_time, game1_entry_limit, game1_entry_cost, game1numberOfEntries, userGame1_id, userEntered_game1, userGame1_headstart_time, userGame1_live, winning_address1, treasure_found1, winning_prize1, question_hash_solved1, winning_message1, attemptId1, attemptUsername1, attemptDeadline1, attemptAddress1, totalGameEntriesGame1, game1LeaderBoardIndex, game1LeaderBoardGameID, game1LeaderBoardAddress, game1LeaderBoardEntered, game1LeaderBoardUsername, game1LeaderBoardTries, game1LeaderBoardStage, game1LeaderBoard, game1UserList, state_leaderboardAddressSearch_huntid_game1, state_leaderboardAddressSearch_address_game1, state_leaderboardAddressSearch_entered_game1, state_leaderboardAddressSearch_username_game1, state_leaderboardAddressSearch_tries_game1, state_leaderboardAddressSearch_stage_game1, state_WinnerEstPrizeGame1, // GAME2\n  game2_id, game2_live, game2_prize, game2_question_hash, game2_time_lock_cost, game2_submit_secret_cost, game2_riddle, game2_clue, allGame2_id, allGame2_user_front_of_que, allGame2_deadline_time, allGame2_username, allGame2_total_game_tries, countGame2, countGame2DeadlineTrue, game2_head_start_time, game2_entry_limit, game2_entry_cost, game2numberOfEntries, userGame2_id, userEntered_game2, userGame2_headstart_time, userGame2_live, winning_address2, treasure_found2, winning_prize2, question_hash_solved2, winning_message2, attemptId2, attemptUsername2, attemptDeadline2, attemptAddress2, totalGameEntriesGame2, game1LeaderBoardIndex, game1LeaderBoardGameID, game1LeaderBoardAddress, game1LeaderBoardEntered, game1LeaderBoardUsername, game1LeaderBoardTries, game1LeaderBoardStage, game1LeaderBoard, game1UserList, state_leaderboardAddressSearch_huntid_game1, state_leaderboardAddressSearch_address_game1, state_leaderboardAddressSearch_entered_game1, state_leaderboardAddressSearch_username_game1, state_leaderboardAddressSearch_tries_game1, state_leaderboardAddressSearch_stage_game1, state_WinnerEstPrizeGame2]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background customFont\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"TreasureBlox | DAPP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(MyNav, {\n        accounts: accounts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 9\n      }, this), \"// Pages\", /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            game1_id: game1_id,\n            game1_live: game1_live,\n            game1_prize: game1_prize,\n            game1_question_hash: game1_question_hash,\n            game1_time_lock_cost: game1_time_lock_cost,\n            game1_submit_secret_cost: game1_submit_secret_cost,\n            game1_riddle: game1_riddle,\n            game1_clue: game1_clue,\n            game1_head_start_time: game1_head_start_time,\n            game1_entry_limit: game1_entry_limit,\n            game1_entry_cost: game1_entry_cost,\n            allGame1_id: allGame1_id,\n            allGasme1_user_front_of_que: allGame1_user_front_of_que,\n            allGame1_deadline_time: allGame1_deadline_time,\n            allGame1_username: allGame1_username,\n            allGame1_total_game_tries: allGame1_total_game_tries,\n            countGame1: countGame1,\n            countGame1DeadlineTrue: countGame1DeadlineTrue,\n            totalTreasure: totalTreasure,\n            game1numberOfEntries: game1numberOfEntries,\n            game2_id: game2_id,\n            game2_live: game2_live,\n            game2_prize: game2_prize,\n            game2_question_hash: game2_question_hash,\n            game2_time_lock_cost: game2_time_lock_cost,\n            game2_submit_secret_cost: game2_submit_secret_cost,\n            game2_riddle: game2_riddle,\n            game2_clue: game2_clue,\n            game2_head_start_time: game2_head_start_time,\n            game2_entry_limit: game2_entry_limit,\n            game2_entry_cost: game2_entry_cost,\n            allGame2_id: allGame2_id,\n            allGasme2_user_front_of_que: allGame2_user_front_of_que,\n            allGame2_deadline_time: allGame2_deadline_time,\n            allGame2_username: allGame2_username,\n            allGame2_total_game_tries: allGame2_total_game_tries,\n            countGame2: countGame2,\n            countGame2DeadlineTrue: countGame2DeadlineTrue,\n            totalGameEntriesGame1: totalGameEntriesGame1,\n            totalGameEntriesGame2: totalGameEntriesGame2,\n            globalNumberOfTries: globalNumberOfTries,\n            tokenContract: tokenContract\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/hunt1\",\n          children: /*#__PURE__*/_jsxDEV(Hunt1, {\n            web3: web3,\n            game1_id: game1_id,\n            game1_live: game1_live,\n            game1_prize: game1_prize,\n            game1_question_hash: game1_question_hash,\n            game1_time_lock_cost: game1_time_lock_cost,\n            game1_submit_secret_cost: game1_submit_secret_cost,\n            game1_riddle: game1_riddle,\n            game1_clue: game1_clue,\n            game1_head_start_time: game1_head_start_time,\n            game1_entry_limit: game1_entry_limit,\n            game1_entry_cost: game1_entry_cost,\n            allGame1_id: allGame1_id,\n            allGasme1_user_front_of_que: allGame1_user_front_of_que,\n            allGame1_deadline_time: allGame1_deadline_time,\n            allGame1_username: allGame1_username,\n            allGame1_total_game_tries: allGame1_total_game_tries,\n            countGame1: countGame1,\n            countGame1DeadlineTrue: countGame1DeadlineTrue,\n            decimals: decimals,\n            totalTreasure: totalTreasure,\n            contract: contract,\n            accounts: accounts,\n            game1numberOfEntries: game1numberOfEntries,\n            userGame1_id: userGame1_id,\n            userEntered_game1: userEntered_game1,\n            userGame1_headstart_time: userGame1_headstart_time,\n            userGame1_live: userGame1_live,\n            winning_address1: winning_address1,\n            treasure_found1: treasure_found1,\n            winning_prize1: winning_prize1,\n            question_hash_solved1: question_hash_solved1,\n            winning_message1: winning_message1,\n            attemptId1: attemptId1,\n            attemptAddress1: attemptAddress1,\n            attemptUsername1: attemptUsername1,\n            attemptDeadline1: attemptDeadline1,\n            totalGameEntriesGame1: totalGameEntriesGame1,\n            globalNumberOfTries: globalNumberOfTries,\n            game1LeaderBoardIndex: game1LeaderBoardIndex,\n            game1LeaderBoardGameID: game1LeaderBoardGameID,\n            game1LeaderBoardAddress: game1LeaderBoardAddress,\n            game1LeaderBoardEntered: game1LeaderBoardEntered,\n            game1LeaderBoardUsername: game1LeaderBoardUsername,\n            game1LeaderBoardTries: game1LeaderBoardTries,\n            game1LeaderBoardStage: game1LeaderBoardStage,\n            game1LeaderBoard: game1LeaderBoard,\n            game1UserList: game1UserList,\n            state_leaderboardAddressSearch_huntid_game1: state_leaderboardAddressSearch_huntid_game1,\n            state_leaderboardAddressSearch_address_game1: state_leaderboardAddressSearch_address_game1,\n            state_leaderboardAddressSearch_entered_game1: state_leaderboardAddressSearch_entered_game1,\n            state_leaderboardAddressSearch_username_game1: state_leaderboardAddressSearch_username_game1,\n            state_leaderboardAddressSearch_tries_game1: state_leaderboardAddressSearch_tries_game1,\n            state_leaderboardAddressSearch_stage_game1: state_leaderboardAddressSearch_stage_game1,\n            state_WinnerEstPrizeGame1: state_WinnerEstPrizeGame1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/hunt2\",\n          children: /*#__PURE__*/_jsxDEV(Hunt2, {\n            web3: web3,\n            game2_id: game2_id,\n            game2_live: game2_live,\n            game2_prize: game2_prize,\n            game2_question_hash: game2_question_hash,\n            game2_time_lock_cost: game2_time_lock_cost,\n            game2_submit_secret_cost: game2_submit_secret_cost,\n            game2_riddle: game2_riddle,\n            game2_clue: game2_clue,\n            game2_head_start_time: game2_head_start_time,\n            game2_entry_limit: game2_entry_limit,\n            game2_entry_cost: game2_entry_cost,\n            allGame2_id: allGame2_id,\n            allGame2_user_front_of_que: allGame2_user_front_of_que,\n            allGame2_deadline_time: allGame2_deadline_time,\n            allGame2_username: allGame2_username,\n            allGame2_total_game_tries: allGame2_total_game_tries,\n            countGame2: countGame2,\n            countGame2DeadlineTrue: countGame2DeadlineTrue,\n            decimals: decimals,\n            totalTreasure: totalTreasure,\n            contract: contract,\n            accounts: accounts,\n            game2numberOfEntries: game2numberOfEntries,\n            userGame2_id: userGame2_id,\n            userEntered_game2: userEntered_game2,\n            userGame2_headstart_time: userGame2_headstart_time,\n            userGame2_live: userGame2_live,\n            winning_address2: winning_address2,\n            treasure_found2: treasure_found2,\n            winning_prize2: winning_prize2,\n            question_hash_solved2: question_hash_solved2,\n            winning_message2: winning_message2,\n            attemptId2: attemptId2,\n            attemptAddress2: attemptAddress2,\n            attemptUsername2: attemptUsername2,\n            attemptDeadline2: attemptDeadline2,\n            totalGameEntriesGame2: totalGameEntriesGame2,\n            globalNumberOfTries: globalNumberOfTries,\n            game2LeaderBoardIndex: game2LeaderBoardIndex,\n            game2LeaderBoardGameID: game2LeaderBoardGameID,\n            game2LeaderBoardAddress: game2LeaderBoardAddress,\n            game2LeaderBoardEntered: game2LeaderBoardEntered,\n            game2LeaderBoardUsername: game2LeaderBoardUsername,\n            game2LeaderBoardTries: game2LeaderBoardTries,\n            game2LeaderBoardStage: game2LeaderBoardStage,\n            game2LeaderBoard: game2LeaderBoard,\n            game2UserList: game2UserList,\n            state_leaderboardAddressSearch_huntid_game2: state_leaderboardAddressSearch_huntid_game2,\n            state_leaderboardAddressSearch_address_game2: state_leaderboardAddressSearch_address_game2,\n            state_leaderboardAddressSearch_entered_game2: state_leaderboardAddressSearch_entered_game2,\n            state_leaderboardAddressSearch_username_game2: state_leaderboardAddressSearch_username_game2,\n            state_leaderboardAddressSearch_tries_game2: state_leaderboardAddressSearch_tries_game2,\n            state_leaderboardAddressSearch_stage_game2: state_leaderboardAddressSearch_stage_game2,\n            state_WinnerEstPrizeGame2: state_WinnerEstPrizeGame2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1011,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 808,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"SviZe68Zz3mFXqMFxBQmgZlX/t8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/App.js"],"names":["Button","Container","Nav","Navbar","NavDropdown","MyNav","SingleCard","moment","React","Component","useState","useEffect","getWeb3","Connection","useWallet","UseWalletProvider","BrowserRouter","Router","Switch","Route","Link","Redirect","Home","Hunt1","Hunt2","User","Helmet","App","web3","setWeb3","accounts","setAccounts","contract","setContract","tokenContract","setTokenContract","decimals","setDecimals","totalTreasure","setTotalTreasure","game1_id","setGame1_id","undefined","game1_live","setGame1_live","game1_prize","setGame1_prize","game1_question_hash","setGame1_question_hash","game1_time_lock_cost","setgame1_time_lock_cost","game1_submit_secret_cost","setGame1_submit_secret_cost","game1_riddle","setGame1_riddle","game1_clue","setGame1_clue","game1_head_start_time","setGame1_head_start_time","game1_entry_limit","setGame1_entry_limit","game1_entry_cost","setGame1_entry_cost","allGame1_id","setallGame1_id","allGame1_user_front_of_que","setallGame1_user_front_of_que","allGame1_deadline_time","setallGame1_deadline","allGame1_username","setallGame1_username","allGame1_total_game_tries","setallGame1_total_game_tries","countGame1","setTimeGame1","countGame1DeadlineTrue","setcountGame1DeadlineTrue","game1numberOfEntries","setGame1numberOfEntries","game1huntEntries","setGame1huntEntries","userGame1_id","setUserGame1_id","userEntered_game1","setUserEntered_game1","userGame1_headstart_time","setUserGame1_headstart_time","userGame1_live","setUserGame1_live","winning_address1","setWinning_address1","treasure_found1","setTreasure_found1","winning_prize1","setWinning_prize1","question_hash_solved1","setQuestion_hash_solved1","winning_message1","setWinning_message1","attemptId1","setAttemptId1","attemptAddress1","setAttemptAddress1","attemptUsername1","setAttemptUsername1","attemptDeadline1","setAttemptDeadline1","totalGameEntriesGame1","settotalGameEntriesGame1","game1LeaderBoardIndex","setgame1LeaderBoardIndex","game1LeaderBoardGameID","setgame1LeaderBoardGameID","game1LeaderBoardAddress","setgame1LeaderBoardAddress","game1LeaderBoardEntered","setgame1LeaderBoardEntered","game1LeaderBoardUsername","setgame1LeaderBoardUsername","game1LeaderBoardTries","setgame1LeaderBoardTries","game1LeaderBoardStage","setgame1LeaderBoardStage","game1LeaderBoard","setgame1LeaderBoard","game1UserList","setGame1UserList","state_leaderboardAddressSearch_huntid_game1","setleaderboardAddressSearch_huntid_game1","state_leaderboardAddressSearch_address_game1","setleaderboardAddressSearch_address_game1","state_leaderboardAddressSearch_entered_game1","setleaderboardAddressSearch_entered_game1","state_leaderboardAddressSearch_username_game1","setleaderboardAddressSearch_username_game1","state_leaderboardAddressSearch_tries_game1","setleaderboardAddressSearch_tries_game1","state_leaderboardAddressSearch_stage_game1","setleaderboardAddressSearch_stage_game1","state_WinnerEstPrizeGame1","setWinnerEstPrizeGame1","game2_id","setGame2_id","game2_live","setGame2_live","game2_prize","setGame2_prize","game2_question_hash","setGame2_question_hash","game2_time_lock_cost","setgame2_time_lock_cost","game2_submit_secret_cost","setGame2_submit_secret_cost","game2_riddle","setGame2_riddle","game2_clue","setGame2_clue","game2_head_start_time","setGame2_head_start_time","game2_entry_limit","setGame2_entry_limit","game2_entry_cost","setGame2_entry_cost","allGame2_id","setallGame2_id","allGame2_user_front_of_que","setallGame2_user_front_of_que","allGame2_deadline_time","setallGame2_deadline","allGame2_username","setallGame2_username","allGame2_total_game_tries","setallGame2_total_game_tries","countGame2","setTimeGame2","countGame2DeadlineTrue","setcountGame2DeadlineTrue","game2numberOfEntries","setGame2numberOfEntries","game2huntEntries","setGame2huntEntries","userGame2_id","setUserGame2_id","userEntered_game2","setUserEntered_game2","userGame2_headstart_time","setUserGame2_headstart_time","userGame2_live","setUserGame2_live","winning_address2","setWinning_address2","treasure_found2","setTreasure_found2","winning_prize2","setWinning_prize2","question_hash_solved2","setQuestion_hash_solved2","winning_message2","setWinning_message2","attemptId2","setAttemptId2","attemptAddress2","setAttemptAddress2","attemptUsername2","setAttemptUsername2","attemptDeadline2","setAttemptDeadline2","loaded","setloaded","totalGameEntriesGame2","settotalGameEntriesGame2","globalNumberOfTries","setGlobalNumberOfTries","game2LeaderBoardIndex","setgame2LeaderBoardIndex","game2LeaderBoardGameID","setgame2LeaderBoardGameID","game2LeaderBoardAddress","setgame2LeaderBoardAddress","game2LeaderBoardEntered","setgame2LeaderBoardEntered","game2LeaderBoardUsername","setgame2LeaderBoardUsername","game2LeaderBoardTries","setgame2LeaderBoardTries","game2LeaderBoardStage","setgame2LeaderBoardStage","game2LeaderBoard","setgame2LeaderBoard","game2UserList","setGame2UserList","state_leaderboardAddressSearch_huntid_game2","setleaderboardAddressSearch_huntid_game2","state_leaderboardAddressSearch_address_game2","setleaderboardAddressSearch_address_game2","state_leaderboardAddressSearch_entered_game2","setleaderboardAddressSearch_entered_game2","state_leaderboardAddressSearch_username_game2","setleaderboardAddressSearch_username_game2","state_leaderboardAddressSearch_tries_game2","setleaderboardAddressSearch_tries_game2","state_leaderboardAddressSearch_stage_game2","setleaderboardAddressSearch_stage_game2","state_WinnerEstPrizeGame2","setWinnerEstPrizeGame2","init","eth","getAccounts","abi","require","abiToken","Contract","methods","call","then","console","log","balanceOf","game1","Games","winnerEstPrizeGame1","substring","Math","round","length","game2","winnerEstPrizeGame2","timer","window","setInterval","globalTries","totalumberOfTries","allGame1","allGames","numberOfEntriesGame1","numberOfEntries","huntEntries","pot1AnsweredCorrectly","Pot1AnsweredCorrectly","getAllLatestGameAttempts1","getAllLatestGameAttempts","entriesGame1","currentStartDate","Date","startDate","endDateGame1","getDifferenceInDays","date1","date2","diffInMs","abs","getDifferenceInHours","getDifferenceInMinutes","getDifferenceInSeconds","timeGame1","prevTime","leaderboardAddressSearch","leaderboardAddressMapping","leaderboardAddressSearch_huntid_game1","leaderboardAddressSearch_address_game1","leaderboardAddressSearch_entered_game1","leaderboardAddressSearch_username_game1","leaderboardAddressSearch_tries_game1","leaderboardAddressSearch_stage_game1","noOfEntrys","game1_leaderboard","i","leaderBoard","leaderboard","leaderboard1","push","game1_indexrows","game1_leaderboard_game_id","leaderboard_game_id","game1_leaderboard_address","leaderboard_address","game1_leaderboard_entered","leaderboard_entered","game1_leaderboard_username","leaderboard_username","game1_leaderboard_tries","leaderboard_tries","game1_leaderboard_stage","leaderboard_stage","allGame2","numberOfEntriesGame2","pot2AnsweredCorrectly","getAllLatestGameAttempts2","endDateGame2","timeGame2","leaderboardAddressSearch2","leaderboardAddressSearch_huntid_game2","leaderboardAddressSearch_address_game2","leaderboardAddressSearch_entered_game2","leaderboardAddressSearch_username_game2","leaderboardAddressSearch_tries_game2","leaderboardAddressSearch_stage_game2","noOfEntrys2","game2_leaderboard","leaderBoard2","leaderboard2","game2_indexrows","game2_leaderboard_game_id","leaderboard_game_id2","game2_leaderboard_address","leaderboard_address2","game2_leaderboard_entered","leaderboard_entered2","game2_leaderboard_username","leaderboard_username2","game2_leaderboard_tries","leaderboard_tries2","game2_leaderboard_stage","leaderboard_stage2"],"mappings":"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","sourcesContent":["import { Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\nimport MyNav from './MyNav';\nimport SingleCard from './components/Structure/Game1/SingleCard';\nimport moment from 'moment';\n\n// import img1 from './Treasure-hunt.jpeg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport React, { Component, useState, useEffect } from 'react'\nimport getWeb3 from \"./getWeb3\";\nimport Connection from \"./Connection\";\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport \"./App.css\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\n\nimport Home from \"./Home\";\nimport Hunt1 from \"./Hunt1\";\nimport Hunt2 from \"./Hunt2\";\n\nimport User from './components/Structure/Game1/User';\n\n\nimport { Helmet } from 'react-helmet';\n\n\nconst App = () => {\n\n  const [web3,setWeb3] = useState(null)\n  const [accounts,setAccounts] = useState(null)\n  const [contract,setContract] = useState(null)\n  const [tokenContract,setTokenContract] = useState(null)\n  const [decimals,setDecimals] = useState(null)\n  const [totalTreasure,setTotalTreasure] = useState(null)\n\n// GAME 1\n  const [game1_id,setGame1_id] = useState(undefined)\n  const [game1_live,setGame1_live] = useState(undefined)\n  const [game1_prize,setGame1_prize] = useState(undefined)\n  const [game1_question_hash,setGame1_question_hash] = useState(undefined)\n  const [game1_time_lock_cost,setgame1_time_lock_cost] = useState(undefined)\n  const [game1_submit_secret_cost,setGame1_submit_secret_cost] = useState(undefined)\n  const [game1_riddle,setGame1_riddle] = useState(undefined)\n  const [game1_clue,setGame1_clue] = useState(undefined)\n  const [game1_head_start_time,setGame1_head_start_time] = useState(undefined)\n  const [game1_entry_limit,setGame1_entry_limit] = useState(undefined)\n  const [game1_entry_cost,setGame1_entry_cost] = useState(undefined)\n\n  const [allGame1_id,setallGame1_id] = useState(undefined)\n  const [allGame1_user_front_of_que,setallGame1_user_front_of_que] = useState(undefined)\n  const [allGame1_deadline_time,setallGame1_deadline] = useState(undefined)\n  const [allGame1_username,setallGame1_username] = useState(undefined)\n  const [allGame1_total_game_tries,setallGame1_total_game_tries] = useState(undefined)\n\n  const [countGame1, setTimeGame1] = useState(90);\n  const [countGame1DeadlineTrue, setcountGame1DeadlineTrue] = useState(false);\n\n  const [game1numberOfEntries, setGame1numberOfEntries] = useState(0);\n  const [game1huntEntries, setGame1huntEntries] = useState(undefined);\n  const [userGame1_id, setUserGame1_id] = useState(undefined);\n  const [userEntered_game1, setUserEntered_game1] = useState(undefined);\n  const [userGame1_headstart_time, setUserGame1_headstart_time] = useState(undefined);\n  const [userGame1_live, setUserGame1_live] = useState(undefined);\n\n  const [winning_address1, setWinning_address1] = useState(undefined);\n  const [treasure_found1, setTreasure_found1] = useState(undefined);\n  const [winning_prize1, setWinning_prize1] = useState(undefined);\n  const [question_hash_solved1, setQuestion_hash_solved1] = useState(undefined);\n  const [winning_message1, setWinning_message1] = useState(undefined);\n\n  const [attemptId1, setAttemptId1] = useState(undefined);\n  const [attemptAddress1, setAttemptAddress1] = useState(undefined);\n  const [attemptUsername1, setAttemptUsername1] = useState(undefined);\n  const [attemptDeadline1, setAttemptDeadline1] = useState(undefined);\n  const [totalGameEntriesGame1, settotalGameEntriesGame1] = useState(false);\n\n// Leaderboard\n  const [game1LeaderBoardIndex, setgame1LeaderBoardIndex] = useState([\"Loading\"]);\n  const [game1LeaderBoardGameID, setgame1LeaderBoardGameID] = useState([\"Loading\"]);\n  const [game1LeaderBoardAddress, setgame1LeaderBoardAddress] = useState([\"Loading\"]);\n  const [game1LeaderBoardEntered, setgame1LeaderBoardEntered] = useState([\"Loading\"]);\n  const [game1LeaderBoardUsername, setgame1LeaderBoardUsername] = useState([\"Loading\"]);\n  const [game1LeaderBoardTries, setgame1LeaderBoardTries] = useState([\"Loading\"]);\n  const [game1LeaderBoardStage, setgame1LeaderBoardStage] = useState([\"Loading\"]);\n\n\n  const [game1LeaderBoard, setgame1LeaderBoard] = useState([\"Loading\"]);\n  const [game1UserList, setGame1UserList] = useState([\"Loading\"]);\n\n  // Leaderbaord Address Search\n  const [state_leaderboardAddressSearch_huntid_game1, setleaderboardAddressSearch_huntid_game1] = useState(false);\n  const [state_leaderboardAddressSearch_address_game1, setleaderboardAddressSearch_address_game1] = useState(false);\n  const [state_leaderboardAddressSearch_entered_game1, setleaderboardAddressSearch_entered_game1] = useState(false);\n  const [state_leaderboardAddressSearch_username_game1, setleaderboardAddressSearch_username_game1] = useState(false);\n  const [state_leaderboardAddressSearch_tries_game1, setleaderboardAddressSearch_tries_game1] = useState(false);\n  const [state_leaderboardAddressSearch_stage_game1, setleaderboardAddressSearch_stage_game1] = useState(false);\n  const [state_WinnerEstPrizeGame1, setWinnerEstPrizeGame1] = useState(false);\n\n\n// GAME 2\n\n  const [game2_id,setGame2_id] = useState(undefined)\n  const [game2_live,setGame2_live] = useState(undefined)\n  const [game2_prize,setGame2_prize] = useState(undefined)\n  const [game2_question_hash,setGame2_question_hash] = useState(undefined)\n  const [game2_time_lock_cost,setgame2_time_lock_cost] = useState(undefined)\n  const [game2_submit_secret_cost,setGame2_submit_secret_cost] = useState(undefined)\n  const [game2_riddle,setGame2_riddle] = useState(undefined)\n  const [game2_clue,setGame2_clue] = useState(undefined)\n  const [game2_head_start_time,setGame2_head_start_time] = useState(undefined)\n  const [game2_entry_limit,setGame2_entry_limit] = useState(undefined)\n  const [game2_entry_cost,setGame2_entry_cost] = useState(undefined)\n\n  const [allGame2_id,setallGame2_id] = useState(undefined)\n  const [allGame2_user_front_of_que,setallGame2_user_front_of_que] = useState(undefined)\n  const [allGame2_deadline_time,setallGame2_deadline] = useState(undefined)\n  const [allGame2_username,setallGame2_username] = useState(undefined)\n  const [allGame2_total_game_tries,setallGame2_total_game_tries] = useState(undefined)\n\n  const [countGame2, setTimeGame2] = useState(90);\n  const [countGame2DeadlineTrue, setcountGame2DeadlineTrue] = useState(false);\n\n  const [game2numberOfEntries, setGame2numberOfEntries] = useState(0);\n  const [game2huntEntries, setGame2huntEntries] = useState(undefined);\n  const [userGame2_id, setUserGame2_id] = useState(undefined);\n  const [userEntered_game2, setUserEntered_game2] = useState(undefined);\n  const [userGame2_headstart_time, setUserGame2_headstart_time] = useState(undefined);\n  const [userGame2_live, setUserGame2_live] = useState(undefined);\n\n  const [winning_address2, setWinning_address2] = useState(undefined);\n  const [treasure_found2, setTreasure_found2] = useState(undefined);\n  const [winning_prize2, setWinning_prize2] = useState(undefined);\n  const [question_hash_solved2, setQuestion_hash_solved2] = useState(undefined);\n  const [winning_message2, setWinning_message2] = useState(undefined);\n\n  const [attemptId2, setAttemptId2] = useState(undefined);\n  const [attemptAddress2, setAttemptAddress2] = useState(undefined);\n  const [attemptUsername2, setAttemptUsername2] = useState(undefined);\n  const [attemptDeadline2, setAttemptDeadline2] = useState(undefined);\n  const [loaded, setloaded] = useState(false);\n  const [totalGameEntriesGame2, settotalGameEntriesGame2] = useState(false);\n  const [globalNumberOfTries, setGlobalNumberOfTries] = useState(false);\n\n  // Leaderboard\n    const [game2LeaderBoardIndex, setgame2LeaderBoardIndex] = useState([\"Loading\"]);\n    const [game2LeaderBoardGameID, setgame2LeaderBoardGameID] = useState([\"Loading\"]);\n    const [game2LeaderBoardAddress, setgame2LeaderBoardAddress] = useState([\"Loading\"]);\n    const [game2LeaderBoardEntered, setgame2LeaderBoardEntered] = useState([\"Loading\"]);\n    const [game2LeaderBoardUsername, setgame2LeaderBoardUsername] = useState([\"Loading\"]);\n    const [game2LeaderBoardTries, setgame2LeaderBoardTries] = useState([\"Loading\"]);\n    const [game2LeaderBoardStage, setgame2LeaderBoardStage] = useState([\"Loading\"]);\n\n\n    const [game2LeaderBoard, setgame2LeaderBoard] = useState([\"Loading\"]);\n    const [game2UserList, setGame2UserList] = useState([\"Loading\"]);\n\n    // Leaderbaord Address Search\n    const [state_leaderboardAddressSearch_huntid_game2, setleaderboardAddressSearch_huntid_game2] = useState(false);\n    const [state_leaderboardAddressSearch_address_game2, setleaderboardAddressSearch_address_game2] = useState(false);\n    const [state_leaderboardAddressSearch_entered_game2, setleaderboardAddressSearch_entered_game2] = useState(false);\n    const [state_leaderboardAddressSearch_username_game2, setleaderboardAddressSearch_username_game2] = useState(false);\n    const [state_leaderboardAddressSearch_tries_game2, setleaderboardAddressSearch_tries_game2] = useState(false);\n    const [state_leaderboardAddressSearch_stage_game2, setleaderboardAddressSearch_stage_game2] = useState(false);\n    const [state_WinnerEstPrizeGame2, setWinnerEstPrizeGame2] = useState(false);\n\n\n  useEffect(() => {\n\n\n      const init = async() => {\n\n\n\n        const web3 = await getWeb3();\n\n        const accounts = await web3.eth.getAccounts();\n\n        const abi = require('./TreasureBlox.abi.json');\n        const abiToken = require('./TreasureBloxToken.abi.json');\n        // Set the provider\n        // web3.setProvider(new web3.providers.WebsocketProvider('ws://localhost:8545'));\n        // this.web3.setProvider(new this.web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/'));\n\n        // LOCAL\n        // const contract = new web3.eth.Contract(abi,\"localhost:8545\" && \"0x9987602E9e9A76CbA7e9DB9217A0962BA8F9e605\");\n        // MainNet\n        // const contract = new web3.eth.Contract(abi,\"https://bsc-dataseed.binance.org/\" && \"0x845f23Ae63b5d03a363f216Ce0BAD4FB12259930\");\n\n\n// Proxy 0x359a72d9F33685c025A6435fE1Cb4dF8fF6736B6\n// GameV2 0xE2f3578757fe29a481D0221A6d1Ce7A33Ae01170\n\n\n        const contract = new web3.eth.Contract(abi,\"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0xE2f3578757fe29a481D0221A6d1Ce7A33Ae01170\");\n\n        const tokenContract = new web3.eth.Contract(abiToken,\"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0x359a72d9F33685c025A6435fE1Cb4dF8fF6736B6\");\n        // TestNet\n        // const contract = new web3.eth.Contract(abi,\"https://data-seed-prebsc-1-s1.binance.org:8545/\" && \"0xE2f3578757fe29a481D0221A6d1Ce7A33Ae01170\");\n        // Sstart Data Calls\n        const decimals = await tokenContract.methods.decimals().call().then(console.log('Yes'));\n        var totalTreasure = await tokenContract.methods.balanceOf(\"0xD10283b232c43924BCc2834bd73F811918851f3C\").call();\n        // totalTreasure = totalTreasure.substring(0, tokenContract.length-18);\n        console.log(totalTreasure,\"Total Treasure token contract\")\n\n        // const owner = await contract.methods._owner().call();\n        // const marketingWallet = await contract.methods.marketingWallet().call().then(console.log('marketing Wallet Complete'));\n        //\n        // const total_supply = await contract.methods.totalSupply().call();\n        // const treasure_chest = await contract.methods.treasureChest().call();\n        setWeb3(web3)\n        setAccounts(accounts[0])\n        setContract(contract)\n        setDecimals(decimals)\n        setTotalTreasure(totalTreasure)\n        setTokenContract(tokenContract)\n\n        // GET GAMES\n        // GAME 1\n                const game1 = await contract.methods.Games(1).call();\n\n                const game1_id = await game1[0];\n                const game1_live = await game1[1];\n                var game1_prize = await game1[2];\n\n                // Local Testing\n                // var winnerEstPrizeGame1 = Math.round(game1_prize*.3);\n                // game1_prize = game1_prize;\n\n                var winnerEstPrizeGame1 = game1_prize.substring(0, Math.round(game1_prize*.3).length-18);\n                setWinnerEstPrizeGame1(winnerEstPrizeGame1)\n\n                game1_prize = game1_prize.substring(0, game1_prize.length-18);\n\n\n                const game1_question_hash = await game1[3];\n                var game1_time_lock_cost = await game1[4];\n                game1_time_lock_cost = game1_time_lock_cost.substring(0, game1_time_lock_cost.length-18);\n                var game1_submit_secret_cost = await game1[5];\n                game1_submit_secret_cost = game1_submit_secret_cost.substring(0, game1_submit_secret_cost.length-18);\n                const game1_riddle = await game1[6];\n                const game1_clue = await game1[7];\n                const game1_head_start_time = await game1[8];\n                const game1_entry_limit = await game1[9];\n                var game1_entry_cost = await game1[10];\n                game1_entry_cost = game1_entry_cost.substring(0, game1_entry_cost.length-18);\n\n\n                setGame1_id(game1_id)\n                setGame1_live(game1_live)\n                setGame1_prize(game1_prize)\n                setGame1_question_hash(game1_question_hash)\n                setgame1_time_lock_cost(game1_time_lock_cost)\n\n                setGame1_submit_secret_cost(game1_submit_secret_cost)\n\n                setGame1_riddle(game1_riddle)\n                setGame1_clue(game1_clue)\n                setGame1_head_start_time(game1_head_start_time)\n                setGame1_entry_limit(game1_entry_limit)\n                setGame1_entry_cost(game1_entry_cost)\n\n\n        // GAME 2\n\n\n\n                const game2 = await contract.methods.Games(2).call();\n\n                const game2_id = await game2[0];\n                const game2_live = await game2[1];\n                var game2_prize = await game2[2];\n\n                // Local Testing\n                var winnerEstPrizeGame2 = Math.round(game2_prize*.3);\n                game2_prize = game2_prize;\n\n                // var winnerEstPrizeGame2 = game2_prize.substring(0, Math.round(game2_prize*.3).length-18);\n                setWinnerEstPrizeGame2(winnerEstPrizeGame2)\n\n                // game2_prize = game2_prize.substring(0, game2_prize.length-18);\n\n\n\n                const game2_question_hash = await game2[3];\n                var game2_time_lock_cost= await game2[4];\n                game2_time_lock_cost = game2_time_lock_cost.substring(0, game2_time_lock_cost.length-18);\n\n                var game2_submit_secret_cost = await game2[5];\n                game2_submit_secret_cost = game2_submit_secret_cost.substring(0, game2_submit_secret_cost.length-18);\n\n                const game2_riddle = await game2[6];\n                const game2_clue = await game2[7];\n                const game2_head_start_time = await game2[8];\n                const game2_entry_limit = await game2[9];\n                var game2_entry_cost = await game2[10];\n                game2_entry_cost = game2_entry_cost.substring(0, game2_entry_cost.length-18);\n\n\n                setGame2_id(game2_id)\n                setGame2_live(game2_live)\n                setGame2_prize(game2_prize)\n                setGame2_question_hash(game2_question_hash)\n                setgame2_time_lock_cost(game2_time_lock_cost)\n                setGame2_submit_secret_cost(game2_submit_secret_cost)\n                setGame2_riddle(game2_riddle)\n                setGame2_clue(game2_clue)\n                setGame2_head_start_time(game2_head_start_time)\n                setGame2_entry_limit(game2_entry_limit)\n                setGame2_entry_cost(game2_entry_cost)\n\n\n\n\n\n//\n\n\n\n// This Handels the countdown time and collecting information every 1 second so the counter goes down\n        const timer = window.setInterval( async() => {\n            var moment = require('moment'); // require\n\n\n\n\n            // GLOBAL\n\n            const globalTries = await contract.methods.totalumberOfTries().call();\n            console.log(\"number of tries:\",globalTries)\n            setGlobalNumberOfTries(globalTries)\n        // GET ALL GAME TIMELINES AND gamesTriess\n        // GAME 1\n            const allGame1 = await contract.methods.allGames(1).call();\n            const allGame1_id = await allGame1[0];\n            const allGame1_user_front_of_que = await allGame1[1];\n            const allGame1_deadline_time =  await allGame1[2];\n            const allGame1_username = await allGame1[3];\n            const allGame1_total_game_tries = await allGame1[4];\n\n            const numberOfEntriesGame1 = await contract.methods.numberOfEntries(1).call();\n\n\n\n            const game1huntEntries = await contract.methods.huntEntries(accounts[0],1).call();\n            const userGame1_id = await game1huntEntries[0];\n            const userEntered_game1 = await game1huntEntries[1];\n            const userGame1_headstart_time =  await game1huntEntries[2];\n            const userGame1_live = await game1huntEntries[3];\n\n\n            const pot1AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(1).call();\n            const winning_address1 = await pot1AnsweredCorrectly[0];\n            const treasure_found1 = await pot1AnsweredCorrectly[1];\n            var winning_prize1 =  await pot1AnsweredCorrectly[2];\n            winning_prize1 = winning_prize1.substring(0, winning_prize1.length-18);\n\n\n            const question_hash_solved1 = await pot1AnsweredCorrectly[3];\n            const winning_message1 = await pot1AnsweredCorrectly[4];\n\n            const getAllLatestGameAttempts1 = await contract.methods.getAllLatestGameAttempts(1).call();\n            const attemptId1 = await getAllLatestGameAttempts1[0];\n            const attemptAddress1 = await getAllLatestGameAttempts1[1];\n            const attemptDeadline1 =  await getAllLatestGameAttempts1[2];\n            const attemptUsername1 = await getAllLatestGameAttempts1[3];\n\n            const entriesGame1 = await contract.methods.numberOfEntries(1).call()\n            settotalGameEntriesGame1(entriesGame1);\n\n            // Fetches New Games if required\n            // const item = await contract.getPastEvents('setGameEvent',{});\n            // console.log(item[0].returnValues[0])\n            // console.log(item[0].returnValues[1])\n            // console.log(item[0].returnValues[2])\n\n\n            var currentStartDate = Date();\n            var startDate = new Date(currentStartDate);\n            // // Hours part from the timestamp\n            // var startDateHours = startDate.getHours();\n            // // Minutes part from the timestamp\n            // var startDateMinutes = startDate.getMinutes();\n            // // Seconds part from the timestamp\n            // var startDateSeconds = startDate.getSeconds();\n\n            // Do\n            var endDateGame1 = new Date(allGame1_deadline_time * 1000);\n            // // Hours part from the timestamp\n            // var endDateHours = endDate.getHours();\n            // // Minutes part from the timestamp\n            // var endDateMinutes = endDate.getMinutes();\n            // // Seconds part from the timestamp\n            // var endDateSeconds = endDate.getSeconds();\n\n            function getDifferenceInDays(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / (1000 * 60 * 60 * 24);\n              }\n\n            function getDifferenceInHours(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / (1000 * 60 * 60);\n              }\n\n            function getDifferenceInMinutes(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / (1000 * 60);\n              }\n\n            function getDifferenceInSeconds(date1, date2) {\n              const diffInMs = Math.abs(date2 - date1);\n              return diffInMs / 1000;\n              }\n            // console.log(getDifferenceInDays(endDate, startDate));\n            // console.log(getDifferenceInHours(endDate, startDate));\n            // console.log(getDifferenceInMinutes(endDate, startDate));\n\n            // console.log(getDifferenceInSeconds(startDate, endDateGame1));\n\n            var timeGame1 = Math.abs(getDifferenceInSeconds(startDate, endDateGame1));\n\n\n\n\n            setTimeGame1(timeGame1)\n            setTimeGame1(prevTime => prevTime - 1); // <-- Change this line!\n\n            setallGame1_id(allGame1_id)\n            setallGame1_user_front_of_que(allGame1_user_front_of_que)\n            setallGame1_deadline(allGame1_deadline_time)\n            setallGame1_username(allGame1_username)\n            console.log(\"username past: \", allGame1_username)\n            setallGame1_total_game_tries(allGame1_total_game_tries)\n\n            if (endDateGame1-1 >= startDate){\n              setcountGame1DeadlineTrue(true);\n            } else {\n              setcountGame1DeadlineTrue(false);\n            }\n\n            setGame1numberOfEntries(entriesGame1)\n\n            setUserGame1_id(userGame1_id)\n            setUserEntered_game1(userEntered_game1)\n            setUserGame1_headstart_time(userGame1_headstart_time)\n            setUserGame1_live(userGame1_live)\n\n            setWinning_address1(winning_address1)\n            setTreasure_found1(treasure_found1)\n            setWinning_prize1(winning_prize1)\n            setQuestion_hash_solved1(question_hash_solved1)\n            setWinning_message1(winning_message1)\n\n            setAttemptId1(attemptId1)\n            setAttemptAddress1(attemptAddress1)\n            setAttemptUsername1(attemptUsername1)\n            setAttemptDeadline1(attemptDeadline1)\n\n\n// LeaderBoardAddressSearch\n\n            const leaderboardAddressSearch = await contract.methods.leaderboardAddressMapping(accounts[0],1).call();\n            var leaderboardAddressSearch_huntid_game1 = await leaderboardAddressSearch[0];\n            var leaderboardAddressSearch_address_game1 = await leaderboardAddressSearch[1];\n            var leaderboardAddressSearch_entered_game1 = await leaderboardAddressSearch[2];\n            var leaderboardAddressSearch_username_game1 = await leaderboardAddressSearch[3];\n            var leaderboardAddressSearch_tries_game1 = await leaderboardAddressSearch[4];\n            var leaderboardAddressSearch_stage_game1 = await leaderboardAddressSearch[5];\n\n            setleaderboardAddressSearch_huntid_game1(leaderboardAddressSearch_huntid_game1)\n            setleaderboardAddressSearch_address_game1(leaderboardAddressSearch_address_game1)\n            setleaderboardAddressSearch_entered_game1(leaderboardAddressSearch_entered_game1)\n            setleaderboardAddressSearch_username_game1(leaderboardAddressSearch_username_game1)\n            setleaderboardAddressSearch_tries_game1(leaderboardAddressSearch_tries_game1)\n            setleaderboardAddressSearch_stage_game1(leaderboardAddressSearch_stage_game1)\n\n            const noOfEntrys = await contract.methods.numberOfEntries(1).call();\n\n// LeaderBoard\n\n            var game1_leaderboard = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard1 = await leaderBoard;\n\n                game1_leaderboard.push(leaderboard1);\n              }\n\n              setgame1LeaderBoard(game1_leaderboard)\n              console.log(game1LeaderBoard,\"here\")\n\n\n\n\n\n            var game1_indexrows = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                game1_indexrows.push(i);\n              }\n            setgame1LeaderBoardIndex(game1_indexrows)\n\n\n            var game1_leaderboard_game_id = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard_game_id = await leaderBoard[0];\n                game1_leaderboard_game_id.push(leaderboard_game_id);\n              }\n            setgame1LeaderBoardGameID(game1_leaderboard_game_id)\n\n\n            var game1_leaderboard_address = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard_address = await leaderBoard[1];\n                game1_leaderboard_address.push(leaderboard_address);\n              }\n            setgame1LeaderBoardAddress(game1_leaderboard_address)\n\n            var game1_leaderboard_entered = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard_entered = await leaderBoard[2];\n                game1_leaderboard_entered.push(leaderboard_entered);\n              }\n\n            setgame1LeaderBoardEntered(game1_leaderboard_entered)\n\n\n            var game1_leaderboard_username = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard_username = await leaderBoard[3];\n                game1_leaderboard_username.push(leaderboard_username);\n              }\n\n            setgame1LeaderBoardUsername(game1_leaderboard_username)\n\n\n            var game1_leaderboard_tries = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard_tries = await leaderBoard[4];\n                game1_leaderboard_tries.push(leaderboard_tries);\n              }\n\n            setgame1LeaderBoardTries(game1_leaderboard_tries)\n\n            var game1_leaderboard_stage = [];\n              for (var i = 0; i < noOfEntrys; i++) {\n                const leaderBoard = await contract.methods.leaderboard(1,i).call();\n\n                var leaderboard_stage = await leaderBoard[5];\n                game1_leaderboard_stage.push(leaderboard_stage);\n              }\n\n            setgame1LeaderBoardStage(game1_leaderboard_stage)\n\n\n\n\n\n          // GAME 2\n\n          const allGame2 = await contract.methods.allGames(2).call();\n          const allGame2_id = await allGame2[0];\n          const allGame2_user_front_of_que = await allGame2[1];\n          const allGame2_deadline_time =  await allGame2[2];\n          const allGame2_username = await allGame2[3];\n          const allGame2_total_game_tries = await allGame2[4];\n\n          const game2numberOfEntries = await contract.methods.numberOfEntries(2).call();\n\n          const game2huntEntries = await contract.methods.huntEntries(accounts[0],2).call();\n          const userGame2_id = await game2huntEntries[0];\n          const userEntered_game2 = await game2huntEntries[1];\n          const userGame2_headstart_time =  await game2huntEntries[2];\n          const userGame2_live = await game2huntEntries[3];\n\n          const numberOfEntriesGame2 = await contract.methods.numberOfEntries(2).call();\n\n\n\n          const pot2AnsweredCorrectly = await contract.methods.Pot1AnsweredCorrectly(2).call();\n          const winning_address2 = await pot2AnsweredCorrectly[0];\n          const treasure_found2 = await pot2AnsweredCorrectly[1];\n          var winning_prize2 =  await pot2AnsweredCorrectly[2];\n\n          winning_prize2 = winning_prize2.substring(0, winning_prize2.length-18);\n\n          const question_hash_solved2 = await pot2AnsweredCorrectly[3];\n          const winning_message2 = await pot2AnsweredCorrectly[4];\n\n          const getAllLatestGameAttempts2 = await contract.methods.getAllLatestGameAttempts(2).call();\n          const attemptId2 = await getAllLatestGameAttempts2[0];\n          const attemptAddress2 = await getAllLatestGameAttempts2[1];\n          const attemptDeadline2 =  await getAllLatestGameAttempts2[2];\n          const attemptUsername2 = await getAllLatestGameAttempts2[3];\n\n\n          var currentStartDate = Date();\n          var startDate = new Date(currentStartDate);\n\n          // Do\n          var endDateGame2 = new Date(allGame2_deadline_time * 1000);\n\n          console.log(getDifferenceInSeconds(startDate, endDateGame2));\n\n          var timeGame2 = Math.abs(getDifferenceInSeconds(startDate, endDateGame2));\n\n          setTimeGame2(timeGame2)\n          setTimeGame2(prevTime => prevTime - 1); // <-- Change this line!\n\n          setallGame2_id(allGame2_id)\n          setallGame2_user_front_of_que(allGame2_user_front_of_que)\n          setallGame2_deadline(allGame2_deadline_time)\n          setallGame2_username(allGame2_username)\n          setallGame2_total_game_tries(allGame2_total_game_tries)\n\n          if (endDateGame2-1 >= startDate){\n            setcountGame2DeadlineTrue(true);\n          } else {\n            setcountGame2DeadlineTrue(false);\n          }\n\n          setGame2numberOfEntries(game2numberOfEntries)\n\n          setUserGame2_id(userGame2_id)\n          setUserEntered_game2(userEntered_game2)\n          setUserGame2_headstart_time(userGame2_headstart_time)\n          setUserGame2_live(userGame2_live)\n\n          setWinning_address2(winning_address2)\n          setTreasure_found2(treasure_found2)\n          setWinning_prize2(winning_prize2)\n          setQuestion_hash_solved2(question_hash_solved2)\n          setWinning_message2(winning_message2)\n\n          setAttemptId2(attemptId2)\n          setAttemptAddress2(attemptAddress2)\n          setAttemptUsername2(attemptUsername2)\n          setAttemptDeadline2(attemptDeadline2)\n\n\n          // LeaderBoardAddressSearch\n\n                      const leaderboardAddressSearch2 = await contract.methods.leaderboardAddressMapping(accounts[0],2).call();\n                      var leaderboardAddressSearch_huntid_game2 = await leaderboardAddressSearch2[0];\n                      var leaderboardAddressSearch_address_game2 = await leaderboardAddressSearch2[1];\n                      var leaderboardAddressSearch_entered_game2 = await leaderboardAddressSearch2[2];\n                      var leaderboardAddressSearch_username_game2 = await leaderboardAddressSearch2[3];\n                      var leaderboardAddressSearch_tries_game2 = await leaderboardAddressSearch2[4];\n                      var leaderboardAddressSearch_stage_game2 = await leaderboardAddressSearch2[5];\n\n                      setleaderboardAddressSearch_huntid_game2(leaderboardAddressSearch_huntid_game2)\n                      setleaderboardAddressSearch_address_game2(leaderboardAddressSearch_address_game2)\n                      setleaderboardAddressSearch_entered_game2(leaderboardAddressSearch_entered_game2)\n                      setleaderboardAddressSearch_username_game2(leaderboardAddressSearch_username_game2)\n                      setleaderboardAddressSearch_tries_game2(leaderboardAddressSearch_tries_game2)\n                      setleaderboardAddressSearch_stage_game2(leaderboardAddressSearch_stage_game2)\n\n                      const noOfEntrys2 = await contract.methods.numberOfEntries(2).call();\n\n          // LeaderBoard\n\n                      var game2_leaderboard = [];\n                        for (var i = 0; i < noOfEntrys2; i++) {\n                          const leaderBoard2 = await contract.methods.leaderboard(2,i).call();\n\n                          var leaderboard2 = await leaderBoard2;\n\n                          game2_leaderboard.push(leaderboard2);\n                        }\n\n                        setgame1LeaderBoard(game2_leaderboard)\n                        console.log(game2LeaderBoard,\"here\")\n\n\n\n\n\n                      var game2_indexrows = [];\n                        for (var i = 0; i < noOfEntrys2; i++) {\n                          game2_indexrows.push(i);\n                        }\n                      setgame1LeaderBoardIndex(game2_indexrows)\n\n\n                      var game2_leaderboard_game_id = [];\n                        for (var i = 0; i < noOfEntrys2; i++) {\n                          const leaderBoard2 = await contract.methods.leaderboard(2,i).call();\n\n                          var leaderboard_game_id2 = await leaderBoard2[0];\n                          game2_leaderboard_game_id.push(leaderboard_game_id2);\n                        }\n                      setgame1LeaderBoardGameID(game2_leaderboard_game_id)\n\n\n                      var game2_leaderboard_address = [];\n                        for (var i = 0; i < noOfEntrys2; i++) {\n                          const leaderBoard2 = await contract.methods.leaderboard(2,i).call();\n\n                          var leaderboard_address2 = await leaderBoard2[1];\n                          game2_leaderboard_address.push(leaderboard_address2);\n                        }\n                      setgame1LeaderBoardAddress(game2_leaderboard_address)\n\n                      var game2_leaderboard_entered = [];\n                        for (var i = 0; i < noOfEntrys2; i++) {\n                          const leaderBoard2 = await contract.methods.leaderboard(2,i).call();\n\n                          var leaderboard_entered2 = await leaderBoard2[2];\n                          game2_leaderboard_entered.push(leaderboard_entered2);\n                        }\n\n                      setgame1LeaderBoardEntered(game2_leaderboard_entered)\n\n\n                      var game2_leaderboard_username = [];\n                        for (var i = 0; i < noOfEntrys2; i++) {\n                          const leaderBoard2 = await contract.methods.leaderboard(2,i).call();\n\n                          var leaderboard_username2 = await leaderBoard2[3];\n                          game2_leaderboard_username.push(leaderboard_username2);\n                        }\n\n                      setgame1LeaderBoardUsername(game2_leaderboard_username)\n\n\n                      var game2_leaderboard_tries = [];\n                        for (var i = 0; i < noOfEntrys2; i++) {\n                          const leaderBoard2 = await contract.methods.leaderboard(2,i).call();\n\n                          var leaderboard_tries2 = await leaderBoard2[4];\n                          game2_leaderboard_tries.push(leaderboard_tries2);\n                        }\n\n                      setgame1LeaderBoardTries(game2_leaderboard_tries)\n\n                      var game2_leaderboard_stage = [];\n                        for (var i = 0; i < noOfEntrys2; i++) {\n                          const leaderBoard2 = await contract.methods.leaderboard(2,i).call();\n\n                          var leaderboard_stage2 = await leaderBoard2[5];\n                          game2_leaderboard_stage.push(leaderboard_stage2);\n                        }\n\n                      setgame2LeaderBoardStage(game2_leaderboard_stage)\n\n\n        }, 1000);\n        // End of Game timer code\n\n\n\n      }\n      init()\n\n\n\n\n\n\n\n    },[web3,accounts,contract,tokenContract,decimals,totalTreasure,globalNumberOfTries,\n\n      // GAME1\n  game1_id,game1_live,game1_prize,game1_question_hash,game1_time_lock_cost,game1_submit_secret_cost,game1_riddle,game1_clue,\n  allGame1_id,allGame1_user_front_of_que,allGame1_deadline_time,allGame1_username,allGame1_total_game_tries,countGame1,countGame1DeadlineTrue,\n  game1_head_start_time,game1_entry_limit,game1_entry_cost,game1numberOfEntries,userGame1_id,userEntered_game1,userGame1_headstart_time,userGame1_live,\n  winning_address1,treasure_found1,winning_prize1,question_hash_solved1,winning_message1,attemptId1,attemptUsername1,attemptDeadline1,attemptAddress1,\n  totalGameEntriesGame1,game1LeaderBoardIndex,game1LeaderBoardGameID,game1LeaderBoardAddress,\n    game1LeaderBoardEntered,game1LeaderBoardUsername,game1LeaderBoardTries,game1LeaderBoardStage,game1LeaderBoard,game1UserList,state_leaderboardAddressSearch_huntid_game1,state_leaderboardAddressSearch_address_game1,state_leaderboardAddressSearch_entered_game1,\n    state_leaderboardAddressSearch_username_game1,state_leaderboardAddressSearch_tries_game1,state_leaderboardAddressSearch_stage_game1,state_WinnerEstPrizeGame1,\n      // GAME2\n  game2_id,game2_live,game2_prize,game2_question_hash,game2_time_lock_cost,game2_submit_secret_cost,game2_riddle,game2_clue,\n  allGame2_id,allGame2_user_front_of_que,allGame2_deadline_time,allGame2_username,allGame2_total_game_tries,countGame2,countGame2DeadlineTrue,\n  game2_head_start_time,game2_entry_limit,game2_entry_cost,game2numberOfEntries,userGame2_id,userEntered_game2,userGame2_headstart_time,userGame2_live,\n  winning_address2,treasure_found2,winning_prize2,question_hash_solved2,winning_message2,attemptId2,attemptUsername2,attemptDeadline2,attemptAddress2,\n  totalGameEntriesGame2,game1LeaderBoardIndex,game1LeaderBoardGameID,game1LeaderBoardAddress,\n    game1LeaderBoardEntered,game1LeaderBoardUsername,game1LeaderBoardTries,game1LeaderBoardStage,game1LeaderBoard,game1UserList,state_leaderboardAddressSearch_huntid_game1,state_leaderboardAddressSearch_address_game1,state_leaderboardAddressSearch_entered_game1,\n    state_leaderboardAddressSearch_username_game1,state_leaderboardAddressSearch_tries_game1,state_leaderboardAddressSearch_stage_game1,state_WinnerEstPrizeGame2,\n])\n\n\n\n\n    return (\n\n\n\n\n        <div className=\"background customFont\">\n\n\n        <Helmet>\n          <title>TreasureBlox | DAPP</title>\n        </Helmet>\n\n\n        <Router>\n        <MyNav accounts={accounts}/>\n\n\n// Pages\n\n        <Switch>\n                <Route path=\"/home\">\n\n                  <Home\n                  game1_id={game1_id}\n                  game1_live={game1_live}\n                  game1_prize={game1_prize}\n                  game1_question_hash={game1_question_hash}\n                  game1_time_lock_cost={game1_time_lock_cost}\n                  game1_submit_secret_cost={game1_submit_secret_cost}\n                  game1_riddle={game1_riddle}\n                  game1_clue={game1_clue}\n                  game1_head_start_time={game1_head_start_time}\n                  game1_entry_limit={game1_entry_limit}\n                  game1_entry_cost={game1_entry_cost}\n\n                  allGame1_id={allGame1_id}\n                  allGasme1_user_front_of_que={allGame1_user_front_of_que}\n                  allGame1_deadline_time={allGame1_deadline_time}\n                  allGame1_username={allGame1_username}\n                  allGame1_total_game_tries={allGame1_total_game_tries}\n                  countGame1={countGame1}\n                  countGame1DeadlineTrue={countGame1DeadlineTrue}\n                  totalTreasure={totalTreasure}\n                  game1numberOfEntries={game1numberOfEntries}\n\n                  game2_id={game2_id}\n                  game2_live={game2_live}\n                  game2_prize={game2_prize}\n                  game2_question_hash={game2_question_hash}\n                  game2_time_lock_cost={game2_time_lock_cost}\n                  game2_submit_secret_cost={game2_submit_secret_cost}\n                  game2_riddle={game2_riddle}\n                  game2_clue={game2_clue}\n                  game2_head_start_time={game2_head_start_time}\n                  game2_entry_limit={game2_entry_limit}\n                  game2_entry_cost={game2_entry_cost}\n                  allGame2_id={allGame2_id}\n                  allGasme2_user_front_of_que={allGame2_user_front_of_que}\n                  allGame2_deadline_time={allGame2_deadline_time}\n                  allGame2_username={allGame2_username}\n                  allGame2_total_game_tries={allGame2_total_game_tries}\n                  countGame2={countGame2}\n                  countGame2DeadlineTrue={countGame2DeadlineTrue}\n\n                  totalGameEntriesGame1={totalGameEntriesGame1}\n                  totalGameEntriesGame2={totalGameEntriesGame2}\n                  globalNumberOfTries={globalNumberOfTries}\n\n                  tokenContract={tokenContract}\n\n\n                  />\n                </Route>\n\n              <Route path=\"/hunt1\">\n\n                <Hunt1\n\n                web3={web3}\n                game1_id={game1_id}\n                game1_live={game1_live}\n                game1_prize={game1_prize}\n                game1_question_hash={game1_question_hash}\n                game1_time_lock_cost={game1_time_lock_cost}\n                game1_submit_secret_cost={game1_submit_secret_cost}\n                game1_riddle={game1_riddle}\n                game1_clue={game1_clue}\n                game1_head_start_time={game1_head_start_time}\n                game1_entry_limit={game1_entry_limit}\n                game1_entry_cost={game1_entry_cost}\n                allGame1_id={allGame1_id}\n                allGasme1_user_front_of_que={allGame1_user_front_of_que}\n                allGame1_deadline_time={allGame1_deadline_time}\n                allGame1_username={allGame1_username}\n                allGame1_total_game_tries={allGame1_total_game_tries}\n                countGame1={countGame1}\n                countGame1DeadlineTrue={countGame1DeadlineTrue}\n                decimals={decimals}\n                totalTreasure={totalTreasure}\n                contract={contract}\n                accounts={accounts}\n                game1numberOfEntries={game1numberOfEntries}\n                userGame1_id={userGame1_id}\n                userEntered_game1={userEntered_game1}\n                userGame1_headstart_time={userGame1_headstart_time}\n                userGame1_live={userGame1_live}\n                winning_address1={winning_address1}\n                treasure_found1={treasure_found1}\n                winning_prize1={winning_prize1}\n                question_hash_solved1={question_hash_solved1}\n                winning_message1={winning_message1}\n                attemptId1={attemptId1}\n                attemptAddress1={attemptAddress1}\n                attemptUsername1={attemptUsername1}\n                attemptDeadline1={attemptDeadline1}\n                totalGameEntriesGame1={totalGameEntriesGame1}\n                globalNumberOfTries={globalNumberOfTries}\n\n                game1LeaderBoardIndex={game1LeaderBoardIndex}\n                game1LeaderBoardGameID={game1LeaderBoardGameID}\n                game1LeaderBoardAddress={game1LeaderBoardAddress}\n                game1LeaderBoardEntered={game1LeaderBoardEntered}\n                game1LeaderBoardUsername={game1LeaderBoardUsername}\n                game1LeaderBoardTries={game1LeaderBoardTries}\n                game1LeaderBoardStage={game1LeaderBoardStage}\n\n                game1LeaderBoard={game1LeaderBoard}\n                game1UserList={game1UserList}\n\n                state_leaderboardAddressSearch_huntid_game1={state_leaderboardAddressSearch_huntid_game1}\n                state_leaderboardAddressSearch_address_game1={state_leaderboardAddressSearch_address_game1}\n                state_leaderboardAddressSearch_entered_game1={state_leaderboardAddressSearch_entered_game1}\n                state_leaderboardAddressSearch_username_game1={state_leaderboardAddressSearch_username_game1}\n                state_leaderboardAddressSearch_tries_game1={state_leaderboardAddressSearch_tries_game1}\n                state_leaderboardAddressSearch_stage_game1={state_leaderboardAddressSearch_stage_game1}\n                state_WinnerEstPrizeGame1={state_WinnerEstPrizeGame1}\n                />\n\n              </Route>\n\n              <Route path=\"/hunt2\">\n\n              <Hunt2\n              web3={web3}\n              game2_id={game2_id}\n              game2_live={game2_live}\n              game2_prize={game2_prize}\n              game2_question_hash={game2_question_hash}\n              game2_time_lock_cost={game2_time_lock_cost}\n              game2_submit_secret_cost={game2_submit_secret_cost}\n              game2_riddle={game2_riddle}\n              game2_clue={game2_clue}\n              game2_head_start_time={game2_head_start_time}\n              game2_entry_limit={game2_entry_limit}\n              game2_entry_cost={game2_entry_cost}\n              allGame2_id={allGame2_id}\n              allGame2_user_front_of_que={allGame2_user_front_of_que}\n              allGame2_deadline_time={allGame2_deadline_time}\n              allGame2_username={allGame2_username}\n              allGame2_total_game_tries={allGame2_total_game_tries}\n              countGame2={countGame2}\n              countGame2DeadlineTrue={countGame2DeadlineTrue}\n              decimals={decimals}\n              totalTreasure={totalTreasure}\n              contract={contract}\n              accounts={accounts}\n              game2numberOfEntries={game2numberOfEntries}\n              userGame2_id={userGame2_id}\n              userEntered_game2={userEntered_game2}\n              userGame2_headstart_time={userGame2_headstart_time}\n              userGame2_live={userGame2_live}\n              winning_address2={winning_address2}\n              treasure_found2={treasure_found2}\n              winning_prize2={winning_prize2}\n              question_hash_solved2={question_hash_solved2}\n              winning_message2={winning_message2}\n              attemptId2={attemptId2}\n              attemptAddress2={attemptAddress2}\n              attemptUsername2={attemptUsername2}\n              attemptDeadline2={attemptDeadline2}\n              totalGameEntriesGame2={totalGameEntriesGame2}\n              globalNumberOfTries={globalNumberOfTries}\n\n              game2LeaderBoardIndex={game2LeaderBoardIndex}\n              game2LeaderBoardGameID={game2LeaderBoardGameID}\n              game2LeaderBoardAddress={game2LeaderBoardAddress}\n              game2LeaderBoardEntered={game2LeaderBoardEntered}\n              game2LeaderBoardUsername={game2LeaderBoardUsername}\n              game2LeaderBoardTries={game2LeaderBoardTries}\n              game2LeaderBoardStage={game2LeaderBoardStage}\n\n              game2LeaderBoard={game2LeaderBoard}\n              game2UserList={game2UserList}\n\n              state_leaderboardAddressSearch_huntid_game2={state_leaderboardAddressSearch_huntid_game2}\n              state_leaderboardAddressSearch_address_game2={state_leaderboardAddressSearch_address_game2}\n              state_leaderboardAddressSearch_entered_game2={state_leaderboardAddressSearch_entered_game2}\n              state_leaderboardAddressSearch_username_game2={state_leaderboardAddressSearch_username_game2}\n              state_leaderboardAddressSearch_tries_game2={state_leaderboardAddressSearch_tries_game2}\n              state_leaderboardAddressSearch_stage_game2={state_leaderboardAddressSearch_stage_game2}\n              state_WinnerEstPrizeGame2={state_WinnerEstPrizeGame2}\n\n              />\n\n              </Route>\n\n        </Switch>\n\n        <Redirect to=\"/home\" />\n</Router>\n\n\n      </div>\n    );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}