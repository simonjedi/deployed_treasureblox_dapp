{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/Game2.js\",\n    _s2 = $RefreshSig$();\n\nimport { Tooltip, OverlayTrigger, Form, ButtonGroup, ButtonToolbar, CardColumns, CardGroup, Card, Row, Col, Button, Container, Nav, Navbar, NavDropdown, Modal } from 'react-bootstrap';\nimport MyNav from './MyNav';\nimport moment from 'moment'; // import img1 from './Treasure-hunt.jpeg';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component, useState, useEffect, StyleSheet, Text, View, Dimensions, TouchableWithoutFeedback } from 'react';\nimport Connection from \"./Connection\";\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport \"./Game1.css\";\nimport Timer from './components/Structure/Game1/Timer';\nimport HomeCards from './components/Structure/HomeCards';\nimport GameCard from './components/Structure/GameCard';\nimport HomeHuntCards from './components/Structure/HomeHuntCards';\nimport SingleCard from './components/Structure/Game1/SingleCard';\nimport troyIntro from './MineGame/assets/TroyClip1.mp4';\nimport gameSound from './MineGame/assets/game1_soundtrack.mp4';\nimport troyImg from './MineGame/assets/Treasure_Hunter.png';\nimport troymore from './MineGame/assets/TroyMore.png';\nimport ReactAudioPlayer from 'react-audio-player';\nimport PageCard from './components/Structure/Game1/PageCard';\nimport HuntWowCards from './components/Structure/Game1/HuntWowCards';\nimport EnterHuntCards from './components/Structure/Game1/EnterHuntCards';\nimport LeaderBoardCard from './components/Structure/Game1/LeaderBoardCard';\nimport Confetti from 'react-confetti';\nimport { Helmet } from 'react-helmet';\nimport Board from './MineGame/BloxMine/Board';\nimport Bird from './BloxEscape/components/Bird';\nimport Obstacles from './BloxEscape/components/Obstacles';\nconst screenWidth = Dimensions.get(\"screen\").width;\nconst screenHeight = Dimensions.get(\"screen\").height;\nconst birdLeft = screenWidth / 2;\nconst [birdBottom, setBirdBottom] = useState(screenHeight / 2);\nconst [obstaclesLeft, setObstaclesLeft] = useState(screenWidth);\nconst [obstaclesLeftTwo, setObstaclesLeftTwo] = useState(screenWidth + screenWidth / 2 + 30);\nconst [obstaclesNegHeight, setObstaclesNegHeight] = useState(0);\nconst [obstaclesNegHeightTwo, setObstaclesNegHeightTwo] = useState(0);\nconst [isGameOver, setIsGameOver] = useState(false);\nconst [score, setScore] = useState(0);\nconst gravity = 3;\nlet obstacleWidth = 60;\nlet obstacleHeight = 300;\nlet gap = 200;\nlet gameTimerId;\nlet obstaclesTimerId;\nlet obstaclesTimerIdTwo;\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\"; // Hook\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useWindowSize() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined\n  });\n\n  const Level2Game1 = props => {\n    _s();\n\n    const commaNumber = require('comma-number');\n\n    const {\n      width,\n      height\n    } = useWindowSize();\n    const game2_prize = commaNumber(props.game1_prize, ',');\n    const winner = props.treasure_found2;\n    const [show, setShow] = useState(true);\n\n    const handleClose = () => setShow(false);\n\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      } // Add event listener\n\n\n      window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n      handleResize(); // Remove event listener on cleanup\n\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n\n    return windowSize;\n  }; //start bird falling\n\n\n  _s(Level2Game1, \"xCf+vpeQjhAMeRFIcQf+2Qs/CVE=\", false, function () {\n    return [useWindowSize];\n  });\n\n  useEffect(() => {\n    if (birdBottom > 0) {\n      gameTimerId = setInterval(() => {\n        setBirdBottom(birdBottom => birdBottom - gravity);\n      }, 30);\n      return () => {\n        clearInterval(gameTimerId);\n      };\n    } //if i dont have birdBottom as a dependecy, it wont stop\n\n  }, [birdBottom]);\n  console.log(birdBottom);\n\n  const jump = () => {\n    if (!isGameOver && birdBottom < screenHeight) {\n      setBirdBottom(birdBottom => birdBottom + 50);\n      console.log('jumped');\n    }\n  }; //start first obstacle\n\n\n  useEffect(() => {\n    if (obstaclesLeft > -60) {\n      obstaclesTimerId = setInterval(() => {\n        setObstaclesLeft(obstaclesLeft => obstaclesLeft - 5);\n      }, 30);\n      return () => {\n        clearInterval(obstaclesTimerId);\n      };\n    } else {\n      setScore(score => score + 1);\n      setObstaclesLeft(screenWidth);\n      setObstaclesNegHeight(-Math.random() * 100);\n    }\n  }, [obstaclesLeft]); //start second obstacle\n\n  useEffect(() => {\n    if (obstaclesLeftTwo > -60) {\n      obstaclesTimerIdTwo = setInterval(() => {\n        setObstaclesLeftTwo(obstaclesLeftTwo => obstaclesLeftTwo - 5);\n      }, 30);\n      return () => {\n        clearInterval(obstaclesTimerIdTwo);\n      };\n    } else {\n      setScore(score => score + 1);\n      setObstaclesLeftTwo(screenWidth);\n      setObstaclesNegHeightTwo(-Math.random() * 100);\n    }\n  }, [obstaclesLeftTwo]); //check for collisions\n\n  useEffect(() => {\n    console.log(obstaclesLeft);\n    console.log(screenWidth / 2);\n    console.log(obstaclesLeft > screenWidth / 2);\n\n    if ((birdBottom < obstaclesNegHeight + obstacleHeight + 30 || birdBottom > obstaclesNegHeight + obstacleHeight + gap - 30) && obstaclesLeft > screenWidth / 2 - 30 && obstaclesLeft < screenWidth / 2 + 30 || (birdBottom < obstaclesNegHeightTwo + obstacleHeight + 30 || birdBottom > obstaclesNegHeightTwo + obstacleHeight + gap - 30) && obstaclesLeftTwo > screenWidth / 2 - 30 && obstaclesLeftTwo < screenWidth / 2 + 30) {\n      console.log('game over');\n      gameOver();\n    }\n  });\n\n  const gameOver = () => {\n    clearInterval(gameTimerId);\n    clearInterval(obstaclesTimerId);\n    clearInterval(obstaclesTimerIdTwo);\n    setIsGameOver(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spaceTopHome\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"TreasureBlox | Fort Blox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ReactAudioPlayer, {\n        src: troyIntro,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ReactAudioPlayer, {\n        src: gameSound,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"custom modal-dialog\",\n        show: show,\n        onHide: handleClose,\n        children: /*#__PURE__*/_jsxDEV(Card.Img, {\n          src: troyImg,\n          alt: \"Troy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"siteTitle\",\n        children: \"Welcome to fort Blox... Can you help Captain Troy 'Mighty' Armstrong find all the mines?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }, this), props.playLevel1Game1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/hunt1\",\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"// Start\", /*#__PURE__*/_jsxDEV(View, {\n          style: styles.container,\n          children: [isGameOver && /*#__PURE__*/_jsxDEV(Text, {\n            style: {\n              fontSize: '30px'\n            },\n            children: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(Bird, {\n            birdBottom: birdBottom,\n            birdLeft: birdLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(Obstacles, {\n            color: 'green',\n            obstacleWidth: obstacleWidth,\n            obstacleHeight: obstacleHeight,\n            randomBottom: obstaclesNegHeight,\n            gap: gap,\n            obstaclesLeft: obstaclesLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(Obstacles, {\n            color: 'yellow',\n            obstacleWidth: obstacleWidth,\n            obstacleHeight: obstacleHeight,\n            randomBottom: obstaclesNegHeightTwo,\n            gap: gap,\n            obstaclesLeft: obstaclesLeftTwo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 1\n        }, this), \"// End\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(useWindowSize, \"s9xiHq9FHzBqX+4TX72isq1YTZg=\");\n\nexport default Level2Game1;","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/Game2.js"],"names":["Tooltip","OverlayTrigger","Form","ButtonGroup","ButtonToolbar","CardColumns","CardGroup","Card","Row","Col","Button","Container","Nav","Navbar","NavDropdown","Modal","MyNav","moment","React","Component","useState","useEffect","StyleSheet","Text","View","Dimensions","TouchableWithoutFeedback","Connection","useWallet","UseWalletProvider","Timer","HomeCards","GameCard","HomeHuntCards","SingleCard","troyIntro","gameSound","troyImg","troymore","ReactAudioPlayer","PageCard","HuntWowCards","EnterHuntCards","LeaderBoardCard","Confetti","Helmet","Board","Bird","Obstacles","screenWidth","get","width","screenHeight","height","birdLeft","birdBottom","setBirdBottom","obstaclesLeft","setObstaclesLeft","obstaclesLeftTwo","setObstaclesLeftTwo","obstaclesNegHeight","setObstaclesNegHeight","obstaclesNegHeightTwo","setObstaclesNegHeightTwo","isGameOver","setIsGameOver","score","setScore","gravity","obstacleWidth","obstacleHeight","gap","gameTimerId","obstaclesTimerId","obstaclesTimerIdTwo","BrowserRouter","Router","Switch","Route","Link","Redirect","useWindowSize","windowSize","setWindowSize","undefined","Level2Game1","props","commaNumber","require","game2_prize","game1_prize","winner","treasure_found2","show","setShow","handleClose","handleShow","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","setInterval","clearInterval","console","log","jump","Math","random","gameOver","playLevel1Game1","styles","container","fontSize"],"mappings":"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","sourcesContent":["import {Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Row,Col,Button,Container,Nav,Navbar,NavDropdown,Modal } from 'react-bootstrap';\nimport MyNav from './MyNav';\nimport moment from 'moment';\n\n// import img1 from './Treasure-hunt.jpeg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React, { Component, useState, useEffect,StyleSheet, Text, View, Dimensions, TouchableWithoutFeedback } from 'react'\nimport Connection from \"./Connection\";\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport \"./Game1.css\";\n\nimport Timer from './components/Structure/Game1/Timer';\n\nimport HomeCards from './components/Structure/HomeCards';\nimport GameCard from './components/Structure/GameCard';\n\nimport HomeHuntCards from './components/Structure/HomeHuntCards';\nimport SingleCard from './components/Structure/Game1/SingleCard';\n\nimport troyIntro from './MineGame/assets/TroyClip1.mp4';\nimport gameSound from './MineGame/assets/game1_soundtrack.mp4';\nimport troyImg from './MineGame/assets/Treasure_Hunter.png';\nimport troymore from './MineGame/assets/TroyMore.png';\n\n\n\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport PageCard from './components/Structure/Game1/PageCard';\nimport HuntWowCards from './components/Structure/Game1/HuntWowCards';\nimport EnterHuntCards from './components/Structure/Game1/EnterHuntCards';\nimport LeaderBoardCard from './components/Structure/Game1/LeaderBoardCard';\n\nimport Confetti from 'react-confetti'\nimport { Helmet } from 'react-helmet';\n\nimport Board from './MineGame/BloxMine/Board';\n\nimport Bird from './BloxEscape/components/Bird'\nimport Obstacles from './BloxEscape/components/Obstacles'\n\nconst screenWidth = Dimensions.get(\"screen\").width\nconst screenHeight = Dimensions.get(\"screen\").height\nconst birdLeft = screenWidth / 2\nconst [birdBottom, setBirdBottom]= useState(screenHeight / 2)\nconst [obstaclesLeft, setObstaclesLeft]= useState(screenWidth)\nconst [obstaclesLeftTwo, setObstaclesLeftTwo]= useState(screenWidth + screenWidth/2 + 30)\nconst [obstaclesNegHeight, setObstaclesNegHeight]= useState(0)\nconst [obstaclesNegHeightTwo, setObstaclesNegHeightTwo]= useState(0)\nconst [isGameOver, setIsGameOver]= useState(false)\nconst [score, setScore]= useState(0)\nconst gravity = 3\nlet obstacleWidth = 60\nlet obstacleHeight = 300\nlet gap = 200\nlet gameTimerId\nlet obstaclesTimerId\nlet obstaclesTimerIdTwo\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\n// Hook\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n\n\n\nconst Level2Game1 = (props) => {\n\n  const commaNumber = require('comma-number')\n  const { width, height } = useWindowSize();\n\n\n  const game2_prize = commaNumber(props.game1_prize,',');\n\n  const winner = props.treasure_found2;\n\n\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n  }\n\n  //start bird falling\n  useEffect(() => {\n    if (birdBottom > 0) {\n      gameTimerId = setInterval(() => {\n        setBirdBottom(birdBottom => birdBottom - gravity)\n      },30)\n\n      return () => {\n        clearInterval(gameTimerId)\n      }\n    }\n    //if i dont have birdBottom as a dependecy, it wont stop\n  }, [birdBottom])\n  console.log(birdBottom)\n\n  const jump = () => {\n    if (!isGameOver && (birdBottom < screenHeight)) {\n      setBirdBottom(birdBottom => birdBottom + 50)\n      console.log('jumped')\n    }\n  }\n\n  //start first obstacle\n  useEffect(() => {\n    if (obstaclesLeft > -60) {\n      obstaclesTimerId = setInterval(() => {\n        setObstaclesLeft(obstaclesLeft => obstaclesLeft - 5)\n      }, 30)\n      return () => {\n        clearInterval(obstaclesTimerId)\n      }\n    } else {\n      setScore(score => score +1)\n      setObstaclesLeft(screenWidth)\n      setObstaclesNegHeight( - Math.random() * 100)\n    }\n  }, [obstaclesLeft])\n\n  //start second obstacle\n  useEffect(() => {\n    if (obstaclesLeftTwo > -60) {\n      obstaclesTimerIdTwo = setInterval(() => {\n        setObstaclesLeftTwo(obstaclesLeftTwo => obstaclesLeftTwo - 5)\n      }, 30)\n        return () => {\n          clearInterval(obstaclesTimerIdTwo)\n        }\n      } else {\n          setScore(score => score +1)\n          setObstaclesLeftTwo(screenWidth)\n          setObstaclesNegHeightTwo( - Math.random() * 100)\n        }\n  }, [obstaclesLeftTwo])\n\n    //check for collisions\n    useEffect(() => {\n      console.log(obstaclesLeft)\n      console.log(screenWidth/2)\n      console.log(obstaclesLeft > screenWidth/2)\n      if (\n        ((birdBottom < (obstaclesNegHeight + obstacleHeight + 30) ||\n        birdBottom > (obstaclesNegHeight + obstacleHeight + gap -30)) &&\n        (obstaclesLeft > screenWidth/2 -30 && obstaclesLeft < screenWidth/2 + 30 )\n        )\n        ||\n        ((birdBottom < (obstaclesNegHeightTwo + obstacleHeight + 30) ||\n        birdBottom > (obstaclesNegHeightTwo + obstacleHeight + gap -30)) &&\n        (obstaclesLeftTwo > screenWidth/2 -30 && obstaclesLeftTwo < screenWidth/2 + 30 )\n        )\n        )\n        {\n        console.log('game over')\n        gameOver()\n      }\n    })\n\n    const gameOver = () => {\n      clearInterval(gameTimerId)\n      clearInterval(obstaclesTimerId)\n      clearInterval(obstaclesTimerIdTwo)\n      setIsGameOver(true)\n    }\n\n\n    return (\n\n      <div className=\"spaceTopHome\">\n      <Helmet>\n        <title>TreasureBlox | Fort Blox</title>\n      </Helmet>\n      <div>\n\n\n      <ReactAudioPlayer\n        src={troyIntro}\n        autoPlay\n      />\n      <ReactAudioPlayer\n        src={gameSound}\n        autoPlay\n      />\n\n      <Modal className=\"custom modal-dialog\" show={show} onHide={handleClose}>\n\n        <Card.Img  src={troyImg} alt=\"Troy\" />\n\n      </Modal>\n\n\n\n      <div className=\"siteTitle\">Welcome to fort Blox... Can you help Captain Troy 'Mighty' Armstrong find all the mines?</div>\n\n\n\n\n\n\n      {props.playLevel1Game1?(\n        <div>\n        <Redirect to=\"/hunt1\" {...props}/>\n        </div>\n      ):(\n        <div>\n\n// Start\n\n<View style={styles.container}>\n  {isGameOver && <Text style={{fontSize: '30px'}}>{score}</Text>}\n  <Bird\n    birdBottom = {birdBottom}\n    birdLeft = {birdLeft}\n  />\n  <Obstacles\n    color={'green'}\n    obstacleWidth = {obstacleWidth}\n    obstacleHeight = {obstacleHeight}\n    randomBottom = {obstaclesNegHeight}\n    gap = {gap}\n    obstaclesLeft = {obstaclesLeft}\n  />\n  <Obstacles\n    color={'yellow'}\n    obstacleWidth = {obstacleWidth}\n    obstacleHeight = {obstacleHeight}\n    randomBottom = {obstaclesNegHeightTwo}\n    gap = {gap}\n    obstaclesLeft = {obstaclesLeftTwo}\n  />\n</View>\n\n// End\n\n        </div>\n      )}\n\n\n\n\n\n      </div>\n\n<br/><br/><br/><br/>\n\n</div>\n\n\n\n    );\n\n}\n\nexport default Level2Game1;\n"]},"metadata":{},"sourceType":"module"}