{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/Connection.js\",\n    _s = $RefreshSig$();\n\n// App.js\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport React, { useState, useEffect } from 'react';\nimport { useWallet, UseWalletProvider } from 'use-wallet';\nimport { Button } from 'react-bootstrap';\nimport MyNav from \"./MyNav\";\nimport App from \"./App\";\nimport getWeb3 from \"./getWeb3\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Connection = props => {\n  _s();\n\n  const {\n    active,\n    account,\n    library,\n    connector,\n    activate,\n    deactivate\n  } = useWeb3React();\n\n  async function connect() {\n    try {\n      await activate(injected);\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  async function disconnect() {\n    try {\n      deactivate();\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  const wallet = useWallet();\n  const [firstPartAddress, setFirstPartAddress] = useState('Connect Wallet');\n  const [secondPartAddress, setSecondPartAddress] = useState('');\n  useEffect(() => {\n    const init = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const usersAccount = accounts[0];\n      const stringOfUsersAccount = new String(usersAccount);\n      console.log(stringOfUsersAccount.slice(0, 4)); // \"01\"\n\n      setFirstPartAddress(stringOfUsersAccount.slice(0, 5));\n      setSecondPartAddress('____' + stringOfUsersAccount.slice(37, 42));\n    };\n\n    init();\n  });\n\n  const connectWallet = async e => {\n    await wallet.connect();\n    const usersAccount = props.accounts;\n    const stringOfUsersAccount = new String(usersAccount);\n    console.log(stringOfUsersAccount.slice(0, 4)); // \"01\"\n\n    setFirstPartAddress('Welcome');\n    setSecondPartAddress('');\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: connectWallet,\n      id: \"wallet-button\",\n      className: \"customButton enableEthereumButton\",\n      children: [firstPartAddress, secondPartAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connect,\n        className: \"py-2 mt-20 mb-4 text-lg font-bold text-white rounded-lg w-56 bg-blue-600 hover:bg-blue-800\",\n        children: \"Connect to MetaMask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), active ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Connected with \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Not connected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 64\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnect,\n        className: \"py-2 mt-20 mb-4 text-lg font-bold text-white rounded-lg w-56 bg-blue-600 hover:bg-blue-800\",\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}; // Wrap everything in <UseWalletProvider />\n\n\n_s(Connection, \"dT41/tfRPyPhb3htP/8RxnUIFVw=\", false, function () {\n  return [useWeb3React, useWallet];\n});\n\n_c = Connection;\nexport default (props => /*#__PURE__*/_jsxDEV(UseWalletProvider, {\n  chainId: 1337,\n  connectors: {\n    // This is how connectors get configured\n    provided: {\n      provider: window.cleanEthereum\n    }\n  },\n  children: /*#__PURE__*/_jsxDEV(Connection, {\n    accounts: props.accounts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 85,\n  columnNumber: 3\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"Connection\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/Connection.js"],"names":["InjectedConnector","React","useState","useEffect","useWallet","UseWalletProvider","Button","MyNav","App","getWeb3","useWeb3React","Connection","props","active","account","library","connector","activate","deactivate","connect","injected","ex","console","log","disconnect","wallet","firstPartAddress","setFirstPartAddress","secondPartAddress","setSecondPartAddress","init","web3","accounts","eth","getAccounts","usersAccount","stringOfUsersAccount","String","slice","connectWallet","e","window","location","reload","provided","provider","cleanEthereum"],"mappings":"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","sourcesContent":["// App.js\nimport { InjectedConnector } from '@web3-react/injected-connector'\n\nimport React, {useState, useEffect} from 'react'\nimport { useWallet, UseWalletProvider } from 'use-wallet'\nimport { Button } from 'react-bootstrap';\n\nimport MyNav from \"./MyNav\";\nimport App from \"./App\";\nimport getWeb3 from \"./getWeb3\";\n\n\n\nimport { useWeb3React } from \"@web3-react/core\"\n\n\nconst Connection = (props) =>  {\n\n\n  const { active, account, library, connector, activate, deactivate } = useWeb3React()\n\n  async function connect() {\n    try {\n      await activate(injected)\n    } catch (ex) {\n      console.log(ex)\n    }\n  }\n\n  async function disconnect() {\n    try {\n      deactivate()\n    } catch (ex) {\n      console.log(ex)\n    }\n  }\n\n\n\n  const wallet = useWallet()\n  const [firstPartAddress, setFirstPartAddress] = useState('Connect Wallet');\n  const [secondPartAddress, setSecondPartAddress] = useState('');\n\n  useEffect(() => {\n\n     const init = async() => {\n       const web3 = await getWeb3();\n       const accounts = await web3.eth.getAccounts();\n       const usersAccount = accounts[0];\n       const stringOfUsersAccount = new String(usersAccount)\n       console.log(stringOfUsersAccount.slice(0, 4)); // \"01\"\n       setFirstPartAddress(stringOfUsersAccount.slice(0, 5));\n       setSecondPartAddress('____'+stringOfUsersAccount.slice(37, 42));\n\n     }\n     init()\n   });\n\n  const connectWallet = async(e) => {\n    await wallet.connect()\n    const usersAccount = props.accounts;\n    const stringOfUsersAccount = new String(usersAccount)\n    console.log(stringOfUsersAccount.slice(0, 4)); // \"01\"\n    setFirstPartAddress('Welcome');\n    setSecondPartAddress('');\n    window.location.reload();\n\n  }\n\n  return(\n    <div>\n      <Button onClick={connectWallet} id=\"wallet-button\" className=\"customButton enableEthereumButton\">{firstPartAddress}{secondPartAddress}</Button>\n\n      <div className=\"flex flex-col items-center justify-center\">\n      <button onClick={connect} className=\"py-2 mt-20 mb-4 text-lg font-bold text-white rounded-lg w-56 bg-blue-600 hover:bg-blue-800\">Connect to MetaMask</button>\n      {active ? <span>Connected with <b>{account}</b></span> : <span>Not connected</span>}\n      <button onClick={disconnect} className=\"py-2 mt-20 mb-4 text-lg font-bold text-white rounded-lg w-56 bg-blue-600 hover:bg-blue-800\">Disconnect</button>\n    </div>\n    </div>\n  )\n}\n\n// Wrap everything in <UseWalletProvider />\nexport default (props) => (\n  <UseWalletProvider\n\n    chainId={1337}\n    connectors={{\n      // This is how connectors get configured\n      provided: {provider: window.cleanEthereum},\n    }}>\n\n    <Connection accounts={props.accounts}/>\n\n\n  </UseWalletProvider>\n)\n"]},"metadata":{},"sourceType":"module"}