{"ast":null,"code":"\"use strict\";\n\n(function (root) {\n  var MAX_VALUE = 0x7fffffff; // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n  // See: https://github.com/dchest/scrypt-async-js\n\n  function SHA256(m) {\n    var K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a;\n    var h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var w = new Array(64);\n\n    function blocks(p) {\n      var off = 0,\n          len = p.length;\n\n      while (len >= 64) {\n        var a = h0,\n            b = h1,\n            c = h2,\n            d = h3,\n            e = h4,\n            f = h5,\n            g = h6,\n            h = h7,\n            u,\n            i,\n            j,\n            t1,\n            t2;\n\n        for (i = 0; i < 16; i++) {\n          j = off + i * 4;\n          w[i] = (p[j] & 0xff) << 24 | (p[j + 1] & 0xff) << 16 | (p[j + 2] & 0xff) << 8 | p[j + 3] & 0xff;\n        }\n\n        for (i = 16; i < 64; i++) {\n          u = w[i - 2];\n          t1 = (u >>> 17 | u << 32 - 17) ^ (u >>> 19 | u << 32 - 19) ^ u >>> 10;\n          u = w[i - 15];\n          t2 = (u >>> 7 | u << 32 - 7) ^ (u >>> 18 | u << 32 - 18) ^ u >>> 3;\n          w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0) | 0;\n        }\n\n        for (i = 0; i < 64; i++) {\n          t1 = (((e >>> 6 | e << 32 - 6) ^ (e >>> 11 | e << 32 - 11) ^ (e >>> 25 | e << 32 - 25)) + (e & f ^ ~e & g) | 0) + (h + (K[i] + w[i] | 0) | 0) | 0;\n          t2 = ((a >>> 2 | a << 32 - 2) ^ (a >>> 13 | a << 32 - 13) ^ (a >>> 22 | a << 32 - 22)) + (a & b ^ a & c ^ b & c) | 0;\n          h = g;\n          g = f;\n          f = e;\n          e = d + t1 | 0;\n          d = c;\n          c = b;\n          b = a;\n          a = t1 + t2 | 0;\n        }\n\n        h0 = h0 + a | 0;\n        h1 = h1 + b | 0;\n        h2 = h2 + c | 0;\n        h3 = h3 + d | 0;\n        h4 = h4 + e | 0;\n        h5 = h5 + f | 0;\n        h6 = h6 + g | 0;\n        h7 = h7 + h | 0;\n        off += 64;\n        len -= 64;\n      }\n    }\n\n    blocks(m);\n    var i,\n        bytesLeft = m.length % 64,\n        bitLenHi = m.length / 0x20000000 | 0,\n        bitLenLo = m.length << 3,\n        numZeros = bytesLeft < 56 ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n    p.push(0x80);\n\n    for (i = bytesLeft + 1; i < numZeros; i++) {\n      p.push(0);\n    }\n\n    p.push(bitLenHi >>> 24 & 0xff);\n    p.push(bitLenHi >>> 16 & 0xff);\n    p.push(bitLenHi >>> 8 & 0xff);\n    p.push(bitLenHi >>> 0 & 0xff);\n    p.push(bitLenLo >>> 24 & 0xff);\n    p.push(bitLenLo >>> 16 & 0xff);\n    p.push(bitLenLo >>> 8 & 0xff);\n    p.push(bitLenLo >>> 0 & 0xff);\n    blocks(p);\n    return [h0 >>> 24 & 0xff, h0 >>> 16 & 0xff, h0 >>> 8 & 0xff, h0 >>> 0 & 0xff, h1 >>> 24 & 0xff, h1 >>> 16 & 0xff, h1 >>> 8 & 0xff, h1 >>> 0 & 0xff, h2 >>> 24 & 0xff, h2 >>> 16 & 0xff, h2 >>> 8 & 0xff, h2 >>> 0 & 0xff, h3 >>> 24 & 0xff, h3 >>> 16 & 0xff, h3 >>> 8 & 0xff, h3 >>> 0 & 0xff, h4 >>> 24 & 0xff, h4 >>> 16 & 0xff, h4 >>> 8 & 0xff, h4 >>> 0 & 0xff, h5 >>> 24 & 0xff, h5 >>> 16 & 0xff, h5 >>> 8 & 0xff, h5 >>> 0 & 0xff, h6 >>> 24 & 0xff, h6 >>> 16 & 0xff, h6 >>> 8 & 0xff, h6 >>> 0 & 0xff, h7 >>> 24 & 0xff, h7 >>> 16 & 0xff, h7 >>> 8 & 0xff, h7 >>> 0 & 0xff];\n  }\n\n  function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n    // compress password if it's longer than hash block length\n    password = password.length <= 64 ? password : SHA256(password);\n    var i;\n    var innerLen = 64 + salt.length + 4;\n    var inner = new Array(innerLen);\n    var outerKey = new Array(64);\n    var dk = []; // inner = (password ^ ipad) || salt || counter\n\n    for (i = 0; i < 64; i++) inner[i] = 0x36;\n\n    for (i = 0; i < password.length; i++) inner[i] ^= password[i];\n\n    for (i = 0; i < salt.length; i++) inner[64 + i] = salt[i];\n\n    for (i = innerLen - 4; i < innerLen; i++) inner[i] = 0; // outerKey = password ^ opad\n\n\n    for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n\n    for (i = 0; i < password.length; i++) outerKey[i] ^= password[i]; // increments counter inside inner\n\n\n    function incrementCounter() {\n      for (var i = innerLen - 1; i >= innerLen - 4; i--) {\n        inner[i]++;\n        if (inner[i] <= 0xff) return;\n        inner[i] = 0;\n      }\n    } // output blocks = SHA256(outerKey || SHA256(inner)) ...\n\n\n    while (dkLen >= 32) {\n      incrementCounter();\n      dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n      dkLen -= 32;\n    }\n\n    if (dkLen > 0) {\n      incrementCounter();\n      dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n    }\n\n    return dk;\n  } // The following is an adaptation of scryptsy\n  // See: https://www.npmjs.com/package/scryptsy\n\n\n  function blockmix_salsa8(BY, Yi, r, x, _X) {\n    var i;\n    arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n\n    for (i = 0; i < 2 * r; i++) {\n      blockxor(BY, i * 16, _X, 16);\n      salsa20_8(_X, x);\n      arraycopy(_X, 0, BY, Yi + i * 16, 16);\n    }\n\n    for (i = 0; i < r; i++) {\n      arraycopy(BY, Yi + i * 2 * 16, BY, i * 16, 16);\n    }\n\n    for (i = 0; i < r; i++) {\n      arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n    }\n  }\n\n  function R(a, b) {\n    return a << b | a >>> 32 - b;\n  }\n\n  function salsa20_8(B, x) {\n    arraycopy(B, 0, x, 0, 16);\n\n    for (var i = 8; i > 0; i -= 2) {\n      x[4] ^= R(x[0] + x[12], 7);\n      x[8] ^= R(x[4] + x[0], 9);\n      x[12] ^= R(x[8] + x[4], 13);\n      x[0] ^= R(x[12] + x[8], 18);\n      x[9] ^= R(x[5] + x[1], 7);\n      x[13] ^= R(x[9] + x[5], 9);\n      x[1] ^= R(x[13] + x[9], 13);\n      x[5] ^= R(x[1] + x[13], 18);\n      x[14] ^= R(x[10] + x[6], 7);\n      x[2] ^= R(x[14] + x[10], 9);\n      x[6] ^= R(x[2] + x[14], 13);\n      x[10] ^= R(x[6] + x[2], 18);\n      x[3] ^= R(x[15] + x[11], 7);\n      x[7] ^= R(x[3] + x[15], 9);\n      x[11] ^= R(x[7] + x[3], 13);\n      x[15] ^= R(x[11] + x[7], 18);\n      x[1] ^= R(x[0] + x[3], 7);\n      x[2] ^= R(x[1] + x[0], 9);\n      x[3] ^= R(x[2] + x[1], 13);\n      x[0] ^= R(x[3] + x[2], 18);\n      x[6] ^= R(x[5] + x[4], 7);\n      x[7] ^= R(x[6] + x[5], 9);\n      x[4] ^= R(x[7] + x[6], 13);\n      x[5] ^= R(x[4] + x[7], 18);\n      x[11] ^= R(x[10] + x[9], 7);\n      x[8] ^= R(x[11] + x[10], 9);\n      x[9] ^= R(x[8] + x[11], 13);\n      x[10] ^= R(x[9] + x[8], 18);\n      x[12] ^= R(x[15] + x[14], 7);\n      x[13] ^= R(x[12] + x[15], 9);\n      x[14] ^= R(x[13] + x[12], 13);\n      x[15] ^= R(x[14] + x[13], 18);\n    }\n\n    for (i = 0; i < 16; ++i) {\n      B[i] += x[i];\n    }\n  } // naive approach... going back to loop unrolling may yield additional performance\n\n\n  function blockxor(S, Si, D, len) {\n    for (var i = 0; i < len; i++) {\n      D[i] ^= S[Si + i];\n    }\n  }\n\n  function arraycopy(src, srcPos, dest, destPos, length) {\n    while (length--) {\n      dest[destPos++] = src[srcPos++];\n    }\n  }\n\n  function checkBufferish(o) {\n    if (!o || typeof o.length !== 'number') {\n      return false;\n    }\n\n    for (var i = 0; i < o.length; i++) {\n      if (typeof o[i] !== 'number') {\n        return false;\n      }\n\n      var v = parseInt(o[i]);\n\n      if (v != o[i] || v < 0 || v >= 256) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function ensureInteger(value, name) {\n    var intValue = parseInt(value);\n\n    if (value != intValue) {\n      throw new Error('invalid ' + name);\n    }\n\n    return intValue;\n  } // N = Cpu cost, r = Memory cost, p = parallelization cost\n  // callback(error, progress, key)\n\n\n  function scrypt(password, salt, N, r, p, dkLen, callback) {\n    if (!callback) {\n      throw new Error('missing callback');\n    }\n\n    N = ensureInteger(N, 'N');\n    r = ensureInteger(r, 'r');\n    p = ensureInteger(p, 'p');\n    dkLen = ensureInteger(dkLen, 'dkLen');\n\n    if (N === 0 || (N & N - 1) !== 0) {\n      throw new Error('N must be power of 2');\n    }\n\n    if (N > MAX_VALUE / 128 / r) {\n      throw new Error('N too large');\n    }\n\n    if (r > MAX_VALUE / 128 / p) {\n      throw new Error('r too large');\n    }\n\n    if (!checkBufferish(password)) {\n      throw new Error('password must be an array or buffer');\n    }\n\n    password = Array.prototype.slice.call(password);\n\n    if (!checkBufferish(salt)) {\n      throw new Error('salt must be an array or buffer');\n    }\n\n    salt = Array.prototype.slice.call(salt);\n    var b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n    var B = new Uint32Array(p * 32 * r);\n\n    for (var i = 0; i < B.length; i++) {\n      var j = i * 4;\n      B[i] = (b[j + 3] & 0xff) << 24 | (b[j + 2] & 0xff) << 16 | (b[j + 1] & 0xff) << 8 | (b[j + 0] & 0xff) << 0;\n    }\n\n    var XY = new Uint32Array(64 * r);\n    var V = new Uint32Array(32 * r * N);\n    var Yi = 32 * r; // scratch space\n\n    var x = new Uint32Array(16); // salsa20_8\n\n    var _X = new Uint32Array(16); // blockmix_salsa8\n\n\n    var totalOps = p * N * 2;\n    var currentOp = 0;\n    var lastPercent10 = null; // Set this to true to abandon the scrypt on the next step\n\n    var stop = false; // State information\n\n    var state = 0;\n    var i0 = 0,\n        i1;\n    var Bi; // How many blockmix_salsa8 can we do per step?\n\n    var limit = parseInt(1000 / r); // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n\n    var nextTick = typeof setImmediate !== 'undefined' ? setImmediate : setTimeout; // This is really all I changed; making scryptsy a state machine so we occasionally\n    // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n\n    var incrementalSMix = function () {\n      if (stop) {\n        return callback(new Error('cancelled'), currentOp / totalOps);\n      }\n\n      switch (state) {\n        case 0:\n          // for (var i = 0; i < p; i++)...\n          Bi = i0 * 32 * r;\n          arraycopy(B, Bi, XY, 0, Yi); // ROMix - 1\n\n          state = 1; // Move to ROMix 2\n\n          i1 = 0;\n        // Fall through\n\n        case 1:\n          // Run up to 1000 steps of the first inner smix loop\n          var steps = N - i1;\n\n          if (steps > limit) {\n            steps = limit;\n          }\n\n          for (var i = 0; i < steps; i++) {\n            // ROMix - 2\n            arraycopy(XY, 0, V, (i1 + i) * Yi, Yi); // ROMix - 3\n\n            blockmix_salsa8(XY, Yi, r, x, _X); // ROMix - 4\n          } // for (var i = 0; i < N; i++)\n\n\n          i1 += steps;\n          currentOp += steps; // Call the callback with the progress (optionally stopping us)\n\n          var percent10 = parseInt(1000 * currentOp / totalOps);\n\n          if (percent10 !== lastPercent10) {\n            stop = callback(null, currentOp / totalOps);\n\n            if (stop) {\n              break;\n            }\n\n            lastPercent10 = percent10;\n          }\n\n          if (i1 < N) {\n            break;\n          }\n\n          i1 = 0; // Move to ROMix 6\n\n          state = 2;\n        // Fall through\n\n        case 2:\n          // Run up to 1000 steps of the second inner smix loop\n          var steps = N - i1;\n\n          if (steps > limit) {\n            steps = limit;\n          }\n\n          for (var i = 0; i < steps; i++) {\n            // ROMix - 6\n            var offset = (2 * r - 1) * 16; // ROMix - 7\n\n            var j = XY[offset] & N - 1;\n            blockxor(V, j * Yi, XY, Yi); // ROMix - 8 (inner)\n\n            blockmix_salsa8(XY, Yi, r, x, _X); // ROMix - 9 (outer)\n          } // for (var i = 0; i < N; i++)...\n\n\n          i1 += steps;\n          currentOp += steps; // Call the callback with the progress (optionally stopping us)\n\n          var percent10 = parseInt(1000 * currentOp / totalOps);\n\n          if (percent10 !== lastPercent10) {\n            stop = callback(null, currentOp / totalOps);\n\n            if (stop) {\n              break;\n            }\n\n            lastPercent10 = percent10;\n          }\n\n          if (i1 < N) {\n            break;\n          }\n\n          arraycopy(XY, 0, B, Bi, Yi); // ROMix - 10\n          // for (var i = 0; i < p; i++)...\n\n          i0++;\n\n          if (i0 < p) {\n            state = 0;\n            break;\n          }\n\n          b = [];\n\n          for (var i = 0; i < B.length; i++) {\n            b.push(B[i] >> 0 & 0xff);\n            b.push(B[i] >> 8 & 0xff);\n            b.push(B[i] >> 16 & 0xff);\n            b.push(B[i] >> 24 & 0xff);\n          }\n\n          var derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen); // Done; don't break (which would reschedule)\n\n          return callback(null, 1.0, derivedKey);\n      } // Schedule the next steps\n\n\n      nextTick(incrementalSMix);\n    }; // Bootstrap the incremental smix\n\n\n    incrementalSMix();\n  } // node.js\n\n\n  if (typeof exports !== 'undefined') {\n    module.exports = scrypt; // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define(scrypt); // Web Browsers\n  } else if (root) {\n    // If there was an existing library \"scrypt\", make sure it is still available\n    if (root.scrypt) {\n      root._scrypt = root.scrypt;\n    }\n\n    root.scrypt = scrypt;\n  }\n})(this);","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/node_modules/@meterio/ethers/node_modules/scrypt-js/scrypt.js"],"names":["root","MAX_VALUE","SHA256","m","K","h0","h1","h2","h3","h4","h5","h6","h7","w","Array","blocks","p","off","len","length","a","b","c","d","e","f","g","h","u","i","j","t1","t2","bytesLeft","bitLenHi","bitLenLo","numZeros","slice","push","PBKDF2_HMAC_SHA256_OneIter","password","salt","dkLen","innerLen","inner","outerKey","dk","incrementCounter","concat","blockmix_salsa8","BY","Yi","r","x","_X","arraycopy","blockxor","salsa20_8","R","B","S","Si","D","src","srcPos","dest","destPos","checkBufferish","o","v","parseInt","ensureInteger","value","name","intValue","Error","scrypt","N","callback","prototype","call","Uint32Array","XY","V","totalOps","currentOp","lastPercent10","stop","state","i0","i1","Bi","limit","nextTick","setImmediate","setTimeout","incrementalSMix","steps","percent10","offset","derivedKey","exports","module","define","amd","_scrypt"],"mappings":"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","sourcesContent":["\"use strict\";\n\n(function(root) {\n    var MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        var K = [\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ];\n\n        var h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        var h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        var w = new Array(64);\n\n        function blocks(p) {\n            var off = 0, len = p.length;\n            while (len >= 64) {\n                var a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        var i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi>>>24) & 0xff);\n        p.push((bitLenHi>>>16) & 0xff);\n        p.push((bitLenHi>>>8)  & 0xff);\n        p.push((bitLenHi>>>0)  & 0xff);\n        p.push((bitLenLo>>>24) & 0xff);\n        p.push((bitLenLo>>>16) & 0xff);\n        p.push((bitLenLo>>>8)  & 0xff);\n        p.push((bitLenLo>>>0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0>>>24) & 0xff, (h0>>>16) & 0xff, (h0>>>8) & 0xff, (h0>>>0) & 0xff,\n            (h1>>>24) & 0xff, (h1>>>16) & 0xff, (h1>>>8) & 0xff, (h1>>>0) & 0xff,\n            (h2>>>24) & 0xff, (h2>>>16) & 0xff, (h2>>>8) & 0xff, (h2>>>0) & 0xff,\n            (h3>>>24) & 0xff, (h3>>>16) & 0xff, (h3>>>8) & 0xff, (h3>>>0) & 0xff,\n            (h4>>>24) & 0xff, (h4>>>16) & 0xff, (h4>>>8) & 0xff, (h4>>>0) & 0xff,\n            (h5>>>24) & 0xff, (h5>>>16) & 0xff, (h5>>>8) & 0xff, (h5>>>0) & 0xff,\n            (h6>>>24) & 0xff, (h6>>>16) & 0xff, (h6>>>8) & 0xff, (h6>>>0) & 0xff,\n            (h7>>>24) & 0xff, (h7>>>16) & 0xff, (h7>>>8) & 0xff, (h7>>>0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = password.length <= 64 ? password : SHA256(password);\n\n        var i;\n        var innerLen = 64 + salt.length + 4;\n        var inner = new Array(innerLen);\n        var outerKey = new Array(64);\n        var dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) inner[i] = 0x36;\n        for (i = 0; i < password.length; i++) inner[i] ^= password[i];\n        for (i = 0; i < salt.length; i++) inner[64+i] = salt[i];\n        for (i = innerLen - 4; i < innerLen; i++) inner[i] = 0;\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (var i = innerLen-1; i >= innerLen-4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        var i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (var i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (var i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') {\n            return false;\n        }\n        for (var i = 0; i < o.length; i++) {\n            if (typeof(o[i]) !== 'number') { return false; }\n\n            var v = parseInt(o[i]);\n            if (v != o[i] || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        var intValue = parseInt(value);\n        if (value != intValue) { throw new Error('invalid ' + name); }\n        return intValue;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        if (!callback) { throw new Error('missing callback'); }\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        var b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        var B = new Uint32Array(p * 32 * r)\n        for (var i = 0; i < B.length; i++) {\n            var j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        var XY = new Uint32Array(64 * r);\n        var V = new Uint32Array(32 * r * N);\n\n        var Yi = 32 * r;\n\n        // scratch space\n        var x = new Uint32Array(16);       // salsa20_8\n        var _X = new Uint32Array(16);      // blockmix_salsa8\n\n        var totalOps = p * N * 2;\n        var currentOp = 0;\n        var lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        var stop = false;\n\n        // State information\n        var state = 0;\n        var i0 = 0, i1;\n        var Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        var limit = parseInt(1000 / r);\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        var nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        var incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    var steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (var i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    var percent10 = parseInt(1000 * currentOp / totalOps);\n                    if (percent10 !== lastPercent10) {\n                        stop = callback(null, currentOp / totalOps);\n                        if (stop) { break; }\n                        lastPercent10 = percent10;\n                    }\n\n                    if (i1 < N) {\n                        break;\n                    }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    var steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (var i = 0; i < steps; i++) {                // ROMix - 6\n                        var offset = (2 * r - 1) * 16;               // ROMix - 7\n                        var j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    var percent10 = parseInt(1000 * currentOp / totalOps);\n                    if (percent10 !== lastPercent10) {\n                        stop = callback(null, currentOp / totalOps);\n                        if (stop) { break; }\n                        lastPercent10 = percent10;\n                    }\n\n                    if (i1 < N) {\n                        break;\n                    }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (var i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    var derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Done; don't break (which would reschedule)\n                    return callback(null, 1.0, derivedKey);\n                }\n\n                // Schedule the next steps\n                nextTick(incrementalSMix);\n            }\n\n            // Bootstrap the incremental smix\n            incrementalSMix();\n    }\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = scrypt;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(scrypt);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = scrypt;\n    }\n\n})(this);\n"]},"metadata":{},"sourceType":"script"}