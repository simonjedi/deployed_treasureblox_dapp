{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/BloxEscape/Screen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, Component, Dimensions, TouchableWithoutFeedback } from 'react-native';\nimport Bird from './components/Bird';\nimport Obstacles from './components/Obstacles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Screen() {\n  _s();\n\n  const screenWidth = Dimensions.get(\"screen\").width;\n  const screenHeight = Dimensions.get(\"screen\").height;\n  const birdLeft = screenWidth / 2;\n  const [birdBottom, setBirdBottom] = useState(screenHeight / 2);\n  const [obstaclesLeft, setObstaclesLeft] = useState(screenWidth);\n  const [obstaclesLeftTwo, setObstaclesLeftTwo] = useState(screenWidth + screenWidth / 2 + 30);\n  const [obstaclesNegHeight, setObstaclesNegHeight] = useState(0);\n  const [obstaclesNegHeightTwo, setObstaclesNegHeightTwo] = useState(0);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const gravity = 3;\n  let obstacleWidth = 60;\n  let obstacleHeight = 300;\n  let gap = 200;\n  let gameTimerId;\n  let obstaclesTimerId;\n  let obstaclesTimerIdTwo; //start bird falling\n\n  useEffect(() => {\n    if (birdBottom > 0) {\n      gameTimerId = setInterval(() => {\n        setBirdBottom(birdBottom => birdBottom - gravity);\n      }, 30);\n      return () => {\n        clearInterval(gameTimerId);\n      };\n    } //if i dont have birdBottom as a dependecy, it wont stop\n\n  }, [birdBottom]);\n  console.log(birdBottom);\n\n  const jump = () => {\n    if (!isGameOver && birdBottom < screenHeight) {\n      setBirdBottom(birdBottom => birdBottom + 50);\n      console.log('jumped');\n    }\n  }; //start first obstacle\n\n\n  useEffect(() => {\n    if (obstaclesLeft > -60) {\n      obstaclesTimerId = setInterval(() => {\n        setObstaclesLeft(obstaclesLeft => obstaclesLeft - 5);\n      }, 30);\n      return () => {\n        clearInterval(obstaclesTimerId);\n      };\n    } else {\n      setScore(score => score + 1);\n      setObstaclesLeft(screenWidth);\n      setObstaclesNegHeight(-Math.random() * 100);\n    }\n  }, [obstaclesLeft]); //start second obstacle\n\n  useEffect(() => {\n    if (obstaclesLeftTwo > -60) {\n      obstaclesTimerIdTwo = setInterval(() => {\n        setObstaclesLeftTwo(obstaclesLeftTwo => obstaclesLeftTwo - 5);\n      }, 30);\n      return () => {\n        clearInterval(obstaclesTimerIdTwo);\n      };\n    } else {\n      setScore(score => score + 1);\n      setObstaclesLeftTwo(screenWidth);\n      setObstaclesNegHeightTwo(-Math.random() * 100);\n    }\n  }, [obstaclesLeftTwo]); //check for collisions\n\n  useEffect(() => {\n    console.log(obstaclesLeft);\n    console.log(screenWidth / 2);\n    console.log(obstaclesLeft > screenWidth / 2);\n\n    if ((birdBottom < obstaclesNegHeight + obstacleHeight + 30 || birdBottom > obstaclesNegHeight + obstacleHeight + gap - 30) && obstaclesLeft > screenWidth / 2 - 30 && obstaclesLeft < screenWidth / 2 + 30 || (birdBottom < obstaclesNegHeightTwo + obstacleHeight + 30 || birdBottom > obstaclesNegHeightTwo + obstacleHeight + gap - 30) && obstaclesLeftTwo > screenWidth / 2 - 30 && obstaclesLeftTwo < screenWidth / 2 + 30) {\n      console.log('game over');\n      gameOver();\n    }\n  });\n\n  const gameOver = () => {\n    clearInterval(gameTimerId);\n    clearInterval(obstaclesTimerId);\n    clearInterval(obstaclesTimerIdTwo);\n    setIsGameOver(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TouchableWithoutFeedback, {\n    onPress: jump,\n    children: /*#__PURE__*/_jsxDEV(View, {\n      style: styles.container,\n      children: [isGameOver && /*#__PURE__*/_jsxDEV(Text, {\n        style: {\n          fontSize: '30px'\n        },\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(Bird, {\n        birdBottom: birdBottom,\n        birdLeft: birdLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Obstacles, {\n        color: 'green',\n        obstacleWidth: obstacleWidth,\n        obstacleHeight: obstacleHeight,\n        randomBottom: obstaclesNegHeight,\n        gap: gap,\n        obstaclesLeft: obstaclesLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Obstacles, {\n        color: 'yellow',\n        obstacleWidth: obstacleWidth,\n        obstacleHeight: obstacleHeight,\n        randomBottom: obstaclesNegHeightTwo,\n        gap: gap,\n        obstaclesLeft: obstaclesLeftTwo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Screen, \"/TPpiTr1sz3GZ33FgjCqJvW8kC0=\");\n\n_c = Screen;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'red'\n  }\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/BloxEscape/Screen.js"],"names":["React","useEffect","useState","StyleSheet","Text","View","Component","Dimensions","TouchableWithoutFeedback","Bird","Obstacles","Screen","screenWidth","get","width","screenHeight","height","birdLeft","birdBottom","setBirdBottom","obstaclesLeft","setObstaclesLeft","obstaclesLeftTwo","setObstaclesLeftTwo","obstaclesNegHeight","setObstaclesNegHeight","obstaclesNegHeightTwo","setObstaclesNegHeightTwo","isGameOver","setIsGameOver","score","setScore","gravity","obstacleWidth","obstacleHeight","gap","gameTimerId","obstaclesTimerId","obstaclesTimerIdTwo","setInterval","clearInterval","console","log","jump","Math","random","gameOver","styles","container","fontSize","create","flex","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react';\nimport { StyleSheet, Text, View,Component, Dimensions, TouchableWithoutFeedback } from 'react-native';\nimport Bird from './components/Bird'\nimport Obstacles from './components/Obstacles'\n\nexport default function Screen() {\n  const screenWidth = Dimensions.get(\"screen\").width\n  const screenHeight = Dimensions.get(\"screen\").height\n  const birdLeft = screenWidth / 2\n  const [birdBottom, setBirdBottom]= useState(screenHeight / 2)\n  const [obstaclesLeft, setObstaclesLeft]= useState(screenWidth)\n  const [obstaclesLeftTwo, setObstaclesLeftTwo]= useState(screenWidth + screenWidth/2 + 30)\n  const [obstaclesNegHeight, setObstaclesNegHeight]= useState(0)\n  const [obstaclesNegHeightTwo, setObstaclesNegHeightTwo]= useState(0)\n  const [isGameOver, setIsGameOver]= useState(false)\n  const [score, setScore]= useState(0)\n  const gravity = 3\n  let obstacleWidth = 60\n  let obstacleHeight = 300\n  let gap = 200\n  let gameTimerId\n  let obstaclesTimerId\n  let obstaclesTimerIdTwo\n\n//start bird falling\n  useEffect(() => {\n    if (birdBottom > 0) {\n      gameTimerId = setInterval(() => {\n        setBirdBottom(birdBottom => birdBottom - gravity)\n      },30)\n\n      return () => {\n        clearInterval(gameTimerId)\n      }\n    }\n    //if i dont have birdBottom as a dependecy, it wont stop\n  }, [birdBottom])\n  console.log(birdBottom)\n\n  const jump = () => {\n    if (!isGameOver && (birdBottom < screenHeight)) {\n      setBirdBottom(birdBottom => birdBottom + 50)\n      console.log('jumped')\n    }\n  }\n\n  //start first obstacle\n  useEffect(() => {\n    if (obstaclesLeft > -60) {\n      obstaclesTimerId = setInterval(() => {\n        setObstaclesLeft(obstaclesLeft => obstaclesLeft - 5)\n      }, 30)\n      return () => {\n        clearInterval(obstaclesTimerId)\n      }\n    } else {\n      setScore(score => score +1)\n      setObstaclesLeft(screenWidth)\n      setObstaclesNegHeight( - Math.random() * 100)\n    }\n  }, [obstaclesLeft])\n\n  //start second obstacle\n  useEffect(() => {\n    if (obstaclesLeftTwo > -60) {\n      obstaclesTimerIdTwo = setInterval(() => {\n        setObstaclesLeftTwo(obstaclesLeftTwo => obstaclesLeftTwo - 5)\n      }, 30)\n        return () => {\n          clearInterval(obstaclesTimerIdTwo)\n        }\n      } else {\n          setScore(score => score +1)\n          setObstaclesLeftTwo(screenWidth)\n          setObstaclesNegHeightTwo( - Math.random() * 100)\n        }\n  }, [obstaclesLeftTwo])\n\n    //check for collisions\n    useEffect(() => {\n      console.log(obstaclesLeft)\n      console.log(screenWidth/2)\n      console.log(obstaclesLeft > screenWidth/2)\n      if (\n        ((birdBottom < (obstaclesNegHeight + obstacleHeight + 30) ||\n        birdBottom > (obstaclesNegHeight + obstacleHeight + gap -30)) &&\n        (obstaclesLeft > screenWidth/2 -30 && obstaclesLeft < screenWidth/2 + 30 )\n        )\n        ||\n        ((birdBottom < (obstaclesNegHeightTwo + obstacleHeight + 30) ||\n        birdBottom > (obstaclesNegHeightTwo + obstacleHeight + gap -30)) &&\n        (obstaclesLeftTwo > screenWidth/2 -30 && obstaclesLeftTwo < screenWidth/2 + 30 )\n        )\n        )\n        {\n        console.log('game over')\n        gameOver()\n      }\n    })\n\n    const gameOver = () => {\n      clearInterval(gameTimerId)\n      clearInterval(obstaclesTimerId)\n      clearInterval(obstaclesTimerIdTwo)\n      setIsGameOver(true)\n    }\n\n\n  return (\n    <TouchableWithoutFeedback onPress={jump}>\n      <View style={styles.container}>\n        {isGameOver && <Text style={{fontSize: '30px'}}>{score}</Text>}\n        <Bird\n          birdBottom = {birdBottom}\n          birdLeft = {birdLeft}\n        />\n        <Obstacles\n          color={'green'}\n          obstacleWidth = {obstacleWidth}\n          obstacleHeight = {obstacleHeight}\n          randomBottom = {obstaclesNegHeight}\n          gap = {gap}\n          obstaclesLeft = {obstaclesLeft}\n        />\n        <Obstacles\n          color={'yellow'}\n          obstacleWidth = {obstacleWidth}\n          obstacleHeight = {obstacleHeight}\n          randomBottom = {obstaclesNegHeightTwo}\n          gap = {gap}\n          obstaclesLeft = {obstaclesLeftTwo}\n        />\n      </View>\n    </TouchableWithoutFeedback>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'red',\n  },\n})\n"]},"metadata":{},"sourceType":"module"}