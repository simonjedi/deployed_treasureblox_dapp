{"ast":null,"code":"var _jsxFileName = \"/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/PartnershipExample/GamesSelection/SkillSlider/SliderGame.js\";\nimport React from 'react';\nimport { Tooltip, OverlayTrigger, Form, ButtonGroup, ButtonToolbar, CardColumns, CardGroup, Card, Button, Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Costs.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './SliderGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SliderGame extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      rows: [{\n        name: 'top',\n        index: 0,\n        value: 0,\n        endValue: 0,\n        speed: 200,\n        isRunning: true,\n        key: Math.random(),\n        direction: 'ltr'\n      }, {\n        name: 'center',\n        value: 0,\n        index: 1,\n        endValue: 0,\n        speed: 200,\n        isRunning: true,\n        key: Math.random(),\n        direction: 'rtl'\n      }, {\n        name: 'bottom',\n        value: 0,\n        index: 2,\n        endValue: 0,\n        speed: 200,\n        isRunning: true,\n        key: Math.random(),\n        direction: 'ltr'\n      }],\n      prize: 'none',\n      activeRowIndex: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.updateActiveRow = this.updateActiveRow.bind(this);\n    this.setEndValue = this.setEndValue.bind(this);\n    this.setRotatingValue = this.setRotatingValue.bind(this);\n    this.cancelInterval = this.cancelInterval.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n    this.determinePrize = this.determinePrize.bind(this);\n    document.body.addEventListener('touchstart', this.handleClick.bind(this));\n    window.addEventListener('keypress', this.handleClick.bind(this));\n  }\n\n  handleClick() {\n    var index = this.state.activeRowIndex; // If click occurs while a row is active\n\n    if (index < this.state.rows.length) {\n      //Cancel the row's timer\n      this.cancelInterval(index); //And set the value it ended on\n\n      this.setEndValue(index, this.state.rows[index].value);\n      this.determinePrize();\n    } // Update the active row index every click\n\n\n    this.updateActiveRow();\n  }\n\n  updateActiveRow() {\n    //If the active section isn't a row\n    if (this.state.activeRowIndex < this.state.rows.length) {\n      var index = this.state.activeRowIndex + 1;\n      this.setState({\n        activeRowIndex: index\n      });\n    } else {\n      this.resetGame();\n    }\n  }\n\n  determinePrize() {\n    var rows = this.state.rows;\n    var endValues = rows.map(function (row) {\n      return row.endValue;\n    });\n    var prize = '';\n    endValues.forEach(function (value, index) {\n      if (endValues[index] !== endValues[0]) {\n        prize = 3; //code for 'No Prize'\n      } else {\n        prize = endValues[0];\n      }\n    });\n    console.log(prize);\n    this.setState({\n      prize: prize\n    });\n  }\n\n  resetGame() {\n    //Generate new key for each row. This forces re-rendering and resetting of timers.\n    var rows = this.state.rows.map(function (row) {\n      //Generate new key\n      row.key = Math.random(); //Reset running timer\n\n      row.isRunning = true;\n      return row;\n    }); //Set the state\n\n    this.setState({\n      rows: rows\n    });\n    this.setState({\n      activeRowIndex: 0\n    });\n  }\n\n  setRotatingValue(index, value) {\n    var rows = this.state.rows;\n    var row = rows[index];\n    row.value = value;\n    rows[index] = row;\n    this.setState({\n      rows: rows\n    });\n  }\n\n  setEndValue(index, value) {\n    var rows = this.state.rows;\n    var row = rows[index];\n    row.endValue = value;\n    rows[index] = row;\n    this.setState({\n      rows: rows\n    });\n  }\n\n  cancelInterval(index) {\n    var rows = this.state.rows;\n    var row = rows[index];\n    row.isRunning = false;\n    rows[index] = row;\n    this.setState({\n      rows: rows\n    });\n  }\n\n  render() {\n    var rows = this.state.rows.map(function (row) {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        name: row.name,\n        index: row.index,\n        data: this.state,\n        setEndValue: this.setEndValue,\n        setRotatingValue: this.setRotatingValue,\n        isRunning: row.isRunning,\n        speed: row.speed,\n        direction: row.direction\n      }, row.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this);\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"viewport\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rows\",\n            children: rows\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Results, {\n          shown: this.state.activeRowIndex === 3,\n          prize: this.state.prize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, this.state.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Row extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: 0\n    };\n    this.counterIntervalFunction = this.counterIntervalFunction.bind(this);\n    this.clearCounterInterval = this.clearCounterInterval.bind(this);\n  }\n\n  componentWillMount() {\n    var interval = setInterval(this.counterIntervalFunction, this.props.speed);\n    this.setState({\n      interval: interval\n    });\n  }\n\n  counterIntervalFunction() {\n    if (this.props.isRunning && this.props.direction === 'ltr') {\n      var value = this.state.value < 2 ? this.state.value + 1 : 0;\n      this.setState({\n        value: value\n      });\n      this.props.setRotatingValue(this.props.index, this.state.value);\n    } else if (this.props.isRunning && this.props.direction === 'rtl') {\n      var value = this.state.value > 0 ? this.state.value - 1 : 2;\n      this.setState({\n        value: value\n      });\n      this.props.setRotatingValue(this.props.index, this.state.value);\n    } else {\n      this.clearCounterInterval();\n    }\n  }\n\n  clearCounterInterval() {\n    clearInterval(this.state.interval);\n  }\n\n  render() {\n    var activeRowIndex = this.props.data.activeRowIndex;\n    var activeClass = this.props.index === activeRowIndex ? 'active' : '';\n    var columnsClassList = 'columns columns-' + this.props.name;\n    var wrapperClassList = 'row ' + activeClass;\n    var animation = this.props.direction + '-transition-' + this.state.value;\n    var style = {\n      animationName: animation,\n      animationDuration: this.props.speed + 'ms'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: wrapperClassList,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: columnsClassList,\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Results extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      messages: ['3UP', '5UP', '2UP', 'No Prize']\n    };\n  }\n\n  render() {\n    var shown = this.props.shown ? 'shown' : '';\n    var classList = 'results ' + shown;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classList,\n      children: this.state.messages[this.props.prize]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SliderGame;","map":{"version":3,"sources":["/Users/jedi/Desktop/Education/REACT/deployed_treasureblox_dapp/src/PartnershipExample/GamesSelection/SkillSlider/SliderGame.js"],"names":["React","Tooltip","OverlayTrigger","Form","ButtonGroup","ButtonToolbar","CardColumns","CardGroup","Card","Button","Container","Nav","Navbar","NavDropdown","BrowserRouter","Router","Switch","Route","Link","SliderGame","Component","constructor","state","rows","name","index","value","endValue","speed","isRunning","key","Math","random","direction","prize","activeRowIndex","handleClick","bind","updateActiveRow","setEndValue","setRotatingValue","cancelInterval","resetGame","determinePrize","document","body","addEventListener","window","length","setState","endValues","map","row","forEach","console","log","render","Row","counterIntervalFunction","clearCounterInterval","componentWillMount","interval","setInterval","props","clearInterval","data","activeClass","columnsClassList","wrapperClassList","animation","style","animationName","animationDuration","Results","messages","shown","classList"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport {Tooltip,OverlayTrigger,Form,ButtonGroup,ButtonToolbar,CardColumns,CardGroup,Card,Button,Container,Nav,Navbar,NavDropdown } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Costs.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nimport './SliderGame.css';\n\n\n\nclass SliderGame extends React.Component {\n\n  constructor(){\n    super();\n    this.state = {\n      rows: [\n        {\n          name: 'top',\n          index: 0,\n          value: 0,\n          endValue: 0,\n          speed: 200,\n          isRunning: true,\n          key: Math.random(),\n          direction: 'ltr'\n        },\n        {\n        name: 'center',\n        value: 0,\n        index: 1,\n        endValue: 0,\n        speed: 200,\n        isRunning: true,\n        key: Math.random(),\n        direction: 'rtl'\n        },\n        {\n        name: 'bottom',\n        value: 0,\n        index: 2,\n        endValue: 0,\n        speed: 200,\n        isRunning: true,\n        key: Math.random(),\n        direction: 'ltr'\n        }\n      ],\n      prize: 'none',\n      activeRowIndex: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.updateActiveRow = this.updateActiveRow.bind(this);\n    this.setEndValue = this.setEndValue.bind(this);\n    this.setRotatingValue = this.setRotatingValue.bind(this);\n    this.cancelInterval = this.cancelInterval.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n    this.determinePrize = this.determinePrize.bind(this);\n    document.body.addEventListener('touchstart', this.handleClick.bind(this));\n    window.addEventListener('keypress', this.handleClick.bind(this));\n  }\n\n  handleClick(){\n    var index = this.state.activeRowIndex;\n    // If click occurs while a row is active\n    if(index < this.state.rows.length){\n      //Cancel the row's timer\n      this.cancelInterval(index);\n      //And set the value it ended on\n      this.setEndValue(index, this.state.rows[index].value);\n      this.determinePrize();\n    }\n    // Update the active row index every click\n    this.updateActiveRow();\n  }\n\n  updateActiveRow(){\n    //If the active section isn't a row\n    if( this.state.activeRowIndex < this.state.rows.length){\n      var index = this.state.activeRowIndex + 1;\n      this.setState({activeRowIndex: index });\n    } else{\n      this.resetGame();\n    }\n  }\n\n  determinePrize(){\n    var rows = this.state.rows;\n    var endValues = rows.map( function(row){\n      return row.endValue;\n    });\n\n    var prize = '';\n    endValues.forEach( function(value, index){\n      if(endValues[index] !== endValues[0]){\n        prize = 3; //code for 'No Prize'\n      } else{\n        prize = endValues[0];\n      }\n    });\n\n    console.log(prize);\n    this.setState({prize: prize});\n  }\n\n  resetGame(){\n    //Generate new key for each row. This forces re-rendering and resetting of timers.\n    var rows = this.state.rows.map( function(row){\n      //Generate new key\n      row.key = Math.random();\n      //Reset running timer\n      row.isRunning = true;\n      return row;\n    });\n\n    //Set the state\n    this.setState({rows: rows});\n    this.setState({activeRowIndex: 0});\n  }\n\n  setRotatingValue(index, value){\n    var rows = this.state.rows;\n    var row = rows[index];\n    row.value = value;\n    rows[index] = row;\n    this.setState({rows: rows});\n  }\n\n  setEndValue(index, value){\n    var rows = this.state.rows;\n    var row = rows[index];\n    row.endValue = value;\n    rows[index] = row;\n    this.setState({rows: rows});\n  }\n\n  cancelInterval(index){\n    var rows = this.state.rows;\n    var row = rows[index];\n    row.isRunning = false;\n    rows[index] = row;\n    this.setState({rows: rows});\n  }\n\n  render(){\n    var rows = this.state.rows.map( function(row){\n      return(\n        <Row\n          name={row.name}\n          index={row.index}\n          data={this.state}\n          setEndValue={this.setEndValue}\n          setRotatingValue={this.setRotatingValue}\n          isRunning={row.isRunning}\n          speed={row.speed}\n          key={row.key}\n          direction={row.direction}\n          />\n      )\n    }, this);\n\n    return (\n      <div key={this.state.key} ref=\"game\">\n        <div className=\"viewport\">\n          <div className=\"game\">\n            <div className=\"rows\">\n              {rows}\n            </div>\n          </div>\n          <Results shown={this.state.activeRowIndex === 3} prize={this.state.prize}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Row extends React.Component {\n  constructor(){\n    super();\n    this.state = {value: 0};\n    this.counterIntervalFunction = this.counterIntervalFunction.bind(this);\n    this.clearCounterInterval = this.clearCounterInterval.bind(this);\n  }\n\n  componentWillMount(){\n    var interval = setInterval( this.counterIntervalFunction, this.props.speed);\n    this.setState({interval: interval})\n  }\n\n  counterIntervalFunction(){\n    if( this.props.isRunning && this.props.direction === 'ltr'){\n      var value = this.state.value < 2 ? this.state.value + 1 : 0;\n      this.setState({value: value});\n      this.props.setRotatingValue(this.props.index, this.state.value);\n    } else if( this.props.isRunning && this.props.direction === 'rtl'){\n      var value = this.state.value > 0 ? this.state.value - 1 : 2;\n      this.setState({value: value});\n      this.props.setRotatingValue(this.props.index, this.state.value);\n    }\n    else{\n      this.clearCounterInterval();\n    }\n  }\n\n  clearCounterInterval(){\n    clearInterval(this.state.interval);\n  }\n\n  render(){\n    var activeRowIndex = this.props.data.activeRowIndex;\n    var activeClass = this.props.index === activeRowIndex ? 'active' : '';\n    var columnsClassList = 'columns columns-' + this.props.name;\n    var wrapperClassList = 'row ' + activeClass;\n    var animation = this.props.direction + '-transition-' + this.state.value;\n    var style = {\n      animationName: animation,\n      animationDuration: this.props.speed + 'ms'\n    }\n\n    return (\n      <div className={wrapperClassList}>\n        <div className={columnsClassList} style={style}>\n          <div className=\"column\"></div>\n          <div className=\"column\"></div>\n          <div className=\"column\"></div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nclass Results extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      messages: [\n        '3UP',\n        '5UP',\n        '2UP',\n        'No Prize'\n      ]\n    }\n  }\n\n  render(){\n    var shown = this.props.shown ? 'shown' : '';\n    var classList = 'results ' + shown;\n    return(\n      <div className={classList}>\n        {this.state.messages[this.props.prize]}\n      </div>\n    )\n  }\n}\n\n\nexport default SliderGame;\n"]},"metadata":{},"sourceType":"module"}